Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BEGIN
    BOOL
    COL
    CONST
    CTE_B
    CTE_S
    DETERMATRIZ
    DO
    DOT
    ELIF
    ELSEIF
    END
    EOF
    GLOBAL
    INPUT
    INVERMATRIZ
    LET
    LOCAL
    NOT
    OR
    SELECT
    SWITCH
    THEN
    TRANSMATRIZ

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SEMICOL programa1
Rule 2     programa1 -> varsG quad_main funciones end
Rule 3     programa1 -> varsG quad_main funciones main funciones end
Rule 4     programa1 -> varsG quad_main main funciones end
Rule 5     programa1 -> varsG end
Rule 6     programa1 -> quad_main main end
Rule 7     programa1 -> funciones end
Rule 8     funciones -> funcion
Rule 9     funciones -> funciones funcion
Rule 10    funciones -> empty
Rule 11    main -> tipo MAIN quad_main2 LP RP LB statement add_func_main func_return_main RB
Rule 12    main -> VOID MAIN quad_main2 LP RP LB statement add_func_main RB
Rule 13    quad_main -> <empty>
Rule 14    quad_main2 -> <empty>
Rule 15    statement -> asignacion SEMICOL statement
Rule 16    statement -> if statement
Rule 17    statement -> vars statement
Rule 18    statement -> while statement
Rule 19    statement -> for statement
Rule 20    statement -> escritura statement
Rule 21    statement -> escritura_var statement
Rule 22    statement -> lectura statement
Rule 23    statement -> func_call statement
Rule 24    statement -> ID row SEMICOL
Rule 25    statement -> ID matrix SEMICOL
Rule 26    statement -> empty
Rule 27    asignacion -> ID IS value
Rule 28    vars -> VAR tipo vars1
Rule 29    vars -> VAR tipo vars2
Rule 30    vars -> VAR tipo vars3
Rule 31    vars -> VAR tipo oper_aritmetica
Rule 32    vars -> VAR tipo ID row SEMICOL
Rule 33    vars -> VAR tipo ID matrix SEMICOL
Rule 34    vars -> var_row
Rule 35    vars -> var_row vars
Rule 36    vars -> var_matrix
Rule 37    vars -> var_matrix vars
Rule 38    vars -> empty
Rule 39    vars1 -> ID SEMICOL
Rule 40    vars2 -> vars2_1 ID IS value SEMICOL
Rule 41    vars2_1 -> vars2_1 ID IS value COMMA
Rule 42    vars2_1 -> ID IS value COMMA
Rule 43    vars2_1 -> empty
Rule 44    vars2 -> ID IS value SEMICOL
Rule 45    vars3 -> vars3_1 ID SEMICOL
Rule 46    vars3_1 -> vars3_1 ID COMMA
Rule 47    vars3_1 -> ID COMMA
Rule 48    vars3 -> ID SEMICOL
Rule 49    vars3_1 -> empty
Rule 50    varsG -> VAR tipo vars1G varsG
Rule 51    varsG -> VAR tipo vars2G varsG
Rule 52    varsG -> VAR tipo vars3G varsG
Rule 53    varsG -> VAR LB varsG RB
Rule 54    varsG -> var_rowG
Rule 55    varsG -> var_rowG varsG
Rule 56    varsG -> var_matrixG
Rule 57    varsG -> var_matrixG varsG
Rule 58    varsG -> declarar_func varsG
Rule 59    varsG -> declarar_func
Rule 60    varsG -> empty
Rule 61    vars1G -> ID SEMICOL
Rule 62    vars2G -> vars2_1G ID IS value SEMICOL
Rule 63    vars2_1G -> vars2_1G ID IS value COMMA
Rule 64    vars2_1G -> ID IS value COMMA
Rule 65    vars2_1G -> empty
Rule 66    vars2G -> ID IS value SEMICOL
Rule 67    vars3G -> vars3_1G ID SEMICOL
Rule 68    vars3_1G -> vars3_1G ID COMMA
Rule 69    vars3_1G -> ID COMMA
Rule 70    vars3G -> ID SEMICOL
Rule 71    vars3_1G -> empty
Rule 72    tipo -> INT
Rule 73    tipo -> FLOAT
Rule 74    tipo -> CHAR
Rule 75    value -> CTE_F
Rule 76    value -> CTE_I
Rule 77    value -> ID
Rule 78    value -> CTE_C
Rule 79    value -> COMILLA ID COMILLA
Rule 80    value -> COMILLAS ID COMILLAS
Rule 81    check_type -> <empty>
Rule 82    add_fun -> <empty>
Rule 83    funcion -> VOID ID add_fun LP param RP verificar LB var_func statement RB end_func
Rule 84    funcion -> VOID ID add_fun LP RP verificar2 LB var_func statement RB end_func
Rule 85    funcion -> tipo ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
Rule 86    funcion -> tipo ID add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
Rule 87    verificar -> <empty>
Rule 88    verificar2 -> <empty>
Rule 89    add_func_dir -> <empty>
Rule 90    add_func_dir2 -> <empty>
Rule 91    add_func_main -> <empty>
Rule 92    var_func -> vars
Rule 93    param -> tipo ID
Rule 94    param -> param COMMA tipo ID
Rule 95    param -> empty
Rule 96    declarar_func -> FUNC tipo ID LP RP SEMICOL
Rule 97    declarar_func -> FUNC VOID ID LP RP SEMICOL
Rule 98    declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL
Rule 99    declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL
Rule 100   declarar_param -> tipo COMMA declarar_param
Rule 101   declarar_param -> tipo declarar_param
Rule 102   declarar_param -> empty
Rule 103   end_func -> <empty>
Rule 104   func_call -> ID LP RP SEMICOL
Rule 105   func_call -> VAR tipo ID IS ID LP RP SEMICOL
Rule 106   func_call -> ID LP func_era func_call_param RP SEMICOL
Rule 107   func_call -> VAR tipo ID IS ID LP func_era func_call_param RP SEMICOL
Rule 108   func_era -> <empty>
Rule 109   func_call_param -> expr
Rule 110   func_call_param -> func_call_param COMMA expr
Rule 111   func_return -> RETURN expr SEMICOL
Rule 112   func_return_param -> RETURN expr SEMICOL
Rule 113   func_return_main -> RETURN expr SEMICOL
Rule 114   end -> <empty>
Rule 115   var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL
Rule 116   var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL
Rule 117   elem_lista -> value
Rule 118   elem_lista -> empty
Rule 119   lista2 -> elem_lista COMMA lista2
Rule 120   lista2 -> elem_lista COMMA elem_lista
Rule 121   row -> LC CTE_I RC
Rule 122   var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL
Rule 123   var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL
Rule 124   matrix2 -> LP lista2 RP COMMA matrix2
Rule 125   matrix2 -> LP lista2 RP COMMA LP lista2 RP
Rule 126   row_list -> row COMMA row_list
Rule 127   row_list -> row COMMA row
Rule 128   matrix -> row row
Rule 129   empty -> <empty>
Rule 130   if -> IF LP expression RP check_bool gotof LB statement RB fill_if
Rule 131   if -> IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
Rule 132   else -> ELSE LB statement RB fill_goto_else
Rule 133   goto -> <empty>
Rule 134   gotof -> <empty>
Rule 135   fill_goto_else -> <empty>
Rule 136   fill_gotof -> <empty>
Rule 137   fill_gotof2 -> <empty>
Rule 138   fill_if -> <empty>
Rule 139   while -> WHILE guarda_num_salto LP expression RP check_bool gotofw LB statement RB fill_gotofw fill_gotow
Rule 140   guarda_num_salto -> <empty>
Rule 141   gotofw -> <empty>
Rule 142   fill_gotofw -> <empty>
Rule 143   fill_gotow -> <empty>
Rule 144   for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
Rule 145   gotof_for -> <empty>
Rule 146   opers -> IS value
Rule 147   opers -> PLUS IS value
Rule 148   opers -> MINUS IS value
Rule 149   opers -> DIV IS value
Rule 150   opers -> MUL IS value
Rule 151   opers -> PLUS PLUS
Rule 152   opers -> MINUS MINUS
Rule 153   escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL
Rule 154   escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL
Rule 155   escritura_var -> PRINT LP any_var RP SEMICOL
Rule 156   any_var -> ID
Rule 157   any -> expr any
Rule 158   any -> expression any
Rule 159   any -> empty
Rule 160   lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL
Rule 161   lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
Rule 162   any_lectura -> ID
Rule 163   expression -> var_gt
Rule 164   expression -> var_lt
Rule 165   expression -> var_equal
Rule 166   expression -> var_neq
Rule 167   expression -> var_geq
Rule 168   expression -> var_leq
Rule 169   expression -> expr
Rule 170   expression -> TRUE
Rule 171   expression -> FALSE
Rule 172   expression -> ID
Rule 173   var_lt -> expr LT expr
Rule 174   var_gt -> expr GT expr
Rule 175   var_leq -> expr LEQ expr
Rule 176   var_geq -> expr GEQ expr
Rule 177   var_equal -> expr EQUAL expr
Rule 178   var_neq -> expr NEQ expr
Rule 179   oper_aritmetica -> ID IS expr SEMICOL
Rule 180   expr -> expr MUL expr
Rule 181   expr -> expr DIV expr
Rule 182   expr -> expr PLUS expr
Rule 183   expr -> expr MINUS expr
Rule 184   expr -> CTE_I
Rule 185   expr -> CTE_F
Rule 186   expr -> ID
Rule 187   check_bool -> <empty>

Terminals, with rules where they appear

AND                  : 
BEGIN                : 
BOOL                 : 
CHAR                 : 74
COL                  : 
COMILLA              : 79 79 153 153 160 160
COMILLAS             : 80 80 154 154 161 161
COMMA                : 41 42 46 47 63 64 68 69 94 100 110 119 120 124 125 126 127
CONST                : 
CTE_B                : 
CTE_C                : 78
CTE_F                : 75 185
CTE_I                : 76 121 184
CTE_S                : 
DETERMATRIZ          : 
DIV                  : 149 181
DO                   : 
DOT                  : 
ELIF                 : 
ELSE                 : 132
ELSEIF               : 
END                  : 
EOF                  : 
EQUAL                : 177
FALSE                : 171
FLOAT                : 73
FOR                  : 144
FUNC                 : 96 97 98 99
GEQ                  : 176
GLOBAL               : 
GT                   : 174
ID                   : 1 24 25 27 32 33 39 40 41 42 44 45 46 47 48 61 62 63 64 66 67 68 69 70 77 79 80 83 84 85 86 93 94 96 97 98 99 104 105 105 106 107 107 115 116 122 123 144 144 156 162 172 179 186
IF                   : 130 131
INPUT                : 
INT                  : 72
INVERMATRIZ          : 
IS                   : 27 40 41 42 44 62 63 64 66 105 107 115 116 122 123 144 146 147 148 149 150 179
LB                   : 11 12 53 83 84 85 86 130 131 132 139 144
LC                   : 121
LEQ                  : 175
LET                  : 
LOCAL                : 
LP                   : 11 12 83 84 85 86 96 97 98 99 104 105 106 107 115 116 124 125 125 130 131 139 144 153 154 155 160 161
LT                   : 173
MAIN                 : 11 12
MINUS                : 148 152 152 183
MUL                  : 150 180
NEQ                  : 178
NOT                  : 
OR                   : 
PLUS                 : 147 151 151 182
PRINT                : 153 154 155
PROGRAM              : 1
RB                   : 11 12 53 83 84 85 86 130 131 132 139 144
RC                   : 121
READ                 : 160 161
RETURN               : 111 112 113
RP                   : 11 12 83 84 85 86 96 97 98 99 104 105 106 107 115 116 124 125 125 130 131 139 144 153 154 155 160 161
SELECT               : 
SEMICOL              : 1 15 24 25 32 33 39 40 44 45 48 61 62 66 67 70 96 97 98 99 104 105 106 107 111 112 113 115 116 122 123 144 144 153 154 155 160 161 179
SWITCH               : 
THEN                 : 
TRANSMATRIZ          : 
TRUE                 : 170
VAR                  : 28 29 30 31 32 33 50 51 52 53 105 107 115 116 122 123 144
VOID                 : 12 83 84 97 99
WHILE                : 139
error                : 

Nonterminals, with rules where they appear

add_fun              : 83 84 85 86
add_func_dir         : 86
add_func_dir2        : 85
add_func_main        : 11 12
any                  : 153 154 157 158
any_lectura          : 160 161
any_var              : 155
asignacion           : 15
check_bool           : 130 131 139 144
check_type           : 
declarar_func        : 58 59
declarar_param       : 98 99 100 101
elem_lista           : 119 120 120
else                 : 131
empty                : 10 26 38 43 49 60 65 71 95 102 118 159
end                  : 2 3 4 5 6 7
end_func             : 83 84 85 86
escritura            : 20
escritura_var        : 21
expr                 : 109 110 111 112 113 157 169 173 173 174 174 175 175 176 176 177 177 178 178 179 180 180 181 181 182 182 183 183
expression           : 130 131 139 144 158
fill_goto_else       : 132
fill_gotof           : 131
fill_gotof2          : 
fill_gotofw          : 139
fill_gotow           : 139
fill_if              : 130
for                  : 19
func_call            : 23
func_call_param      : 106 107 110
func_era             : 106 107
func_return          : 85
func_return_main     : 11
func_return_param    : 86
funcion              : 8 9
funciones            : 2 3 3 4 7 9
goto                 : 131 144
gotof                : 130 131
gotof_for            : 144
gotofw               : 139
guarda_num_salto     : 139
if                   : 16
lectura              : 22
lista2               : 115 116 119 124 125 125
main                 : 3 4 6
matrix               : 25 33 122 123
matrix2              : 122 123 124
oper_aritmetica      : 31
opers                : 144
param                : 83 86 94
programa             : 0
programa1            : 1
quad_main            : 2 3 4 6
quad_main2           : 11 12
row                  : 24 32 115 116 126 127 127 128 128
row_list             : 126
statement            : 11 12 15 16 17 18 19 20 21 22 23 83 84 85 86 130 131 132 139 144
tipo                 : 11 28 29 30 31 32 33 50 51 52 85 86 93 94 96 98 100 101 105 107 115 116 122 123 144
value                : 27 40 41 42 44 62 63 64 66 117 144 146 147 148 149 150
var_equal            : 165
var_func             : 83 84 85 86
var_geq              : 167
var_gt               : 163
var_leq              : 168
var_lt               : 164
var_matrix           : 36 37
var_matrixG          : 56 57
var_neq              : 166
var_row              : 34 35
var_rowG             : 54 55
vars                 : 17 35 37 92
vars1                : 28
vars1G               : 50
vars2                : 29
vars2G               : 51
vars2_1              : 40 41
vars2_1G             : 62 63
vars3                : 30
vars3G               : 52
vars3_1              : 45 46
vars3_1G             : 67 68
varsG                : 2 3 4 5 50 51 52 53 55 57 58
verificar            : 83 86
verificar2           : 84 85
while                : 18

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SEMICOL programa1

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID SEMICOL programa1

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . SEMICOL programa1

    SEMICOL         shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SEMICOL . programa1
    (2) programa1 -> . varsG quad_main funciones end
    (3) programa1 -> . varsG quad_main funciones main funciones end
    (4) programa1 -> . varsG quad_main main funciones end
    (5) programa1 -> . varsG end
    (6) programa1 -> . quad_main main end
    (7) programa1 -> . funciones end
    (50) varsG -> . VAR tipo vars1G varsG
    (51) varsG -> . VAR tipo vars2G varsG
    (52) varsG -> . VAR tipo vars3G varsG
    (53) varsG -> . VAR LB varsG RB
    (54) varsG -> . var_rowG
    (55) varsG -> . var_rowG varsG
    (56) varsG -> . var_matrixG
    (57) varsG -> . var_matrixG varsG
    (58) varsG -> . declarar_func varsG
    (59) varsG -> . declarar_func
    (60) varsG -> . empty
    (13) quad_main -> .
    (8) funciones -> . funcion
    (9) funciones -> . funciones funcion
    (10) funciones -> . empty
    (116) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (123) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (96) declarar_func -> . FUNC tipo ID LP RP SEMICOL
    (97) declarar_func -> . FUNC VOID ID LP RP SEMICOL
    (98) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (99) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL
    (129) empty -> .
    (83) funcion -> . VOID ID add_fun LP param RP verificar LB var_func statement RB end_func
    (84) funcion -> . VOID ID add_fun LP RP verificar2 LB var_func statement RB end_func
    (85) funcion -> . tipo ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (86) funcion -> . tipo ID add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR

  ! reduce/reduce conflict for VOID resolved using rule 13 (quad_main -> .)
  ! reduce/reduce conflict for INT resolved using rule 13 (quad_main -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 13 (quad_main -> .)
  ! reduce/reduce conflict for CHAR resolved using rule 13 (quad_main -> .)
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    VAR             shift and go to state 9
    FUNC            shift and go to state 16
    $end            reduce using rule 129 (empty -> .)
    VOID            shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

  ! VOID            [ reduce using rule 13 (quad_main -> .) ]
  ! INT             [ reduce using rule 13 (quad_main -> .) ]
  ! FLOAT           [ reduce using rule 13 (quad_main -> .) ]
  ! CHAR            [ reduce using rule 13 (quad_main -> .) ]
  ! VOID            [ reduce using rule 129 (empty -> .) ]
  ! INT             [ reduce using rule 129 (empty -> .) ]
  ! FLOAT           [ reduce using rule 129 (empty -> .) ]
  ! CHAR            [ reduce using rule 129 (empty -> .) ]

    programa1                      shift and go to state 5
    varsG                          shift and go to state 6
    quad_main                      shift and go to state 7
    funciones                      shift and go to state 8
    tipo                           shift and go to state 10
    var_rowG                       shift and go to state 11
    var_matrixG                    shift and go to state 12
    declarar_func                  shift and go to state 13
    empty                          shift and go to state 14
    funcion                        shift and go to state 15

state 5

    (1) programa -> PROGRAM ID SEMICOL programa1 .

    $end            reduce using rule 1 (programa -> PROGRAM ID SEMICOL programa1 .)


state 6

    (2) programa1 -> varsG . quad_main funciones end
    (3) programa1 -> varsG . quad_main funciones main funciones end
    (4) programa1 -> varsG . quad_main main funciones end
    (5) programa1 -> varsG . end
    (13) quad_main -> .
    (114) end -> .

  ! reduce/reduce conflict for $end resolved using rule 13 (quad_main -> .)
    VOID            reduce using rule 13 (quad_main -> .)
    INT             reduce using rule 13 (quad_main -> .)
    FLOAT           reduce using rule 13 (quad_main -> .)
    CHAR            reduce using rule 13 (quad_main -> .)
    $end            reduce using rule 13 (quad_main -> .)

  ! $end            [ reduce using rule 114 (end -> .) ]

    quad_main                      shift and go to state 21
    end                            shift and go to state 22

state 7

    (6) programa1 -> quad_main . main end
    (11) main -> . tipo MAIN quad_main2 LP RP LB statement add_func_main func_return_main RB
    (12) main -> . VOID MAIN quad_main2 LP RP LB statement add_func_main RB
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR

    VOID            shift and go to state 25
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    main                           shift and go to state 23
    tipo                           shift and go to state 24

state 8

    (7) programa1 -> funciones . end
    (9) funciones -> funciones . funcion
    (114) end -> .
    (83) funcion -> . VOID ID add_fun LP param RP verificar LB var_func statement RB end_func
    (84) funcion -> . VOID ID add_fun LP RP verificar2 LB var_func statement RB end_func
    (85) funcion -> . tipo ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (86) funcion -> . tipo ID add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR

    $end            reduce using rule 114 (end -> .)
    VOID            shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    end                            shift and go to state 26
    funcion                        shift and go to state 27
    tipo                           shift and go to state 10

state 9

    (50) varsG -> VAR . tipo vars1G varsG
    (51) varsG -> VAR . tipo vars2G varsG
    (52) varsG -> VAR . tipo vars3G varsG
    (53) varsG -> VAR . LB varsG RB
    (116) var_rowG -> VAR . tipo ID row IS LP lista2 RP SEMICOL
    (123) var_matrixG -> VAR . tipo ID matrix IS matrix2 SEMICOL
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR

    LB              shift and go to state 29
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    tipo                           shift and go to state 28

state 10

    (85) funcion -> tipo . ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (86) funcion -> tipo . ID add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func

    ID              shift and go to state 30


state 11

    (54) varsG -> var_rowG .
    (55) varsG -> var_rowG . varsG
    (50) varsG -> . VAR tipo vars1G varsG
    (51) varsG -> . VAR tipo vars2G varsG
    (52) varsG -> . VAR tipo vars3G varsG
    (53) varsG -> . VAR LB varsG RB
    (54) varsG -> . var_rowG
    (55) varsG -> . var_rowG varsG
    (56) varsG -> . var_matrixG
    (57) varsG -> . var_matrixG varsG
    (58) varsG -> . declarar_func varsG
    (59) varsG -> . declarar_func
    (60) varsG -> . empty
    (116) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (123) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (96) declarar_func -> . FUNC tipo ID LP RP SEMICOL
    (97) declarar_func -> . FUNC VOID ID LP RP SEMICOL
    (98) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (99) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL
    (129) empty -> .

  ! reduce/reduce conflict for VOID resolved using rule 54 (varsG -> var_rowG .)
  ! reduce/reduce conflict for INT resolved using rule 54 (varsG -> var_rowG .)
  ! reduce/reduce conflict for FLOAT resolved using rule 54 (varsG -> var_rowG .)
  ! reduce/reduce conflict for CHAR resolved using rule 54 (varsG -> var_rowG .)
  ! reduce/reduce conflict for $end resolved using rule 54 (varsG -> var_rowG .)
  ! reduce/reduce conflict for RB resolved using rule 54 (varsG -> var_rowG .)
    VOID            reduce using rule 54 (varsG -> var_rowG .)
    INT             reduce using rule 54 (varsG -> var_rowG .)
    FLOAT           reduce using rule 54 (varsG -> var_rowG .)
    CHAR            reduce using rule 54 (varsG -> var_rowG .)
    $end            reduce using rule 54 (varsG -> var_rowG .)
    RB              reduce using rule 54 (varsG -> var_rowG .)
    VAR             shift and go to state 9
    FUNC            shift and go to state 16

  ! VOID            [ reduce using rule 129 (empty -> .) ]
  ! INT             [ reduce using rule 129 (empty -> .) ]
  ! FLOAT           [ reduce using rule 129 (empty -> .) ]
  ! CHAR            [ reduce using rule 129 (empty -> .) ]
  ! $end            [ reduce using rule 129 (empty -> .) ]
  ! RB              [ reduce using rule 129 (empty -> .) ]

    var_rowG                       shift and go to state 11
    varsG                          shift and go to state 31
    var_matrixG                    shift and go to state 12
    declarar_func                  shift and go to state 13
    empty                          shift and go to state 32

state 12

    (56) varsG -> var_matrixG .
    (57) varsG -> var_matrixG . varsG
    (50) varsG -> . VAR tipo vars1G varsG
    (51) varsG -> . VAR tipo vars2G varsG
    (52) varsG -> . VAR tipo vars3G varsG
    (53) varsG -> . VAR LB varsG RB
    (54) varsG -> . var_rowG
    (55) varsG -> . var_rowG varsG
    (56) varsG -> . var_matrixG
    (57) varsG -> . var_matrixG varsG
    (58) varsG -> . declarar_func varsG
    (59) varsG -> . declarar_func
    (60) varsG -> . empty
    (116) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (123) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (96) declarar_func -> . FUNC tipo ID LP RP SEMICOL
    (97) declarar_func -> . FUNC VOID ID LP RP SEMICOL
    (98) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (99) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL
    (129) empty -> .

  ! reduce/reduce conflict for VOID resolved using rule 56 (varsG -> var_matrixG .)
  ! reduce/reduce conflict for INT resolved using rule 56 (varsG -> var_matrixG .)
  ! reduce/reduce conflict for FLOAT resolved using rule 56 (varsG -> var_matrixG .)
  ! reduce/reduce conflict for CHAR resolved using rule 56 (varsG -> var_matrixG .)
  ! reduce/reduce conflict for $end resolved using rule 56 (varsG -> var_matrixG .)
  ! reduce/reduce conflict for RB resolved using rule 56 (varsG -> var_matrixG .)
    VOID            reduce using rule 56 (varsG -> var_matrixG .)
    INT             reduce using rule 56 (varsG -> var_matrixG .)
    FLOAT           reduce using rule 56 (varsG -> var_matrixG .)
    CHAR            reduce using rule 56 (varsG -> var_matrixG .)
    $end            reduce using rule 56 (varsG -> var_matrixG .)
    RB              reduce using rule 56 (varsG -> var_matrixG .)
    VAR             shift and go to state 9
    FUNC            shift and go to state 16

  ! VOID            [ reduce using rule 129 (empty -> .) ]
  ! INT             [ reduce using rule 129 (empty -> .) ]
  ! FLOAT           [ reduce using rule 129 (empty -> .) ]
  ! CHAR            [ reduce using rule 129 (empty -> .) ]
  ! $end            [ reduce using rule 129 (empty -> .) ]
  ! RB              [ reduce using rule 129 (empty -> .) ]

    var_matrixG                    shift and go to state 12
    varsG                          shift and go to state 33
    var_rowG                       shift and go to state 11
    declarar_func                  shift and go to state 13
    empty                          shift and go to state 32

state 13

    (58) varsG -> declarar_func . varsG
    (59) varsG -> declarar_func .
    (50) varsG -> . VAR tipo vars1G varsG
    (51) varsG -> . VAR tipo vars2G varsG
    (52) varsG -> . VAR tipo vars3G varsG
    (53) varsG -> . VAR LB varsG RB
    (54) varsG -> . var_rowG
    (55) varsG -> . var_rowG varsG
    (56) varsG -> . var_matrixG
    (57) varsG -> . var_matrixG varsG
    (58) varsG -> . declarar_func varsG
    (59) varsG -> . declarar_func
    (60) varsG -> . empty
    (116) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (123) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (96) declarar_func -> . FUNC tipo ID LP RP SEMICOL
    (97) declarar_func -> . FUNC VOID ID LP RP SEMICOL
    (98) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (99) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL
    (129) empty -> .

  ! reduce/reduce conflict for VOID resolved using rule 59 (varsG -> declarar_func .)
  ! reduce/reduce conflict for INT resolved using rule 59 (varsG -> declarar_func .)
  ! reduce/reduce conflict for FLOAT resolved using rule 59 (varsG -> declarar_func .)
  ! reduce/reduce conflict for CHAR resolved using rule 59 (varsG -> declarar_func .)
  ! reduce/reduce conflict for $end resolved using rule 59 (varsG -> declarar_func .)
  ! reduce/reduce conflict for RB resolved using rule 59 (varsG -> declarar_func .)
    VOID            reduce using rule 59 (varsG -> declarar_func .)
    INT             reduce using rule 59 (varsG -> declarar_func .)
    FLOAT           reduce using rule 59 (varsG -> declarar_func .)
    CHAR            reduce using rule 59 (varsG -> declarar_func .)
    $end            reduce using rule 59 (varsG -> declarar_func .)
    RB              reduce using rule 59 (varsG -> declarar_func .)
    VAR             shift and go to state 9
    FUNC            shift and go to state 16

  ! VOID            [ reduce using rule 129 (empty -> .) ]
  ! INT             [ reduce using rule 129 (empty -> .) ]
  ! FLOAT           [ reduce using rule 129 (empty -> .) ]
  ! CHAR            [ reduce using rule 129 (empty -> .) ]
  ! $end            [ reduce using rule 129 (empty -> .) ]
  ! RB              [ reduce using rule 129 (empty -> .) ]

    declarar_func                  shift and go to state 13
    varsG                          shift and go to state 34
    var_rowG                       shift and go to state 11
    var_matrixG                    shift and go to state 12
    empty                          shift and go to state 32

state 14

    (60) varsG -> empty .
    (10) funciones -> empty .

  ! reduce/reduce conflict for VOID resolved using rule 10 (funciones -> empty .)
  ! reduce/reduce conflict for INT resolved using rule 10 (funciones -> empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 10 (funciones -> empty .)
  ! reduce/reduce conflict for CHAR resolved using rule 10 (funciones -> empty .)
  ! reduce/reduce conflict for $end resolved using rule 10 (funciones -> empty .)
    VOID            reduce using rule 10 (funciones -> empty .)
    INT             reduce using rule 10 (funciones -> empty .)
    FLOAT           reduce using rule 10 (funciones -> empty .)
    CHAR            reduce using rule 10 (funciones -> empty .)
    $end            reduce using rule 10 (funciones -> empty .)

  ! VOID            [ reduce using rule 60 (varsG -> empty .) ]
  ! INT             [ reduce using rule 60 (varsG -> empty .) ]
  ! FLOAT           [ reduce using rule 60 (varsG -> empty .) ]
  ! CHAR            [ reduce using rule 60 (varsG -> empty .) ]
  ! $end            [ reduce using rule 60 (varsG -> empty .) ]


state 15

    (8) funciones -> funcion .

    VOID            reduce using rule 8 (funciones -> funcion .)
    INT             reduce using rule 8 (funciones -> funcion .)
    FLOAT           reduce using rule 8 (funciones -> funcion .)
    CHAR            reduce using rule 8 (funciones -> funcion .)
    $end            reduce using rule 8 (funciones -> funcion .)


state 16

    (96) declarar_func -> FUNC . tipo ID LP RP SEMICOL
    (97) declarar_func -> FUNC . VOID ID LP RP SEMICOL
    (98) declarar_func -> FUNC . tipo ID LP declarar_param RP SEMICOL
    (99) declarar_func -> FUNC . VOID ID LP declarar_param RP SEMICOL
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR

    VOID            shift and go to state 36
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    tipo                           shift and go to state 35

state 17

    (83) funcion -> VOID . ID add_fun LP param RP verificar LB var_func statement RB end_func
    (84) funcion -> VOID . ID add_fun LP RP verificar2 LB var_func statement RB end_func

    ID              shift and go to state 37


state 18

    (72) tipo -> INT .

    ID              reduce using rule 72 (tipo -> INT .)
    MAIN            reduce using rule 72 (tipo -> INT .)
    COMMA           reduce using rule 72 (tipo -> INT .)
    INT             reduce using rule 72 (tipo -> INT .)
    FLOAT           reduce using rule 72 (tipo -> INT .)
    CHAR            reduce using rule 72 (tipo -> INT .)
    RP              reduce using rule 72 (tipo -> INT .)


state 19

    (73) tipo -> FLOAT .

    ID              reduce using rule 73 (tipo -> FLOAT .)
    MAIN            reduce using rule 73 (tipo -> FLOAT .)
    COMMA           reduce using rule 73 (tipo -> FLOAT .)
    INT             reduce using rule 73 (tipo -> FLOAT .)
    FLOAT           reduce using rule 73 (tipo -> FLOAT .)
    CHAR            reduce using rule 73 (tipo -> FLOAT .)
    RP              reduce using rule 73 (tipo -> FLOAT .)


state 20

    (74) tipo -> CHAR .

    ID              reduce using rule 74 (tipo -> CHAR .)
    MAIN            reduce using rule 74 (tipo -> CHAR .)
    COMMA           reduce using rule 74 (tipo -> CHAR .)
    INT             reduce using rule 74 (tipo -> CHAR .)
    FLOAT           reduce using rule 74 (tipo -> CHAR .)
    CHAR            reduce using rule 74 (tipo -> CHAR .)
    RP              reduce using rule 74 (tipo -> CHAR .)


state 21

    (2) programa1 -> varsG quad_main . funciones end
    (3) programa1 -> varsG quad_main . funciones main funciones end
    (4) programa1 -> varsG quad_main . main funciones end
    (8) funciones -> . funcion
    (9) funciones -> . funciones funcion
    (10) funciones -> . empty
    (11) main -> . tipo MAIN quad_main2 LP RP LB statement add_func_main func_return_main RB
    (12) main -> . VOID MAIN quad_main2 LP RP LB statement add_func_main RB
    (83) funcion -> . VOID ID add_fun LP param RP verificar LB var_func statement RB end_func
    (84) funcion -> . VOID ID add_fun LP RP verificar2 LB var_func statement RB end_func
    (85) funcion -> . tipo ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (86) funcion -> . tipo ID add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (129) empty -> .
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    VOID            shift and go to state 42
    $end            reduce using rule 129 (empty -> .)
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

  ! VOID            [ reduce using rule 129 (empty -> .) ]
  ! INT             [ reduce using rule 129 (empty -> .) ]
  ! FLOAT           [ reduce using rule 129 (empty -> .) ]
  ! CHAR            [ reduce using rule 129 (empty -> .) ]

    funciones                      shift and go to state 38
    main                           shift and go to state 39
    funcion                        shift and go to state 15
    empty                          shift and go to state 40
    tipo                           shift and go to state 41

state 22

    (5) programa1 -> varsG end .

    $end            reduce using rule 5 (programa1 -> varsG end .)


state 23

    (6) programa1 -> quad_main main . end
    (114) end -> .

    $end            reduce using rule 114 (end -> .)

    end                            shift and go to state 43

state 24

    (11) main -> tipo . MAIN quad_main2 LP RP LB statement add_func_main func_return_main RB

    MAIN            shift and go to state 44


state 25

    (12) main -> VOID . MAIN quad_main2 LP RP LB statement add_func_main RB

    MAIN            shift and go to state 45


state 26

    (7) programa1 -> funciones end .

    $end            reduce using rule 7 (programa1 -> funciones end .)


state 27

    (9) funciones -> funciones funcion .

    VOID            reduce using rule 9 (funciones -> funciones funcion .)
    INT             reduce using rule 9 (funciones -> funciones funcion .)
    FLOAT           reduce using rule 9 (funciones -> funciones funcion .)
    CHAR            reduce using rule 9 (funciones -> funciones funcion .)
    $end            reduce using rule 9 (funciones -> funciones funcion .)


state 28

    (50) varsG -> VAR tipo . vars1G varsG
    (51) varsG -> VAR tipo . vars2G varsG
    (52) varsG -> VAR tipo . vars3G varsG
    (116) var_rowG -> VAR tipo . ID row IS LP lista2 RP SEMICOL
    (123) var_matrixG -> VAR tipo . ID matrix IS matrix2 SEMICOL
    (61) vars1G -> . ID SEMICOL
    (62) vars2G -> . vars2_1G ID IS value SEMICOL
    (66) vars2G -> . ID IS value SEMICOL
    (67) vars3G -> . vars3_1G ID SEMICOL
    (70) vars3G -> . ID SEMICOL
    (63) vars2_1G -> . vars2_1G ID IS value COMMA
    (64) vars2_1G -> . ID IS value COMMA
    (65) vars2_1G -> . empty
    (68) vars3_1G -> . vars3_1G ID COMMA
    (69) vars3_1G -> . ID COMMA
    (71) vars3_1G -> . empty
    (129) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 49

  ! ID              [ reduce using rule 129 (empty -> .) ]

    vars1G                         shift and go to state 46
    vars2G                         shift and go to state 47
    vars3G                         shift and go to state 48
    vars2_1G                       shift and go to state 50
    vars3_1G                       shift and go to state 51
    empty                          shift and go to state 52

state 29

    (53) varsG -> VAR LB . varsG RB
    (50) varsG -> . VAR tipo vars1G varsG
    (51) varsG -> . VAR tipo vars2G varsG
    (52) varsG -> . VAR tipo vars3G varsG
    (53) varsG -> . VAR LB varsG RB
    (54) varsG -> . var_rowG
    (55) varsG -> . var_rowG varsG
    (56) varsG -> . var_matrixG
    (57) varsG -> . var_matrixG varsG
    (58) varsG -> . declarar_func varsG
    (59) varsG -> . declarar_func
    (60) varsG -> . empty
    (116) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (123) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (96) declarar_func -> . FUNC tipo ID LP RP SEMICOL
    (97) declarar_func -> . FUNC VOID ID LP RP SEMICOL
    (98) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (99) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL
    (129) empty -> .

    VAR             shift and go to state 9
    FUNC            shift and go to state 16
    RB              reduce using rule 129 (empty -> .)

    varsG                          shift and go to state 53
    var_rowG                       shift and go to state 11
    var_matrixG                    shift and go to state 12
    declarar_func                  shift and go to state 13
    empty                          shift and go to state 32

state 30

    (85) funcion -> tipo ID . add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (86) funcion -> tipo ID . add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (82) add_fun -> .

    LP              reduce using rule 82 (add_fun -> .)

    add_fun                        shift and go to state 54

state 31

    (55) varsG -> var_rowG varsG .

    VOID            reduce using rule 55 (varsG -> var_rowG varsG .)
    INT             reduce using rule 55 (varsG -> var_rowG varsG .)
    FLOAT           reduce using rule 55 (varsG -> var_rowG varsG .)
    CHAR            reduce using rule 55 (varsG -> var_rowG varsG .)
    $end            reduce using rule 55 (varsG -> var_rowG varsG .)
    RB              reduce using rule 55 (varsG -> var_rowG varsG .)


state 32

    (60) varsG -> empty .

    VOID            reduce using rule 60 (varsG -> empty .)
    INT             reduce using rule 60 (varsG -> empty .)
    FLOAT           reduce using rule 60 (varsG -> empty .)
    CHAR            reduce using rule 60 (varsG -> empty .)
    $end            reduce using rule 60 (varsG -> empty .)
    RB              reduce using rule 60 (varsG -> empty .)


state 33

    (57) varsG -> var_matrixG varsG .

    VOID            reduce using rule 57 (varsG -> var_matrixG varsG .)
    INT             reduce using rule 57 (varsG -> var_matrixG varsG .)
    FLOAT           reduce using rule 57 (varsG -> var_matrixG varsG .)
    CHAR            reduce using rule 57 (varsG -> var_matrixG varsG .)
    $end            reduce using rule 57 (varsG -> var_matrixG varsG .)
    RB              reduce using rule 57 (varsG -> var_matrixG varsG .)


state 34

    (58) varsG -> declarar_func varsG .

    VOID            reduce using rule 58 (varsG -> declarar_func varsG .)
    INT             reduce using rule 58 (varsG -> declarar_func varsG .)
    FLOAT           reduce using rule 58 (varsG -> declarar_func varsG .)
    CHAR            reduce using rule 58 (varsG -> declarar_func varsG .)
    $end            reduce using rule 58 (varsG -> declarar_func varsG .)
    RB              reduce using rule 58 (varsG -> declarar_func varsG .)


state 35

    (96) declarar_func -> FUNC tipo . ID LP RP SEMICOL
    (98) declarar_func -> FUNC tipo . ID LP declarar_param RP SEMICOL

    ID              shift and go to state 55


state 36

    (97) declarar_func -> FUNC VOID . ID LP RP SEMICOL
    (99) declarar_func -> FUNC VOID . ID LP declarar_param RP SEMICOL

    ID              shift and go to state 56


state 37

    (83) funcion -> VOID ID . add_fun LP param RP verificar LB var_func statement RB end_func
    (84) funcion -> VOID ID . add_fun LP RP verificar2 LB var_func statement RB end_func
    (82) add_fun -> .

    LP              reduce using rule 82 (add_fun -> .)

    add_fun                        shift and go to state 57

state 38

    (2) programa1 -> varsG quad_main funciones . end
    (3) programa1 -> varsG quad_main funciones . main funciones end
    (9) funciones -> funciones . funcion
    (114) end -> .
    (11) main -> . tipo MAIN quad_main2 LP RP LB statement add_func_main func_return_main RB
    (12) main -> . VOID MAIN quad_main2 LP RP LB statement add_func_main RB
    (83) funcion -> . VOID ID add_fun LP param RP verificar LB var_func statement RB end_func
    (84) funcion -> . VOID ID add_fun LP RP verificar2 LB var_func statement RB end_func
    (85) funcion -> . tipo ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (86) funcion -> . tipo ID add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR

    $end            reduce using rule 114 (end -> .)
    VOID            shift and go to state 42
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    end                            shift and go to state 58
    main                           shift and go to state 59
    funcion                        shift and go to state 27
    tipo                           shift and go to state 41

state 39

    (4) programa1 -> varsG quad_main main . funciones end
    (8) funciones -> . funcion
    (9) funciones -> . funciones funcion
    (10) funciones -> . empty
    (83) funcion -> . VOID ID add_fun LP param RP verificar LB var_func statement RB end_func
    (84) funcion -> . VOID ID add_fun LP RP verificar2 LB var_func statement RB end_func
    (85) funcion -> . tipo ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (86) funcion -> . tipo ID add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (129) empty -> .
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    VOID            shift and go to state 17
    $end            reduce using rule 129 (empty -> .)
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

  ! VOID            [ reduce using rule 129 (empty -> .) ]
  ! INT             [ reduce using rule 129 (empty -> .) ]
  ! FLOAT           [ reduce using rule 129 (empty -> .) ]
  ! CHAR            [ reduce using rule 129 (empty -> .) ]

    funciones                      shift and go to state 60
    funcion                        shift and go to state 15
    empty                          shift and go to state 40
    tipo                           shift and go to state 10

state 40

    (10) funciones -> empty .

    VOID            reduce using rule 10 (funciones -> empty .)
    INT             reduce using rule 10 (funciones -> empty .)
    FLOAT           reduce using rule 10 (funciones -> empty .)
    CHAR            reduce using rule 10 (funciones -> empty .)
    $end            reduce using rule 10 (funciones -> empty .)


state 41

    (11) main -> tipo . MAIN quad_main2 LP RP LB statement add_func_main func_return_main RB
    (85) funcion -> tipo . ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (86) funcion -> tipo . ID add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func

    MAIN            shift and go to state 44
    ID              shift and go to state 30


state 42

    (12) main -> VOID . MAIN quad_main2 LP RP LB statement add_func_main RB
    (83) funcion -> VOID . ID add_fun LP param RP verificar LB var_func statement RB end_func
    (84) funcion -> VOID . ID add_fun LP RP verificar2 LB var_func statement RB end_func

    MAIN            shift and go to state 45
    ID              shift and go to state 37


state 43

    (6) programa1 -> quad_main main end .

    $end            reduce using rule 6 (programa1 -> quad_main main end .)


state 44

    (11) main -> tipo MAIN . quad_main2 LP RP LB statement add_func_main func_return_main RB
    (14) quad_main2 -> .

    LP              reduce using rule 14 (quad_main2 -> .)

    quad_main2                     shift and go to state 61

state 45

    (12) main -> VOID MAIN . quad_main2 LP RP LB statement add_func_main RB
    (14) quad_main2 -> .

    LP              reduce using rule 14 (quad_main2 -> .)

    quad_main2                     shift and go to state 62

state 46

    (50) varsG -> VAR tipo vars1G . varsG
    (50) varsG -> . VAR tipo vars1G varsG
    (51) varsG -> . VAR tipo vars2G varsG
    (52) varsG -> . VAR tipo vars3G varsG
    (53) varsG -> . VAR LB varsG RB
    (54) varsG -> . var_rowG
    (55) varsG -> . var_rowG varsG
    (56) varsG -> . var_matrixG
    (57) varsG -> . var_matrixG varsG
    (58) varsG -> . declarar_func varsG
    (59) varsG -> . declarar_func
    (60) varsG -> . empty
    (116) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (123) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (96) declarar_func -> . FUNC tipo ID LP RP SEMICOL
    (97) declarar_func -> . FUNC VOID ID LP RP SEMICOL
    (98) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (99) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL
    (129) empty -> .

    VAR             shift and go to state 9
    FUNC            shift and go to state 16
    VOID            reduce using rule 129 (empty -> .)
    INT             reduce using rule 129 (empty -> .)
    FLOAT           reduce using rule 129 (empty -> .)
    CHAR            reduce using rule 129 (empty -> .)
    $end            reduce using rule 129 (empty -> .)
    RB              reduce using rule 129 (empty -> .)

    varsG                          shift and go to state 63
    var_rowG                       shift and go to state 11
    var_matrixG                    shift and go to state 12
    declarar_func                  shift and go to state 13
    empty                          shift and go to state 32

state 47

    (51) varsG -> VAR tipo vars2G . varsG
    (50) varsG -> . VAR tipo vars1G varsG
    (51) varsG -> . VAR tipo vars2G varsG
    (52) varsG -> . VAR tipo vars3G varsG
    (53) varsG -> . VAR LB varsG RB
    (54) varsG -> . var_rowG
    (55) varsG -> . var_rowG varsG
    (56) varsG -> . var_matrixG
    (57) varsG -> . var_matrixG varsG
    (58) varsG -> . declarar_func varsG
    (59) varsG -> . declarar_func
    (60) varsG -> . empty
    (116) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (123) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (96) declarar_func -> . FUNC tipo ID LP RP SEMICOL
    (97) declarar_func -> . FUNC VOID ID LP RP SEMICOL
    (98) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (99) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL
    (129) empty -> .

    VAR             shift and go to state 9
    FUNC            shift and go to state 16
    VOID            reduce using rule 129 (empty -> .)
    INT             reduce using rule 129 (empty -> .)
    FLOAT           reduce using rule 129 (empty -> .)
    CHAR            reduce using rule 129 (empty -> .)
    $end            reduce using rule 129 (empty -> .)
    RB              reduce using rule 129 (empty -> .)

    varsG                          shift and go to state 64
    var_rowG                       shift and go to state 11
    var_matrixG                    shift and go to state 12
    declarar_func                  shift and go to state 13
    empty                          shift and go to state 32

state 48

    (52) varsG -> VAR tipo vars3G . varsG
    (50) varsG -> . VAR tipo vars1G varsG
    (51) varsG -> . VAR tipo vars2G varsG
    (52) varsG -> . VAR tipo vars3G varsG
    (53) varsG -> . VAR LB varsG RB
    (54) varsG -> . var_rowG
    (55) varsG -> . var_rowG varsG
    (56) varsG -> . var_matrixG
    (57) varsG -> . var_matrixG varsG
    (58) varsG -> . declarar_func varsG
    (59) varsG -> . declarar_func
    (60) varsG -> . empty
    (116) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (123) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (96) declarar_func -> . FUNC tipo ID LP RP SEMICOL
    (97) declarar_func -> . FUNC VOID ID LP RP SEMICOL
    (98) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (99) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL
    (129) empty -> .

    VAR             shift and go to state 9
    FUNC            shift and go to state 16
    VOID            reduce using rule 129 (empty -> .)
    INT             reduce using rule 129 (empty -> .)
    FLOAT           reduce using rule 129 (empty -> .)
    CHAR            reduce using rule 129 (empty -> .)
    $end            reduce using rule 129 (empty -> .)
    RB              reduce using rule 129 (empty -> .)

    varsG                          shift and go to state 65
    var_rowG                       shift and go to state 11
    var_matrixG                    shift and go to state 12
    declarar_func                  shift and go to state 13
    empty                          shift and go to state 32

state 49

    (116) var_rowG -> VAR tipo ID . row IS LP lista2 RP SEMICOL
    (123) var_matrixG -> VAR tipo ID . matrix IS matrix2 SEMICOL
    (61) vars1G -> ID . SEMICOL
    (66) vars2G -> ID . IS value SEMICOL
    (70) vars3G -> ID . SEMICOL
    (64) vars2_1G -> ID . IS value COMMA
    (69) vars3_1G -> ID . COMMA
    (121) row -> . LC CTE_I RC
    (128) matrix -> . row row

    SEMICOL         shift and go to state 68
    IS              shift and go to state 67
    COMMA           shift and go to state 70
    LC              shift and go to state 71

    row                            shift and go to state 66
    matrix                         shift and go to state 69

state 50

    (62) vars2G -> vars2_1G . ID IS value SEMICOL
    (63) vars2_1G -> vars2_1G . ID IS value COMMA

    ID              shift and go to state 72


state 51

    (67) vars3G -> vars3_1G . ID SEMICOL
    (68) vars3_1G -> vars3_1G . ID COMMA

    ID              shift and go to state 73


state 52

    (65) vars2_1G -> empty .
    (71) vars3_1G -> empty .

  ! reduce/reduce conflict for ID resolved using rule 65 (vars2_1G -> empty .)
    ID              reduce using rule 65 (vars2_1G -> empty .)

  ! ID              [ reduce using rule 71 (vars3_1G -> empty .) ]


state 53

    (53) varsG -> VAR LB varsG . RB

    RB              shift and go to state 74


state 54

    (85) funcion -> tipo ID add_fun . LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (86) funcion -> tipo ID add_fun . LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func

    LP              shift and go to state 75


state 55

    (96) declarar_func -> FUNC tipo ID . LP RP SEMICOL
    (98) declarar_func -> FUNC tipo ID . LP declarar_param RP SEMICOL

    LP              shift and go to state 76


state 56

    (97) declarar_func -> FUNC VOID ID . LP RP SEMICOL
    (99) declarar_func -> FUNC VOID ID . LP declarar_param RP SEMICOL

    LP              shift and go to state 77


state 57

    (83) funcion -> VOID ID add_fun . LP param RP verificar LB var_func statement RB end_func
    (84) funcion -> VOID ID add_fun . LP RP verificar2 LB var_func statement RB end_func

    LP              shift and go to state 78


state 58

    (2) programa1 -> varsG quad_main funciones end .

    $end            reduce using rule 2 (programa1 -> varsG quad_main funciones end .)


state 59

    (3) programa1 -> varsG quad_main funciones main . funciones end
    (8) funciones -> . funcion
    (9) funciones -> . funciones funcion
    (10) funciones -> . empty
    (83) funcion -> . VOID ID add_fun LP param RP verificar LB var_func statement RB end_func
    (84) funcion -> . VOID ID add_fun LP RP verificar2 LB var_func statement RB end_func
    (85) funcion -> . tipo ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (86) funcion -> . tipo ID add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (129) empty -> .
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    VOID            shift and go to state 17
    $end            reduce using rule 129 (empty -> .)
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

  ! VOID            [ reduce using rule 129 (empty -> .) ]
  ! INT             [ reduce using rule 129 (empty -> .) ]
  ! FLOAT           [ reduce using rule 129 (empty -> .) ]
  ! CHAR            [ reduce using rule 129 (empty -> .) ]

    funciones                      shift and go to state 79
    funcion                        shift and go to state 15
    empty                          shift and go to state 40
    tipo                           shift and go to state 10

state 60

    (4) programa1 -> varsG quad_main main funciones . end
    (9) funciones -> funciones . funcion
    (114) end -> .
    (83) funcion -> . VOID ID add_fun LP param RP verificar LB var_func statement RB end_func
    (84) funcion -> . VOID ID add_fun LP RP verificar2 LB var_func statement RB end_func
    (85) funcion -> . tipo ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (86) funcion -> . tipo ID add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR

    $end            reduce using rule 114 (end -> .)
    VOID            shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    end                            shift and go to state 80
    funcion                        shift and go to state 27
    tipo                           shift and go to state 10

state 61

    (11) main -> tipo MAIN quad_main2 . LP RP LB statement add_func_main func_return_main RB

    LP              shift and go to state 81


state 62

    (12) main -> VOID MAIN quad_main2 . LP RP LB statement add_func_main RB

    LP              shift and go to state 82


state 63

    (50) varsG -> VAR tipo vars1G varsG .

    VOID            reduce using rule 50 (varsG -> VAR tipo vars1G varsG .)
    INT             reduce using rule 50 (varsG -> VAR tipo vars1G varsG .)
    FLOAT           reduce using rule 50 (varsG -> VAR tipo vars1G varsG .)
    CHAR            reduce using rule 50 (varsG -> VAR tipo vars1G varsG .)
    $end            reduce using rule 50 (varsG -> VAR tipo vars1G varsG .)
    RB              reduce using rule 50 (varsG -> VAR tipo vars1G varsG .)


state 64

    (51) varsG -> VAR tipo vars2G varsG .

    VOID            reduce using rule 51 (varsG -> VAR tipo vars2G varsG .)
    INT             reduce using rule 51 (varsG -> VAR tipo vars2G varsG .)
    FLOAT           reduce using rule 51 (varsG -> VAR tipo vars2G varsG .)
    CHAR            reduce using rule 51 (varsG -> VAR tipo vars2G varsG .)
    $end            reduce using rule 51 (varsG -> VAR tipo vars2G varsG .)
    RB              reduce using rule 51 (varsG -> VAR tipo vars2G varsG .)


state 65

    (52) varsG -> VAR tipo vars3G varsG .

    VOID            reduce using rule 52 (varsG -> VAR tipo vars3G varsG .)
    INT             reduce using rule 52 (varsG -> VAR tipo vars3G varsG .)
    FLOAT           reduce using rule 52 (varsG -> VAR tipo vars3G varsG .)
    CHAR            reduce using rule 52 (varsG -> VAR tipo vars3G varsG .)
    $end            reduce using rule 52 (varsG -> VAR tipo vars3G varsG .)
    RB              reduce using rule 52 (varsG -> VAR tipo vars3G varsG .)


state 66

    (116) var_rowG -> VAR tipo ID row . IS LP lista2 RP SEMICOL
    (128) matrix -> row . row
    (121) row -> . LC CTE_I RC

    IS              shift and go to state 84
    LC              shift and go to state 71

    row                            shift and go to state 83

state 67

    (66) vars2G -> ID IS . value SEMICOL
    (64) vars2_1G -> ID IS . value COMMA
    (75) value -> . CTE_F
    (76) value -> . CTE_I
    (77) value -> . ID
    (78) value -> . CTE_C
    (79) value -> . COMILLA ID COMILLA
    (80) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88
    ID              shift and go to state 85
    CTE_C           shift and go to state 89
    COMILLA         shift and go to state 90
    COMILLAS        shift and go to state 91

    value                          shift and go to state 86

state 68

    (61) vars1G -> ID SEMICOL .
    (70) vars3G -> ID SEMICOL .

  ! reduce/reduce conflict for VAR resolved using rule 61 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for FUNC resolved using rule 61 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for VOID resolved using rule 61 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for INT resolved using rule 61 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for FLOAT resolved using rule 61 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for CHAR resolved using rule 61 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for $end resolved using rule 61 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for RB resolved using rule 61 (vars1G -> ID SEMICOL .)
    VAR             reduce using rule 61 (vars1G -> ID SEMICOL .)
    FUNC            reduce using rule 61 (vars1G -> ID SEMICOL .)
    VOID            reduce using rule 61 (vars1G -> ID SEMICOL .)
    INT             reduce using rule 61 (vars1G -> ID SEMICOL .)
    FLOAT           reduce using rule 61 (vars1G -> ID SEMICOL .)
    CHAR            reduce using rule 61 (vars1G -> ID SEMICOL .)
    $end            reduce using rule 61 (vars1G -> ID SEMICOL .)
    RB              reduce using rule 61 (vars1G -> ID SEMICOL .)

  ! VAR             [ reduce using rule 70 (vars3G -> ID SEMICOL .) ]
  ! FUNC            [ reduce using rule 70 (vars3G -> ID SEMICOL .) ]
  ! VOID            [ reduce using rule 70 (vars3G -> ID SEMICOL .) ]
  ! INT             [ reduce using rule 70 (vars3G -> ID SEMICOL .) ]
  ! FLOAT           [ reduce using rule 70 (vars3G -> ID SEMICOL .) ]
  ! CHAR            [ reduce using rule 70 (vars3G -> ID SEMICOL .) ]
  ! $end            [ reduce using rule 70 (vars3G -> ID SEMICOL .) ]
  ! RB              [ reduce using rule 70 (vars3G -> ID SEMICOL .) ]


state 69

    (123) var_matrixG -> VAR tipo ID matrix . IS matrix2 SEMICOL

    IS              shift and go to state 92


state 70

    (69) vars3_1G -> ID COMMA .

    ID              reduce using rule 69 (vars3_1G -> ID COMMA .)


state 71

    (121) row -> LC . CTE_I RC

    CTE_I           shift and go to state 93


state 72

    (62) vars2G -> vars2_1G ID . IS value SEMICOL
    (63) vars2_1G -> vars2_1G ID . IS value COMMA

    IS              shift and go to state 94


state 73

    (67) vars3G -> vars3_1G ID . SEMICOL
    (68) vars3_1G -> vars3_1G ID . COMMA

    SEMICOL         shift and go to state 95
    COMMA           shift and go to state 96


state 74

    (53) varsG -> VAR LB varsG RB .

    VOID            reduce using rule 53 (varsG -> VAR LB varsG RB .)
    INT             reduce using rule 53 (varsG -> VAR LB varsG RB .)
    FLOAT           reduce using rule 53 (varsG -> VAR LB varsG RB .)
    CHAR            reduce using rule 53 (varsG -> VAR LB varsG RB .)
    $end            reduce using rule 53 (varsG -> VAR LB varsG RB .)
    RB              reduce using rule 53 (varsG -> VAR LB varsG RB .)


state 75

    (85) funcion -> tipo ID add_fun LP . RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (86) funcion -> tipo ID add_fun LP . param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (93) param -> . tipo ID
    (94) param -> . param COMMA tipo ID
    (95) param -> . empty
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR
    (129) empty -> .

  ! shift/reduce conflict for RP resolved as shift
    RP              shift and go to state 98
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20
    COMMA           reduce using rule 129 (empty -> .)

  ! RP              [ reduce using rule 129 (empty -> .) ]

    tipo                           shift and go to state 97
    param                          shift and go to state 99
    empty                          shift and go to state 100

state 76

    (96) declarar_func -> FUNC tipo ID LP . RP SEMICOL
    (98) declarar_func -> FUNC tipo ID LP . declarar_param RP SEMICOL
    (100) declarar_param -> . tipo COMMA declarar_param
    (101) declarar_param -> . tipo declarar_param
    (102) declarar_param -> . empty
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR
    (129) empty -> .

  ! shift/reduce conflict for RP resolved as shift
    RP              shift and go to state 102
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

  ! RP              [ reduce using rule 129 (empty -> .) ]

    tipo                           shift and go to state 101
    declarar_param                 shift and go to state 103
    empty                          shift and go to state 104

state 77

    (97) declarar_func -> FUNC VOID ID LP . RP SEMICOL
    (99) declarar_func -> FUNC VOID ID LP . declarar_param RP SEMICOL
    (100) declarar_param -> . tipo COMMA declarar_param
    (101) declarar_param -> . tipo declarar_param
    (102) declarar_param -> . empty
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR
    (129) empty -> .

  ! shift/reduce conflict for RP resolved as shift
    RP              shift and go to state 105
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

  ! RP              [ reduce using rule 129 (empty -> .) ]

    declarar_param                 shift and go to state 106
    tipo                           shift and go to state 101
    empty                          shift and go to state 104

state 78

    (83) funcion -> VOID ID add_fun LP . param RP verificar LB var_func statement RB end_func
    (84) funcion -> VOID ID add_fun LP . RP verificar2 LB var_func statement RB end_func
    (93) param -> . tipo ID
    (94) param -> . param COMMA tipo ID
    (95) param -> . empty
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR
    (129) empty -> .

  ! shift/reduce conflict for RP resolved as shift
    RP              shift and go to state 108
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20
    COMMA           reduce using rule 129 (empty -> .)

  ! RP              [ reduce using rule 129 (empty -> .) ]

    param                          shift and go to state 107
    tipo                           shift and go to state 97
    empty                          shift and go to state 100

state 79

    (3) programa1 -> varsG quad_main funciones main funciones . end
    (9) funciones -> funciones . funcion
    (114) end -> .
    (83) funcion -> . VOID ID add_fun LP param RP verificar LB var_func statement RB end_func
    (84) funcion -> . VOID ID add_fun LP RP verificar2 LB var_func statement RB end_func
    (85) funcion -> . tipo ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (86) funcion -> . tipo ID add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR

    $end            reduce using rule 114 (end -> .)
    VOID            shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    end                            shift and go to state 109
    funcion                        shift and go to state 27
    tipo                           shift and go to state 10

state 80

    (4) programa1 -> varsG quad_main main funciones end .

    $end            reduce using rule 4 (programa1 -> varsG quad_main main funciones end .)


state 81

    (11) main -> tipo MAIN quad_main2 LP . RP LB statement add_func_main func_return_main RB

    RP              shift and go to state 110


state 82

    (12) main -> VOID MAIN quad_main2 LP . RP LB statement add_func_main RB

    RP              shift and go to state 111


state 83

    (128) matrix -> row row .

    IS              reduce using rule 128 (matrix -> row row .)
    SEMICOL         reduce using rule 128 (matrix -> row row .)


state 84

    (116) var_rowG -> VAR tipo ID row IS . LP lista2 RP SEMICOL

    LP              shift and go to state 112


state 85

    (77) value -> ID .

    SEMICOL         reduce using rule 77 (value -> ID .)
    COMMA           reduce using rule 77 (value -> ID .)
    RP              reduce using rule 77 (value -> ID .)


state 86

    (66) vars2G -> ID IS value . SEMICOL
    (64) vars2_1G -> ID IS value . COMMA

    SEMICOL         shift and go to state 113
    COMMA           shift and go to state 114


state 87

    (75) value -> CTE_F .

    SEMICOL         reduce using rule 75 (value -> CTE_F .)
    COMMA           reduce using rule 75 (value -> CTE_F .)
    RP              reduce using rule 75 (value -> CTE_F .)


state 88

    (76) value -> CTE_I .

    SEMICOL         reduce using rule 76 (value -> CTE_I .)
    COMMA           reduce using rule 76 (value -> CTE_I .)
    RP              reduce using rule 76 (value -> CTE_I .)


state 89

    (78) value -> CTE_C .

    SEMICOL         reduce using rule 78 (value -> CTE_C .)
    COMMA           reduce using rule 78 (value -> CTE_C .)
    RP              reduce using rule 78 (value -> CTE_C .)


state 90

    (79) value -> COMILLA . ID COMILLA

    ID              shift and go to state 115


state 91

    (80) value -> COMILLAS . ID COMILLAS

    ID              shift and go to state 116


state 92

    (123) var_matrixG -> VAR tipo ID matrix IS . matrix2 SEMICOL
    (124) matrix2 -> . LP lista2 RP COMMA matrix2
    (125) matrix2 -> . LP lista2 RP COMMA LP lista2 RP

    LP              shift and go to state 118

    matrix2                        shift and go to state 117

state 93

    (121) row -> LC CTE_I . RC

    RC              shift and go to state 119


state 94

    (62) vars2G -> vars2_1G ID IS . value SEMICOL
    (63) vars2_1G -> vars2_1G ID IS . value COMMA
    (75) value -> . CTE_F
    (76) value -> . CTE_I
    (77) value -> . ID
    (78) value -> . CTE_C
    (79) value -> . COMILLA ID COMILLA
    (80) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88
    ID              shift and go to state 85
    CTE_C           shift and go to state 89
    COMILLA         shift and go to state 90
    COMILLAS        shift and go to state 91

    value                          shift and go to state 120

state 95

    (67) vars3G -> vars3_1G ID SEMICOL .

    VAR             reduce using rule 67 (vars3G -> vars3_1G ID SEMICOL .)
    FUNC            reduce using rule 67 (vars3G -> vars3_1G ID SEMICOL .)
    VOID            reduce using rule 67 (vars3G -> vars3_1G ID SEMICOL .)
    INT             reduce using rule 67 (vars3G -> vars3_1G ID SEMICOL .)
    FLOAT           reduce using rule 67 (vars3G -> vars3_1G ID SEMICOL .)
    CHAR            reduce using rule 67 (vars3G -> vars3_1G ID SEMICOL .)
    $end            reduce using rule 67 (vars3G -> vars3_1G ID SEMICOL .)
    RB              reduce using rule 67 (vars3G -> vars3_1G ID SEMICOL .)


state 96

    (68) vars3_1G -> vars3_1G ID COMMA .

    ID              reduce using rule 68 (vars3_1G -> vars3_1G ID COMMA .)


state 97

    (93) param -> tipo . ID

    ID              shift and go to state 121


state 98

    (85) funcion -> tipo ID add_fun LP RP . verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (88) verificar2 -> .

    LB              reduce using rule 88 (verificar2 -> .)

    verificar2                     shift and go to state 122

state 99

    (86) funcion -> tipo ID add_fun LP param . RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (94) param -> param . COMMA tipo ID

    RP              shift and go to state 123
    COMMA           shift and go to state 124


state 100

    (95) param -> empty .

    RP              reduce using rule 95 (param -> empty .)
    COMMA           reduce using rule 95 (param -> empty .)


state 101

    (100) declarar_param -> tipo . COMMA declarar_param
    (101) declarar_param -> tipo . declarar_param
    (100) declarar_param -> . tipo COMMA declarar_param
    (101) declarar_param -> . tipo declarar_param
    (102) declarar_param -> . empty
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR
    (129) empty -> .

    COMMA           shift and go to state 125
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20
    RP              reduce using rule 129 (empty -> .)

    tipo                           shift and go to state 101
    declarar_param                 shift and go to state 126
    empty                          shift and go to state 104

state 102

    (96) declarar_func -> FUNC tipo ID LP RP . SEMICOL

    SEMICOL         shift and go to state 127


state 103

    (98) declarar_func -> FUNC tipo ID LP declarar_param . RP SEMICOL

    RP              shift and go to state 128


state 104

    (102) declarar_param -> empty .

    RP              reduce using rule 102 (declarar_param -> empty .)


state 105

    (97) declarar_func -> FUNC VOID ID LP RP . SEMICOL

    SEMICOL         shift and go to state 129


state 106

    (99) declarar_func -> FUNC VOID ID LP declarar_param . RP SEMICOL

    RP              shift and go to state 130


state 107

    (83) funcion -> VOID ID add_fun LP param . RP verificar LB var_func statement RB end_func
    (94) param -> param . COMMA tipo ID

    RP              shift and go to state 131
    COMMA           shift and go to state 124


state 108

    (84) funcion -> VOID ID add_fun LP RP . verificar2 LB var_func statement RB end_func
    (88) verificar2 -> .

    LB              reduce using rule 88 (verificar2 -> .)

    verificar2                     shift and go to state 132

state 109

    (3) programa1 -> varsG quad_main funciones main funciones end .

    $end            reduce using rule 3 (programa1 -> varsG quad_main funciones main funciones end .)


state 110

    (11) main -> tipo MAIN quad_main2 LP RP . LB statement add_func_main func_return_main RB

    LB              shift and go to state 133


state 111

    (12) main -> VOID MAIN quad_main2 LP RP . LB statement add_func_main RB

    LB              shift and go to state 134


state 112

    (116) var_rowG -> VAR tipo ID row IS LP . lista2 RP SEMICOL
    (119) lista2 -> . elem_lista COMMA lista2
    (120) lista2 -> . elem_lista COMMA elem_lista
    (117) elem_lista -> . value
    (118) elem_lista -> . empty
    (75) value -> . CTE_F
    (76) value -> . CTE_I
    (77) value -> . ID
    (78) value -> . CTE_C
    (79) value -> . COMILLA ID COMILLA
    (80) value -> . COMILLAS ID COMILLAS
    (129) empty -> .

    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88
    ID              shift and go to state 85
    CTE_C           shift and go to state 89
    COMILLA         shift and go to state 90
    COMILLAS        shift and go to state 91
    COMMA           reduce using rule 129 (empty -> .)

    lista2                         shift and go to state 135
    elem_lista                     shift and go to state 136
    value                          shift and go to state 137
    empty                          shift and go to state 138

state 113

    (66) vars2G -> ID IS value SEMICOL .

    VAR             reduce using rule 66 (vars2G -> ID IS value SEMICOL .)
    FUNC            reduce using rule 66 (vars2G -> ID IS value SEMICOL .)
    VOID            reduce using rule 66 (vars2G -> ID IS value SEMICOL .)
    INT             reduce using rule 66 (vars2G -> ID IS value SEMICOL .)
    FLOAT           reduce using rule 66 (vars2G -> ID IS value SEMICOL .)
    CHAR            reduce using rule 66 (vars2G -> ID IS value SEMICOL .)
    $end            reduce using rule 66 (vars2G -> ID IS value SEMICOL .)
    RB              reduce using rule 66 (vars2G -> ID IS value SEMICOL .)


state 114

    (64) vars2_1G -> ID IS value COMMA .

    ID              reduce using rule 64 (vars2_1G -> ID IS value COMMA .)


state 115

    (79) value -> COMILLA ID . COMILLA

    COMILLA         shift and go to state 139


state 116

    (80) value -> COMILLAS ID . COMILLAS

    COMILLAS        shift and go to state 140


state 117

    (123) var_matrixG -> VAR tipo ID matrix IS matrix2 . SEMICOL

    SEMICOL         shift and go to state 141


state 118

    (124) matrix2 -> LP . lista2 RP COMMA matrix2
    (125) matrix2 -> LP . lista2 RP COMMA LP lista2 RP
    (119) lista2 -> . elem_lista COMMA lista2
    (120) lista2 -> . elem_lista COMMA elem_lista
    (117) elem_lista -> . value
    (118) elem_lista -> . empty
    (75) value -> . CTE_F
    (76) value -> . CTE_I
    (77) value -> . ID
    (78) value -> . CTE_C
    (79) value -> . COMILLA ID COMILLA
    (80) value -> . COMILLAS ID COMILLAS
    (129) empty -> .

    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88
    ID              shift and go to state 85
    CTE_C           shift and go to state 89
    COMILLA         shift and go to state 90
    COMILLAS        shift and go to state 91
    COMMA           reduce using rule 129 (empty -> .)

    lista2                         shift and go to state 142
    elem_lista                     shift and go to state 136
    value                          shift and go to state 137
    empty                          shift and go to state 138

state 119

    (121) row -> LC CTE_I RC .

    IS              reduce using rule 121 (row -> LC CTE_I RC .)
    LC              reduce using rule 121 (row -> LC CTE_I RC .)
    SEMICOL         reduce using rule 121 (row -> LC CTE_I RC .)


state 120

    (62) vars2G -> vars2_1G ID IS value . SEMICOL
    (63) vars2_1G -> vars2_1G ID IS value . COMMA

    SEMICOL         shift and go to state 143
    COMMA           shift and go to state 144


state 121

    (93) param -> tipo ID .

    RP              reduce using rule 93 (param -> tipo ID .)
    COMMA           reduce using rule 93 (param -> tipo ID .)


state 122

    (85) funcion -> tipo ID add_fun LP RP verificar2 . LB var_func statement add_func_dir2 func_return RB end_func

    LB              shift and go to state 145


state 123

    (86) funcion -> tipo ID add_fun LP param RP . verificar LB var_func statement add_func_dir func_return_param RB end_func
    (87) verificar -> .

    LB              reduce using rule 87 (verificar -> .)

    verificar                      shift and go to state 146

state 124

    (94) param -> param COMMA . tipo ID
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    tipo                           shift and go to state 147

state 125

    (100) declarar_param -> tipo COMMA . declarar_param
    (100) declarar_param -> . tipo COMMA declarar_param
    (101) declarar_param -> . tipo declarar_param
    (102) declarar_param -> . empty
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR
    (129) empty -> .

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20
    RP              reduce using rule 129 (empty -> .)

    tipo                           shift and go to state 101
    declarar_param                 shift and go to state 148
    empty                          shift and go to state 104

state 126

    (101) declarar_param -> tipo declarar_param .

    RP              reduce using rule 101 (declarar_param -> tipo declarar_param .)


state 127

    (96) declarar_func -> FUNC tipo ID LP RP SEMICOL .

    VAR             reduce using rule 96 (declarar_func -> FUNC tipo ID LP RP SEMICOL .)
    FUNC            reduce using rule 96 (declarar_func -> FUNC tipo ID LP RP SEMICOL .)
    VOID            reduce using rule 96 (declarar_func -> FUNC tipo ID LP RP SEMICOL .)
    INT             reduce using rule 96 (declarar_func -> FUNC tipo ID LP RP SEMICOL .)
    FLOAT           reduce using rule 96 (declarar_func -> FUNC tipo ID LP RP SEMICOL .)
    CHAR            reduce using rule 96 (declarar_func -> FUNC tipo ID LP RP SEMICOL .)
    $end            reduce using rule 96 (declarar_func -> FUNC tipo ID LP RP SEMICOL .)
    RB              reduce using rule 96 (declarar_func -> FUNC tipo ID LP RP SEMICOL .)


state 128

    (98) declarar_func -> FUNC tipo ID LP declarar_param RP . SEMICOL

    SEMICOL         shift and go to state 149


state 129

    (97) declarar_func -> FUNC VOID ID LP RP SEMICOL .

    VAR             reduce using rule 97 (declarar_func -> FUNC VOID ID LP RP SEMICOL .)
    FUNC            reduce using rule 97 (declarar_func -> FUNC VOID ID LP RP SEMICOL .)
    VOID            reduce using rule 97 (declarar_func -> FUNC VOID ID LP RP SEMICOL .)
    INT             reduce using rule 97 (declarar_func -> FUNC VOID ID LP RP SEMICOL .)
    FLOAT           reduce using rule 97 (declarar_func -> FUNC VOID ID LP RP SEMICOL .)
    CHAR            reduce using rule 97 (declarar_func -> FUNC VOID ID LP RP SEMICOL .)
    $end            reduce using rule 97 (declarar_func -> FUNC VOID ID LP RP SEMICOL .)
    RB              reduce using rule 97 (declarar_func -> FUNC VOID ID LP RP SEMICOL .)


state 130

    (99) declarar_func -> FUNC VOID ID LP declarar_param RP . SEMICOL

    SEMICOL         shift and go to state 150


state 131

    (83) funcion -> VOID ID add_fun LP param RP . verificar LB var_func statement RB end_func
    (87) verificar -> .

    LB              reduce using rule 87 (verificar -> .)

    verificar                      shift and go to state 151

state 132

    (84) funcion -> VOID ID add_fun LP RP verificar2 . LB var_func statement RB end_func

    LB              shift and go to state 152


state 133

    (11) main -> tipo MAIN quad_main2 LP RP LB . statement add_func_main func_return_main RB
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . while statement
    (19) statement -> . for statement
    (20) statement -> . escritura statement
    (21) statement -> . escritura_var statement
    (22) statement -> . lectura statement
    (23) statement -> . func_call statement
    (24) statement -> . ID row SEMICOL
    (25) statement -> . ID matrix SEMICOL
    (26) statement -> . empty
    (27) asignacion -> . ID IS value
    (130) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (131) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (139) while -> . WHILE guarda_num_salto LP expression RP check_bool gotofw LB statement RB fill_gotofw fill_gotow
    (144) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (153) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (154) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (155) escritura_var -> . PRINT LP any_var RP SEMICOL
    (160) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (161) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (104) func_call -> . ID LP RP SEMICOL
    (105) func_call -> . VAR tipo ID IS ID LP RP SEMICOL
    (106) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (107) func_call -> . VAR tipo ID IS ID LP func_era func_call_param RP SEMICOL
    (129) empty -> .
    (115) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (122) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 163
    IF              shift and go to state 165
    VAR             shift and go to state 166
    WHILE           shift and go to state 169
    FOR             shift and go to state 170
    PRINT           shift and go to state 171
    READ            shift and go to state 172
    RETURN          reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]
  ! IF              [ reduce using rule 129 (empty -> .) ]
  ! VAR             [ reduce using rule 129 (empty -> .) ]
  ! WHILE           [ reduce using rule 129 (empty -> .) ]
  ! FOR             [ reduce using rule 129 (empty -> .) ]
  ! PRINT           [ reduce using rule 129 (empty -> .) ]
  ! READ            [ reduce using rule 129 (empty -> .) ]

    statement                      shift and go to state 153
    asignacion                     shift and go to state 154
    if                             shift and go to state 155
    vars                           shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    escritura                      shift and go to state 159
    escritura_var                  shift and go to state 160
    lectura                        shift and go to state 161
    func_call                      shift and go to state 162
    empty                          shift and go to state 164
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168

state 134

    (12) main -> VOID MAIN quad_main2 LP RP LB . statement add_func_main RB
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . while statement
    (19) statement -> . for statement
    (20) statement -> . escritura statement
    (21) statement -> . escritura_var statement
    (22) statement -> . lectura statement
    (23) statement -> . func_call statement
    (24) statement -> . ID row SEMICOL
    (25) statement -> . ID matrix SEMICOL
    (26) statement -> . empty
    (27) asignacion -> . ID IS value
    (130) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (131) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (139) while -> . WHILE guarda_num_salto LP expression RP check_bool gotofw LB statement RB fill_gotofw fill_gotow
    (144) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (153) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (154) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (155) escritura_var -> . PRINT LP any_var RP SEMICOL
    (160) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (161) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (104) func_call -> . ID LP RP SEMICOL
    (105) func_call -> . VAR tipo ID IS ID LP RP SEMICOL
    (106) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (107) func_call -> . VAR tipo ID IS ID LP func_era func_call_param RP SEMICOL
    (129) empty -> .
    (115) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (122) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 163
    IF              shift and go to state 165
    VAR             shift and go to state 166
    WHILE           shift and go to state 169
    FOR             shift and go to state 170
    PRINT           shift and go to state 171
    READ            shift and go to state 172
    RB              reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]
  ! IF              [ reduce using rule 129 (empty -> .) ]
  ! VAR             [ reduce using rule 129 (empty -> .) ]
  ! WHILE           [ reduce using rule 129 (empty -> .) ]
  ! FOR             [ reduce using rule 129 (empty -> .) ]
  ! PRINT           [ reduce using rule 129 (empty -> .) ]
  ! READ            [ reduce using rule 129 (empty -> .) ]

    statement                      shift and go to state 173
    asignacion                     shift and go to state 154
    if                             shift and go to state 155
    vars                           shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    escritura                      shift and go to state 159
    escritura_var                  shift and go to state 160
    lectura                        shift and go to state 161
    func_call                      shift and go to state 162
    empty                          shift and go to state 164
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168

state 135

    (116) var_rowG -> VAR tipo ID row IS LP lista2 . RP SEMICOL

    RP              shift and go to state 174


state 136

    (119) lista2 -> elem_lista . COMMA lista2
    (120) lista2 -> elem_lista . COMMA elem_lista

    COMMA           shift and go to state 175


state 137

    (117) elem_lista -> value .

    COMMA           reduce using rule 117 (elem_lista -> value .)
    RP              reduce using rule 117 (elem_lista -> value .)


state 138

    (118) elem_lista -> empty .

    COMMA           reduce using rule 118 (elem_lista -> empty .)
    RP              reduce using rule 118 (elem_lista -> empty .)


state 139

    (79) value -> COMILLA ID COMILLA .

    SEMICOL         reduce using rule 79 (value -> COMILLA ID COMILLA .)
    COMMA           reduce using rule 79 (value -> COMILLA ID COMILLA .)
    RP              reduce using rule 79 (value -> COMILLA ID COMILLA .)


state 140

    (80) value -> COMILLAS ID COMILLAS .

    SEMICOL         reduce using rule 80 (value -> COMILLAS ID COMILLAS .)
    COMMA           reduce using rule 80 (value -> COMILLAS ID COMILLAS .)
    RP              reduce using rule 80 (value -> COMILLAS ID COMILLAS .)


state 141

    (123) var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .

    VAR             reduce using rule 123 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    FUNC            reduce using rule 123 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    VOID            reduce using rule 123 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    INT             reduce using rule 123 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    FLOAT           reduce using rule 123 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    CHAR            reduce using rule 123 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    $end            reduce using rule 123 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    RB              reduce using rule 123 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)


state 142

    (124) matrix2 -> LP lista2 . RP COMMA matrix2
    (125) matrix2 -> LP lista2 . RP COMMA LP lista2 RP

    RP              shift and go to state 176


state 143

    (62) vars2G -> vars2_1G ID IS value SEMICOL .

    VAR             reduce using rule 62 (vars2G -> vars2_1G ID IS value SEMICOL .)
    FUNC            reduce using rule 62 (vars2G -> vars2_1G ID IS value SEMICOL .)
    VOID            reduce using rule 62 (vars2G -> vars2_1G ID IS value SEMICOL .)
    INT             reduce using rule 62 (vars2G -> vars2_1G ID IS value SEMICOL .)
    FLOAT           reduce using rule 62 (vars2G -> vars2_1G ID IS value SEMICOL .)
    CHAR            reduce using rule 62 (vars2G -> vars2_1G ID IS value SEMICOL .)
    $end            reduce using rule 62 (vars2G -> vars2_1G ID IS value SEMICOL .)
    RB              reduce using rule 62 (vars2G -> vars2_1G ID IS value SEMICOL .)


state 144

    (63) vars2_1G -> vars2_1G ID IS value COMMA .

    ID              reduce using rule 63 (vars2_1G -> vars2_1G ID IS value COMMA .)


state 145

    (85) funcion -> tipo ID add_fun LP RP verificar2 LB . var_func statement add_func_dir2 func_return RB end_func
    (92) var_func -> . vars
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (115) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (122) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (129) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
    VAR             shift and go to state 179
    ID              reduce using rule 129 (empty -> .)
    IF              reduce using rule 129 (empty -> .)
    WHILE           reduce using rule 129 (empty -> .)
    FOR             reduce using rule 129 (empty -> .)
    PRINT           reduce using rule 129 (empty -> .)
    READ            reduce using rule 129 (empty -> .)
    RETURN          reduce using rule 129 (empty -> .)

  ! VAR             [ reduce using rule 129 (empty -> .) ]

    var_func                       shift and go to state 177
    vars                           shift and go to state 178
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168
    empty                          shift and go to state 180

state 146

    (86) funcion -> tipo ID add_fun LP param RP verificar . LB var_func statement add_func_dir func_return_param RB end_func

    LB              shift and go to state 181


state 147

    (94) param -> param COMMA tipo . ID

    ID              shift and go to state 182


state 148

    (100) declarar_param -> tipo COMMA declarar_param .

    RP              reduce using rule 100 (declarar_param -> tipo COMMA declarar_param .)


state 149

    (98) declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .

    VAR             reduce using rule 98 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    FUNC            reduce using rule 98 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    VOID            reduce using rule 98 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    INT             reduce using rule 98 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    FLOAT           reduce using rule 98 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    CHAR            reduce using rule 98 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    $end            reduce using rule 98 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    RB              reduce using rule 98 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)


state 150

    (99) declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .

    VAR             reduce using rule 99 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    FUNC            reduce using rule 99 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    VOID            reduce using rule 99 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    INT             reduce using rule 99 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    FLOAT           reduce using rule 99 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    CHAR            reduce using rule 99 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    $end            reduce using rule 99 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    RB              reduce using rule 99 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)


state 151

    (83) funcion -> VOID ID add_fun LP param RP verificar . LB var_func statement RB end_func

    LB              shift and go to state 183


state 152

    (84) funcion -> VOID ID add_fun LP RP verificar2 LB . var_func statement RB end_func
    (92) var_func -> . vars
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (115) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (122) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (129) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
    VAR             shift and go to state 179
    ID              reduce using rule 129 (empty -> .)
    IF              reduce using rule 129 (empty -> .)
    WHILE           reduce using rule 129 (empty -> .)
    FOR             reduce using rule 129 (empty -> .)
    PRINT           reduce using rule 129 (empty -> .)
    READ            reduce using rule 129 (empty -> .)
    RB              reduce using rule 129 (empty -> .)

  ! VAR             [ reduce using rule 129 (empty -> .) ]

    var_func                       shift and go to state 184
    vars                           shift and go to state 178
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168
    empty                          shift and go to state 180

state 153

    (11) main -> tipo MAIN quad_main2 LP RP LB statement . add_func_main func_return_main RB
    (91) add_func_main -> .

    RETURN          reduce using rule 91 (add_func_main -> .)

    add_func_main                  shift and go to state 185

state 154

    (15) statement -> asignacion . SEMICOL statement

    SEMICOL         shift and go to state 186


state 155

    (16) statement -> if . statement
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . while statement
    (19) statement -> . for statement
    (20) statement -> . escritura statement
    (21) statement -> . escritura_var statement
    (22) statement -> . lectura statement
    (23) statement -> . func_call statement
    (24) statement -> . ID row SEMICOL
    (25) statement -> . ID matrix SEMICOL
    (26) statement -> . empty
    (27) asignacion -> . ID IS value
    (130) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (131) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (139) while -> . WHILE guarda_num_salto LP expression RP check_bool gotofw LB statement RB fill_gotofw fill_gotow
    (144) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (153) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (154) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (155) escritura_var -> . PRINT LP any_var RP SEMICOL
    (160) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (161) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (104) func_call -> . ID LP RP SEMICOL
    (105) func_call -> . VAR tipo ID IS ID LP RP SEMICOL
    (106) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (107) func_call -> . VAR tipo ID IS ID LP func_era func_call_param RP SEMICOL
    (129) empty -> .
    (115) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (122) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 163
    IF              shift and go to state 165
    VAR             shift and go to state 166
    WHILE           shift and go to state 169
    FOR             shift and go to state 170
    PRINT           shift and go to state 171
    READ            shift and go to state 172
    RETURN          reduce using rule 129 (empty -> .)
    RB              reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]
  ! IF              [ reduce using rule 129 (empty -> .) ]
  ! VAR             [ reduce using rule 129 (empty -> .) ]
  ! WHILE           [ reduce using rule 129 (empty -> .) ]
  ! FOR             [ reduce using rule 129 (empty -> .) ]
  ! PRINT           [ reduce using rule 129 (empty -> .) ]
  ! READ            [ reduce using rule 129 (empty -> .) ]

    if                             shift and go to state 155
    statement                      shift and go to state 187
    asignacion                     shift and go to state 154
    vars                           shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    escritura                      shift and go to state 159
    escritura_var                  shift and go to state 160
    lectura                        shift and go to state 161
    func_call                      shift and go to state 162
    empty                          shift and go to state 164
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168

state 156

    (17) statement -> vars . statement
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . while statement
    (19) statement -> . for statement
    (20) statement -> . escritura statement
    (21) statement -> . escritura_var statement
    (22) statement -> . lectura statement
    (23) statement -> . func_call statement
    (24) statement -> . ID row SEMICOL
    (25) statement -> . ID matrix SEMICOL
    (26) statement -> . empty
    (27) asignacion -> . ID IS value
    (130) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (131) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (139) while -> . WHILE guarda_num_salto LP expression RP check_bool gotofw LB statement RB fill_gotofw fill_gotow
    (144) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (153) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (154) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (155) escritura_var -> . PRINT LP any_var RP SEMICOL
    (160) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (161) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (104) func_call -> . ID LP RP SEMICOL
    (105) func_call -> . VAR tipo ID IS ID LP RP SEMICOL
    (106) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (107) func_call -> . VAR tipo ID IS ID LP func_era func_call_param RP SEMICOL
    (129) empty -> .
    (115) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (122) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 163
    IF              shift and go to state 165
    VAR             shift and go to state 166
    WHILE           shift and go to state 169
    FOR             shift and go to state 170
    PRINT           shift and go to state 171
    READ            shift and go to state 172
    RETURN          reduce using rule 129 (empty -> .)
    RB              reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]
  ! IF              [ reduce using rule 129 (empty -> .) ]
  ! VAR             [ reduce using rule 129 (empty -> .) ]
  ! WHILE           [ reduce using rule 129 (empty -> .) ]
  ! FOR             [ reduce using rule 129 (empty -> .) ]
  ! PRINT           [ reduce using rule 129 (empty -> .) ]
  ! READ            [ reduce using rule 129 (empty -> .) ]

    vars                           shift and go to state 156
    statement                      shift and go to state 188
    asignacion                     shift and go to state 154
    if                             shift and go to state 155
    while                          shift and go to state 157
    for                            shift and go to state 158
    escritura                      shift and go to state 159
    escritura_var                  shift and go to state 160
    lectura                        shift and go to state 161
    func_call                      shift and go to state 162
    empty                          shift and go to state 164
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168

state 157

    (18) statement -> while . statement
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . while statement
    (19) statement -> . for statement
    (20) statement -> . escritura statement
    (21) statement -> . escritura_var statement
    (22) statement -> . lectura statement
    (23) statement -> . func_call statement
    (24) statement -> . ID row SEMICOL
    (25) statement -> . ID matrix SEMICOL
    (26) statement -> . empty
    (27) asignacion -> . ID IS value
    (130) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (131) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (139) while -> . WHILE guarda_num_salto LP expression RP check_bool gotofw LB statement RB fill_gotofw fill_gotow
    (144) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (153) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (154) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (155) escritura_var -> . PRINT LP any_var RP SEMICOL
    (160) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (161) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (104) func_call -> . ID LP RP SEMICOL
    (105) func_call -> . VAR tipo ID IS ID LP RP SEMICOL
    (106) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (107) func_call -> . VAR tipo ID IS ID LP func_era func_call_param RP SEMICOL
    (129) empty -> .
    (115) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (122) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 163
    IF              shift and go to state 165
    VAR             shift and go to state 166
    WHILE           shift and go to state 169
    FOR             shift and go to state 170
    PRINT           shift and go to state 171
    READ            shift and go to state 172
    RETURN          reduce using rule 129 (empty -> .)
    RB              reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]
  ! IF              [ reduce using rule 129 (empty -> .) ]
  ! VAR             [ reduce using rule 129 (empty -> .) ]
  ! WHILE           [ reduce using rule 129 (empty -> .) ]
  ! FOR             [ reduce using rule 129 (empty -> .) ]
  ! PRINT           [ reduce using rule 129 (empty -> .) ]
  ! READ            [ reduce using rule 129 (empty -> .) ]

    while                          shift and go to state 157
    statement                      shift and go to state 189
    asignacion                     shift and go to state 154
    if                             shift and go to state 155
    vars                           shift and go to state 156
    for                            shift and go to state 158
    escritura                      shift and go to state 159
    escritura_var                  shift and go to state 160
    lectura                        shift and go to state 161
    func_call                      shift and go to state 162
    empty                          shift and go to state 164
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168

state 158

    (19) statement -> for . statement
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . while statement
    (19) statement -> . for statement
    (20) statement -> . escritura statement
    (21) statement -> . escritura_var statement
    (22) statement -> . lectura statement
    (23) statement -> . func_call statement
    (24) statement -> . ID row SEMICOL
    (25) statement -> . ID matrix SEMICOL
    (26) statement -> . empty
    (27) asignacion -> . ID IS value
    (130) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (131) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (139) while -> . WHILE guarda_num_salto LP expression RP check_bool gotofw LB statement RB fill_gotofw fill_gotow
    (144) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (153) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (154) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (155) escritura_var -> . PRINT LP any_var RP SEMICOL
    (160) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (161) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (104) func_call -> . ID LP RP SEMICOL
    (105) func_call -> . VAR tipo ID IS ID LP RP SEMICOL
    (106) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (107) func_call -> . VAR tipo ID IS ID LP func_era func_call_param RP SEMICOL
    (129) empty -> .
    (115) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (122) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 163
    IF              shift and go to state 165
    VAR             shift and go to state 166
    WHILE           shift and go to state 169
    FOR             shift and go to state 170
    PRINT           shift and go to state 171
    READ            shift and go to state 172
    RETURN          reduce using rule 129 (empty -> .)
    RB              reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]
  ! IF              [ reduce using rule 129 (empty -> .) ]
  ! VAR             [ reduce using rule 129 (empty -> .) ]
  ! WHILE           [ reduce using rule 129 (empty -> .) ]
  ! FOR             [ reduce using rule 129 (empty -> .) ]
  ! PRINT           [ reduce using rule 129 (empty -> .) ]
  ! READ            [ reduce using rule 129 (empty -> .) ]

    for                            shift and go to state 158
    statement                      shift and go to state 190
    asignacion                     shift and go to state 154
    if                             shift and go to state 155
    vars                           shift and go to state 156
    while                          shift and go to state 157
    escritura                      shift and go to state 159
    escritura_var                  shift and go to state 160
    lectura                        shift and go to state 161
    func_call                      shift and go to state 162
    empty                          shift and go to state 164
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168

state 159

    (20) statement -> escritura . statement
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . while statement
    (19) statement -> . for statement
    (20) statement -> . escritura statement
    (21) statement -> . escritura_var statement
    (22) statement -> . lectura statement
    (23) statement -> . func_call statement
    (24) statement -> . ID row SEMICOL
    (25) statement -> . ID matrix SEMICOL
    (26) statement -> . empty
    (27) asignacion -> . ID IS value
    (130) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (131) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (139) while -> . WHILE guarda_num_salto LP expression RP check_bool gotofw LB statement RB fill_gotofw fill_gotow
    (144) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (153) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (154) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (155) escritura_var -> . PRINT LP any_var RP SEMICOL
    (160) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (161) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (104) func_call -> . ID LP RP SEMICOL
    (105) func_call -> . VAR tipo ID IS ID LP RP SEMICOL
    (106) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (107) func_call -> . VAR tipo ID IS ID LP func_era func_call_param RP SEMICOL
    (129) empty -> .
    (115) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (122) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 163
    IF              shift and go to state 165
    VAR             shift and go to state 166
    WHILE           shift and go to state 169
    FOR             shift and go to state 170
    PRINT           shift and go to state 171
    READ            shift and go to state 172
    RETURN          reduce using rule 129 (empty -> .)
    RB              reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]
  ! IF              [ reduce using rule 129 (empty -> .) ]
  ! VAR             [ reduce using rule 129 (empty -> .) ]
  ! WHILE           [ reduce using rule 129 (empty -> .) ]
  ! FOR             [ reduce using rule 129 (empty -> .) ]
  ! PRINT           [ reduce using rule 129 (empty -> .) ]
  ! READ            [ reduce using rule 129 (empty -> .) ]

    escritura                      shift and go to state 159
    statement                      shift and go to state 191
    asignacion                     shift and go to state 154
    if                             shift and go to state 155
    vars                           shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    escritura_var                  shift and go to state 160
    lectura                        shift and go to state 161
    func_call                      shift and go to state 162
    empty                          shift and go to state 164
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168

state 160

    (21) statement -> escritura_var . statement
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . while statement
    (19) statement -> . for statement
    (20) statement -> . escritura statement
    (21) statement -> . escritura_var statement
    (22) statement -> . lectura statement
    (23) statement -> . func_call statement
    (24) statement -> . ID row SEMICOL
    (25) statement -> . ID matrix SEMICOL
    (26) statement -> . empty
    (27) asignacion -> . ID IS value
    (130) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (131) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (139) while -> . WHILE guarda_num_salto LP expression RP check_bool gotofw LB statement RB fill_gotofw fill_gotow
    (144) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (153) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (154) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (155) escritura_var -> . PRINT LP any_var RP SEMICOL
    (160) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (161) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (104) func_call -> . ID LP RP SEMICOL
    (105) func_call -> . VAR tipo ID IS ID LP RP SEMICOL
    (106) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (107) func_call -> . VAR tipo ID IS ID LP func_era func_call_param RP SEMICOL
    (129) empty -> .
    (115) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (122) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 163
    IF              shift and go to state 165
    VAR             shift and go to state 166
    WHILE           shift and go to state 169
    FOR             shift and go to state 170
    PRINT           shift and go to state 171
    READ            shift and go to state 172
    RETURN          reduce using rule 129 (empty -> .)
    RB              reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]
  ! IF              [ reduce using rule 129 (empty -> .) ]
  ! VAR             [ reduce using rule 129 (empty -> .) ]
  ! WHILE           [ reduce using rule 129 (empty -> .) ]
  ! FOR             [ reduce using rule 129 (empty -> .) ]
  ! PRINT           [ reduce using rule 129 (empty -> .) ]
  ! READ            [ reduce using rule 129 (empty -> .) ]

    escritura_var                  shift and go to state 160
    statement                      shift and go to state 192
    asignacion                     shift and go to state 154
    if                             shift and go to state 155
    vars                           shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    escritura                      shift and go to state 159
    lectura                        shift and go to state 161
    func_call                      shift and go to state 162
    empty                          shift and go to state 164
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168

state 161

    (22) statement -> lectura . statement
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . while statement
    (19) statement -> . for statement
    (20) statement -> . escritura statement
    (21) statement -> . escritura_var statement
    (22) statement -> . lectura statement
    (23) statement -> . func_call statement
    (24) statement -> . ID row SEMICOL
    (25) statement -> . ID matrix SEMICOL
    (26) statement -> . empty
    (27) asignacion -> . ID IS value
    (130) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (131) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (139) while -> . WHILE guarda_num_salto LP expression RP check_bool gotofw LB statement RB fill_gotofw fill_gotow
    (144) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (153) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (154) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (155) escritura_var -> . PRINT LP any_var RP SEMICOL
    (160) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (161) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (104) func_call -> . ID LP RP SEMICOL
    (105) func_call -> . VAR tipo ID IS ID LP RP SEMICOL
    (106) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (107) func_call -> . VAR tipo ID IS ID LP func_era func_call_param RP SEMICOL
    (129) empty -> .
    (115) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (122) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 163
    IF              shift and go to state 165
    VAR             shift and go to state 166
    WHILE           shift and go to state 169
    FOR             shift and go to state 170
    PRINT           shift and go to state 171
    READ            shift and go to state 172
    RETURN          reduce using rule 129 (empty -> .)
    RB              reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]
  ! IF              [ reduce using rule 129 (empty -> .) ]
  ! VAR             [ reduce using rule 129 (empty -> .) ]
  ! WHILE           [ reduce using rule 129 (empty -> .) ]
  ! FOR             [ reduce using rule 129 (empty -> .) ]
  ! PRINT           [ reduce using rule 129 (empty -> .) ]
  ! READ            [ reduce using rule 129 (empty -> .) ]

    lectura                        shift and go to state 161
    statement                      shift and go to state 193
    asignacion                     shift and go to state 154
    if                             shift and go to state 155
    vars                           shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    escritura                      shift and go to state 159
    escritura_var                  shift and go to state 160
    func_call                      shift and go to state 162
    empty                          shift and go to state 164
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168

state 162

    (23) statement -> func_call . statement
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . while statement
    (19) statement -> . for statement
    (20) statement -> . escritura statement
    (21) statement -> . escritura_var statement
    (22) statement -> . lectura statement
    (23) statement -> . func_call statement
    (24) statement -> . ID row SEMICOL
    (25) statement -> . ID matrix SEMICOL
    (26) statement -> . empty
    (27) asignacion -> . ID IS value
    (130) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (131) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (139) while -> . WHILE guarda_num_salto LP expression RP check_bool gotofw LB statement RB fill_gotofw fill_gotow
    (144) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (153) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (154) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (155) escritura_var -> . PRINT LP any_var RP SEMICOL
    (160) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (161) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (104) func_call -> . ID LP RP SEMICOL
    (105) func_call -> . VAR tipo ID IS ID LP RP SEMICOL
    (106) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (107) func_call -> . VAR tipo ID IS ID LP func_era func_call_param RP SEMICOL
    (129) empty -> .
    (115) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (122) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 163
    IF              shift and go to state 165
    VAR             shift and go to state 166
    WHILE           shift and go to state 169
    FOR             shift and go to state 170
    PRINT           shift and go to state 171
    READ            shift and go to state 172
    RETURN          reduce using rule 129 (empty -> .)
    RB              reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]
  ! IF              [ reduce using rule 129 (empty -> .) ]
  ! VAR             [ reduce using rule 129 (empty -> .) ]
  ! WHILE           [ reduce using rule 129 (empty -> .) ]
  ! FOR             [ reduce using rule 129 (empty -> .) ]
  ! PRINT           [ reduce using rule 129 (empty -> .) ]
  ! READ            [ reduce using rule 129 (empty -> .) ]

    func_call                      shift and go to state 162
    statement                      shift and go to state 194
    asignacion                     shift and go to state 154
    if                             shift and go to state 155
    vars                           shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    escritura                      shift and go to state 159
    escritura_var                  shift and go to state 160
    lectura                        shift and go to state 161
    empty                          shift and go to state 164
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168

state 163

    (24) statement -> ID . row SEMICOL
    (25) statement -> ID . matrix SEMICOL
    (27) asignacion -> ID . IS value
    (104) func_call -> ID . LP RP SEMICOL
    (106) func_call -> ID . LP func_era func_call_param RP SEMICOL
    (121) row -> . LC CTE_I RC
    (128) matrix -> . row row

    IS              shift and go to state 197
    LP              shift and go to state 198
    LC              shift and go to state 71

    row                            shift and go to state 195
    matrix                         shift and go to state 196

state 164

    (26) statement -> empty .
    (38) vars -> empty .

  ! reduce/reduce conflict for RETURN resolved using rule 26 (statement -> empty .)
  ! reduce/reduce conflict for RB resolved using rule 26 (statement -> empty .)
    RETURN          reduce using rule 26 (statement -> empty .)
    RB              reduce using rule 26 (statement -> empty .)
    ID              reduce using rule 38 (vars -> empty .)
    IF              reduce using rule 38 (vars -> empty .)
    VAR             reduce using rule 38 (vars -> empty .)
    WHILE           reduce using rule 38 (vars -> empty .)
    FOR             reduce using rule 38 (vars -> empty .)
    PRINT           reduce using rule 38 (vars -> empty .)
    READ            reduce using rule 38 (vars -> empty .)

  ! RETURN          [ reduce using rule 38 (vars -> empty .) ]
  ! RB              [ reduce using rule 38 (vars -> empty .) ]


state 165

    (130) if -> IF . LP expression RP check_bool gotof LB statement RB fill_if
    (131) if -> IF . LP expression RP check_bool gotof LB statement RB goto fill_gotof else

    LP              shift and go to state 199


state 166

    (28) vars -> VAR . tipo vars1
    (29) vars -> VAR . tipo vars2
    (30) vars -> VAR . tipo vars3
    (31) vars -> VAR . tipo oper_aritmetica
    (32) vars -> VAR . tipo ID row SEMICOL
    (33) vars -> VAR . tipo ID matrix SEMICOL
    (105) func_call -> VAR . tipo ID IS ID LP RP SEMICOL
    (107) func_call -> VAR . tipo ID IS ID LP func_era func_call_param RP SEMICOL
    (115) var_row -> VAR . tipo ID row IS LP lista2 RP SEMICOL
    (122) var_matrix -> VAR . tipo ID matrix IS matrix2 SEMICOL
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    tipo                           shift and go to state 200

state 167

    (34) vars -> var_row .
    (35) vars -> var_row . vars
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (115) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (122) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (129) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for ID resolved using rule 34 (vars -> var_row .)
  ! reduce/reduce conflict for IF resolved using rule 34 (vars -> var_row .)
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for WHILE resolved using rule 34 (vars -> var_row .)
  ! reduce/reduce conflict for FOR resolved using rule 34 (vars -> var_row .)
  ! reduce/reduce conflict for PRINT resolved using rule 34 (vars -> var_row .)
  ! reduce/reduce conflict for READ resolved using rule 34 (vars -> var_row .)
  ! reduce/reduce conflict for RETURN resolved using rule 34 (vars -> var_row .)
  ! reduce/reduce conflict for RB resolved using rule 34 (vars -> var_row .)
    ID              reduce using rule 34 (vars -> var_row .)
    IF              reduce using rule 34 (vars -> var_row .)
    WHILE           reduce using rule 34 (vars -> var_row .)
    FOR             reduce using rule 34 (vars -> var_row .)
    PRINT           reduce using rule 34 (vars -> var_row .)
    READ            reduce using rule 34 (vars -> var_row .)
    RETURN          reduce using rule 34 (vars -> var_row .)
    RB              reduce using rule 34 (vars -> var_row .)
    VAR             shift and go to state 179

  ! VAR             [ reduce using rule 34 (vars -> var_row .) ]
  ! ID              [ reduce using rule 129 (empty -> .) ]
  ! IF              [ reduce using rule 129 (empty -> .) ]
  ! VAR             [ reduce using rule 129 (empty -> .) ]
  ! WHILE           [ reduce using rule 129 (empty -> .) ]
  ! FOR             [ reduce using rule 129 (empty -> .) ]
  ! PRINT           [ reduce using rule 129 (empty -> .) ]
  ! READ            [ reduce using rule 129 (empty -> .) ]
  ! RETURN          [ reduce using rule 129 (empty -> .) ]
  ! RB              [ reduce using rule 129 (empty -> .) ]

    var_row                        shift and go to state 167
    vars                           shift and go to state 201
    var_matrix                     shift and go to state 168
    empty                          shift and go to state 180

state 168

    (36) vars -> var_matrix .
    (37) vars -> var_matrix . vars
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (115) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (122) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (129) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for ID resolved using rule 36 (vars -> var_matrix .)
  ! reduce/reduce conflict for IF resolved using rule 36 (vars -> var_matrix .)
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for WHILE resolved using rule 36 (vars -> var_matrix .)
  ! reduce/reduce conflict for FOR resolved using rule 36 (vars -> var_matrix .)
  ! reduce/reduce conflict for PRINT resolved using rule 36 (vars -> var_matrix .)
  ! reduce/reduce conflict for READ resolved using rule 36 (vars -> var_matrix .)
  ! reduce/reduce conflict for RETURN resolved using rule 36 (vars -> var_matrix .)
  ! reduce/reduce conflict for RB resolved using rule 36 (vars -> var_matrix .)
    ID              reduce using rule 36 (vars -> var_matrix .)
    IF              reduce using rule 36 (vars -> var_matrix .)
    WHILE           reduce using rule 36 (vars -> var_matrix .)
    FOR             reduce using rule 36 (vars -> var_matrix .)
    PRINT           reduce using rule 36 (vars -> var_matrix .)
    READ            reduce using rule 36 (vars -> var_matrix .)
    RETURN          reduce using rule 36 (vars -> var_matrix .)
    RB              reduce using rule 36 (vars -> var_matrix .)
    VAR             shift and go to state 179

  ! VAR             [ reduce using rule 36 (vars -> var_matrix .) ]
  ! ID              [ reduce using rule 129 (empty -> .) ]
  ! IF              [ reduce using rule 129 (empty -> .) ]
  ! VAR             [ reduce using rule 129 (empty -> .) ]
  ! WHILE           [ reduce using rule 129 (empty -> .) ]
  ! FOR             [ reduce using rule 129 (empty -> .) ]
  ! PRINT           [ reduce using rule 129 (empty -> .) ]
  ! READ            [ reduce using rule 129 (empty -> .) ]
  ! RETURN          [ reduce using rule 129 (empty -> .) ]
  ! RB              [ reduce using rule 129 (empty -> .) ]

    var_matrix                     shift and go to state 168
    vars                           shift and go to state 202
    var_row                        shift and go to state 167
    empty                          shift and go to state 180

state 169

    (139) while -> WHILE . guarda_num_salto LP expression RP check_bool gotofw LB statement RB fill_gotofw fill_gotow
    (140) guarda_num_salto -> .

    LP              reduce using rule 140 (guarda_num_salto -> .)

    guarda_num_salto               shift and go to state 203

state 170

    (144) for -> FOR . LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto

    LP              shift and go to state 204


state 171

    (153) escritura -> PRINT . LP COMILLA any COMILLA RP SEMICOL
    (154) escritura -> PRINT . LP COMILLAS any COMILLAS RP SEMICOL
    (155) escritura_var -> PRINT . LP any_var RP SEMICOL

    LP              shift and go to state 205


state 172

    (160) lectura -> READ . LP COMILLA any_lectura COMILLA RP SEMICOL
    (161) lectura -> READ . LP COMILLAS any_lectura COMILLAS RP SEMICOL

    LP              shift and go to state 206


state 173

    (12) main -> VOID MAIN quad_main2 LP RP LB statement . add_func_main RB
    (91) add_func_main -> .

    RB              reduce using rule 91 (add_func_main -> .)

    add_func_main                  shift and go to state 207

state 174

    (116) var_rowG -> VAR tipo ID row IS LP lista2 RP . SEMICOL

    SEMICOL         shift and go to state 208


state 175

    (119) lista2 -> elem_lista COMMA . lista2
    (120) lista2 -> elem_lista COMMA . elem_lista
    (119) lista2 -> . elem_lista COMMA lista2
    (120) lista2 -> . elem_lista COMMA elem_lista
    (117) elem_lista -> . value
    (118) elem_lista -> . empty
    (75) value -> . CTE_F
    (76) value -> . CTE_I
    (77) value -> . ID
    (78) value -> . CTE_C
    (79) value -> . COMILLA ID COMILLA
    (80) value -> . COMILLAS ID COMILLAS
    (129) empty -> .

    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88
    ID              shift and go to state 85
    CTE_C           shift and go to state 89
    COMILLA         shift and go to state 90
    COMILLAS        shift and go to state 91
    COMMA           reduce using rule 129 (empty -> .)
    RP              reduce using rule 129 (empty -> .)

    elem_lista                     shift and go to state 209
    lista2                         shift and go to state 210
    value                          shift and go to state 137
    empty                          shift and go to state 138

state 176

    (124) matrix2 -> LP lista2 RP . COMMA matrix2
    (125) matrix2 -> LP lista2 RP . COMMA LP lista2 RP

    COMMA           shift and go to state 211


state 177

    (85) funcion -> tipo ID add_fun LP RP verificar2 LB var_func . statement add_func_dir2 func_return RB end_func
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . while statement
    (19) statement -> . for statement
    (20) statement -> . escritura statement
    (21) statement -> . escritura_var statement
    (22) statement -> . lectura statement
    (23) statement -> . func_call statement
    (24) statement -> . ID row SEMICOL
    (25) statement -> . ID matrix SEMICOL
    (26) statement -> . empty
    (27) asignacion -> . ID IS value
    (130) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (131) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (139) while -> . WHILE guarda_num_salto LP expression RP check_bool gotofw LB statement RB fill_gotofw fill_gotow
    (144) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (153) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (154) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (155) escritura_var -> . PRINT LP any_var RP SEMICOL
    (160) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (161) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (104) func_call -> . ID LP RP SEMICOL
    (105) func_call -> . VAR tipo ID IS ID LP RP SEMICOL
    (106) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (107) func_call -> . VAR tipo ID IS ID LP func_era func_call_param RP SEMICOL
    (129) empty -> .
    (115) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (122) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 163
    IF              shift and go to state 165
    VAR             shift and go to state 166
    WHILE           shift and go to state 169
    FOR             shift and go to state 170
    PRINT           shift and go to state 171
    READ            shift and go to state 172
    RETURN          reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]
  ! IF              [ reduce using rule 129 (empty -> .) ]
  ! VAR             [ reduce using rule 129 (empty -> .) ]
  ! WHILE           [ reduce using rule 129 (empty -> .) ]
  ! FOR             [ reduce using rule 129 (empty -> .) ]
  ! PRINT           [ reduce using rule 129 (empty -> .) ]
  ! READ            [ reduce using rule 129 (empty -> .) ]

    statement                      shift and go to state 212
    asignacion                     shift and go to state 154
    if                             shift and go to state 155
    vars                           shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    escritura                      shift and go to state 159
    escritura_var                  shift and go to state 160
    lectura                        shift and go to state 161
    func_call                      shift and go to state 162
    empty                          shift and go to state 164
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168

state 178

    (92) var_func -> vars .

    ID              reduce using rule 92 (var_func -> vars .)
    IF              reduce using rule 92 (var_func -> vars .)
    VAR             reduce using rule 92 (var_func -> vars .)
    WHILE           reduce using rule 92 (var_func -> vars .)
    FOR             reduce using rule 92 (var_func -> vars .)
    PRINT           reduce using rule 92 (var_func -> vars .)
    READ            reduce using rule 92 (var_func -> vars .)
    RETURN          reduce using rule 92 (var_func -> vars .)
    RB              reduce using rule 92 (var_func -> vars .)


state 179

    (28) vars -> VAR . tipo vars1
    (29) vars -> VAR . tipo vars2
    (30) vars -> VAR . tipo vars3
    (31) vars -> VAR . tipo oper_aritmetica
    (32) vars -> VAR . tipo ID row SEMICOL
    (33) vars -> VAR . tipo ID matrix SEMICOL
    (115) var_row -> VAR . tipo ID row IS LP lista2 RP SEMICOL
    (122) var_matrix -> VAR . tipo ID matrix IS matrix2 SEMICOL
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    tipo                           shift and go to state 213

state 180

    (38) vars -> empty .

    ID              reduce using rule 38 (vars -> empty .)
    IF              reduce using rule 38 (vars -> empty .)
    VAR             reduce using rule 38 (vars -> empty .)
    WHILE           reduce using rule 38 (vars -> empty .)
    FOR             reduce using rule 38 (vars -> empty .)
    PRINT           reduce using rule 38 (vars -> empty .)
    READ            reduce using rule 38 (vars -> empty .)
    RETURN          reduce using rule 38 (vars -> empty .)
    RB              reduce using rule 38 (vars -> empty .)


state 181

    (86) funcion -> tipo ID add_fun LP param RP verificar LB . var_func statement add_func_dir func_return_param RB end_func
    (92) var_func -> . vars
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (115) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (122) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (129) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
    VAR             shift and go to state 179
    ID              reduce using rule 129 (empty -> .)
    IF              reduce using rule 129 (empty -> .)
    WHILE           reduce using rule 129 (empty -> .)
    FOR             reduce using rule 129 (empty -> .)
    PRINT           reduce using rule 129 (empty -> .)
    READ            reduce using rule 129 (empty -> .)
    RETURN          reduce using rule 129 (empty -> .)

  ! VAR             [ reduce using rule 129 (empty -> .) ]

    var_func                       shift and go to state 214
    vars                           shift and go to state 178
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168
    empty                          shift and go to state 180

state 182

    (94) param -> param COMMA tipo ID .

    RP              reduce using rule 94 (param -> param COMMA tipo ID .)
    COMMA           reduce using rule 94 (param -> param COMMA tipo ID .)


state 183

    (83) funcion -> VOID ID add_fun LP param RP verificar LB . var_func statement RB end_func
    (92) var_func -> . vars
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (115) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (122) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (129) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
    VAR             shift and go to state 179
    ID              reduce using rule 129 (empty -> .)
    IF              reduce using rule 129 (empty -> .)
    WHILE           reduce using rule 129 (empty -> .)
    FOR             reduce using rule 129 (empty -> .)
    PRINT           reduce using rule 129 (empty -> .)
    READ            reduce using rule 129 (empty -> .)
    RB              reduce using rule 129 (empty -> .)

  ! VAR             [ reduce using rule 129 (empty -> .) ]

    var_func                       shift and go to state 215
    vars                           shift and go to state 178
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168
    empty                          shift and go to state 180

state 184

    (84) funcion -> VOID ID add_fun LP RP verificar2 LB var_func . statement RB end_func
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . while statement
    (19) statement -> . for statement
    (20) statement -> . escritura statement
    (21) statement -> . escritura_var statement
    (22) statement -> . lectura statement
    (23) statement -> . func_call statement
    (24) statement -> . ID row SEMICOL
    (25) statement -> . ID matrix SEMICOL
    (26) statement -> . empty
    (27) asignacion -> . ID IS value
    (130) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (131) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (139) while -> . WHILE guarda_num_salto LP expression RP check_bool gotofw LB statement RB fill_gotofw fill_gotow
    (144) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (153) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (154) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (155) escritura_var -> . PRINT LP any_var RP SEMICOL
    (160) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (161) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (104) func_call -> . ID LP RP SEMICOL
    (105) func_call -> . VAR tipo ID IS ID LP RP SEMICOL
    (106) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (107) func_call -> . VAR tipo ID IS ID LP func_era func_call_param RP SEMICOL
    (129) empty -> .
    (115) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (122) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 163
    IF              shift and go to state 165
    VAR             shift and go to state 166
    WHILE           shift and go to state 169
    FOR             shift and go to state 170
    PRINT           shift and go to state 171
    READ            shift and go to state 172
    RB              reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]
  ! IF              [ reduce using rule 129 (empty -> .) ]
  ! VAR             [ reduce using rule 129 (empty -> .) ]
  ! WHILE           [ reduce using rule 129 (empty -> .) ]
  ! FOR             [ reduce using rule 129 (empty -> .) ]
  ! PRINT           [ reduce using rule 129 (empty -> .) ]
  ! READ            [ reduce using rule 129 (empty -> .) ]

    statement                      shift and go to state 216
    asignacion                     shift and go to state 154
    if                             shift and go to state 155
    vars                           shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    escritura                      shift and go to state 159
    escritura_var                  shift and go to state 160
    lectura                        shift and go to state 161
    func_call                      shift and go to state 162
    empty                          shift and go to state 164
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168

state 185

    (11) main -> tipo MAIN quad_main2 LP RP LB statement add_func_main . func_return_main RB
    (113) func_return_main -> . RETURN expr SEMICOL

    RETURN          shift and go to state 218

    func_return_main               shift and go to state 217

state 186

    (15) statement -> asignacion SEMICOL . statement
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . while statement
    (19) statement -> . for statement
    (20) statement -> . escritura statement
    (21) statement -> . escritura_var statement
    (22) statement -> . lectura statement
    (23) statement -> . func_call statement
    (24) statement -> . ID row SEMICOL
    (25) statement -> . ID matrix SEMICOL
    (26) statement -> . empty
    (27) asignacion -> . ID IS value
    (130) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (131) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (139) while -> . WHILE guarda_num_salto LP expression RP check_bool gotofw LB statement RB fill_gotofw fill_gotow
    (144) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (153) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (154) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (155) escritura_var -> . PRINT LP any_var RP SEMICOL
    (160) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (161) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (104) func_call -> . ID LP RP SEMICOL
    (105) func_call -> . VAR tipo ID IS ID LP RP SEMICOL
    (106) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (107) func_call -> . VAR tipo ID IS ID LP func_era func_call_param RP SEMICOL
    (129) empty -> .
    (115) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (122) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 163
    IF              shift and go to state 165
    VAR             shift and go to state 166
    WHILE           shift and go to state 169
    FOR             shift and go to state 170
    PRINT           shift and go to state 171
    READ            shift and go to state 172
    RETURN          reduce using rule 129 (empty -> .)
    RB              reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]
  ! IF              [ reduce using rule 129 (empty -> .) ]
  ! VAR             [ reduce using rule 129 (empty -> .) ]
  ! WHILE           [ reduce using rule 129 (empty -> .) ]
  ! FOR             [ reduce using rule 129 (empty -> .) ]
  ! PRINT           [ reduce using rule 129 (empty -> .) ]
  ! READ            [ reduce using rule 129 (empty -> .) ]

    asignacion                     shift and go to state 154
    statement                      shift and go to state 219
    if                             shift and go to state 155
    vars                           shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    escritura                      shift and go to state 159
    escritura_var                  shift and go to state 160
    lectura                        shift and go to state 161
    func_call                      shift and go to state 162
    empty                          shift and go to state 164
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168

state 187

    (16) statement -> if statement .

    RETURN          reduce using rule 16 (statement -> if statement .)
    RB              reduce using rule 16 (statement -> if statement .)


state 188

    (17) statement -> vars statement .

    RETURN          reduce using rule 17 (statement -> vars statement .)
    RB              reduce using rule 17 (statement -> vars statement .)


state 189

    (18) statement -> while statement .

    RETURN          reduce using rule 18 (statement -> while statement .)
    RB              reduce using rule 18 (statement -> while statement .)


state 190

    (19) statement -> for statement .

    RETURN          reduce using rule 19 (statement -> for statement .)
    RB              reduce using rule 19 (statement -> for statement .)


state 191

    (20) statement -> escritura statement .

    RETURN          reduce using rule 20 (statement -> escritura statement .)
    RB              reduce using rule 20 (statement -> escritura statement .)


state 192

    (21) statement -> escritura_var statement .

    RETURN          reduce using rule 21 (statement -> escritura_var statement .)
    RB              reduce using rule 21 (statement -> escritura_var statement .)


state 193

    (22) statement -> lectura statement .

    RETURN          reduce using rule 22 (statement -> lectura statement .)
    RB              reduce using rule 22 (statement -> lectura statement .)


state 194

    (23) statement -> func_call statement .

    RETURN          reduce using rule 23 (statement -> func_call statement .)
    RB              reduce using rule 23 (statement -> func_call statement .)


state 195

    (24) statement -> ID row . SEMICOL
    (128) matrix -> row . row
    (121) row -> . LC CTE_I RC

    SEMICOL         shift and go to state 220
    LC              shift and go to state 71

    row                            shift and go to state 83

state 196

    (25) statement -> ID matrix . SEMICOL

    SEMICOL         shift and go to state 221


state 197

    (27) asignacion -> ID IS . value
    (75) value -> . CTE_F
    (76) value -> . CTE_I
    (77) value -> . ID
    (78) value -> . CTE_C
    (79) value -> . COMILLA ID COMILLA
    (80) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88
    ID              shift and go to state 85
    CTE_C           shift and go to state 89
    COMILLA         shift and go to state 90
    COMILLAS        shift and go to state 91

    value                          shift and go to state 222

state 198

    (104) func_call -> ID LP . RP SEMICOL
    (106) func_call -> ID LP . func_era func_call_param RP SEMICOL
    (108) func_era -> .

    RP              shift and go to state 223
    CTE_I           reduce using rule 108 (func_era -> .)
    CTE_F           reduce using rule 108 (func_era -> .)
    ID              reduce using rule 108 (func_era -> .)

    func_era                       shift and go to state 224

state 199

    (130) if -> IF LP . expression RP check_bool gotof LB statement RB fill_if
    (131) if -> IF LP . expression RP check_bool gotof LB statement RB goto fill_gotof else
    (163) expression -> . var_gt
    (164) expression -> . var_lt
    (165) expression -> . var_equal
    (166) expression -> . var_neq
    (167) expression -> . var_geq
    (168) expression -> . var_leq
    (169) expression -> . expr
    (170) expression -> . TRUE
    (171) expression -> . FALSE
    (172) expression -> . ID
    (174) var_gt -> . expr GT expr
    (173) var_lt -> . expr LT expr
    (177) var_equal -> . expr EQUAL expr
    (178) var_neq -> . expr NEQ expr
    (176) var_geq -> . expr GEQ expr
    (175) var_leq -> . expr LEQ expr
    (180) expr -> . expr MUL expr
    (181) expr -> . expr DIV expr
    (182) expr -> . expr PLUS expr
    (183) expr -> . expr MINUS expr
    (184) expr -> . CTE_I
    (185) expr -> . CTE_F
    (186) expr -> . ID

    TRUE            shift and go to state 233
    FALSE           shift and go to state 234
    ID              shift and go to state 235
    CTE_I           shift and go to state 236
    CTE_F           shift and go to state 237

    expression                     shift and go to state 225
    var_gt                         shift and go to state 226
    var_lt                         shift and go to state 227
    var_equal                      shift and go to state 228
    var_neq                        shift and go to state 229
    var_geq                        shift and go to state 230
    var_leq                        shift and go to state 231
    expr                           shift and go to state 232

state 200

    (28) vars -> VAR tipo . vars1
    (29) vars -> VAR tipo . vars2
    (30) vars -> VAR tipo . vars3
    (31) vars -> VAR tipo . oper_aritmetica
    (32) vars -> VAR tipo . ID row SEMICOL
    (33) vars -> VAR tipo . ID matrix SEMICOL
    (105) func_call -> VAR tipo . ID IS ID LP RP SEMICOL
    (107) func_call -> VAR tipo . ID IS ID LP func_era func_call_param RP SEMICOL
    (115) var_row -> VAR tipo . ID row IS LP lista2 RP SEMICOL
    (122) var_matrix -> VAR tipo . ID matrix IS matrix2 SEMICOL
    (39) vars1 -> . ID SEMICOL
    (40) vars2 -> . vars2_1 ID IS value SEMICOL
    (44) vars2 -> . ID IS value SEMICOL
    (45) vars3 -> . vars3_1 ID SEMICOL
    (48) vars3 -> . ID SEMICOL
    (179) oper_aritmetica -> . ID IS expr SEMICOL
    (41) vars2_1 -> . vars2_1 ID IS value COMMA
    (42) vars2_1 -> . ID IS value COMMA
    (43) vars2_1 -> . empty
    (46) vars3_1 -> . vars3_1 ID COMMA
    (47) vars3_1 -> . ID COMMA
    (49) vars3_1 -> . empty
    (129) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 242

  ! ID              [ reduce using rule 129 (empty -> .) ]

    vars1                          shift and go to state 238
    vars2                          shift and go to state 239
    vars3                          shift and go to state 240
    oper_aritmetica                shift and go to state 241
    vars2_1                        shift and go to state 243
    vars3_1                        shift and go to state 244
    empty                          shift and go to state 245

state 201

    (35) vars -> var_row vars .

    ID              reduce using rule 35 (vars -> var_row vars .)
    IF              reduce using rule 35 (vars -> var_row vars .)
    VAR             reduce using rule 35 (vars -> var_row vars .)
    WHILE           reduce using rule 35 (vars -> var_row vars .)
    FOR             reduce using rule 35 (vars -> var_row vars .)
    PRINT           reduce using rule 35 (vars -> var_row vars .)
    READ            reduce using rule 35 (vars -> var_row vars .)
    RETURN          reduce using rule 35 (vars -> var_row vars .)
    RB              reduce using rule 35 (vars -> var_row vars .)


state 202

    (37) vars -> var_matrix vars .

    ID              reduce using rule 37 (vars -> var_matrix vars .)
    IF              reduce using rule 37 (vars -> var_matrix vars .)
    VAR             reduce using rule 37 (vars -> var_matrix vars .)
    WHILE           reduce using rule 37 (vars -> var_matrix vars .)
    FOR             reduce using rule 37 (vars -> var_matrix vars .)
    PRINT           reduce using rule 37 (vars -> var_matrix vars .)
    READ            reduce using rule 37 (vars -> var_matrix vars .)
    RETURN          reduce using rule 37 (vars -> var_matrix vars .)
    RB              reduce using rule 37 (vars -> var_matrix vars .)


state 203

    (139) while -> WHILE guarda_num_salto . LP expression RP check_bool gotofw LB statement RB fill_gotofw fill_gotow

    LP              shift and go to state 246


state 204

    (144) for -> FOR LP . VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto

    VAR             shift and go to state 247


state 205

    (153) escritura -> PRINT LP . COMILLA any COMILLA RP SEMICOL
    (154) escritura -> PRINT LP . COMILLAS any COMILLAS RP SEMICOL
    (155) escritura_var -> PRINT LP . any_var RP SEMICOL
    (156) any_var -> . ID

    COMILLA         shift and go to state 248
    COMILLAS        shift and go to state 249
    ID              shift and go to state 251

    any_var                        shift and go to state 250

state 206

    (160) lectura -> READ LP . COMILLA any_lectura COMILLA RP SEMICOL
    (161) lectura -> READ LP . COMILLAS any_lectura COMILLAS RP SEMICOL

    COMILLA         shift and go to state 252
    COMILLAS        shift and go to state 253


state 207

    (12) main -> VOID MAIN quad_main2 LP RP LB statement add_func_main . RB

    RB              shift and go to state 254


state 208

    (116) var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .

    VAR             reduce using rule 116 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    FUNC            reduce using rule 116 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    VOID            reduce using rule 116 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    INT             reduce using rule 116 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    FLOAT           reduce using rule 116 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    CHAR            reduce using rule 116 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    $end            reduce using rule 116 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    RB              reduce using rule 116 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)


state 209

    (120) lista2 -> elem_lista COMMA elem_lista .
    (119) lista2 -> elem_lista . COMMA lista2
    (120) lista2 -> elem_lista . COMMA elem_lista

    RP              reduce using rule 120 (lista2 -> elem_lista COMMA elem_lista .)
    COMMA           shift and go to state 175


state 210

    (119) lista2 -> elem_lista COMMA lista2 .

    RP              reduce using rule 119 (lista2 -> elem_lista COMMA lista2 .)


state 211

    (124) matrix2 -> LP lista2 RP COMMA . matrix2
    (125) matrix2 -> LP lista2 RP COMMA . LP lista2 RP
    (124) matrix2 -> . LP lista2 RP COMMA matrix2
    (125) matrix2 -> . LP lista2 RP COMMA LP lista2 RP

    LP              shift and go to state 255

    matrix2                        shift and go to state 256

state 212

    (85) funcion -> tipo ID add_fun LP RP verificar2 LB var_func statement . add_func_dir2 func_return RB end_func
    (90) add_func_dir2 -> .

    RETURN          reduce using rule 90 (add_func_dir2 -> .)

    add_func_dir2                  shift and go to state 257

state 213

    (28) vars -> VAR tipo . vars1
    (29) vars -> VAR tipo . vars2
    (30) vars -> VAR tipo . vars3
    (31) vars -> VAR tipo . oper_aritmetica
    (32) vars -> VAR tipo . ID row SEMICOL
    (33) vars -> VAR tipo . ID matrix SEMICOL
    (115) var_row -> VAR tipo . ID row IS LP lista2 RP SEMICOL
    (122) var_matrix -> VAR tipo . ID matrix IS matrix2 SEMICOL
    (39) vars1 -> . ID SEMICOL
    (40) vars2 -> . vars2_1 ID IS value SEMICOL
    (44) vars2 -> . ID IS value SEMICOL
    (45) vars3 -> . vars3_1 ID SEMICOL
    (48) vars3 -> . ID SEMICOL
    (179) oper_aritmetica -> . ID IS expr SEMICOL
    (41) vars2_1 -> . vars2_1 ID IS value COMMA
    (42) vars2_1 -> . ID IS value COMMA
    (43) vars2_1 -> . empty
    (46) vars3_1 -> . vars3_1 ID COMMA
    (47) vars3_1 -> . ID COMMA
    (49) vars3_1 -> . empty
    (129) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 258

  ! ID              [ reduce using rule 129 (empty -> .) ]

    vars1                          shift and go to state 238
    vars2                          shift and go to state 239
    vars3                          shift and go to state 240
    oper_aritmetica                shift and go to state 241
    vars2_1                        shift and go to state 243
    vars3_1                        shift and go to state 244
    empty                          shift and go to state 245

state 214

    (86) funcion -> tipo ID add_fun LP param RP verificar LB var_func . statement add_func_dir func_return_param RB end_func
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . while statement
    (19) statement -> . for statement
    (20) statement -> . escritura statement
    (21) statement -> . escritura_var statement
    (22) statement -> . lectura statement
    (23) statement -> . func_call statement
    (24) statement -> . ID row SEMICOL
    (25) statement -> . ID matrix SEMICOL
    (26) statement -> . empty
    (27) asignacion -> . ID IS value
    (130) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (131) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (139) while -> . WHILE guarda_num_salto LP expression RP check_bool gotofw LB statement RB fill_gotofw fill_gotow
    (144) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (153) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (154) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (155) escritura_var -> . PRINT LP any_var RP SEMICOL
    (160) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (161) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (104) func_call -> . ID LP RP SEMICOL
    (105) func_call -> . VAR tipo ID IS ID LP RP SEMICOL
    (106) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (107) func_call -> . VAR tipo ID IS ID LP func_era func_call_param RP SEMICOL
    (129) empty -> .
    (115) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (122) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 163
    IF              shift and go to state 165
    VAR             shift and go to state 166
    WHILE           shift and go to state 169
    FOR             shift and go to state 170
    PRINT           shift and go to state 171
    READ            shift and go to state 172
    RETURN          reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]
  ! IF              [ reduce using rule 129 (empty -> .) ]
  ! VAR             [ reduce using rule 129 (empty -> .) ]
  ! WHILE           [ reduce using rule 129 (empty -> .) ]
  ! FOR             [ reduce using rule 129 (empty -> .) ]
  ! PRINT           [ reduce using rule 129 (empty -> .) ]
  ! READ            [ reduce using rule 129 (empty -> .) ]

    statement                      shift and go to state 259
    asignacion                     shift and go to state 154
    if                             shift and go to state 155
    vars                           shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    escritura                      shift and go to state 159
    escritura_var                  shift and go to state 160
    lectura                        shift and go to state 161
    func_call                      shift and go to state 162
    empty                          shift and go to state 164
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168

state 215

    (83) funcion -> VOID ID add_fun LP param RP verificar LB var_func . statement RB end_func
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . while statement
    (19) statement -> . for statement
    (20) statement -> . escritura statement
    (21) statement -> . escritura_var statement
    (22) statement -> . lectura statement
    (23) statement -> . func_call statement
    (24) statement -> . ID row SEMICOL
    (25) statement -> . ID matrix SEMICOL
    (26) statement -> . empty
    (27) asignacion -> . ID IS value
    (130) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (131) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (139) while -> . WHILE guarda_num_salto LP expression RP check_bool gotofw LB statement RB fill_gotofw fill_gotow
    (144) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (153) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (154) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (155) escritura_var -> . PRINT LP any_var RP SEMICOL
    (160) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (161) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (104) func_call -> . ID LP RP SEMICOL
    (105) func_call -> . VAR tipo ID IS ID LP RP SEMICOL
    (106) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (107) func_call -> . VAR tipo ID IS ID LP func_era func_call_param RP SEMICOL
    (129) empty -> .
    (115) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (122) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 163
    IF              shift and go to state 165
    VAR             shift and go to state 166
    WHILE           shift and go to state 169
    FOR             shift and go to state 170
    PRINT           shift and go to state 171
    READ            shift and go to state 172
    RB              reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]
  ! IF              [ reduce using rule 129 (empty -> .) ]
  ! VAR             [ reduce using rule 129 (empty -> .) ]
  ! WHILE           [ reduce using rule 129 (empty -> .) ]
  ! FOR             [ reduce using rule 129 (empty -> .) ]
  ! PRINT           [ reduce using rule 129 (empty -> .) ]
  ! READ            [ reduce using rule 129 (empty -> .) ]

    statement                      shift and go to state 260
    asignacion                     shift and go to state 154
    if                             shift and go to state 155
    vars                           shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    escritura                      shift and go to state 159
    escritura_var                  shift and go to state 160
    lectura                        shift and go to state 161
    func_call                      shift and go to state 162
    empty                          shift and go to state 164
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168

state 216

    (84) funcion -> VOID ID add_fun LP RP verificar2 LB var_func statement . RB end_func

    RB              shift and go to state 261


state 217

    (11) main -> tipo MAIN quad_main2 LP RP LB statement add_func_main func_return_main . RB

    RB              shift and go to state 262


state 218

    (113) func_return_main -> RETURN . expr SEMICOL
    (180) expr -> . expr MUL expr
    (181) expr -> . expr DIV expr
    (182) expr -> . expr PLUS expr
    (183) expr -> . expr MINUS expr
    (184) expr -> . CTE_I
    (185) expr -> . CTE_F
    (186) expr -> . ID

    CTE_I           shift and go to state 236
    CTE_F           shift and go to state 237
    ID              shift and go to state 264

    expr                           shift and go to state 263

state 219

    (15) statement -> asignacion SEMICOL statement .

    RETURN          reduce using rule 15 (statement -> asignacion SEMICOL statement .)
    RB              reduce using rule 15 (statement -> asignacion SEMICOL statement .)


state 220

    (24) statement -> ID row SEMICOL .

    RETURN          reduce using rule 24 (statement -> ID row SEMICOL .)
    RB              reduce using rule 24 (statement -> ID row SEMICOL .)


state 221

    (25) statement -> ID matrix SEMICOL .

    RETURN          reduce using rule 25 (statement -> ID matrix SEMICOL .)
    RB              reduce using rule 25 (statement -> ID matrix SEMICOL .)


state 222

    (27) asignacion -> ID IS value .

    SEMICOL         reduce using rule 27 (asignacion -> ID IS value .)


state 223

    (104) func_call -> ID LP RP . SEMICOL

    SEMICOL         shift and go to state 265


state 224

    (106) func_call -> ID LP func_era . func_call_param RP SEMICOL
    (109) func_call_param -> . expr
    (110) func_call_param -> . func_call_param COMMA expr
    (180) expr -> . expr MUL expr
    (181) expr -> . expr DIV expr
    (182) expr -> . expr PLUS expr
    (183) expr -> . expr MINUS expr
    (184) expr -> . CTE_I
    (185) expr -> . CTE_F
    (186) expr -> . ID

    CTE_I           shift and go to state 236
    CTE_F           shift and go to state 237
    ID              shift and go to state 264

    func_call_param                shift and go to state 266
    expr                           shift and go to state 267

state 225

    (130) if -> IF LP expression . RP check_bool gotof LB statement RB fill_if
    (131) if -> IF LP expression . RP check_bool gotof LB statement RB goto fill_gotof else

    RP              shift and go to state 268


state 226

    (163) expression -> var_gt .

    RP              reduce using rule 163 (expression -> var_gt .)
    CTE_I           reduce using rule 163 (expression -> var_gt .)
    CTE_F           reduce using rule 163 (expression -> var_gt .)
    ID              reduce using rule 163 (expression -> var_gt .)
    TRUE            reduce using rule 163 (expression -> var_gt .)
    FALSE           reduce using rule 163 (expression -> var_gt .)
    COMILLA         reduce using rule 163 (expression -> var_gt .)
    COMILLAS        reduce using rule 163 (expression -> var_gt .)
    SEMICOL         reduce using rule 163 (expression -> var_gt .)


state 227

    (164) expression -> var_lt .

    RP              reduce using rule 164 (expression -> var_lt .)
    CTE_I           reduce using rule 164 (expression -> var_lt .)
    CTE_F           reduce using rule 164 (expression -> var_lt .)
    ID              reduce using rule 164 (expression -> var_lt .)
    TRUE            reduce using rule 164 (expression -> var_lt .)
    FALSE           reduce using rule 164 (expression -> var_lt .)
    COMILLA         reduce using rule 164 (expression -> var_lt .)
    COMILLAS        reduce using rule 164 (expression -> var_lt .)
    SEMICOL         reduce using rule 164 (expression -> var_lt .)


state 228

    (165) expression -> var_equal .

    RP              reduce using rule 165 (expression -> var_equal .)
    CTE_I           reduce using rule 165 (expression -> var_equal .)
    CTE_F           reduce using rule 165 (expression -> var_equal .)
    ID              reduce using rule 165 (expression -> var_equal .)
    TRUE            reduce using rule 165 (expression -> var_equal .)
    FALSE           reduce using rule 165 (expression -> var_equal .)
    COMILLA         reduce using rule 165 (expression -> var_equal .)
    COMILLAS        reduce using rule 165 (expression -> var_equal .)
    SEMICOL         reduce using rule 165 (expression -> var_equal .)


state 229

    (166) expression -> var_neq .

    RP              reduce using rule 166 (expression -> var_neq .)
    CTE_I           reduce using rule 166 (expression -> var_neq .)
    CTE_F           reduce using rule 166 (expression -> var_neq .)
    ID              reduce using rule 166 (expression -> var_neq .)
    TRUE            reduce using rule 166 (expression -> var_neq .)
    FALSE           reduce using rule 166 (expression -> var_neq .)
    COMILLA         reduce using rule 166 (expression -> var_neq .)
    COMILLAS        reduce using rule 166 (expression -> var_neq .)
    SEMICOL         reduce using rule 166 (expression -> var_neq .)


state 230

    (167) expression -> var_geq .

    RP              reduce using rule 167 (expression -> var_geq .)
    CTE_I           reduce using rule 167 (expression -> var_geq .)
    CTE_F           reduce using rule 167 (expression -> var_geq .)
    ID              reduce using rule 167 (expression -> var_geq .)
    TRUE            reduce using rule 167 (expression -> var_geq .)
    FALSE           reduce using rule 167 (expression -> var_geq .)
    COMILLA         reduce using rule 167 (expression -> var_geq .)
    COMILLAS        reduce using rule 167 (expression -> var_geq .)
    SEMICOL         reduce using rule 167 (expression -> var_geq .)


state 231

    (168) expression -> var_leq .

    RP              reduce using rule 168 (expression -> var_leq .)
    CTE_I           reduce using rule 168 (expression -> var_leq .)
    CTE_F           reduce using rule 168 (expression -> var_leq .)
    ID              reduce using rule 168 (expression -> var_leq .)
    TRUE            reduce using rule 168 (expression -> var_leq .)
    FALSE           reduce using rule 168 (expression -> var_leq .)
    COMILLA         reduce using rule 168 (expression -> var_leq .)
    COMILLAS        reduce using rule 168 (expression -> var_leq .)
    SEMICOL         reduce using rule 168 (expression -> var_leq .)


state 232

    (169) expression -> expr .
    (174) var_gt -> expr . GT expr
    (173) var_lt -> expr . LT expr
    (177) var_equal -> expr . EQUAL expr
    (178) var_neq -> expr . NEQ expr
    (176) var_geq -> expr . GEQ expr
    (175) var_leq -> expr . LEQ expr
    (180) expr -> expr . MUL expr
    (181) expr -> expr . DIV expr
    (182) expr -> expr . PLUS expr
    (183) expr -> expr . MINUS expr

    RP              reduce using rule 169 (expression -> expr .)
    SEMICOL         reduce using rule 169 (expression -> expr .)
    GT              shift and go to state 269
    LT              shift and go to state 270
    EQUAL           shift and go to state 271
    NEQ             shift and go to state 272
    GEQ             shift and go to state 273
    LEQ             shift and go to state 274
    MUL             shift and go to state 275
    DIV             shift and go to state 276
    PLUS            shift and go to state 277
    MINUS           shift and go to state 278


state 233

    (170) expression -> TRUE .

    RP              reduce using rule 170 (expression -> TRUE .)
    CTE_I           reduce using rule 170 (expression -> TRUE .)
    CTE_F           reduce using rule 170 (expression -> TRUE .)
    ID              reduce using rule 170 (expression -> TRUE .)
    TRUE            reduce using rule 170 (expression -> TRUE .)
    FALSE           reduce using rule 170 (expression -> TRUE .)
    COMILLA         reduce using rule 170 (expression -> TRUE .)
    COMILLAS        reduce using rule 170 (expression -> TRUE .)
    SEMICOL         reduce using rule 170 (expression -> TRUE .)


state 234

    (171) expression -> FALSE .

    RP              reduce using rule 171 (expression -> FALSE .)
    CTE_I           reduce using rule 171 (expression -> FALSE .)
    CTE_F           reduce using rule 171 (expression -> FALSE .)
    ID              reduce using rule 171 (expression -> FALSE .)
    TRUE            reduce using rule 171 (expression -> FALSE .)
    FALSE           reduce using rule 171 (expression -> FALSE .)
    COMILLA         reduce using rule 171 (expression -> FALSE .)
    COMILLAS        reduce using rule 171 (expression -> FALSE .)
    SEMICOL         reduce using rule 171 (expression -> FALSE .)


state 235

    (172) expression -> ID .
    (186) expr -> ID .

  ! reduce/reduce conflict for RP resolved using rule 172 (expression -> ID .)
  ! reduce/reduce conflict for SEMICOL resolved using rule 172 (expression -> ID .)
    RP              reduce using rule 172 (expression -> ID .)
    SEMICOL         reduce using rule 172 (expression -> ID .)
    GT              reduce using rule 186 (expr -> ID .)
    LT              reduce using rule 186 (expr -> ID .)
    EQUAL           reduce using rule 186 (expr -> ID .)
    NEQ             reduce using rule 186 (expr -> ID .)
    GEQ             reduce using rule 186 (expr -> ID .)
    LEQ             reduce using rule 186 (expr -> ID .)
    MUL             reduce using rule 186 (expr -> ID .)
    DIV             reduce using rule 186 (expr -> ID .)
    PLUS            reduce using rule 186 (expr -> ID .)
    MINUS           reduce using rule 186 (expr -> ID .)

  ! RP              [ reduce using rule 186 (expr -> ID .) ]
  ! SEMICOL         [ reduce using rule 186 (expr -> ID .) ]


state 236

    (184) expr -> CTE_I .

    GT              reduce using rule 184 (expr -> CTE_I .)
    LT              reduce using rule 184 (expr -> CTE_I .)
    EQUAL           reduce using rule 184 (expr -> CTE_I .)
    NEQ             reduce using rule 184 (expr -> CTE_I .)
    GEQ             reduce using rule 184 (expr -> CTE_I .)
    LEQ             reduce using rule 184 (expr -> CTE_I .)
    MUL             reduce using rule 184 (expr -> CTE_I .)
    DIV             reduce using rule 184 (expr -> CTE_I .)
    PLUS            reduce using rule 184 (expr -> CTE_I .)
    MINUS           reduce using rule 184 (expr -> CTE_I .)
    RP              reduce using rule 184 (expr -> CTE_I .)
    SEMICOL         reduce using rule 184 (expr -> CTE_I .)
    COMMA           reduce using rule 184 (expr -> CTE_I .)
    CTE_I           reduce using rule 184 (expr -> CTE_I .)
    CTE_F           reduce using rule 184 (expr -> CTE_I .)
    ID              reduce using rule 184 (expr -> CTE_I .)
    TRUE            reduce using rule 184 (expr -> CTE_I .)
    FALSE           reduce using rule 184 (expr -> CTE_I .)
    COMILLA         reduce using rule 184 (expr -> CTE_I .)
    COMILLAS        reduce using rule 184 (expr -> CTE_I .)


state 237

    (185) expr -> CTE_F .

    GT              reduce using rule 185 (expr -> CTE_F .)
    LT              reduce using rule 185 (expr -> CTE_F .)
    EQUAL           reduce using rule 185 (expr -> CTE_F .)
    NEQ             reduce using rule 185 (expr -> CTE_F .)
    GEQ             reduce using rule 185 (expr -> CTE_F .)
    LEQ             reduce using rule 185 (expr -> CTE_F .)
    MUL             reduce using rule 185 (expr -> CTE_F .)
    DIV             reduce using rule 185 (expr -> CTE_F .)
    PLUS            reduce using rule 185 (expr -> CTE_F .)
    MINUS           reduce using rule 185 (expr -> CTE_F .)
    RP              reduce using rule 185 (expr -> CTE_F .)
    SEMICOL         reduce using rule 185 (expr -> CTE_F .)
    COMMA           reduce using rule 185 (expr -> CTE_F .)
    CTE_I           reduce using rule 185 (expr -> CTE_F .)
    CTE_F           reduce using rule 185 (expr -> CTE_F .)
    ID              reduce using rule 185 (expr -> CTE_F .)
    TRUE            reduce using rule 185 (expr -> CTE_F .)
    FALSE           reduce using rule 185 (expr -> CTE_F .)
    COMILLA         reduce using rule 185 (expr -> CTE_F .)
    COMILLAS        reduce using rule 185 (expr -> CTE_F .)


state 238

    (28) vars -> VAR tipo vars1 .

    ID              reduce using rule 28 (vars -> VAR tipo vars1 .)
    IF              reduce using rule 28 (vars -> VAR tipo vars1 .)
    VAR             reduce using rule 28 (vars -> VAR tipo vars1 .)
    WHILE           reduce using rule 28 (vars -> VAR tipo vars1 .)
    FOR             reduce using rule 28 (vars -> VAR tipo vars1 .)
    PRINT           reduce using rule 28 (vars -> VAR tipo vars1 .)
    READ            reduce using rule 28 (vars -> VAR tipo vars1 .)
    RETURN          reduce using rule 28 (vars -> VAR tipo vars1 .)
    RB              reduce using rule 28 (vars -> VAR tipo vars1 .)


state 239

    (29) vars -> VAR tipo vars2 .

    ID              reduce using rule 29 (vars -> VAR tipo vars2 .)
    IF              reduce using rule 29 (vars -> VAR tipo vars2 .)
    VAR             reduce using rule 29 (vars -> VAR tipo vars2 .)
    WHILE           reduce using rule 29 (vars -> VAR tipo vars2 .)
    FOR             reduce using rule 29 (vars -> VAR tipo vars2 .)
    PRINT           reduce using rule 29 (vars -> VAR tipo vars2 .)
    READ            reduce using rule 29 (vars -> VAR tipo vars2 .)
    RETURN          reduce using rule 29 (vars -> VAR tipo vars2 .)
    RB              reduce using rule 29 (vars -> VAR tipo vars2 .)


state 240

    (30) vars -> VAR tipo vars3 .

    ID              reduce using rule 30 (vars -> VAR tipo vars3 .)
    IF              reduce using rule 30 (vars -> VAR tipo vars3 .)
    VAR             reduce using rule 30 (vars -> VAR tipo vars3 .)
    WHILE           reduce using rule 30 (vars -> VAR tipo vars3 .)
    FOR             reduce using rule 30 (vars -> VAR tipo vars3 .)
    PRINT           reduce using rule 30 (vars -> VAR tipo vars3 .)
    READ            reduce using rule 30 (vars -> VAR tipo vars3 .)
    RETURN          reduce using rule 30 (vars -> VAR tipo vars3 .)
    RB              reduce using rule 30 (vars -> VAR tipo vars3 .)


state 241

    (31) vars -> VAR tipo oper_aritmetica .

    ID              reduce using rule 31 (vars -> VAR tipo oper_aritmetica .)
    IF              reduce using rule 31 (vars -> VAR tipo oper_aritmetica .)
    VAR             reduce using rule 31 (vars -> VAR tipo oper_aritmetica .)
    WHILE           reduce using rule 31 (vars -> VAR tipo oper_aritmetica .)
    FOR             reduce using rule 31 (vars -> VAR tipo oper_aritmetica .)
    PRINT           reduce using rule 31 (vars -> VAR tipo oper_aritmetica .)
    READ            reduce using rule 31 (vars -> VAR tipo oper_aritmetica .)
    RETURN          reduce using rule 31 (vars -> VAR tipo oper_aritmetica .)
    RB              reduce using rule 31 (vars -> VAR tipo oper_aritmetica .)


state 242

    (32) vars -> VAR tipo ID . row SEMICOL
    (33) vars -> VAR tipo ID . matrix SEMICOL
    (105) func_call -> VAR tipo ID . IS ID LP RP SEMICOL
    (107) func_call -> VAR tipo ID . IS ID LP func_era func_call_param RP SEMICOL
    (115) var_row -> VAR tipo ID . row IS LP lista2 RP SEMICOL
    (122) var_matrix -> VAR tipo ID . matrix IS matrix2 SEMICOL
    (39) vars1 -> ID . SEMICOL
    (44) vars2 -> ID . IS value SEMICOL
    (48) vars3 -> ID . SEMICOL
    (179) oper_aritmetica -> ID . IS expr SEMICOL
    (42) vars2_1 -> ID . IS value COMMA
    (47) vars3_1 -> ID . COMMA
    (121) row -> . LC CTE_I RC
    (128) matrix -> . row row

    IS              shift and go to state 282
    SEMICOL         shift and go to state 280
    COMMA           shift and go to state 283
    LC              shift and go to state 71

    row                            shift and go to state 279
    matrix                         shift and go to state 281

state 243

    (40) vars2 -> vars2_1 . ID IS value SEMICOL
    (41) vars2_1 -> vars2_1 . ID IS value COMMA

    ID              shift and go to state 284


state 244

    (45) vars3 -> vars3_1 . ID SEMICOL
    (46) vars3_1 -> vars3_1 . ID COMMA

    ID              shift and go to state 285


state 245

    (43) vars2_1 -> empty .
    (49) vars3_1 -> empty .

  ! reduce/reduce conflict for ID resolved using rule 43 (vars2_1 -> empty .)
    ID              reduce using rule 43 (vars2_1 -> empty .)

  ! ID              [ reduce using rule 49 (vars3_1 -> empty .) ]


state 246

    (139) while -> WHILE guarda_num_salto LP . expression RP check_bool gotofw LB statement RB fill_gotofw fill_gotow
    (163) expression -> . var_gt
    (164) expression -> . var_lt
    (165) expression -> . var_equal
    (166) expression -> . var_neq
    (167) expression -> . var_geq
    (168) expression -> . var_leq
    (169) expression -> . expr
    (170) expression -> . TRUE
    (171) expression -> . FALSE
    (172) expression -> . ID
    (174) var_gt -> . expr GT expr
    (173) var_lt -> . expr LT expr
    (177) var_equal -> . expr EQUAL expr
    (178) var_neq -> . expr NEQ expr
    (176) var_geq -> . expr GEQ expr
    (175) var_leq -> . expr LEQ expr
    (180) expr -> . expr MUL expr
    (181) expr -> . expr DIV expr
    (182) expr -> . expr PLUS expr
    (183) expr -> . expr MINUS expr
    (184) expr -> . CTE_I
    (185) expr -> . CTE_F
    (186) expr -> . ID

    TRUE            shift and go to state 233
    FALSE           shift and go to state 234
    ID              shift and go to state 235
    CTE_I           shift and go to state 236
    CTE_F           shift and go to state 237

    expression                     shift and go to state 286
    var_gt                         shift and go to state 226
    var_lt                         shift and go to state 227
    var_equal                      shift and go to state 228
    var_neq                        shift and go to state 229
    var_geq                        shift and go to state 230
    var_leq                        shift and go to state 231
    expr                           shift and go to state 232

state 247

    (144) for -> FOR LP VAR . tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    tipo                           shift and go to state 287

state 248

    (153) escritura -> PRINT LP COMILLA . any COMILLA RP SEMICOL
    (157) any -> . expr any
    (158) any -> . expression any
    (159) any -> . empty
    (180) expr -> . expr MUL expr
    (181) expr -> . expr DIV expr
    (182) expr -> . expr PLUS expr
    (183) expr -> . expr MINUS expr
    (184) expr -> . CTE_I
    (185) expr -> . CTE_F
    (186) expr -> . ID
    (163) expression -> . var_gt
    (164) expression -> . var_lt
    (165) expression -> . var_equal
    (166) expression -> . var_neq
    (167) expression -> . var_geq
    (168) expression -> . var_leq
    (169) expression -> . expr
    (170) expression -> . TRUE
    (171) expression -> . FALSE
    (172) expression -> . ID
    (129) empty -> .
    (174) var_gt -> . expr GT expr
    (173) var_lt -> . expr LT expr
    (177) var_equal -> . expr EQUAL expr
    (178) var_neq -> . expr NEQ expr
    (176) var_geq -> . expr GEQ expr
    (175) var_leq -> . expr LEQ expr

    CTE_I           shift and go to state 236
    CTE_F           shift and go to state 237
    ID              shift and go to state 292
    TRUE            shift and go to state 233
    FALSE           shift and go to state 234
    COMILLA         reduce using rule 129 (empty -> .)

    any                            shift and go to state 288
    expr                           shift and go to state 289
    expression                     shift and go to state 290
    empty                          shift and go to state 291
    var_gt                         shift and go to state 226
    var_lt                         shift and go to state 227
    var_equal                      shift and go to state 228
    var_neq                        shift and go to state 229
    var_geq                        shift and go to state 230
    var_leq                        shift and go to state 231

state 249

    (154) escritura -> PRINT LP COMILLAS . any COMILLAS RP SEMICOL
    (157) any -> . expr any
    (158) any -> . expression any
    (159) any -> . empty
    (180) expr -> . expr MUL expr
    (181) expr -> . expr DIV expr
    (182) expr -> . expr PLUS expr
    (183) expr -> . expr MINUS expr
    (184) expr -> . CTE_I
    (185) expr -> . CTE_F
    (186) expr -> . ID
    (163) expression -> . var_gt
    (164) expression -> . var_lt
    (165) expression -> . var_equal
    (166) expression -> . var_neq
    (167) expression -> . var_geq
    (168) expression -> . var_leq
    (169) expression -> . expr
    (170) expression -> . TRUE
    (171) expression -> . FALSE
    (172) expression -> . ID
    (129) empty -> .
    (174) var_gt -> . expr GT expr
    (173) var_lt -> . expr LT expr
    (177) var_equal -> . expr EQUAL expr
    (178) var_neq -> . expr NEQ expr
    (176) var_geq -> . expr GEQ expr
    (175) var_leq -> . expr LEQ expr

    CTE_I           shift and go to state 236
    CTE_F           shift and go to state 237
    ID              shift and go to state 292
    TRUE            shift and go to state 233
    FALSE           shift and go to state 234
    COMILLAS        reduce using rule 129 (empty -> .)

    any                            shift and go to state 293
    expr                           shift and go to state 289
    expression                     shift and go to state 290
    empty                          shift and go to state 291
    var_gt                         shift and go to state 226
    var_lt                         shift and go to state 227
    var_equal                      shift and go to state 228
    var_neq                        shift and go to state 229
    var_geq                        shift and go to state 230
    var_leq                        shift and go to state 231

state 250

    (155) escritura_var -> PRINT LP any_var . RP SEMICOL

    RP              shift and go to state 294


state 251

    (156) any_var -> ID .

    RP              reduce using rule 156 (any_var -> ID .)


state 252

    (160) lectura -> READ LP COMILLA . any_lectura COMILLA RP SEMICOL
    (162) any_lectura -> . ID

    ID              shift and go to state 296

    any_lectura                    shift and go to state 295

state 253

    (161) lectura -> READ LP COMILLAS . any_lectura COMILLAS RP SEMICOL
    (162) any_lectura -> . ID

    ID              shift and go to state 296

    any_lectura                    shift and go to state 297

state 254

    (12) main -> VOID MAIN quad_main2 LP RP LB statement add_func_main RB .

    $end            reduce using rule 12 (main -> VOID MAIN quad_main2 LP RP LB statement add_func_main RB .)
    VOID            reduce using rule 12 (main -> VOID MAIN quad_main2 LP RP LB statement add_func_main RB .)
    INT             reduce using rule 12 (main -> VOID MAIN quad_main2 LP RP LB statement add_func_main RB .)
    FLOAT           reduce using rule 12 (main -> VOID MAIN quad_main2 LP RP LB statement add_func_main RB .)
    CHAR            reduce using rule 12 (main -> VOID MAIN quad_main2 LP RP LB statement add_func_main RB .)


state 255

    (125) matrix2 -> LP lista2 RP COMMA LP . lista2 RP
    (124) matrix2 -> LP . lista2 RP COMMA matrix2
    (125) matrix2 -> LP . lista2 RP COMMA LP lista2 RP
    (119) lista2 -> . elem_lista COMMA lista2
    (120) lista2 -> . elem_lista COMMA elem_lista
    (117) elem_lista -> . value
    (118) elem_lista -> . empty
    (75) value -> . CTE_F
    (76) value -> . CTE_I
    (77) value -> . ID
    (78) value -> . CTE_C
    (79) value -> . COMILLA ID COMILLA
    (80) value -> . COMILLAS ID COMILLAS
    (129) empty -> .

    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88
    ID              shift and go to state 85
    CTE_C           shift and go to state 89
    COMILLA         shift and go to state 90
    COMILLAS        shift and go to state 91
    COMMA           reduce using rule 129 (empty -> .)

    lista2                         shift and go to state 298
    elem_lista                     shift and go to state 136
    value                          shift and go to state 137
    empty                          shift and go to state 138

state 256

    (124) matrix2 -> LP lista2 RP COMMA matrix2 .

    SEMICOL         reduce using rule 124 (matrix2 -> LP lista2 RP COMMA matrix2 .)


state 257

    (85) funcion -> tipo ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 . func_return RB end_func
    (111) func_return -> . RETURN expr SEMICOL

    RETURN          shift and go to state 300

    func_return                    shift and go to state 299

state 258

    (32) vars -> VAR tipo ID . row SEMICOL
    (33) vars -> VAR tipo ID . matrix SEMICOL
    (115) var_row -> VAR tipo ID . row IS LP lista2 RP SEMICOL
    (122) var_matrix -> VAR tipo ID . matrix IS matrix2 SEMICOL
    (39) vars1 -> ID . SEMICOL
    (44) vars2 -> ID . IS value SEMICOL
    (48) vars3 -> ID . SEMICOL
    (179) oper_aritmetica -> ID . IS expr SEMICOL
    (42) vars2_1 -> ID . IS value COMMA
    (47) vars3_1 -> ID . COMMA
    (121) row -> . LC CTE_I RC
    (128) matrix -> . row row

    SEMICOL         shift and go to state 280
    IS              shift and go to state 301
    COMMA           shift and go to state 283
    LC              shift and go to state 71

    row                            shift and go to state 279
    matrix                         shift and go to state 281

state 259

    (86) funcion -> tipo ID add_fun LP param RP verificar LB var_func statement . add_func_dir func_return_param RB end_func
    (89) add_func_dir -> .

    RETURN          reduce using rule 89 (add_func_dir -> .)

    add_func_dir                   shift and go to state 302

state 260

    (83) funcion -> VOID ID add_fun LP param RP verificar LB var_func statement . RB end_func

    RB              shift and go to state 303


state 261

    (84) funcion -> VOID ID add_fun LP RP verificar2 LB var_func statement RB . end_func
    (103) end_func -> .

    VOID            reduce using rule 103 (end_func -> .)
    INT             reduce using rule 103 (end_func -> .)
    FLOAT           reduce using rule 103 (end_func -> .)
    CHAR            reduce using rule 103 (end_func -> .)
    $end            reduce using rule 103 (end_func -> .)

    end_func                       shift and go to state 304

state 262

    (11) main -> tipo MAIN quad_main2 LP RP LB statement add_func_main func_return_main RB .

    $end            reduce using rule 11 (main -> tipo MAIN quad_main2 LP RP LB statement add_func_main func_return_main RB .)
    VOID            reduce using rule 11 (main -> tipo MAIN quad_main2 LP RP LB statement add_func_main func_return_main RB .)
    INT             reduce using rule 11 (main -> tipo MAIN quad_main2 LP RP LB statement add_func_main func_return_main RB .)
    FLOAT           reduce using rule 11 (main -> tipo MAIN quad_main2 LP RP LB statement add_func_main func_return_main RB .)
    CHAR            reduce using rule 11 (main -> tipo MAIN quad_main2 LP RP LB statement add_func_main func_return_main RB .)


state 263

    (113) func_return_main -> RETURN expr . SEMICOL
    (180) expr -> expr . MUL expr
    (181) expr -> expr . DIV expr
    (182) expr -> expr . PLUS expr
    (183) expr -> expr . MINUS expr

    SEMICOL         shift and go to state 305
    MUL             shift and go to state 275
    DIV             shift and go to state 276
    PLUS            shift and go to state 277
    MINUS           shift and go to state 278


state 264

    (186) expr -> ID .

    SEMICOL         reduce using rule 186 (expr -> ID .)
    MUL             reduce using rule 186 (expr -> ID .)
    DIV             reduce using rule 186 (expr -> ID .)
    PLUS            reduce using rule 186 (expr -> ID .)
    MINUS           reduce using rule 186 (expr -> ID .)
    RP              reduce using rule 186 (expr -> ID .)
    COMMA           reduce using rule 186 (expr -> ID .)
    CTE_I           reduce using rule 186 (expr -> ID .)
    CTE_F           reduce using rule 186 (expr -> ID .)
    ID              reduce using rule 186 (expr -> ID .)
    TRUE            reduce using rule 186 (expr -> ID .)
    FALSE           reduce using rule 186 (expr -> ID .)
    COMILLA         reduce using rule 186 (expr -> ID .)
    COMILLAS        reduce using rule 186 (expr -> ID .)
    GT              reduce using rule 186 (expr -> ID .)
    LT              reduce using rule 186 (expr -> ID .)
    EQUAL           reduce using rule 186 (expr -> ID .)
    NEQ             reduce using rule 186 (expr -> ID .)
    GEQ             reduce using rule 186 (expr -> ID .)
    LEQ             reduce using rule 186 (expr -> ID .)


state 265

    (104) func_call -> ID LP RP SEMICOL .

    ID              reduce using rule 104 (func_call -> ID LP RP SEMICOL .)
    IF              reduce using rule 104 (func_call -> ID LP RP SEMICOL .)
    VAR             reduce using rule 104 (func_call -> ID LP RP SEMICOL .)
    WHILE           reduce using rule 104 (func_call -> ID LP RP SEMICOL .)
    FOR             reduce using rule 104 (func_call -> ID LP RP SEMICOL .)
    PRINT           reduce using rule 104 (func_call -> ID LP RP SEMICOL .)
    READ            reduce using rule 104 (func_call -> ID LP RP SEMICOL .)
    RETURN          reduce using rule 104 (func_call -> ID LP RP SEMICOL .)
    RB              reduce using rule 104 (func_call -> ID LP RP SEMICOL .)


state 266

    (106) func_call -> ID LP func_era func_call_param . RP SEMICOL
    (110) func_call_param -> func_call_param . COMMA expr

    RP              shift and go to state 306
    COMMA           shift and go to state 307


state 267

    (109) func_call_param -> expr .
    (180) expr -> expr . MUL expr
    (181) expr -> expr . DIV expr
    (182) expr -> expr . PLUS expr
    (183) expr -> expr . MINUS expr

    RP              reduce using rule 109 (func_call_param -> expr .)
    COMMA           reduce using rule 109 (func_call_param -> expr .)
    MUL             shift and go to state 275
    DIV             shift and go to state 276
    PLUS            shift and go to state 277
    MINUS           shift and go to state 278


state 268

    (130) if -> IF LP expression RP . check_bool gotof LB statement RB fill_if
    (131) if -> IF LP expression RP . check_bool gotof LB statement RB goto fill_gotof else
    (187) check_bool -> .

    LB              reduce using rule 187 (check_bool -> .)

    check_bool                     shift and go to state 308

state 269

    (174) var_gt -> expr GT . expr
    (180) expr -> . expr MUL expr
    (181) expr -> . expr DIV expr
    (182) expr -> . expr PLUS expr
    (183) expr -> . expr MINUS expr
    (184) expr -> . CTE_I
    (185) expr -> . CTE_F
    (186) expr -> . ID

    CTE_I           shift and go to state 236
    CTE_F           shift and go to state 237
    ID              shift and go to state 264

    expr                           shift and go to state 309

state 270

    (173) var_lt -> expr LT . expr
    (180) expr -> . expr MUL expr
    (181) expr -> . expr DIV expr
    (182) expr -> . expr PLUS expr
    (183) expr -> . expr MINUS expr
    (184) expr -> . CTE_I
    (185) expr -> . CTE_F
    (186) expr -> . ID

    CTE_I           shift and go to state 236
    CTE_F           shift and go to state 237
    ID              shift and go to state 264

    expr                           shift and go to state 310

state 271

    (177) var_equal -> expr EQUAL . expr
    (180) expr -> . expr MUL expr
    (181) expr -> . expr DIV expr
    (182) expr -> . expr PLUS expr
    (183) expr -> . expr MINUS expr
    (184) expr -> . CTE_I
    (185) expr -> . CTE_F
    (186) expr -> . ID

    CTE_I           shift and go to state 236
    CTE_F           shift and go to state 237
    ID              shift and go to state 264

    expr                           shift and go to state 311

state 272

    (178) var_neq -> expr NEQ . expr
    (180) expr -> . expr MUL expr
    (181) expr -> . expr DIV expr
    (182) expr -> . expr PLUS expr
    (183) expr -> . expr MINUS expr
    (184) expr -> . CTE_I
    (185) expr -> . CTE_F
    (186) expr -> . ID

    CTE_I           shift and go to state 236
    CTE_F           shift and go to state 237
    ID              shift and go to state 264

    expr                           shift and go to state 312

state 273

    (176) var_geq -> expr GEQ . expr
    (180) expr -> . expr MUL expr
    (181) expr -> . expr DIV expr
    (182) expr -> . expr PLUS expr
    (183) expr -> . expr MINUS expr
    (184) expr -> . CTE_I
    (185) expr -> . CTE_F
    (186) expr -> . ID

    CTE_I           shift and go to state 236
    CTE_F           shift and go to state 237
    ID              shift and go to state 264

    expr                           shift and go to state 313

state 274

    (175) var_leq -> expr LEQ . expr
    (180) expr -> . expr MUL expr
    (181) expr -> . expr DIV expr
    (182) expr -> . expr PLUS expr
    (183) expr -> . expr MINUS expr
    (184) expr -> . CTE_I
    (185) expr -> . CTE_F
    (186) expr -> . ID

    CTE_I           shift and go to state 236
    CTE_F           shift and go to state 237
    ID              shift and go to state 264

    expr                           shift and go to state 314

state 275

    (180) expr -> expr MUL . expr
    (180) expr -> . expr MUL expr
    (181) expr -> . expr DIV expr
    (182) expr -> . expr PLUS expr
    (183) expr -> . expr MINUS expr
    (184) expr -> . CTE_I
    (185) expr -> . CTE_F
    (186) expr -> . ID

    CTE_I           shift and go to state 236
    CTE_F           shift and go to state 237
    ID              shift and go to state 264

    expr                           shift and go to state 315

state 276

    (181) expr -> expr DIV . expr
    (180) expr -> . expr MUL expr
    (181) expr -> . expr DIV expr
    (182) expr -> . expr PLUS expr
    (183) expr -> . expr MINUS expr
    (184) expr -> . CTE_I
    (185) expr -> . CTE_F
    (186) expr -> . ID

    CTE_I           shift and go to state 236
    CTE_F           shift and go to state 237
    ID              shift and go to state 264

    expr                           shift and go to state 316

state 277

    (182) expr -> expr PLUS . expr
    (180) expr -> . expr MUL expr
    (181) expr -> . expr DIV expr
    (182) expr -> . expr PLUS expr
    (183) expr -> . expr MINUS expr
    (184) expr -> . CTE_I
    (185) expr -> . CTE_F
    (186) expr -> . ID

    CTE_I           shift and go to state 236
    CTE_F           shift and go to state 237
    ID              shift and go to state 264

    expr                           shift and go to state 317

state 278

    (183) expr -> expr MINUS . expr
    (180) expr -> . expr MUL expr
    (181) expr -> . expr DIV expr
    (182) expr -> . expr PLUS expr
    (183) expr -> . expr MINUS expr
    (184) expr -> . CTE_I
    (185) expr -> . CTE_F
    (186) expr -> . ID

    CTE_I           shift and go to state 236
    CTE_F           shift and go to state 237
    ID              shift and go to state 264

    expr                           shift and go to state 318

state 279

    (32) vars -> VAR tipo ID row . SEMICOL
    (115) var_row -> VAR tipo ID row . IS LP lista2 RP SEMICOL
    (128) matrix -> row . row
    (121) row -> . LC CTE_I RC

    SEMICOL         shift and go to state 319
    IS              shift and go to state 320
    LC              shift and go to state 71

    row                            shift and go to state 83

state 280

    (39) vars1 -> ID SEMICOL .
    (48) vars3 -> ID SEMICOL .

  ! reduce/reduce conflict for ID resolved using rule 39 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for IF resolved using rule 39 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for VAR resolved using rule 39 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for WHILE resolved using rule 39 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for FOR resolved using rule 39 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for PRINT resolved using rule 39 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for READ resolved using rule 39 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for RETURN resolved using rule 39 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for RB resolved using rule 39 (vars1 -> ID SEMICOL .)
    ID              reduce using rule 39 (vars1 -> ID SEMICOL .)
    IF              reduce using rule 39 (vars1 -> ID SEMICOL .)
    VAR             reduce using rule 39 (vars1 -> ID SEMICOL .)
    WHILE           reduce using rule 39 (vars1 -> ID SEMICOL .)
    FOR             reduce using rule 39 (vars1 -> ID SEMICOL .)
    PRINT           reduce using rule 39 (vars1 -> ID SEMICOL .)
    READ            reduce using rule 39 (vars1 -> ID SEMICOL .)
    RETURN          reduce using rule 39 (vars1 -> ID SEMICOL .)
    RB              reduce using rule 39 (vars1 -> ID SEMICOL .)

  ! ID              [ reduce using rule 48 (vars3 -> ID SEMICOL .) ]
  ! IF              [ reduce using rule 48 (vars3 -> ID SEMICOL .) ]
  ! VAR             [ reduce using rule 48 (vars3 -> ID SEMICOL .) ]
  ! WHILE           [ reduce using rule 48 (vars3 -> ID SEMICOL .) ]
  ! FOR             [ reduce using rule 48 (vars3 -> ID SEMICOL .) ]
  ! PRINT           [ reduce using rule 48 (vars3 -> ID SEMICOL .) ]
  ! READ            [ reduce using rule 48 (vars3 -> ID SEMICOL .) ]
  ! RETURN          [ reduce using rule 48 (vars3 -> ID SEMICOL .) ]
  ! RB              [ reduce using rule 48 (vars3 -> ID SEMICOL .) ]


state 281

    (33) vars -> VAR tipo ID matrix . SEMICOL
    (122) var_matrix -> VAR tipo ID matrix . IS matrix2 SEMICOL

    SEMICOL         shift and go to state 321
    IS              shift and go to state 322


state 282

    (105) func_call -> VAR tipo ID IS . ID LP RP SEMICOL
    (107) func_call -> VAR tipo ID IS . ID LP func_era func_call_param RP SEMICOL
    (44) vars2 -> ID IS . value SEMICOL
    (179) oper_aritmetica -> ID IS . expr SEMICOL
    (42) vars2_1 -> ID IS . value COMMA
    (75) value -> . CTE_F
    (76) value -> . CTE_I
    (77) value -> . ID
    (78) value -> . CTE_C
    (79) value -> . COMILLA ID COMILLA
    (80) value -> . COMILLAS ID COMILLAS
    (180) expr -> . expr MUL expr
    (181) expr -> . expr DIV expr
    (182) expr -> . expr PLUS expr
    (183) expr -> . expr MINUS expr
    (184) expr -> . CTE_I
    (185) expr -> . CTE_F
    (186) expr -> . ID

    ID              shift and go to state 323
    CTE_F           shift and go to state 326
    CTE_I           shift and go to state 327
    CTE_C           shift and go to state 89
    COMILLA         shift and go to state 90
    COMILLAS        shift and go to state 91

    value                          shift and go to state 324
    expr                           shift and go to state 325

state 283

    (47) vars3_1 -> ID COMMA .

    ID              reduce using rule 47 (vars3_1 -> ID COMMA .)


state 284

    (40) vars2 -> vars2_1 ID . IS value SEMICOL
    (41) vars2_1 -> vars2_1 ID . IS value COMMA

    IS              shift and go to state 328


state 285

    (45) vars3 -> vars3_1 ID . SEMICOL
    (46) vars3_1 -> vars3_1 ID . COMMA

    SEMICOL         shift and go to state 329
    COMMA           shift and go to state 330


state 286

    (139) while -> WHILE guarda_num_salto LP expression . RP check_bool gotofw LB statement RB fill_gotofw fill_gotow

    RP              shift and go to state 331


state 287

    (144) for -> FOR LP VAR tipo . ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto

    ID              shift and go to state 332


state 288

    (153) escritura -> PRINT LP COMILLA any . COMILLA RP SEMICOL

    COMILLA         shift and go to state 333


state 289

    (157) any -> expr . any
    (180) expr -> expr . MUL expr
    (181) expr -> expr . DIV expr
    (182) expr -> expr . PLUS expr
    (183) expr -> expr . MINUS expr
    (169) expression -> expr .
    (174) var_gt -> expr . GT expr
    (173) var_lt -> expr . LT expr
    (177) var_equal -> expr . EQUAL expr
    (178) var_neq -> expr . NEQ expr
    (176) var_geq -> expr . GEQ expr
    (175) var_leq -> expr . LEQ expr
    (157) any -> . expr any
    (158) any -> . expression any
    (159) any -> . empty
    (180) expr -> . expr MUL expr
    (181) expr -> . expr DIV expr
    (182) expr -> . expr PLUS expr
    (183) expr -> . expr MINUS expr
    (184) expr -> . CTE_I
    (185) expr -> . CTE_F
    (186) expr -> . ID
    (163) expression -> . var_gt
    (164) expression -> . var_lt
    (165) expression -> . var_equal
    (166) expression -> . var_neq
    (167) expression -> . var_geq
    (168) expression -> . var_leq
    (169) expression -> . expr
    (170) expression -> . TRUE
    (171) expression -> . FALSE
    (172) expression -> . ID
    (129) empty -> .
    (174) var_gt -> . expr GT expr
    (173) var_lt -> . expr LT expr
    (177) var_equal -> . expr EQUAL expr
    (178) var_neq -> . expr NEQ expr
    (176) var_geq -> . expr GEQ expr
    (175) var_leq -> . expr LEQ expr

  ! shift/reduce conflict for CTE_I resolved as shift
  ! shift/reduce conflict for CTE_F resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! reduce/reduce conflict for COMILLA resolved using rule 129 (empty -> .)
  ! reduce/reduce conflict for COMILLAS resolved using rule 129 (empty -> .)
    MUL             shift and go to state 275
    DIV             shift and go to state 276
    PLUS            shift and go to state 277
    MINUS           shift and go to state 278
    GT              shift and go to state 269
    LT              shift and go to state 270
    EQUAL           shift and go to state 271
    NEQ             shift and go to state 272
    GEQ             shift and go to state 273
    LEQ             shift and go to state 274
    CTE_I           shift and go to state 236
    CTE_F           shift and go to state 237
    ID              shift and go to state 292
    TRUE            shift and go to state 233
    FALSE           shift and go to state 234
    COMILLA         reduce using rule 129 (empty -> .)
    COMILLAS        reduce using rule 129 (empty -> .)

  ! CTE_I           [ reduce using rule 169 (expression -> expr .) ]
  ! CTE_F           [ reduce using rule 169 (expression -> expr .) ]
  ! ID              [ reduce using rule 169 (expression -> expr .) ]
  ! TRUE            [ reduce using rule 169 (expression -> expr .) ]
  ! FALSE           [ reduce using rule 169 (expression -> expr .) ]
  ! COMILLA         [ reduce using rule 169 (expression -> expr .) ]
  ! COMILLAS        [ reduce using rule 169 (expression -> expr .) ]

    expr                           shift and go to state 289
    any                            shift and go to state 334
    expression                     shift and go to state 290
    empty                          shift and go to state 291
    var_gt                         shift and go to state 226
    var_lt                         shift and go to state 227
    var_equal                      shift and go to state 228
    var_neq                        shift and go to state 229
    var_geq                        shift and go to state 230
    var_leq                        shift and go to state 231

state 290

    (158) any -> expression . any
    (157) any -> . expr any
    (158) any -> . expression any
    (159) any -> . empty
    (180) expr -> . expr MUL expr
    (181) expr -> . expr DIV expr
    (182) expr -> . expr PLUS expr
    (183) expr -> . expr MINUS expr
    (184) expr -> . CTE_I
    (185) expr -> . CTE_F
    (186) expr -> . ID
    (163) expression -> . var_gt
    (164) expression -> . var_lt
    (165) expression -> . var_equal
    (166) expression -> . var_neq
    (167) expression -> . var_geq
    (168) expression -> . var_leq
    (169) expression -> . expr
    (170) expression -> . TRUE
    (171) expression -> . FALSE
    (172) expression -> . ID
    (129) empty -> .
    (174) var_gt -> . expr GT expr
    (173) var_lt -> . expr LT expr
    (177) var_equal -> . expr EQUAL expr
    (178) var_neq -> . expr NEQ expr
    (176) var_geq -> . expr GEQ expr
    (175) var_leq -> . expr LEQ expr

    CTE_I           shift and go to state 236
    CTE_F           shift and go to state 237
    ID              shift and go to state 292
    TRUE            shift and go to state 233
    FALSE           shift and go to state 234
    COMILLA         reduce using rule 129 (empty -> .)
    COMILLAS        reduce using rule 129 (empty -> .)

    expression                     shift and go to state 290
    any                            shift and go to state 335
    expr                           shift and go to state 289
    empty                          shift and go to state 291
    var_gt                         shift and go to state 226
    var_lt                         shift and go to state 227
    var_equal                      shift and go to state 228
    var_neq                        shift and go to state 229
    var_geq                        shift and go to state 230
    var_leq                        shift and go to state 231

state 291

    (159) any -> empty .

    COMILLA         reduce using rule 159 (any -> empty .)
    COMILLAS        reduce using rule 159 (any -> empty .)


state 292

    (186) expr -> ID .
    (172) expression -> ID .

  ! reduce/reduce conflict for CTE_I resolved using rule 172 (expression -> ID .)
  ! reduce/reduce conflict for CTE_F resolved using rule 172 (expression -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 172 (expression -> ID .)
  ! reduce/reduce conflict for TRUE resolved using rule 172 (expression -> ID .)
  ! reduce/reduce conflict for FALSE resolved using rule 172 (expression -> ID .)
  ! reduce/reduce conflict for COMILLA resolved using rule 172 (expression -> ID .)
  ! reduce/reduce conflict for COMILLAS resolved using rule 172 (expression -> ID .)
    MUL             reduce using rule 186 (expr -> ID .)
    DIV             reduce using rule 186 (expr -> ID .)
    PLUS            reduce using rule 186 (expr -> ID .)
    MINUS           reduce using rule 186 (expr -> ID .)
    GT              reduce using rule 186 (expr -> ID .)
    LT              reduce using rule 186 (expr -> ID .)
    EQUAL           reduce using rule 186 (expr -> ID .)
    NEQ             reduce using rule 186 (expr -> ID .)
    GEQ             reduce using rule 186 (expr -> ID .)
    LEQ             reduce using rule 186 (expr -> ID .)
    CTE_I           reduce using rule 172 (expression -> ID .)
    CTE_F           reduce using rule 172 (expression -> ID .)
    ID              reduce using rule 172 (expression -> ID .)
    TRUE            reduce using rule 172 (expression -> ID .)
    FALSE           reduce using rule 172 (expression -> ID .)
    COMILLA         reduce using rule 172 (expression -> ID .)
    COMILLAS        reduce using rule 172 (expression -> ID .)

  ! CTE_I           [ reduce using rule 186 (expr -> ID .) ]
  ! CTE_F           [ reduce using rule 186 (expr -> ID .) ]
  ! ID              [ reduce using rule 186 (expr -> ID .) ]
  ! TRUE            [ reduce using rule 186 (expr -> ID .) ]
  ! FALSE           [ reduce using rule 186 (expr -> ID .) ]
  ! COMILLA         [ reduce using rule 186 (expr -> ID .) ]
  ! COMILLAS        [ reduce using rule 186 (expr -> ID .) ]


state 293

    (154) escritura -> PRINT LP COMILLAS any . COMILLAS RP SEMICOL

    COMILLAS        shift and go to state 336


state 294

    (155) escritura_var -> PRINT LP any_var RP . SEMICOL

    SEMICOL         shift and go to state 337


state 295

    (160) lectura -> READ LP COMILLA any_lectura . COMILLA RP SEMICOL

    COMILLA         shift and go to state 338


state 296

    (162) any_lectura -> ID .

    COMILLA         reduce using rule 162 (any_lectura -> ID .)
    COMILLAS        reduce using rule 162 (any_lectura -> ID .)


state 297

    (161) lectura -> READ LP COMILLAS any_lectura . COMILLAS RP SEMICOL

    COMILLAS        shift and go to state 339


state 298

    (125) matrix2 -> LP lista2 RP COMMA LP lista2 . RP
    (124) matrix2 -> LP lista2 . RP COMMA matrix2
    (125) matrix2 -> LP lista2 . RP COMMA LP lista2 RP

    RP              shift and go to state 340


state 299

    (85) funcion -> tipo ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return . RB end_func

    RB              shift and go to state 341


state 300

    (111) func_return -> RETURN . expr SEMICOL
    (180) expr -> . expr MUL expr
    (181) expr -> . expr DIV expr
    (182) expr -> . expr PLUS expr
    (183) expr -> . expr MINUS expr
    (184) expr -> . CTE_I
    (185) expr -> . CTE_F
    (186) expr -> . ID

    CTE_I           shift and go to state 236
    CTE_F           shift and go to state 237
    ID              shift and go to state 264

    expr                           shift and go to state 342

state 301

    (44) vars2 -> ID IS . value SEMICOL
    (179) oper_aritmetica -> ID IS . expr SEMICOL
    (42) vars2_1 -> ID IS . value COMMA
    (75) value -> . CTE_F
    (76) value -> . CTE_I
    (77) value -> . ID
    (78) value -> . CTE_C
    (79) value -> . COMILLA ID COMILLA
    (80) value -> . COMILLAS ID COMILLAS
    (180) expr -> . expr MUL expr
    (181) expr -> . expr DIV expr
    (182) expr -> . expr PLUS expr
    (183) expr -> . expr MINUS expr
    (184) expr -> . CTE_I
    (185) expr -> . CTE_F
    (186) expr -> . ID

    CTE_F           shift and go to state 326
    CTE_I           shift and go to state 327
    ID              shift and go to state 343
    CTE_C           shift and go to state 89
    COMILLA         shift and go to state 90
    COMILLAS        shift and go to state 91

    value                          shift and go to state 324
    expr                           shift and go to state 325

state 302

    (86) funcion -> tipo ID add_fun LP param RP verificar LB var_func statement add_func_dir . func_return_param RB end_func
    (112) func_return_param -> . RETURN expr SEMICOL

    RETURN          shift and go to state 345

    func_return_param              shift and go to state 344

state 303

    (83) funcion -> VOID ID add_fun LP param RP verificar LB var_func statement RB . end_func
    (103) end_func -> .

    VOID            reduce using rule 103 (end_func -> .)
    INT             reduce using rule 103 (end_func -> .)
    FLOAT           reduce using rule 103 (end_func -> .)
    CHAR            reduce using rule 103 (end_func -> .)
    $end            reduce using rule 103 (end_func -> .)

    end_func                       shift and go to state 346

state 304

    (84) funcion -> VOID ID add_fun LP RP verificar2 LB var_func statement RB end_func .

    VOID            reduce using rule 84 (funcion -> VOID ID add_fun LP RP verificar2 LB var_func statement RB end_func .)
    INT             reduce using rule 84 (funcion -> VOID ID add_fun LP RP verificar2 LB var_func statement RB end_func .)
    FLOAT           reduce using rule 84 (funcion -> VOID ID add_fun LP RP verificar2 LB var_func statement RB end_func .)
    CHAR            reduce using rule 84 (funcion -> VOID ID add_fun LP RP verificar2 LB var_func statement RB end_func .)
    $end            reduce using rule 84 (funcion -> VOID ID add_fun LP RP verificar2 LB var_func statement RB end_func .)


state 305

    (113) func_return_main -> RETURN expr SEMICOL .

    RB              reduce using rule 113 (func_return_main -> RETURN expr SEMICOL .)


state 306

    (106) func_call -> ID LP func_era func_call_param RP . SEMICOL

    SEMICOL         shift and go to state 347


state 307

    (110) func_call_param -> func_call_param COMMA . expr
    (180) expr -> . expr MUL expr
    (181) expr -> . expr DIV expr
    (182) expr -> . expr PLUS expr
    (183) expr -> . expr MINUS expr
    (184) expr -> . CTE_I
    (185) expr -> . CTE_F
    (186) expr -> . ID

    CTE_I           shift and go to state 236
    CTE_F           shift and go to state 237
    ID              shift and go to state 264

    expr                           shift and go to state 348

state 308

    (130) if -> IF LP expression RP check_bool . gotof LB statement RB fill_if
    (131) if -> IF LP expression RP check_bool . gotof LB statement RB goto fill_gotof else
    (134) gotof -> .

    LB              reduce using rule 134 (gotof -> .)

    gotof                          shift and go to state 349

state 309

    (174) var_gt -> expr GT expr .
    (180) expr -> expr . MUL expr
    (181) expr -> expr . DIV expr
    (182) expr -> expr . PLUS expr
    (183) expr -> expr . MINUS expr

    RP              reduce using rule 174 (var_gt -> expr GT expr .)
    CTE_I           reduce using rule 174 (var_gt -> expr GT expr .)
    CTE_F           reduce using rule 174 (var_gt -> expr GT expr .)
    ID              reduce using rule 174 (var_gt -> expr GT expr .)
    TRUE            reduce using rule 174 (var_gt -> expr GT expr .)
    FALSE           reduce using rule 174 (var_gt -> expr GT expr .)
    COMILLA         reduce using rule 174 (var_gt -> expr GT expr .)
    COMILLAS        reduce using rule 174 (var_gt -> expr GT expr .)
    SEMICOL         reduce using rule 174 (var_gt -> expr GT expr .)
    MUL             shift and go to state 275
    DIV             shift and go to state 276
    PLUS            shift and go to state 277
    MINUS           shift and go to state 278


state 310

    (173) var_lt -> expr LT expr .
    (180) expr -> expr . MUL expr
    (181) expr -> expr . DIV expr
    (182) expr -> expr . PLUS expr
    (183) expr -> expr . MINUS expr

    RP              reduce using rule 173 (var_lt -> expr LT expr .)
    CTE_I           reduce using rule 173 (var_lt -> expr LT expr .)
    CTE_F           reduce using rule 173 (var_lt -> expr LT expr .)
    ID              reduce using rule 173 (var_lt -> expr LT expr .)
    TRUE            reduce using rule 173 (var_lt -> expr LT expr .)
    FALSE           reduce using rule 173 (var_lt -> expr LT expr .)
    COMILLA         reduce using rule 173 (var_lt -> expr LT expr .)
    COMILLAS        reduce using rule 173 (var_lt -> expr LT expr .)
    SEMICOL         reduce using rule 173 (var_lt -> expr LT expr .)
    MUL             shift and go to state 275
    DIV             shift and go to state 276
    PLUS            shift and go to state 277
    MINUS           shift and go to state 278


state 311

    (177) var_equal -> expr EQUAL expr .
    (180) expr -> expr . MUL expr
    (181) expr -> expr . DIV expr
    (182) expr -> expr . PLUS expr
    (183) expr -> expr . MINUS expr

    RP              reduce using rule 177 (var_equal -> expr EQUAL expr .)
    CTE_I           reduce using rule 177 (var_equal -> expr EQUAL expr .)
    CTE_F           reduce using rule 177 (var_equal -> expr EQUAL expr .)
    ID              reduce using rule 177 (var_equal -> expr EQUAL expr .)
    TRUE            reduce using rule 177 (var_equal -> expr EQUAL expr .)
    FALSE           reduce using rule 177 (var_equal -> expr EQUAL expr .)
    COMILLA         reduce using rule 177 (var_equal -> expr EQUAL expr .)
    COMILLAS        reduce using rule 177 (var_equal -> expr EQUAL expr .)
    SEMICOL         reduce using rule 177 (var_equal -> expr EQUAL expr .)
    MUL             shift and go to state 275
    DIV             shift and go to state 276
    PLUS            shift and go to state 277
    MINUS           shift and go to state 278


state 312

    (178) var_neq -> expr NEQ expr .
    (180) expr -> expr . MUL expr
    (181) expr -> expr . DIV expr
    (182) expr -> expr . PLUS expr
    (183) expr -> expr . MINUS expr

    RP              reduce using rule 178 (var_neq -> expr NEQ expr .)
    CTE_I           reduce using rule 178 (var_neq -> expr NEQ expr .)
    CTE_F           reduce using rule 178 (var_neq -> expr NEQ expr .)
    ID              reduce using rule 178 (var_neq -> expr NEQ expr .)
    TRUE            reduce using rule 178 (var_neq -> expr NEQ expr .)
    FALSE           reduce using rule 178 (var_neq -> expr NEQ expr .)
    COMILLA         reduce using rule 178 (var_neq -> expr NEQ expr .)
    COMILLAS        reduce using rule 178 (var_neq -> expr NEQ expr .)
    SEMICOL         reduce using rule 178 (var_neq -> expr NEQ expr .)
    MUL             shift and go to state 275
    DIV             shift and go to state 276
    PLUS            shift and go to state 277
    MINUS           shift and go to state 278


state 313

    (176) var_geq -> expr GEQ expr .
    (180) expr -> expr . MUL expr
    (181) expr -> expr . DIV expr
    (182) expr -> expr . PLUS expr
    (183) expr -> expr . MINUS expr

    RP              reduce using rule 176 (var_geq -> expr GEQ expr .)
    CTE_I           reduce using rule 176 (var_geq -> expr GEQ expr .)
    CTE_F           reduce using rule 176 (var_geq -> expr GEQ expr .)
    ID              reduce using rule 176 (var_geq -> expr GEQ expr .)
    TRUE            reduce using rule 176 (var_geq -> expr GEQ expr .)
    FALSE           reduce using rule 176 (var_geq -> expr GEQ expr .)
    COMILLA         reduce using rule 176 (var_geq -> expr GEQ expr .)
    COMILLAS        reduce using rule 176 (var_geq -> expr GEQ expr .)
    SEMICOL         reduce using rule 176 (var_geq -> expr GEQ expr .)
    MUL             shift and go to state 275
    DIV             shift and go to state 276
    PLUS            shift and go to state 277
    MINUS           shift and go to state 278


state 314

    (175) var_leq -> expr LEQ expr .
    (180) expr -> expr . MUL expr
    (181) expr -> expr . DIV expr
    (182) expr -> expr . PLUS expr
    (183) expr -> expr . MINUS expr

    RP              reduce using rule 175 (var_leq -> expr LEQ expr .)
    CTE_I           reduce using rule 175 (var_leq -> expr LEQ expr .)
    CTE_F           reduce using rule 175 (var_leq -> expr LEQ expr .)
    ID              reduce using rule 175 (var_leq -> expr LEQ expr .)
    TRUE            reduce using rule 175 (var_leq -> expr LEQ expr .)
    FALSE           reduce using rule 175 (var_leq -> expr LEQ expr .)
    COMILLA         reduce using rule 175 (var_leq -> expr LEQ expr .)
    COMILLAS        reduce using rule 175 (var_leq -> expr LEQ expr .)
    SEMICOL         reduce using rule 175 (var_leq -> expr LEQ expr .)
    MUL             shift and go to state 275
    DIV             shift and go to state 276
    PLUS            shift and go to state 277
    MINUS           shift and go to state 278


state 315

    (180) expr -> expr MUL expr .
    (180) expr -> expr . MUL expr
    (181) expr -> expr . DIV expr
    (182) expr -> expr . PLUS expr
    (183) expr -> expr . MINUS expr

    GT              reduce using rule 180 (expr -> expr MUL expr .)
    LT              reduce using rule 180 (expr -> expr MUL expr .)
    EQUAL           reduce using rule 180 (expr -> expr MUL expr .)
    NEQ             reduce using rule 180 (expr -> expr MUL expr .)
    GEQ             reduce using rule 180 (expr -> expr MUL expr .)
    LEQ             reduce using rule 180 (expr -> expr MUL expr .)
    MUL             reduce using rule 180 (expr -> expr MUL expr .)
    DIV             reduce using rule 180 (expr -> expr MUL expr .)
    PLUS            reduce using rule 180 (expr -> expr MUL expr .)
    MINUS           reduce using rule 180 (expr -> expr MUL expr .)
    RP              reduce using rule 180 (expr -> expr MUL expr .)
    SEMICOL         reduce using rule 180 (expr -> expr MUL expr .)
    COMMA           reduce using rule 180 (expr -> expr MUL expr .)
    CTE_I           reduce using rule 180 (expr -> expr MUL expr .)
    CTE_F           reduce using rule 180 (expr -> expr MUL expr .)
    ID              reduce using rule 180 (expr -> expr MUL expr .)
    TRUE            reduce using rule 180 (expr -> expr MUL expr .)
    FALSE           reduce using rule 180 (expr -> expr MUL expr .)
    COMILLA         reduce using rule 180 (expr -> expr MUL expr .)
    COMILLAS        reduce using rule 180 (expr -> expr MUL expr .)

  ! MUL             [ shift and go to state 275 ]
  ! DIV             [ shift and go to state 276 ]
  ! PLUS            [ shift and go to state 277 ]
  ! MINUS           [ shift and go to state 278 ]


state 316

    (181) expr -> expr DIV expr .
    (180) expr -> expr . MUL expr
    (181) expr -> expr . DIV expr
    (182) expr -> expr . PLUS expr
    (183) expr -> expr . MINUS expr

    GT              reduce using rule 181 (expr -> expr DIV expr .)
    LT              reduce using rule 181 (expr -> expr DIV expr .)
    EQUAL           reduce using rule 181 (expr -> expr DIV expr .)
    NEQ             reduce using rule 181 (expr -> expr DIV expr .)
    GEQ             reduce using rule 181 (expr -> expr DIV expr .)
    LEQ             reduce using rule 181 (expr -> expr DIV expr .)
    MUL             reduce using rule 181 (expr -> expr DIV expr .)
    DIV             reduce using rule 181 (expr -> expr DIV expr .)
    PLUS            reduce using rule 181 (expr -> expr DIV expr .)
    MINUS           reduce using rule 181 (expr -> expr DIV expr .)
    RP              reduce using rule 181 (expr -> expr DIV expr .)
    SEMICOL         reduce using rule 181 (expr -> expr DIV expr .)
    COMMA           reduce using rule 181 (expr -> expr DIV expr .)
    CTE_I           reduce using rule 181 (expr -> expr DIV expr .)
    CTE_F           reduce using rule 181 (expr -> expr DIV expr .)
    ID              reduce using rule 181 (expr -> expr DIV expr .)
    TRUE            reduce using rule 181 (expr -> expr DIV expr .)
    FALSE           reduce using rule 181 (expr -> expr DIV expr .)
    COMILLA         reduce using rule 181 (expr -> expr DIV expr .)
    COMILLAS        reduce using rule 181 (expr -> expr DIV expr .)

  ! MUL             [ shift and go to state 275 ]
  ! DIV             [ shift and go to state 276 ]
  ! PLUS            [ shift and go to state 277 ]
  ! MINUS           [ shift and go to state 278 ]


state 317

    (182) expr -> expr PLUS expr .
    (180) expr -> expr . MUL expr
    (181) expr -> expr . DIV expr
    (182) expr -> expr . PLUS expr
    (183) expr -> expr . MINUS expr

    GT              reduce using rule 182 (expr -> expr PLUS expr .)
    LT              reduce using rule 182 (expr -> expr PLUS expr .)
    EQUAL           reduce using rule 182 (expr -> expr PLUS expr .)
    NEQ             reduce using rule 182 (expr -> expr PLUS expr .)
    GEQ             reduce using rule 182 (expr -> expr PLUS expr .)
    LEQ             reduce using rule 182 (expr -> expr PLUS expr .)
    PLUS            reduce using rule 182 (expr -> expr PLUS expr .)
    MINUS           reduce using rule 182 (expr -> expr PLUS expr .)
    RP              reduce using rule 182 (expr -> expr PLUS expr .)
    SEMICOL         reduce using rule 182 (expr -> expr PLUS expr .)
    COMMA           reduce using rule 182 (expr -> expr PLUS expr .)
    CTE_I           reduce using rule 182 (expr -> expr PLUS expr .)
    CTE_F           reduce using rule 182 (expr -> expr PLUS expr .)
    ID              reduce using rule 182 (expr -> expr PLUS expr .)
    TRUE            reduce using rule 182 (expr -> expr PLUS expr .)
    FALSE           reduce using rule 182 (expr -> expr PLUS expr .)
    COMILLA         reduce using rule 182 (expr -> expr PLUS expr .)
    COMILLAS        reduce using rule 182 (expr -> expr PLUS expr .)
    MUL             shift and go to state 275
    DIV             shift and go to state 276

  ! MUL             [ reduce using rule 182 (expr -> expr PLUS expr .) ]
  ! DIV             [ reduce using rule 182 (expr -> expr PLUS expr .) ]
  ! PLUS            [ shift and go to state 277 ]
  ! MINUS           [ shift and go to state 278 ]


state 318

    (183) expr -> expr MINUS expr .
    (180) expr -> expr . MUL expr
    (181) expr -> expr . DIV expr
    (182) expr -> expr . PLUS expr
    (183) expr -> expr . MINUS expr

    GT              reduce using rule 183 (expr -> expr MINUS expr .)
    LT              reduce using rule 183 (expr -> expr MINUS expr .)
    EQUAL           reduce using rule 183 (expr -> expr MINUS expr .)
    NEQ             reduce using rule 183 (expr -> expr MINUS expr .)
    GEQ             reduce using rule 183 (expr -> expr MINUS expr .)
    LEQ             reduce using rule 183 (expr -> expr MINUS expr .)
    PLUS            reduce using rule 183 (expr -> expr MINUS expr .)
    MINUS           reduce using rule 183 (expr -> expr MINUS expr .)
    RP              reduce using rule 183 (expr -> expr MINUS expr .)
    SEMICOL         reduce using rule 183 (expr -> expr MINUS expr .)
    COMMA           reduce using rule 183 (expr -> expr MINUS expr .)
    CTE_I           reduce using rule 183 (expr -> expr MINUS expr .)
    CTE_F           reduce using rule 183 (expr -> expr MINUS expr .)
    ID              reduce using rule 183 (expr -> expr MINUS expr .)
    TRUE            reduce using rule 183 (expr -> expr MINUS expr .)
    FALSE           reduce using rule 183 (expr -> expr MINUS expr .)
    COMILLA         reduce using rule 183 (expr -> expr MINUS expr .)
    COMILLAS        reduce using rule 183 (expr -> expr MINUS expr .)
    MUL             shift and go to state 275
    DIV             shift and go to state 276

  ! MUL             [ reduce using rule 183 (expr -> expr MINUS expr .) ]
  ! DIV             [ reduce using rule 183 (expr -> expr MINUS expr .) ]
  ! PLUS            [ shift and go to state 277 ]
  ! MINUS           [ shift and go to state 278 ]


state 319

    (32) vars -> VAR tipo ID row SEMICOL .

    ID              reduce using rule 32 (vars -> VAR tipo ID row SEMICOL .)
    IF              reduce using rule 32 (vars -> VAR tipo ID row SEMICOL .)
    VAR             reduce using rule 32 (vars -> VAR tipo ID row SEMICOL .)
    WHILE           reduce using rule 32 (vars -> VAR tipo ID row SEMICOL .)
    FOR             reduce using rule 32 (vars -> VAR tipo ID row SEMICOL .)
    PRINT           reduce using rule 32 (vars -> VAR tipo ID row SEMICOL .)
    READ            reduce using rule 32 (vars -> VAR tipo ID row SEMICOL .)
    RETURN          reduce using rule 32 (vars -> VAR tipo ID row SEMICOL .)
    RB              reduce using rule 32 (vars -> VAR tipo ID row SEMICOL .)


state 320

    (115) var_row -> VAR tipo ID row IS . LP lista2 RP SEMICOL

    LP              shift and go to state 350


state 321

    (33) vars -> VAR tipo ID matrix SEMICOL .

    ID              reduce using rule 33 (vars -> VAR tipo ID matrix SEMICOL .)
    IF              reduce using rule 33 (vars -> VAR tipo ID matrix SEMICOL .)
    VAR             reduce using rule 33 (vars -> VAR tipo ID matrix SEMICOL .)
    WHILE           reduce using rule 33 (vars -> VAR tipo ID matrix SEMICOL .)
    FOR             reduce using rule 33 (vars -> VAR tipo ID matrix SEMICOL .)
    PRINT           reduce using rule 33 (vars -> VAR tipo ID matrix SEMICOL .)
    READ            reduce using rule 33 (vars -> VAR tipo ID matrix SEMICOL .)
    RETURN          reduce using rule 33 (vars -> VAR tipo ID matrix SEMICOL .)
    RB              reduce using rule 33 (vars -> VAR tipo ID matrix SEMICOL .)


state 322

    (122) var_matrix -> VAR tipo ID matrix IS . matrix2 SEMICOL
    (124) matrix2 -> . LP lista2 RP COMMA matrix2
    (125) matrix2 -> . LP lista2 RP COMMA LP lista2 RP

    LP              shift and go to state 118

    matrix2                        shift and go to state 351

state 323

    (105) func_call -> VAR tipo ID IS ID . LP RP SEMICOL
    (107) func_call -> VAR tipo ID IS ID . LP func_era func_call_param RP SEMICOL
    (77) value -> ID .
    (186) expr -> ID .

  ! reduce/reduce conflict for SEMICOL resolved using rule 77 (value -> ID .)
    LP              shift and go to state 352
    SEMICOL         reduce using rule 77 (value -> ID .)
    COMMA           reduce using rule 77 (value -> ID .)
    MUL             reduce using rule 186 (expr -> ID .)
    DIV             reduce using rule 186 (expr -> ID .)
    PLUS            reduce using rule 186 (expr -> ID .)
    MINUS           reduce using rule 186 (expr -> ID .)

  ! SEMICOL         [ reduce using rule 186 (expr -> ID .) ]


state 324

    (44) vars2 -> ID IS value . SEMICOL
    (42) vars2_1 -> ID IS value . COMMA

    SEMICOL         shift and go to state 353
    COMMA           shift and go to state 354


state 325

    (179) oper_aritmetica -> ID IS expr . SEMICOL
    (180) expr -> expr . MUL expr
    (181) expr -> expr . DIV expr
    (182) expr -> expr . PLUS expr
    (183) expr -> expr . MINUS expr

    SEMICOL         shift and go to state 355
    MUL             shift and go to state 275
    DIV             shift and go to state 276
    PLUS            shift and go to state 277
    MINUS           shift and go to state 278


state 326

    (75) value -> CTE_F .
    (185) expr -> CTE_F .

  ! reduce/reduce conflict for SEMICOL resolved using rule 75 (value -> CTE_F .)
    SEMICOL         reduce using rule 75 (value -> CTE_F .)
    COMMA           reduce using rule 75 (value -> CTE_F .)
    MUL             reduce using rule 185 (expr -> CTE_F .)
    DIV             reduce using rule 185 (expr -> CTE_F .)
    PLUS            reduce using rule 185 (expr -> CTE_F .)
    MINUS           reduce using rule 185 (expr -> CTE_F .)

  ! SEMICOL         [ reduce using rule 185 (expr -> CTE_F .) ]


state 327

    (76) value -> CTE_I .
    (184) expr -> CTE_I .

  ! reduce/reduce conflict for SEMICOL resolved using rule 76 (value -> CTE_I .)
    SEMICOL         reduce using rule 76 (value -> CTE_I .)
    COMMA           reduce using rule 76 (value -> CTE_I .)
    MUL             reduce using rule 184 (expr -> CTE_I .)
    DIV             reduce using rule 184 (expr -> CTE_I .)
    PLUS            reduce using rule 184 (expr -> CTE_I .)
    MINUS           reduce using rule 184 (expr -> CTE_I .)

  ! SEMICOL         [ reduce using rule 184 (expr -> CTE_I .) ]


state 328

    (40) vars2 -> vars2_1 ID IS . value SEMICOL
    (41) vars2_1 -> vars2_1 ID IS . value COMMA
    (75) value -> . CTE_F
    (76) value -> . CTE_I
    (77) value -> . ID
    (78) value -> . CTE_C
    (79) value -> . COMILLA ID COMILLA
    (80) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88
    ID              shift and go to state 85
    CTE_C           shift and go to state 89
    COMILLA         shift and go to state 90
    COMILLAS        shift and go to state 91

    value                          shift and go to state 356

state 329

    (45) vars3 -> vars3_1 ID SEMICOL .

    ID              reduce using rule 45 (vars3 -> vars3_1 ID SEMICOL .)
    IF              reduce using rule 45 (vars3 -> vars3_1 ID SEMICOL .)
    VAR             reduce using rule 45 (vars3 -> vars3_1 ID SEMICOL .)
    WHILE           reduce using rule 45 (vars3 -> vars3_1 ID SEMICOL .)
    FOR             reduce using rule 45 (vars3 -> vars3_1 ID SEMICOL .)
    PRINT           reduce using rule 45 (vars3 -> vars3_1 ID SEMICOL .)
    READ            reduce using rule 45 (vars3 -> vars3_1 ID SEMICOL .)
    RETURN          reduce using rule 45 (vars3 -> vars3_1 ID SEMICOL .)
    RB              reduce using rule 45 (vars3 -> vars3_1 ID SEMICOL .)


state 330

    (46) vars3_1 -> vars3_1 ID COMMA .

    ID              reduce using rule 46 (vars3_1 -> vars3_1 ID COMMA .)


state 331

    (139) while -> WHILE guarda_num_salto LP expression RP . check_bool gotofw LB statement RB fill_gotofw fill_gotow
    (187) check_bool -> .

    LB              reduce using rule 187 (check_bool -> .)

    check_bool                     shift and go to state 357

state 332

    (144) for -> FOR LP VAR tipo ID . IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto

    IS              shift and go to state 358


state 333

    (153) escritura -> PRINT LP COMILLA any COMILLA . RP SEMICOL

    RP              shift and go to state 359


state 334

    (157) any -> expr any .

    COMILLA         reduce using rule 157 (any -> expr any .)
    COMILLAS        reduce using rule 157 (any -> expr any .)


state 335

    (158) any -> expression any .

    COMILLA         reduce using rule 158 (any -> expression any .)
    COMILLAS        reduce using rule 158 (any -> expression any .)


state 336

    (154) escritura -> PRINT LP COMILLAS any COMILLAS . RP SEMICOL

    RP              shift and go to state 360


state 337

    (155) escritura_var -> PRINT LP any_var RP SEMICOL .

    ID              reduce using rule 155 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    IF              reduce using rule 155 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    VAR             reduce using rule 155 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    WHILE           reduce using rule 155 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    FOR             reduce using rule 155 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    PRINT           reduce using rule 155 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    READ            reduce using rule 155 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    RETURN          reduce using rule 155 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    RB              reduce using rule 155 (escritura_var -> PRINT LP any_var RP SEMICOL .)


state 338

    (160) lectura -> READ LP COMILLA any_lectura COMILLA . RP SEMICOL

    RP              shift and go to state 361


state 339

    (161) lectura -> READ LP COMILLAS any_lectura COMILLAS . RP SEMICOL

    RP              shift and go to state 362


state 340

    (125) matrix2 -> LP lista2 RP COMMA LP lista2 RP .
    (124) matrix2 -> LP lista2 RP . COMMA matrix2
    (125) matrix2 -> LP lista2 RP . COMMA LP lista2 RP

    SEMICOL         reduce using rule 125 (matrix2 -> LP lista2 RP COMMA LP lista2 RP .)
    COMMA           shift and go to state 211


state 341

    (85) funcion -> tipo ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return RB . end_func
    (103) end_func -> .

    VOID            reduce using rule 103 (end_func -> .)
    INT             reduce using rule 103 (end_func -> .)
    FLOAT           reduce using rule 103 (end_func -> .)
    CHAR            reduce using rule 103 (end_func -> .)
    $end            reduce using rule 103 (end_func -> .)

    end_func                       shift and go to state 363

state 342

    (111) func_return -> RETURN expr . SEMICOL
    (180) expr -> expr . MUL expr
    (181) expr -> expr . DIV expr
    (182) expr -> expr . PLUS expr
    (183) expr -> expr . MINUS expr

    SEMICOL         shift and go to state 364
    MUL             shift and go to state 275
    DIV             shift and go to state 276
    PLUS            shift and go to state 277
    MINUS           shift and go to state 278


state 343

    (77) value -> ID .
    (186) expr -> ID .

  ! reduce/reduce conflict for SEMICOL resolved using rule 77 (value -> ID .)
    SEMICOL         reduce using rule 77 (value -> ID .)
    COMMA           reduce using rule 77 (value -> ID .)
    MUL             reduce using rule 186 (expr -> ID .)
    DIV             reduce using rule 186 (expr -> ID .)
    PLUS            reduce using rule 186 (expr -> ID .)
    MINUS           reduce using rule 186 (expr -> ID .)

  ! SEMICOL         [ reduce using rule 186 (expr -> ID .) ]


state 344

    (86) funcion -> tipo ID add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param . RB end_func

    RB              shift and go to state 365


state 345

    (112) func_return_param -> RETURN . expr SEMICOL
    (180) expr -> . expr MUL expr
    (181) expr -> . expr DIV expr
    (182) expr -> . expr PLUS expr
    (183) expr -> . expr MINUS expr
    (184) expr -> . CTE_I
    (185) expr -> . CTE_F
    (186) expr -> . ID

    CTE_I           shift and go to state 236
    CTE_F           shift and go to state 237
    ID              shift and go to state 264

    expr                           shift and go to state 366

state 346

    (83) funcion -> VOID ID add_fun LP param RP verificar LB var_func statement RB end_func .

    VOID            reduce using rule 83 (funcion -> VOID ID add_fun LP param RP verificar LB var_func statement RB end_func .)
    INT             reduce using rule 83 (funcion -> VOID ID add_fun LP param RP verificar LB var_func statement RB end_func .)
    FLOAT           reduce using rule 83 (funcion -> VOID ID add_fun LP param RP verificar LB var_func statement RB end_func .)
    CHAR            reduce using rule 83 (funcion -> VOID ID add_fun LP param RP verificar LB var_func statement RB end_func .)
    $end            reduce using rule 83 (funcion -> VOID ID add_fun LP param RP verificar LB var_func statement RB end_func .)


state 347

    (106) func_call -> ID LP func_era func_call_param RP SEMICOL .

    ID              reduce using rule 106 (func_call -> ID LP func_era func_call_param RP SEMICOL .)
    IF              reduce using rule 106 (func_call -> ID LP func_era func_call_param RP SEMICOL .)
    VAR             reduce using rule 106 (func_call -> ID LP func_era func_call_param RP SEMICOL .)
    WHILE           reduce using rule 106 (func_call -> ID LP func_era func_call_param RP SEMICOL .)
    FOR             reduce using rule 106 (func_call -> ID LP func_era func_call_param RP SEMICOL .)
    PRINT           reduce using rule 106 (func_call -> ID LP func_era func_call_param RP SEMICOL .)
    READ            reduce using rule 106 (func_call -> ID LP func_era func_call_param RP SEMICOL .)
    RETURN          reduce using rule 106 (func_call -> ID LP func_era func_call_param RP SEMICOL .)
    RB              reduce using rule 106 (func_call -> ID LP func_era func_call_param RP SEMICOL .)


state 348

    (110) func_call_param -> func_call_param COMMA expr .
    (180) expr -> expr . MUL expr
    (181) expr -> expr . DIV expr
    (182) expr -> expr . PLUS expr
    (183) expr -> expr . MINUS expr

    RP              reduce using rule 110 (func_call_param -> func_call_param COMMA expr .)
    COMMA           reduce using rule 110 (func_call_param -> func_call_param COMMA expr .)
    MUL             shift and go to state 275
    DIV             shift and go to state 276
    PLUS            shift and go to state 277
    MINUS           shift and go to state 278


state 349

    (130) if -> IF LP expression RP check_bool gotof . LB statement RB fill_if
    (131) if -> IF LP expression RP check_bool gotof . LB statement RB goto fill_gotof else

    LB              shift and go to state 367


state 350

    (115) var_row -> VAR tipo ID row IS LP . lista2 RP SEMICOL
    (119) lista2 -> . elem_lista COMMA lista2
    (120) lista2 -> . elem_lista COMMA elem_lista
    (117) elem_lista -> . value
    (118) elem_lista -> . empty
    (75) value -> . CTE_F
    (76) value -> . CTE_I
    (77) value -> . ID
    (78) value -> . CTE_C
    (79) value -> . COMILLA ID COMILLA
    (80) value -> . COMILLAS ID COMILLAS
    (129) empty -> .

    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88
    ID              shift and go to state 85
    CTE_C           shift and go to state 89
    COMILLA         shift and go to state 90
    COMILLAS        shift and go to state 91
    COMMA           reduce using rule 129 (empty -> .)

    lista2                         shift and go to state 368
    elem_lista                     shift and go to state 136
    value                          shift and go to state 137
    empty                          shift and go to state 138

state 351

    (122) var_matrix -> VAR tipo ID matrix IS matrix2 . SEMICOL

    SEMICOL         shift and go to state 369


state 352

    (105) func_call -> VAR tipo ID IS ID LP . RP SEMICOL
    (107) func_call -> VAR tipo ID IS ID LP . func_era func_call_param RP SEMICOL
    (108) func_era -> .

    RP              shift and go to state 370
    CTE_I           reduce using rule 108 (func_era -> .)
    CTE_F           reduce using rule 108 (func_era -> .)
    ID              reduce using rule 108 (func_era -> .)

    func_era                       shift and go to state 371

state 353

    (44) vars2 -> ID IS value SEMICOL .

    ID              reduce using rule 44 (vars2 -> ID IS value SEMICOL .)
    IF              reduce using rule 44 (vars2 -> ID IS value SEMICOL .)
    VAR             reduce using rule 44 (vars2 -> ID IS value SEMICOL .)
    WHILE           reduce using rule 44 (vars2 -> ID IS value SEMICOL .)
    FOR             reduce using rule 44 (vars2 -> ID IS value SEMICOL .)
    PRINT           reduce using rule 44 (vars2 -> ID IS value SEMICOL .)
    READ            reduce using rule 44 (vars2 -> ID IS value SEMICOL .)
    RETURN          reduce using rule 44 (vars2 -> ID IS value SEMICOL .)
    RB              reduce using rule 44 (vars2 -> ID IS value SEMICOL .)


state 354

    (42) vars2_1 -> ID IS value COMMA .

    ID              reduce using rule 42 (vars2_1 -> ID IS value COMMA .)


state 355

    (179) oper_aritmetica -> ID IS expr SEMICOL .

    ID              reduce using rule 179 (oper_aritmetica -> ID IS expr SEMICOL .)
    IF              reduce using rule 179 (oper_aritmetica -> ID IS expr SEMICOL .)
    VAR             reduce using rule 179 (oper_aritmetica -> ID IS expr SEMICOL .)
    WHILE           reduce using rule 179 (oper_aritmetica -> ID IS expr SEMICOL .)
    FOR             reduce using rule 179 (oper_aritmetica -> ID IS expr SEMICOL .)
    PRINT           reduce using rule 179 (oper_aritmetica -> ID IS expr SEMICOL .)
    READ            reduce using rule 179 (oper_aritmetica -> ID IS expr SEMICOL .)
    RETURN          reduce using rule 179 (oper_aritmetica -> ID IS expr SEMICOL .)
    RB              reduce using rule 179 (oper_aritmetica -> ID IS expr SEMICOL .)


state 356

    (40) vars2 -> vars2_1 ID IS value . SEMICOL
    (41) vars2_1 -> vars2_1 ID IS value . COMMA

    SEMICOL         shift and go to state 372
    COMMA           shift and go to state 373


state 357

    (139) while -> WHILE guarda_num_salto LP expression RP check_bool . gotofw LB statement RB fill_gotofw fill_gotow
    (141) gotofw -> .

    LB              reduce using rule 141 (gotofw -> .)

    gotofw                         shift and go to state 374

state 358

    (144) for -> FOR LP VAR tipo ID IS . value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (75) value -> . CTE_F
    (76) value -> . CTE_I
    (77) value -> . ID
    (78) value -> . CTE_C
    (79) value -> . COMILLA ID COMILLA
    (80) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88
    ID              shift and go to state 85
    CTE_C           shift and go to state 89
    COMILLA         shift and go to state 90
    COMILLAS        shift and go to state 91

    value                          shift and go to state 375

state 359

    (153) escritura -> PRINT LP COMILLA any COMILLA RP . SEMICOL

    SEMICOL         shift and go to state 376


state 360

    (154) escritura -> PRINT LP COMILLAS any COMILLAS RP . SEMICOL

    SEMICOL         shift and go to state 377


state 361

    (160) lectura -> READ LP COMILLA any_lectura COMILLA RP . SEMICOL

    SEMICOL         shift and go to state 378


state 362

    (161) lectura -> READ LP COMILLAS any_lectura COMILLAS RP . SEMICOL

    SEMICOL         shift and go to state 379


state 363

    (85) funcion -> tipo ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func .

    VOID            reduce using rule 85 (funcion -> tipo ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func .)
    INT             reduce using rule 85 (funcion -> tipo ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func .)
    FLOAT           reduce using rule 85 (funcion -> tipo ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func .)
    CHAR            reduce using rule 85 (funcion -> tipo ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func .)
    $end            reduce using rule 85 (funcion -> tipo ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func .)


state 364

    (111) func_return -> RETURN expr SEMICOL .

    RB              reduce using rule 111 (func_return -> RETURN expr SEMICOL .)


state 365

    (86) funcion -> tipo ID add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param RB . end_func
    (103) end_func -> .

    VOID            reduce using rule 103 (end_func -> .)
    INT             reduce using rule 103 (end_func -> .)
    FLOAT           reduce using rule 103 (end_func -> .)
    CHAR            reduce using rule 103 (end_func -> .)
    $end            reduce using rule 103 (end_func -> .)

    end_func                       shift and go to state 380

state 366

    (112) func_return_param -> RETURN expr . SEMICOL
    (180) expr -> expr . MUL expr
    (181) expr -> expr . DIV expr
    (182) expr -> expr . PLUS expr
    (183) expr -> expr . MINUS expr

    SEMICOL         shift and go to state 381
    MUL             shift and go to state 275
    DIV             shift and go to state 276
    PLUS            shift and go to state 277
    MINUS           shift and go to state 278


state 367

    (130) if -> IF LP expression RP check_bool gotof LB . statement RB fill_if
    (131) if -> IF LP expression RP check_bool gotof LB . statement RB goto fill_gotof else
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . while statement
    (19) statement -> . for statement
    (20) statement -> . escritura statement
    (21) statement -> . escritura_var statement
    (22) statement -> . lectura statement
    (23) statement -> . func_call statement
    (24) statement -> . ID row SEMICOL
    (25) statement -> . ID matrix SEMICOL
    (26) statement -> . empty
    (27) asignacion -> . ID IS value
    (130) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (131) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (139) while -> . WHILE guarda_num_salto LP expression RP check_bool gotofw LB statement RB fill_gotofw fill_gotow
    (144) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (153) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (154) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (155) escritura_var -> . PRINT LP any_var RP SEMICOL
    (160) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (161) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (104) func_call -> . ID LP RP SEMICOL
    (105) func_call -> . VAR tipo ID IS ID LP RP SEMICOL
    (106) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (107) func_call -> . VAR tipo ID IS ID LP func_era func_call_param RP SEMICOL
    (129) empty -> .
    (115) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (122) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 163
    IF              shift and go to state 165
    VAR             shift and go to state 166
    WHILE           shift and go to state 169
    FOR             shift and go to state 170
    PRINT           shift and go to state 171
    READ            shift and go to state 172
    RB              reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]
  ! IF              [ reduce using rule 129 (empty -> .) ]
  ! VAR             [ reduce using rule 129 (empty -> .) ]
  ! WHILE           [ reduce using rule 129 (empty -> .) ]
  ! FOR             [ reduce using rule 129 (empty -> .) ]
  ! PRINT           [ reduce using rule 129 (empty -> .) ]
  ! READ            [ reduce using rule 129 (empty -> .) ]

    statement                      shift and go to state 382
    asignacion                     shift and go to state 154
    if                             shift and go to state 155
    vars                           shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    escritura                      shift and go to state 159
    escritura_var                  shift and go to state 160
    lectura                        shift and go to state 161
    func_call                      shift and go to state 162
    empty                          shift and go to state 164
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168

state 368

    (115) var_row -> VAR tipo ID row IS LP lista2 . RP SEMICOL

    RP              shift and go to state 383


state 369

    (122) var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .

    VAR             reduce using rule 122 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    ID              reduce using rule 122 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    IF              reduce using rule 122 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    WHILE           reduce using rule 122 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    FOR             reduce using rule 122 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    PRINT           reduce using rule 122 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    READ            reduce using rule 122 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    RETURN          reduce using rule 122 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    RB              reduce using rule 122 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)


state 370

    (105) func_call -> VAR tipo ID IS ID LP RP . SEMICOL

    SEMICOL         shift and go to state 384


state 371

    (107) func_call -> VAR tipo ID IS ID LP func_era . func_call_param RP SEMICOL
    (109) func_call_param -> . expr
    (110) func_call_param -> . func_call_param COMMA expr
    (180) expr -> . expr MUL expr
    (181) expr -> . expr DIV expr
    (182) expr -> . expr PLUS expr
    (183) expr -> . expr MINUS expr
    (184) expr -> . CTE_I
    (185) expr -> . CTE_F
    (186) expr -> . ID

    CTE_I           shift and go to state 236
    CTE_F           shift and go to state 237
    ID              shift and go to state 264

    func_call_param                shift and go to state 385
    expr                           shift and go to state 267

state 372

    (40) vars2 -> vars2_1 ID IS value SEMICOL .

    ID              reduce using rule 40 (vars2 -> vars2_1 ID IS value SEMICOL .)
    IF              reduce using rule 40 (vars2 -> vars2_1 ID IS value SEMICOL .)
    VAR             reduce using rule 40 (vars2 -> vars2_1 ID IS value SEMICOL .)
    WHILE           reduce using rule 40 (vars2 -> vars2_1 ID IS value SEMICOL .)
    FOR             reduce using rule 40 (vars2 -> vars2_1 ID IS value SEMICOL .)
    PRINT           reduce using rule 40 (vars2 -> vars2_1 ID IS value SEMICOL .)
    READ            reduce using rule 40 (vars2 -> vars2_1 ID IS value SEMICOL .)
    RETURN          reduce using rule 40 (vars2 -> vars2_1 ID IS value SEMICOL .)
    RB              reduce using rule 40 (vars2 -> vars2_1 ID IS value SEMICOL .)


state 373

    (41) vars2_1 -> vars2_1 ID IS value COMMA .

    ID              reduce using rule 41 (vars2_1 -> vars2_1 ID IS value COMMA .)


state 374

    (139) while -> WHILE guarda_num_salto LP expression RP check_bool gotofw . LB statement RB fill_gotofw fill_gotow

    LB              shift and go to state 386


state 375

    (144) for -> FOR LP VAR tipo ID IS value . SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto

    SEMICOL         shift and go to state 387


state 376

    (153) escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .

    ID              reduce using rule 153 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    IF              reduce using rule 153 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    VAR             reduce using rule 153 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    WHILE           reduce using rule 153 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    FOR             reduce using rule 153 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    PRINT           reduce using rule 153 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    READ            reduce using rule 153 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    RETURN          reduce using rule 153 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    RB              reduce using rule 153 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)


state 377

    (154) escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .

    ID              reduce using rule 154 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    IF              reduce using rule 154 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    VAR             reduce using rule 154 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    WHILE           reduce using rule 154 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    FOR             reduce using rule 154 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    PRINT           reduce using rule 154 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    READ            reduce using rule 154 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    RETURN          reduce using rule 154 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    RB              reduce using rule 154 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)


state 378

    (160) lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .

    ID              reduce using rule 160 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    IF              reduce using rule 160 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    VAR             reduce using rule 160 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    WHILE           reduce using rule 160 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    FOR             reduce using rule 160 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    PRINT           reduce using rule 160 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    READ            reduce using rule 160 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    RETURN          reduce using rule 160 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    RB              reduce using rule 160 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)


state 379

    (161) lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .

    ID              reduce using rule 161 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    IF              reduce using rule 161 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    VAR             reduce using rule 161 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    WHILE           reduce using rule 161 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    FOR             reduce using rule 161 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    PRINT           reduce using rule 161 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    READ            reduce using rule 161 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    RETURN          reduce using rule 161 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    RB              reduce using rule 161 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)


state 380

    (86) funcion -> tipo ID add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func .

    VOID            reduce using rule 86 (funcion -> tipo ID add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func .)
    INT             reduce using rule 86 (funcion -> tipo ID add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func .)
    FLOAT           reduce using rule 86 (funcion -> tipo ID add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func .)
    CHAR            reduce using rule 86 (funcion -> tipo ID add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func .)
    $end            reduce using rule 86 (funcion -> tipo ID add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func .)


state 381

    (112) func_return_param -> RETURN expr SEMICOL .

    RB              reduce using rule 112 (func_return_param -> RETURN expr SEMICOL .)


state 382

    (130) if -> IF LP expression RP check_bool gotof LB statement . RB fill_if
    (131) if -> IF LP expression RP check_bool gotof LB statement . RB goto fill_gotof else

    RB              shift and go to state 388


state 383

    (115) var_row -> VAR tipo ID row IS LP lista2 RP . SEMICOL

    SEMICOL         shift and go to state 389


state 384

    (105) func_call -> VAR tipo ID IS ID LP RP SEMICOL .

    ID              reduce using rule 105 (func_call -> VAR tipo ID IS ID LP RP SEMICOL .)
    IF              reduce using rule 105 (func_call -> VAR tipo ID IS ID LP RP SEMICOL .)
    VAR             reduce using rule 105 (func_call -> VAR tipo ID IS ID LP RP SEMICOL .)
    WHILE           reduce using rule 105 (func_call -> VAR tipo ID IS ID LP RP SEMICOL .)
    FOR             reduce using rule 105 (func_call -> VAR tipo ID IS ID LP RP SEMICOL .)
    PRINT           reduce using rule 105 (func_call -> VAR tipo ID IS ID LP RP SEMICOL .)
    READ            reduce using rule 105 (func_call -> VAR tipo ID IS ID LP RP SEMICOL .)
    RETURN          reduce using rule 105 (func_call -> VAR tipo ID IS ID LP RP SEMICOL .)
    RB              reduce using rule 105 (func_call -> VAR tipo ID IS ID LP RP SEMICOL .)


state 385

    (107) func_call -> VAR tipo ID IS ID LP func_era func_call_param . RP SEMICOL
    (110) func_call_param -> func_call_param . COMMA expr

    RP              shift and go to state 390
    COMMA           shift and go to state 307


state 386

    (139) while -> WHILE guarda_num_salto LP expression RP check_bool gotofw LB . statement RB fill_gotofw fill_gotow
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . while statement
    (19) statement -> . for statement
    (20) statement -> . escritura statement
    (21) statement -> . escritura_var statement
    (22) statement -> . lectura statement
    (23) statement -> . func_call statement
    (24) statement -> . ID row SEMICOL
    (25) statement -> . ID matrix SEMICOL
    (26) statement -> . empty
    (27) asignacion -> . ID IS value
    (130) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (131) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (139) while -> . WHILE guarda_num_salto LP expression RP check_bool gotofw LB statement RB fill_gotofw fill_gotow
    (144) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (153) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (154) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (155) escritura_var -> . PRINT LP any_var RP SEMICOL
    (160) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (161) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (104) func_call -> . ID LP RP SEMICOL
    (105) func_call -> . VAR tipo ID IS ID LP RP SEMICOL
    (106) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (107) func_call -> . VAR tipo ID IS ID LP func_era func_call_param RP SEMICOL
    (129) empty -> .
    (115) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (122) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 163
    IF              shift and go to state 165
    VAR             shift and go to state 166
    WHILE           shift and go to state 169
    FOR             shift and go to state 170
    PRINT           shift and go to state 171
    READ            shift and go to state 172
    RB              reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]
  ! IF              [ reduce using rule 129 (empty -> .) ]
  ! VAR             [ reduce using rule 129 (empty -> .) ]
  ! WHILE           [ reduce using rule 129 (empty -> .) ]
  ! FOR             [ reduce using rule 129 (empty -> .) ]
  ! PRINT           [ reduce using rule 129 (empty -> .) ]
  ! READ            [ reduce using rule 129 (empty -> .) ]

    statement                      shift and go to state 391
    asignacion                     shift and go to state 154
    if                             shift and go to state 155
    vars                           shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    escritura                      shift and go to state 159
    escritura_var                  shift and go to state 160
    lectura                        shift and go to state 161
    func_call                      shift and go to state 162
    empty                          shift and go to state 164
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168

state 387

    (144) for -> FOR LP VAR tipo ID IS value SEMICOL . expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (163) expression -> . var_gt
    (164) expression -> . var_lt
    (165) expression -> . var_equal
    (166) expression -> . var_neq
    (167) expression -> . var_geq
    (168) expression -> . var_leq
    (169) expression -> . expr
    (170) expression -> . TRUE
    (171) expression -> . FALSE
    (172) expression -> . ID
    (174) var_gt -> . expr GT expr
    (173) var_lt -> . expr LT expr
    (177) var_equal -> . expr EQUAL expr
    (178) var_neq -> . expr NEQ expr
    (176) var_geq -> . expr GEQ expr
    (175) var_leq -> . expr LEQ expr
    (180) expr -> . expr MUL expr
    (181) expr -> . expr DIV expr
    (182) expr -> . expr PLUS expr
    (183) expr -> . expr MINUS expr
    (184) expr -> . CTE_I
    (185) expr -> . CTE_F
    (186) expr -> . ID

    TRUE            shift and go to state 233
    FALSE           shift and go to state 234
    ID              shift and go to state 235
    CTE_I           shift and go to state 236
    CTE_F           shift and go to state 237

    expression                     shift and go to state 392
    var_gt                         shift and go to state 226
    var_lt                         shift and go to state 227
    var_equal                      shift and go to state 228
    var_neq                        shift and go to state 229
    var_geq                        shift and go to state 230
    var_leq                        shift and go to state 231
    expr                           shift and go to state 232

state 388

    (130) if -> IF LP expression RP check_bool gotof LB statement RB . fill_if
    (131) if -> IF LP expression RP check_bool gotof LB statement RB . goto fill_gotof else
    (138) fill_if -> .
    (133) goto -> .

    ID              reduce using rule 138 (fill_if -> .)
    IF              reduce using rule 138 (fill_if -> .)
    VAR             reduce using rule 138 (fill_if -> .)
    WHILE           reduce using rule 138 (fill_if -> .)
    FOR             reduce using rule 138 (fill_if -> .)
    PRINT           reduce using rule 138 (fill_if -> .)
    READ            reduce using rule 138 (fill_if -> .)
    RETURN          reduce using rule 138 (fill_if -> .)
    RB              reduce using rule 138 (fill_if -> .)
    ELSE            reduce using rule 133 (goto -> .)

    fill_if                        shift and go to state 393
    goto                           shift and go to state 394

state 389

    (115) var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .

    VAR             reduce using rule 115 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    ID              reduce using rule 115 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    IF              reduce using rule 115 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    WHILE           reduce using rule 115 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    FOR             reduce using rule 115 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    PRINT           reduce using rule 115 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    READ            reduce using rule 115 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    RETURN          reduce using rule 115 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    RB              reduce using rule 115 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)


state 390

    (107) func_call -> VAR tipo ID IS ID LP func_era func_call_param RP . SEMICOL

    SEMICOL         shift and go to state 395


state 391

    (139) while -> WHILE guarda_num_salto LP expression RP check_bool gotofw LB statement . RB fill_gotofw fill_gotow

    RB              shift and go to state 396


state 392

    (144) for -> FOR LP VAR tipo ID IS value SEMICOL expression . check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (187) check_bool -> .

    SEMICOL         reduce using rule 187 (check_bool -> .)

    check_bool                     shift and go to state 397

state 393

    (130) if -> IF LP expression RP check_bool gotof LB statement RB fill_if .

    ID              reduce using rule 130 (if -> IF LP expression RP check_bool gotof LB statement RB fill_if .)
    IF              reduce using rule 130 (if -> IF LP expression RP check_bool gotof LB statement RB fill_if .)
    VAR             reduce using rule 130 (if -> IF LP expression RP check_bool gotof LB statement RB fill_if .)
    WHILE           reduce using rule 130 (if -> IF LP expression RP check_bool gotof LB statement RB fill_if .)
    FOR             reduce using rule 130 (if -> IF LP expression RP check_bool gotof LB statement RB fill_if .)
    PRINT           reduce using rule 130 (if -> IF LP expression RP check_bool gotof LB statement RB fill_if .)
    READ            reduce using rule 130 (if -> IF LP expression RP check_bool gotof LB statement RB fill_if .)
    RETURN          reduce using rule 130 (if -> IF LP expression RP check_bool gotof LB statement RB fill_if .)
    RB              reduce using rule 130 (if -> IF LP expression RP check_bool gotof LB statement RB fill_if .)


state 394

    (131) if -> IF LP expression RP check_bool gotof LB statement RB goto . fill_gotof else
    (136) fill_gotof -> .

    ELSE            reduce using rule 136 (fill_gotof -> .)

    fill_gotof                     shift and go to state 398

state 395

    (107) func_call -> VAR tipo ID IS ID LP func_era func_call_param RP SEMICOL .

    ID              reduce using rule 107 (func_call -> VAR tipo ID IS ID LP func_era func_call_param RP SEMICOL .)
    IF              reduce using rule 107 (func_call -> VAR tipo ID IS ID LP func_era func_call_param RP SEMICOL .)
    VAR             reduce using rule 107 (func_call -> VAR tipo ID IS ID LP func_era func_call_param RP SEMICOL .)
    WHILE           reduce using rule 107 (func_call -> VAR tipo ID IS ID LP func_era func_call_param RP SEMICOL .)
    FOR             reduce using rule 107 (func_call -> VAR tipo ID IS ID LP func_era func_call_param RP SEMICOL .)
    PRINT           reduce using rule 107 (func_call -> VAR tipo ID IS ID LP func_era func_call_param RP SEMICOL .)
    READ            reduce using rule 107 (func_call -> VAR tipo ID IS ID LP func_era func_call_param RP SEMICOL .)
    RETURN          reduce using rule 107 (func_call -> VAR tipo ID IS ID LP func_era func_call_param RP SEMICOL .)
    RB              reduce using rule 107 (func_call -> VAR tipo ID IS ID LP func_era func_call_param RP SEMICOL .)


state 396

    (139) while -> WHILE guarda_num_salto LP expression RP check_bool gotofw LB statement RB . fill_gotofw fill_gotow
    (142) fill_gotofw -> .

    ID              reduce using rule 142 (fill_gotofw -> .)
    IF              reduce using rule 142 (fill_gotofw -> .)
    VAR             reduce using rule 142 (fill_gotofw -> .)
    WHILE           reduce using rule 142 (fill_gotofw -> .)
    FOR             reduce using rule 142 (fill_gotofw -> .)
    PRINT           reduce using rule 142 (fill_gotofw -> .)
    READ            reduce using rule 142 (fill_gotofw -> .)
    RETURN          reduce using rule 142 (fill_gotofw -> .)
    RB              reduce using rule 142 (fill_gotofw -> .)

    fill_gotofw                    shift and go to state 399

state 397

    (144) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool . gotof_for SEMICOL ID opers RP LB statement RB goto
    (145) gotof_for -> .

    SEMICOL         reduce using rule 145 (gotof_for -> .)

    gotof_for                      shift and go to state 400

state 398

    (131) if -> IF LP expression RP check_bool gotof LB statement RB goto fill_gotof . else
    (132) else -> . ELSE LB statement RB fill_goto_else

    ELSE            shift and go to state 402

    else                           shift and go to state 401

state 399

    (139) while -> WHILE guarda_num_salto LP expression RP check_bool gotofw LB statement RB fill_gotofw . fill_gotow
    (143) fill_gotow -> .

    ID              reduce using rule 143 (fill_gotow -> .)
    IF              reduce using rule 143 (fill_gotow -> .)
    VAR             reduce using rule 143 (fill_gotow -> .)
    WHILE           reduce using rule 143 (fill_gotow -> .)
    FOR             reduce using rule 143 (fill_gotow -> .)
    PRINT           reduce using rule 143 (fill_gotow -> .)
    READ            reduce using rule 143 (fill_gotow -> .)
    RETURN          reduce using rule 143 (fill_gotow -> .)
    RB              reduce using rule 143 (fill_gotow -> .)

    fill_gotow                     shift and go to state 403

state 400

    (144) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for . SEMICOL ID opers RP LB statement RB goto

    SEMICOL         shift and go to state 404


state 401

    (131) if -> IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else .

    ID              reduce using rule 131 (if -> IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else .)
    IF              reduce using rule 131 (if -> IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else .)
    VAR             reduce using rule 131 (if -> IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else .)
    WHILE           reduce using rule 131 (if -> IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else .)
    FOR             reduce using rule 131 (if -> IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else .)
    PRINT           reduce using rule 131 (if -> IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else .)
    READ            reduce using rule 131 (if -> IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else .)
    RETURN          reduce using rule 131 (if -> IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else .)
    RB              reduce using rule 131 (if -> IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else .)


state 402

    (132) else -> ELSE . LB statement RB fill_goto_else

    LB              shift and go to state 405


state 403

    (139) while -> WHILE guarda_num_salto LP expression RP check_bool gotofw LB statement RB fill_gotofw fill_gotow .

    ID              reduce using rule 139 (while -> WHILE guarda_num_salto LP expression RP check_bool gotofw LB statement RB fill_gotofw fill_gotow .)
    IF              reduce using rule 139 (while -> WHILE guarda_num_salto LP expression RP check_bool gotofw LB statement RB fill_gotofw fill_gotow .)
    VAR             reduce using rule 139 (while -> WHILE guarda_num_salto LP expression RP check_bool gotofw LB statement RB fill_gotofw fill_gotow .)
    WHILE           reduce using rule 139 (while -> WHILE guarda_num_salto LP expression RP check_bool gotofw LB statement RB fill_gotofw fill_gotow .)
    FOR             reduce using rule 139 (while -> WHILE guarda_num_salto LP expression RP check_bool gotofw LB statement RB fill_gotofw fill_gotow .)
    PRINT           reduce using rule 139 (while -> WHILE guarda_num_salto LP expression RP check_bool gotofw LB statement RB fill_gotofw fill_gotow .)
    READ            reduce using rule 139 (while -> WHILE guarda_num_salto LP expression RP check_bool gotofw LB statement RB fill_gotofw fill_gotow .)
    RETURN          reduce using rule 139 (while -> WHILE guarda_num_salto LP expression RP check_bool gotofw LB statement RB fill_gotofw fill_gotow .)
    RB              reduce using rule 139 (while -> WHILE guarda_num_salto LP expression RP check_bool gotofw LB statement RB fill_gotofw fill_gotow .)


state 404

    (144) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL . ID opers RP LB statement RB goto

    ID              shift and go to state 406


state 405

    (132) else -> ELSE LB . statement RB fill_goto_else
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . while statement
    (19) statement -> . for statement
    (20) statement -> . escritura statement
    (21) statement -> . escritura_var statement
    (22) statement -> . lectura statement
    (23) statement -> . func_call statement
    (24) statement -> . ID row SEMICOL
    (25) statement -> . ID matrix SEMICOL
    (26) statement -> . empty
    (27) asignacion -> . ID IS value
    (130) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (131) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (139) while -> . WHILE guarda_num_salto LP expression RP check_bool gotofw LB statement RB fill_gotofw fill_gotow
    (144) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (153) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (154) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (155) escritura_var -> . PRINT LP any_var RP SEMICOL
    (160) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (161) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (104) func_call -> . ID LP RP SEMICOL
    (105) func_call -> . VAR tipo ID IS ID LP RP SEMICOL
    (106) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (107) func_call -> . VAR tipo ID IS ID LP func_era func_call_param RP SEMICOL
    (129) empty -> .
    (115) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (122) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 163
    IF              shift and go to state 165
    VAR             shift and go to state 166
    WHILE           shift and go to state 169
    FOR             shift and go to state 170
    PRINT           shift and go to state 171
    READ            shift and go to state 172
    RB              reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]
  ! IF              [ reduce using rule 129 (empty -> .) ]
  ! VAR             [ reduce using rule 129 (empty -> .) ]
  ! WHILE           [ reduce using rule 129 (empty -> .) ]
  ! FOR             [ reduce using rule 129 (empty -> .) ]
  ! PRINT           [ reduce using rule 129 (empty -> .) ]
  ! READ            [ reduce using rule 129 (empty -> .) ]

    statement                      shift and go to state 407
    asignacion                     shift and go to state 154
    if                             shift and go to state 155
    vars                           shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    escritura                      shift and go to state 159
    escritura_var                  shift and go to state 160
    lectura                        shift and go to state 161
    func_call                      shift and go to state 162
    empty                          shift and go to state 164
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168

state 406

    (144) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID . opers RP LB statement RB goto
    (146) opers -> . IS value
    (147) opers -> . PLUS IS value
    (148) opers -> . MINUS IS value
    (149) opers -> . DIV IS value
    (150) opers -> . MUL IS value
    (151) opers -> . PLUS PLUS
    (152) opers -> . MINUS MINUS

    IS              shift and go to state 408
    PLUS            shift and go to state 410
    MINUS           shift and go to state 411
    DIV             shift and go to state 412
    MUL             shift and go to state 413

    opers                          shift and go to state 409

state 407

    (132) else -> ELSE LB statement . RB fill_goto_else

    RB              shift and go to state 414


state 408

    (146) opers -> IS . value
    (75) value -> . CTE_F
    (76) value -> . CTE_I
    (77) value -> . ID
    (78) value -> . CTE_C
    (79) value -> . COMILLA ID COMILLA
    (80) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88
    ID              shift and go to state 85
    CTE_C           shift and go to state 89
    COMILLA         shift and go to state 90
    COMILLAS        shift and go to state 91

    value                          shift and go to state 415

state 409

    (144) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers . RP LB statement RB goto

    RP              shift and go to state 416


state 410

    (147) opers -> PLUS . IS value
    (151) opers -> PLUS . PLUS

    IS              shift and go to state 418
    PLUS            shift and go to state 417


state 411

    (148) opers -> MINUS . IS value
    (152) opers -> MINUS . MINUS

    IS              shift and go to state 420
    MINUS           shift and go to state 419


state 412

    (149) opers -> DIV . IS value

    IS              shift and go to state 421


state 413

    (150) opers -> MUL . IS value

    IS              shift and go to state 422


state 414

    (132) else -> ELSE LB statement RB . fill_goto_else
    (135) fill_goto_else -> .

    ID              reduce using rule 135 (fill_goto_else -> .)
    IF              reduce using rule 135 (fill_goto_else -> .)
    VAR             reduce using rule 135 (fill_goto_else -> .)
    WHILE           reduce using rule 135 (fill_goto_else -> .)
    FOR             reduce using rule 135 (fill_goto_else -> .)
    PRINT           reduce using rule 135 (fill_goto_else -> .)
    READ            reduce using rule 135 (fill_goto_else -> .)
    RETURN          reduce using rule 135 (fill_goto_else -> .)
    RB              reduce using rule 135 (fill_goto_else -> .)

    fill_goto_else                 shift and go to state 423

state 415

    (146) opers -> IS value .

    RP              reduce using rule 146 (opers -> IS value .)


state 416

    (144) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP . LB statement RB goto

    LB              shift and go to state 424


state 417

    (151) opers -> PLUS PLUS .

    RP              reduce using rule 151 (opers -> PLUS PLUS .)


state 418

    (147) opers -> PLUS IS . value
    (75) value -> . CTE_F
    (76) value -> . CTE_I
    (77) value -> . ID
    (78) value -> . CTE_C
    (79) value -> . COMILLA ID COMILLA
    (80) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88
    ID              shift and go to state 85
    CTE_C           shift and go to state 89
    COMILLA         shift and go to state 90
    COMILLAS        shift and go to state 91

    value                          shift and go to state 425

state 419

    (152) opers -> MINUS MINUS .

    RP              reduce using rule 152 (opers -> MINUS MINUS .)


state 420

    (148) opers -> MINUS IS . value
    (75) value -> . CTE_F
    (76) value -> . CTE_I
    (77) value -> . ID
    (78) value -> . CTE_C
    (79) value -> . COMILLA ID COMILLA
    (80) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88
    ID              shift and go to state 85
    CTE_C           shift and go to state 89
    COMILLA         shift and go to state 90
    COMILLAS        shift and go to state 91

    value                          shift and go to state 426

state 421

    (149) opers -> DIV IS . value
    (75) value -> . CTE_F
    (76) value -> . CTE_I
    (77) value -> . ID
    (78) value -> . CTE_C
    (79) value -> . COMILLA ID COMILLA
    (80) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88
    ID              shift and go to state 85
    CTE_C           shift and go to state 89
    COMILLA         shift and go to state 90
    COMILLAS        shift and go to state 91

    value                          shift and go to state 427

state 422

    (150) opers -> MUL IS . value
    (75) value -> . CTE_F
    (76) value -> . CTE_I
    (77) value -> . ID
    (78) value -> . CTE_C
    (79) value -> . COMILLA ID COMILLA
    (80) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88
    ID              shift and go to state 85
    CTE_C           shift and go to state 89
    COMILLA         shift and go to state 90
    COMILLAS        shift and go to state 91

    value                          shift and go to state 428

state 423

    (132) else -> ELSE LB statement RB fill_goto_else .

    ID              reduce using rule 132 (else -> ELSE LB statement RB fill_goto_else .)
    IF              reduce using rule 132 (else -> ELSE LB statement RB fill_goto_else .)
    VAR             reduce using rule 132 (else -> ELSE LB statement RB fill_goto_else .)
    WHILE           reduce using rule 132 (else -> ELSE LB statement RB fill_goto_else .)
    FOR             reduce using rule 132 (else -> ELSE LB statement RB fill_goto_else .)
    PRINT           reduce using rule 132 (else -> ELSE LB statement RB fill_goto_else .)
    READ            reduce using rule 132 (else -> ELSE LB statement RB fill_goto_else .)
    RETURN          reduce using rule 132 (else -> ELSE LB statement RB fill_goto_else .)
    RB              reduce using rule 132 (else -> ELSE LB statement RB fill_goto_else .)


state 424

    (144) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB . statement RB goto
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . while statement
    (19) statement -> . for statement
    (20) statement -> . escritura statement
    (21) statement -> . escritura_var statement
    (22) statement -> . lectura statement
    (23) statement -> . func_call statement
    (24) statement -> . ID row SEMICOL
    (25) statement -> . ID matrix SEMICOL
    (26) statement -> . empty
    (27) asignacion -> . ID IS value
    (130) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (131) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (139) while -> . WHILE guarda_num_salto LP expression RP check_bool gotofw LB statement RB fill_gotofw fill_gotow
    (144) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (153) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (154) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (155) escritura_var -> . PRINT LP any_var RP SEMICOL
    (160) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (161) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (104) func_call -> . ID LP RP SEMICOL
    (105) func_call -> . VAR tipo ID IS ID LP RP SEMICOL
    (106) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (107) func_call -> . VAR tipo ID IS ID LP func_era func_call_param RP SEMICOL
    (129) empty -> .
    (115) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (122) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 163
    IF              shift and go to state 165
    VAR             shift and go to state 166
    WHILE           shift and go to state 169
    FOR             shift and go to state 170
    PRINT           shift and go to state 171
    READ            shift and go to state 172
    RB              reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]
  ! IF              [ reduce using rule 129 (empty -> .) ]
  ! VAR             [ reduce using rule 129 (empty -> .) ]
  ! WHILE           [ reduce using rule 129 (empty -> .) ]
  ! FOR             [ reduce using rule 129 (empty -> .) ]
  ! PRINT           [ reduce using rule 129 (empty -> .) ]
  ! READ            [ reduce using rule 129 (empty -> .) ]

    statement                      shift and go to state 429
    asignacion                     shift and go to state 154
    if                             shift and go to state 155
    vars                           shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    escritura                      shift and go to state 159
    escritura_var                  shift and go to state 160
    lectura                        shift and go to state 161
    func_call                      shift and go to state 162
    empty                          shift and go to state 164
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168

state 425

    (147) opers -> PLUS IS value .

    RP              reduce using rule 147 (opers -> PLUS IS value .)


state 426

    (148) opers -> MINUS IS value .

    RP              reduce using rule 148 (opers -> MINUS IS value .)


state 427

    (149) opers -> DIV IS value .

    RP              reduce using rule 149 (opers -> DIV IS value .)


state 428

    (150) opers -> MUL IS value .

    RP              reduce using rule 150 (opers -> MUL IS value .)


state 429

    (144) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement . RB goto

    RB              shift and go to state 430


state 430

    (144) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB . goto
    (133) goto -> .

    ID              reduce using rule 133 (goto -> .)
    IF              reduce using rule 133 (goto -> .)
    VAR             reduce using rule 133 (goto -> .)
    WHILE           reduce using rule 133 (goto -> .)
    FOR             reduce using rule 133 (goto -> .)
    PRINT           reduce using rule 133 (goto -> .)
    READ            reduce using rule 133 (goto -> .)
    RETURN          reduce using rule 133 (goto -> .)
    RB              reduce using rule 133 (goto -> .)

    goto                           shift and go to state 431

state 431

    (144) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .

    ID              reduce using rule 144 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    IF              reduce using rule 144 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    VAR             reduce using rule 144 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    WHILE           reduce using rule 144 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    FOR             reduce using rule 144 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    PRINT           reduce using rule 144 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    READ            reduce using rule 144 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    RETURN          reduce using rule 144 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    RB              reduce using rule 144 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VOID in state 4 resolved as shift
WARNING: shift/reduce conflict for INT in state 4 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 4 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 4 resolved as shift
WARNING: shift/reduce conflict for VOID in state 21 resolved as shift
WARNING: shift/reduce conflict for INT in state 21 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 21 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 21 resolved as shift
WARNING: shift/reduce conflict for ID in state 28 resolved as shift
WARNING: shift/reduce conflict for VOID in state 39 resolved as shift
WARNING: shift/reduce conflict for INT in state 39 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 39 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 39 resolved as shift
WARNING: shift/reduce conflict for VOID in state 59 resolved as shift
WARNING: shift/reduce conflict for INT in state 59 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 59 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 59 resolved as shift
WARNING: shift/reduce conflict for RP in state 75 resolved as shift
WARNING: shift/reduce conflict for RP in state 76 resolved as shift
WARNING: shift/reduce conflict for RP in state 77 resolved as shift
WARNING: shift/reduce conflict for RP in state 78 resolved as shift
WARNING: shift/reduce conflict for ID in state 133 resolved as shift
WARNING: shift/reduce conflict for IF in state 133 resolved as shift
WARNING: shift/reduce conflict for VAR in state 133 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 133 resolved as shift
WARNING: shift/reduce conflict for FOR in state 133 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 133 resolved as shift
WARNING: shift/reduce conflict for READ in state 133 resolved as shift
WARNING: shift/reduce conflict for ID in state 134 resolved as shift
WARNING: shift/reduce conflict for IF in state 134 resolved as shift
WARNING: shift/reduce conflict for VAR in state 134 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 134 resolved as shift
WARNING: shift/reduce conflict for FOR in state 134 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 134 resolved as shift
WARNING: shift/reduce conflict for READ in state 134 resolved as shift
WARNING: shift/reduce conflict for VAR in state 145 resolved as shift
WARNING: shift/reduce conflict for VAR in state 152 resolved as shift
WARNING: shift/reduce conflict for ID in state 155 resolved as shift
WARNING: shift/reduce conflict for IF in state 155 resolved as shift
WARNING: shift/reduce conflict for VAR in state 155 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 155 resolved as shift
WARNING: shift/reduce conflict for FOR in state 155 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 155 resolved as shift
WARNING: shift/reduce conflict for READ in state 155 resolved as shift
WARNING: shift/reduce conflict for ID in state 156 resolved as shift
WARNING: shift/reduce conflict for IF in state 156 resolved as shift
WARNING: shift/reduce conflict for VAR in state 156 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 156 resolved as shift
WARNING: shift/reduce conflict for FOR in state 156 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 156 resolved as shift
WARNING: shift/reduce conflict for READ in state 156 resolved as shift
WARNING: shift/reduce conflict for ID in state 157 resolved as shift
WARNING: shift/reduce conflict for IF in state 157 resolved as shift
WARNING: shift/reduce conflict for VAR in state 157 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 157 resolved as shift
WARNING: shift/reduce conflict for FOR in state 157 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 157 resolved as shift
WARNING: shift/reduce conflict for READ in state 157 resolved as shift
WARNING: shift/reduce conflict for ID in state 158 resolved as shift
WARNING: shift/reduce conflict for IF in state 158 resolved as shift
WARNING: shift/reduce conflict for VAR in state 158 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 158 resolved as shift
WARNING: shift/reduce conflict for FOR in state 158 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 158 resolved as shift
WARNING: shift/reduce conflict for READ in state 158 resolved as shift
WARNING: shift/reduce conflict for ID in state 159 resolved as shift
WARNING: shift/reduce conflict for IF in state 159 resolved as shift
WARNING: shift/reduce conflict for VAR in state 159 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 159 resolved as shift
WARNING: shift/reduce conflict for FOR in state 159 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 159 resolved as shift
WARNING: shift/reduce conflict for READ in state 159 resolved as shift
WARNING: shift/reduce conflict for ID in state 160 resolved as shift
WARNING: shift/reduce conflict for IF in state 160 resolved as shift
WARNING: shift/reduce conflict for VAR in state 160 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 160 resolved as shift
WARNING: shift/reduce conflict for FOR in state 160 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 160 resolved as shift
WARNING: shift/reduce conflict for READ in state 160 resolved as shift
WARNING: shift/reduce conflict for ID in state 161 resolved as shift
WARNING: shift/reduce conflict for IF in state 161 resolved as shift
WARNING: shift/reduce conflict for VAR in state 161 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 161 resolved as shift
WARNING: shift/reduce conflict for FOR in state 161 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 161 resolved as shift
WARNING: shift/reduce conflict for READ in state 161 resolved as shift
WARNING: shift/reduce conflict for ID in state 162 resolved as shift
WARNING: shift/reduce conflict for IF in state 162 resolved as shift
WARNING: shift/reduce conflict for VAR in state 162 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 162 resolved as shift
WARNING: shift/reduce conflict for FOR in state 162 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 162 resolved as shift
WARNING: shift/reduce conflict for READ in state 162 resolved as shift
WARNING: shift/reduce conflict for VAR in state 167 resolved as shift
WARNING: shift/reduce conflict for VAR in state 167 resolved as shift
WARNING: shift/reduce conflict for VAR in state 168 resolved as shift
WARNING: shift/reduce conflict for VAR in state 168 resolved as shift
WARNING: shift/reduce conflict for ID in state 177 resolved as shift
WARNING: shift/reduce conflict for IF in state 177 resolved as shift
WARNING: shift/reduce conflict for VAR in state 177 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 177 resolved as shift
WARNING: shift/reduce conflict for FOR in state 177 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 177 resolved as shift
WARNING: shift/reduce conflict for READ in state 177 resolved as shift
WARNING: shift/reduce conflict for VAR in state 181 resolved as shift
WARNING: shift/reduce conflict for VAR in state 183 resolved as shift
WARNING: shift/reduce conflict for ID in state 184 resolved as shift
WARNING: shift/reduce conflict for IF in state 184 resolved as shift
WARNING: shift/reduce conflict for VAR in state 184 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 184 resolved as shift
WARNING: shift/reduce conflict for FOR in state 184 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 184 resolved as shift
WARNING: shift/reduce conflict for READ in state 184 resolved as shift
WARNING: shift/reduce conflict for ID in state 186 resolved as shift
WARNING: shift/reduce conflict for IF in state 186 resolved as shift
WARNING: shift/reduce conflict for VAR in state 186 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 186 resolved as shift
WARNING: shift/reduce conflict for FOR in state 186 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 186 resolved as shift
WARNING: shift/reduce conflict for READ in state 186 resolved as shift
WARNING: shift/reduce conflict for ID in state 200 resolved as shift
WARNING: shift/reduce conflict for ID in state 213 resolved as shift
WARNING: shift/reduce conflict for ID in state 214 resolved as shift
WARNING: shift/reduce conflict for IF in state 214 resolved as shift
WARNING: shift/reduce conflict for VAR in state 214 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 214 resolved as shift
WARNING: shift/reduce conflict for FOR in state 214 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 214 resolved as shift
WARNING: shift/reduce conflict for READ in state 214 resolved as shift
WARNING: shift/reduce conflict for ID in state 215 resolved as shift
WARNING: shift/reduce conflict for IF in state 215 resolved as shift
WARNING: shift/reduce conflict for VAR in state 215 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 215 resolved as shift
WARNING: shift/reduce conflict for FOR in state 215 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 215 resolved as shift
WARNING: shift/reduce conflict for READ in state 215 resolved as shift
WARNING: shift/reduce conflict for CTE_I in state 289 resolved as shift
WARNING: shift/reduce conflict for CTE_F in state 289 resolved as shift
WARNING: shift/reduce conflict for ID in state 289 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 289 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 289 resolved as shift
WARNING: shift/reduce conflict for ID in state 367 resolved as shift
WARNING: shift/reduce conflict for IF in state 367 resolved as shift
WARNING: shift/reduce conflict for VAR in state 367 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 367 resolved as shift
WARNING: shift/reduce conflict for FOR in state 367 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 367 resolved as shift
WARNING: shift/reduce conflict for READ in state 367 resolved as shift
WARNING: shift/reduce conflict for ID in state 386 resolved as shift
WARNING: shift/reduce conflict for IF in state 386 resolved as shift
WARNING: shift/reduce conflict for VAR in state 386 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 386 resolved as shift
WARNING: shift/reduce conflict for FOR in state 386 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 386 resolved as shift
WARNING: shift/reduce conflict for READ in state 386 resolved as shift
WARNING: shift/reduce conflict for ID in state 405 resolved as shift
WARNING: shift/reduce conflict for IF in state 405 resolved as shift
WARNING: shift/reduce conflict for VAR in state 405 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 405 resolved as shift
WARNING: shift/reduce conflict for FOR in state 405 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 405 resolved as shift
WARNING: shift/reduce conflict for READ in state 405 resolved as shift
WARNING: shift/reduce conflict for ID in state 424 resolved as shift
WARNING: shift/reduce conflict for IF in state 424 resolved as shift
WARNING: shift/reduce conflict for VAR in state 424 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 424 resolved as shift
WARNING: shift/reduce conflict for FOR in state 424 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 424 resolved as shift
WARNING: shift/reduce conflict for READ in state 424 resolved as shift
WARNING: reduce/reduce conflict in state 4 resolved using rule (quad_main -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 4
WARNING: reduce/reduce conflict in state 6 resolved using rule (quad_main -> <empty>)
WARNING: rejected rule (end -> <empty>) in state 6
WARNING: reduce/reduce conflict in state 11 resolved using rule (varsG -> var_rowG)
WARNING: rejected rule (empty -> <empty>) in state 11
WARNING: reduce/reduce conflict in state 12 resolved using rule (varsG -> var_matrixG)
WARNING: rejected rule (empty -> <empty>) in state 12
WARNING: reduce/reduce conflict in state 13 resolved using rule (varsG -> declarar_func)
WARNING: rejected rule (empty -> <empty>) in state 13
WARNING: reduce/reduce conflict in state 14 resolved using rule (funciones -> empty)
WARNING: rejected rule (varsG -> empty) in state 14
WARNING: reduce/reduce conflict in state 52 resolved using rule (vars2_1G -> empty)
WARNING: rejected rule (vars3_1G -> empty) in state 52
WARNING: reduce/reduce conflict in state 68 resolved using rule (vars1G -> ID SEMICOL)
WARNING: rejected rule (vars3G -> ID SEMICOL) in state 68
WARNING: reduce/reduce conflict in state 164 resolved using rule (statement -> empty)
WARNING: rejected rule (vars -> empty) in state 164
WARNING: reduce/reduce conflict in state 167 resolved using rule (vars -> var_row)
WARNING: rejected rule (empty -> <empty>) in state 167
WARNING: reduce/reduce conflict in state 168 resolved using rule (vars -> var_matrix)
WARNING: rejected rule (empty -> <empty>) in state 168
WARNING: reduce/reduce conflict in state 235 resolved using rule (expression -> ID)
WARNING: rejected rule (expr -> ID) in state 235
WARNING: reduce/reduce conflict in state 245 resolved using rule (vars2_1 -> empty)
WARNING: rejected rule (vars3_1 -> empty) in state 245
WARNING: reduce/reduce conflict in state 280 resolved using rule (vars1 -> ID SEMICOL)
WARNING: rejected rule (vars3 -> ID SEMICOL) in state 280
WARNING: reduce/reduce conflict in state 289 resolved using rule (empty -> <empty>)
WARNING: rejected rule (expression -> expr) in state 289
WARNING: reduce/reduce conflict in state 292 resolved using rule (expression -> ID)
WARNING: rejected rule (expr -> ID) in state 292
WARNING: reduce/reduce conflict in state 323 resolved using rule (value -> ID)
WARNING: rejected rule (expr -> ID) in state 323
WARNING: reduce/reduce conflict in state 326 resolved using rule (value -> CTE_F)
WARNING: rejected rule (expr -> CTE_F) in state 326
WARNING: reduce/reduce conflict in state 327 resolved using rule (value -> CTE_I)
WARNING: rejected rule (expr -> CTE_I) in state 327
WARNING: reduce/reduce conflict in state 343 resolved using rule (value -> ID)
WARNING: rejected rule (expr -> ID) in state 343
WARNING: Rule (vars3_1G -> empty) is never reduced
WARNING: Rule (vars3G -> ID SEMICOL) is never reduced
WARNING: Rule (vars3_1 -> empty) is never reduced
WARNING: Rule (vars3 -> ID SEMICOL) is never reduced
