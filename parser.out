Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BEGIN
    BOOL
    COL
    CONST
    CTE_B
    CTE_S
    DETERMATRIZ
    DO
    DOT
    ELIF
    END
    EOF
    FUNCTION
    GLOBAL
    INPUT
    INVERMATRIZ
    LET
    LOCAL
    NOT
    OR
    PRINT
    RETURN
    SELECT
    SWITCH
    THEN
    TRANSMATRIZ
    WHILE

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SEMICOL programa1
Rule 2     programa1 -> vars funcion main funcion
Rule 3     programa1 -> funcion main funcion
Rule 4     programa1 -> vars funcion
Rule 5     programa1 -> funcion
Rule 6     programa1 -> empty
Rule 7     main -> MAIN LP RP LB statement RB
Rule 8     statement -> asignacion SEMICOL statement
Rule 9     statement -> if statement
Rule 10    statement -> vars statement
Rule 11    statement -> p_operacion statement
Rule 12    statement -> oper_aritmetica statement
Rule 13    statement -> empty
Rule 14    asignacion -> ID IS value
Rule 15    vars -> VAR tipo vars1
Rule 16    vars -> VAR tipo vars2
Rule 17    vars -> VAR tipo vars3
Rule 18    vars -> VAR tipo vars4
Rule 19    vars -> VAR tipo oper_aritmetica
Rule 20    vars -> varsG
Rule 21    vars -> empty
Rule 22    vars1 -> ID SEMICOL
Rule 23    vars1 -> ID SEMICOL vars
Rule 24    vars2 -> ID IS value SEMICOL
Rule 25    vars2 -> ID IS value SEMICOL vars
Rule 26    vars3 -> ID COMMA vars3
Rule 27    vars3 -> ID SEMICOL vars
Rule 28    vars3 -> ID SEMICOL
Rule 29    vars4 -> ID IS value check_type COMMA vars4
Rule 30    vars4 -> ID IS value check_type SEMICOL vars
Rule 31    vars4 -> ID IS value check_type SEMICOL
Rule 32    vars4 -> empty
Rule 33    varsG -> VAR tipo vars1G
Rule 34    varsG -> VAR tipo vars2G
Rule 35    varsG -> VAR tipo vars3G
Rule 36    varsG -> VAR tipo vars4G
Rule 37    varsG -> VAR LB varsG RB
Rule 38    vars1G -> ID SEMICOL
Rule 39    vars1G -> ID SEMICOL varsG
Rule 40    vars2G -> ID IS value check_type SEMICOL
Rule 41    vars2G -> ID IS value check_type SEMICOL varsG
Rule 42    vars3G -> ID COMMA vars3G
Rule 43    vars3G -> ID SEMICOL varsG
Rule 44    vars3G -> ID SEMICOL
Rule 45    vars4G -> ID IS value check_type COMMA vars4G
Rule 46    vars4G -> ID IS value check_type SEMICOL varsG
Rule 47    vars4G -> ID IS value check_type SEMICOL
Rule 48    vars4G -> empty
Rule 49    tipo -> INT
Rule 50    tipo -> FLOAT
Rule 51    tipo -> CHAR
Rule 52    value -> CTE_F
Rule 53    value -> CTE_I
Rule 54    value -> ID
Rule 55    value -> CTE_C
Rule 56    value -> COMILLA ID COMILLA
Rule 57    value -> COMILLAS ID COMILLAS
Rule 58    check_type -> <empty>
Rule 59    funcion -> VOID ID LP param RP LB statement RB funcion
Rule 60    funcion -> VOID ID LP param RP LB statement RB
Rule 61    funcion -> tipo ID LP param RP LB statement RB funcion
Rule 62    funcion -> tipo ID LP param RP LB statement RB
Rule 63    param -> <empty>
Rule 64    calc -> expr
Rule 65    calc -> asignacion
Rule 66    calc -> empty
Rule 67    calc -> row
Rule 68    calc -> matrix
Rule 69    var_lt -> expr LT expr
Rule 70    var_gt -> expr GT expr
Rule 71    var_leq -> expr LEQ expr
Rule 72    var_geq -> expr GEQ expr
Rule 73    var_equal -> expr EQUAL expr
Rule 74    var_neq -> expr NEQ expr
Rule 75    oper_aritmetica -> ID IS expr SEMICOL
Rule 76    expr -> expr MUL expr
Rule 77    expr -> expr DIV expr
Rule 78    expr -> expr PLUS expr
Rule 79    expr -> expr MINUS expr
Rule 80    expr -> CTE_I
Rule 81    expr -> CTE_F
Rule 82    expr -> ID
Rule 83    expr -> ID row
Rule 84    expr -> ID matrix
Rule 85    value_list -> expr
Rule 86    row_list -> row
Rule 87    row_list -> expr SEMICOL expr
Rule 88    row -> LC expr RC
Rule 89    matrix -> row row
Rule 90    empty -> <empty>
Rule 91    if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto
Rule 92    if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto elseif
Rule 93    if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto else
Rule 94    elseif -> ELSEIF LP expression RP check_bool LB statement RB guarda_salto
Rule 95    elseif -> ELSEIF LP expression RP check_bool LB statement RB guarda_salto elseif
Rule 96    elseif -> ELSEIF LP expression RP check_bool LB statement RB guarda_salto else
Rule 97    else -> ELSE LB statement RB guarda_salto
Rule 98    expression -> var_gt
Rule 99    expression -> var_lt
Rule 100   expression -> var_equal
Rule 101   expression -> var_neq
Rule 102   expression -> var_geq
Rule 103   expression -> var_leq
Rule 104   expression -> TRUE
Rule 105   expression -> FALSE
Rule 106   expression -> ID
Rule 107   check_bool -> <empty>
Rule 108   gotof -> <empty>
Rule 109   guarda_salto -> <empty>
Rule 110   p_operacion -> <empty>

Terminals, with rules where they appear

AND                  : 
BEGIN                : 
BOOL                 : 
CHAR                 : 51
COL                  : 
COMILLA              : 56 56
COMILLAS             : 57 57
COMMA                : 26 29 42 45
CONST                : 
CTE_B                : 
CTE_C                : 55
CTE_F                : 52 81
CTE_I                : 53 80
CTE_S                : 
DETERMATRIZ          : 
DIV                  : 77
DO                   : 
DOT                  : 
ELIF                 : 
ELSE                 : 97
ELSEIF               : 94 95 96
END                  : 
EOF                  : 
EQUAL                : 73
FALSE                : 105
FLOAT                : 50
FUNCTION             : 
GEQ                  : 72
GLOBAL               : 
GT                   : 70
ID                   : 1 14 22 23 24 25 26 27 28 29 30 31 38 39 40 41 42 43 44 45 46 47 54 56 57 59 60 61 62 75 82 83 84 106
IF                   : 91 92 93
INPUT                : 
INT                  : 49
INVERMATRIZ          : 
IS                   : 14 24 25 29 30 31 40 41 45 46 47 75
LB                   : 7 37 59 60 61 62 91 92 93 94 95 96 97
LC                   : 88
LEQ                  : 71
LET                  : 
LOCAL                : 
LP                   : 7 59 60 61 62 91 92 93 94 95 96
LT                   : 69
MAIN                 : 7
MINUS                : 79
MUL                  : 76
NEQ                  : 74
NOT                  : 
OR                   : 
PLUS                 : 78
PRINT                : 
PROGRAM              : 1
RB                   : 7 37 59 60 61 62 91 92 93 94 95 96 97
RC                   : 88
RETURN               : 
RP                   : 7 59 60 61 62 91 92 93 94 95 96
SELECT               : 
SEMICOL              : 1 8 22 23 24 25 27 28 30 31 38 39 40 41 43 44 46 47 75 87
SWITCH               : 
THEN                 : 
TRANSMATRIZ          : 
TRUE                 : 104
VAR                  : 15 16 17 18 19 33 34 35 36 37
VOID                 : 59 60
WHILE                : 
error                : 

Nonterminals, with rules where they appear

asignacion           : 8 65
calc                 : 
check_bool           : 91 92 93 94 95 96
check_type           : 29 30 31 40 41 45 46 47
else                 : 93 96
elseif               : 92 95
empty                : 6 13 21 32 48 66
expr                 : 64 69 69 70 70 71 71 72 72 73 73 74 74 75 76 76 77 77 78 78 79 79 85 87 87 88
expression           : 91 92 93 94 95 96
funcion              : 2 2 3 3 4 5 59 61
gotof                : 91 92 93
guarda_salto         : 91 92 93 94 95 96 97
if                   : 9
main                 : 2 3
matrix               : 68 84
oper_aritmetica      : 12 19
p_operacion          : 11
param                : 59 60 61 62
programa             : 0
programa1            : 1
row                  : 67 83 86 89 89
row_list             : 
statement            : 7 8 9 10 11 12 59 60 61 62 91 92 93 94 95 96 97
tipo                 : 15 16 17 18 19 33 34 35 36 61 62
value                : 14 24 25 29 30 31 40 41 45 46 47
value_list           : 
var_equal            : 100
var_geq              : 102
var_gt               : 98
var_leq              : 103
var_lt               : 99
var_neq              : 101
vars                 : 2 4 10 23 25 27 30
vars1                : 15
vars1G               : 33
vars2                : 16
vars2G               : 34
vars3                : 17 26
vars3G               : 35 42
vars4                : 18 29
vars4G               : 36 45
varsG                : 20 37 39 41 43 46

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SEMICOL programa1

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID SEMICOL programa1

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . SEMICOL programa1

    SEMICOL         shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SEMICOL . programa1
    (2) programa1 -> . vars funcion main funcion
    (3) programa1 -> . funcion main funcion
    (4) programa1 -> . vars funcion
    (5) programa1 -> . funcion
    (6) programa1 -> . empty
    (15) vars -> . VAR tipo vars1
    (16) vars -> . VAR tipo vars2
    (17) vars -> . VAR tipo vars3
    (18) vars -> . VAR tipo vars4
    (19) vars -> . VAR tipo oper_aritmetica
    (20) vars -> . varsG
    (21) vars -> . empty
    (59) funcion -> . VOID ID LP param RP LB statement RB funcion
    (60) funcion -> . VOID ID LP param RP LB statement RB
    (61) funcion -> . tipo ID LP param RP LB statement RB funcion
    (62) funcion -> . tipo ID LP param RP LB statement RB
    (90) empty -> .
    (33) varsG -> . VAR tipo vars1G
    (34) varsG -> . VAR tipo vars2G
    (35) varsG -> . VAR tipo vars3G
    (36) varsG -> . VAR tipo vars4G
    (37) varsG -> . VAR LB varsG RB
    (49) tipo -> . INT
    (50) tipo -> . FLOAT
    (51) tipo -> . CHAR

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    VAR             shift and go to state 9
    VOID            shift and go to state 12
    $end            reduce using rule 90 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

  ! VOID            [ reduce using rule 90 (empty -> .) ]
  ! INT             [ reduce using rule 90 (empty -> .) ]
  ! FLOAT           [ reduce using rule 90 (empty -> .) ]
  ! CHAR            [ reduce using rule 90 (empty -> .) ]

    programa1                      shift and go to state 5
    vars                           shift and go to state 6
    funcion                        shift and go to state 7
    empty                          shift and go to state 8
    tipo                           shift and go to state 10
    varsG                          shift and go to state 11

state 5

    (1) programa -> PROGRAM ID SEMICOL programa1 .

    $end            reduce using rule 1 (programa -> PROGRAM ID SEMICOL programa1 .)


state 6

    (2) programa1 -> vars . funcion main funcion
    (4) programa1 -> vars . funcion
    (59) funcion -> . VOID ID LP param RP LB statement RB funcion
    (60) funcion -> . VOID ID LP param RP LB statement RB
    (61) funcion -> . tipo ID LP param RP LB statement RB funcion
    (62) funcion -> . tipo ID LP param RP LB statement RB
    (49) tipo -> . INT
    (50) tipo -> . FLOAT
    (51) tipo -> . CHAR

    VOID            shift and go to state 12
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

    funcion                        shift and go to state 16
    tipo                           shift and go to state 10

state 7

    (3) programa1 -> funcion . main funcion
    (5) programa1 -> funcion .
    (7) main -> . MAIN LP RP LB statement RB

    $end            reduce using rule 5 (programa1 -> funcion .)
    MAIN            shift and go to state 18

    main                           shift and go to state 17

state 8

    (6) programa1 -> empty .
    (21) vars -> empty .

    $end            reduce using rule 6 (programa1 -> empty .)
    VOID            reduce using rule 21 (vars -> empty .)
    INT             reduce using rule 21 (vars -> empty .)
    FLOAT           reduce using rule 21 (vars -> empty .)
    CHAR            reduce using rule 21 (vars -> empty .)


state 9

    (15) vars -> VAR . tipo vars1
    (16) vars -> VAR . tipo vars2
    (17) vars -> VAR . tipo vars3
    (18) vars -> VAR . tipo vars4
    (19) vars -> VAR . tipo oper_aritmetica
    (33) varsG -> VAR . tipo vars1G
    (34) varsG -> VAR . tipo vars2G
    (35) varsG -> VAR . tipo vars3G
    (36) varsG -> VAR . tipo vars4G
    (37) varsG -> VAR . LB varsG RB
    (49) tipo -> . INT
    (50) tipo -> . FLOAT
    (51) tipo -> . CHAR

    LB              shift and go to state 20
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

    tipo                           shift and go to state 19

state 10

    (61) funcion -> tipo . ID LP param RP LB statement RB funcion
    (62) funcion -> tipo . ID LP param RP LB statement RB

    ID              shift and go to state 21


state 11

    (20) vars -> varsG .

    VOID            reduce using rule 20 (vars -> varsG .)
    INT             reduce using rule 20 (vars -> varsG .)
    FLOAT           reduce using rule 20 (vars -> varsG .)
    CHAR            reduce using rule 20 (vars -> varsG .)
    ID              reduce using rule 20 (vars -> varsG .)
    IF              reduce using rule 20 (vars -> varsG .)
    VAR             reduce using rule 20 (vars -> varsG .)
    RB              reduce using rule 20 (vars -> varsG .)


state 12

    (59) funcion -> VOID . ID LP param RP LB statement RB funcion
    (60) funcion -> VOID . ID LP param RP LB statement RB

    ID              shift and go to state 22


state 13

    (49) tipo -> INT .

    ID              reduce using rule 49 (tipo -> INT .)
    VOID            reduce using rule 49 (tipo -> INT .)
    INT             reduce using rule 49 (tipo -> INT .)
    FLOAT           reduce using rule 49 (tipo -> INT .)
    CHAR            reduce using rule 49 (tipo -> INT .)
    IF              reduce using rule 49 (tipo -> INT .)
    VAR             reduce using rule 49 (tipo -> INT .)
    RB              reduce using rule 49 (tipo -> INT .)


state 14

    (50) tipo -> FLOAT .

    ID              reduce using rule 50 (tipo -> FLOAT .)
    VOID            reduce using rule 50 (tipo -> FLOAT .)
    INT             reduce using rule 50 (tipo -> FLOAT .)
    FLOAT           reduce using rule 50 (tipo -> FLOAT .)
    CHAR            reduce using rule 50 (tipo -> FLOAT .)
    IF              reduce using rule 50 (tipo -> FLOAT .)
    VAR             reduce using rule 50 (tipo -> FLOAT .)
    RB              reduce using rule 50 (tipo -> FLOAT .)


state 15

    (51) tipo -> CHAR .

    ID              reduce using rule 51 (tipo -> CHAR .)
    VOID            reduce using rule 51 (tipo -> CHAR .)
    INT             reduce using rule 51 (tipo -> CHAR .)
    FLOAT           reduce using rule 51 (tipo -> CHAR .)
    CHAR            reduce using rule 51 (tipo -> CHAR .)
    IF              reduce using rule 51 (tipo -> CHAR .)
    VAR             reduce using rule 51 (tipo -> CHAR .)
    RB              reduce using rule 51 (tipo -> CHAR .)


state 16

    (2) programa1 -> vars funcion . main funcion
    (4) programa1 -> vars funcion .
    (7) main -> . MAIN LP RP LB statement RB

    $end            reduce using rule 4 (programa1 -> vars funcion .)
    MAIN            shift and go to state 18

    main                           shift and go to state 23

state 17

    (3) programa1 -> funcion main . funcion
    (59) funcion -> . VOID ID LP param RP LB statement RB funcion
    (60) funcion -> . VOID ID LP param RP LB statement RB
    (61) funcion -> . tipo ID LP param RP LB statement RB funcion
    (62) funcion -> . tipo ID LP param RP LB statement RB
    (49) tipo -> . INT
    (50) tipo -> . FLOAT
    (51) tipo -> . CHAR

    VOID            shift and go to state 12
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

    funcion                        shift and go to state 24
    tipo                           shift and go to state 10

state 18

    (7) main -> MAIN . LP RP LB statement RB

    LP              shift and go to state 25


state 19

    (15) vars -> VAR tipo . vars1
    (16) vars -> VAR tipo . vars2
    (17) vars -> VAR tipo . vars3
    (18) vars -> VAR tipo . vars4
    (19) vars -> VAR tipo . oper_aritmetica
    (33) varsG -> VAR tipo . vars1G
    (34) varsG -> VAR tipo . vars2G
    (35) varsG -> VAR tipo . vars3G
    (36) varsG -> VAR tipo . vars4G
    (22) vars1 -> . ID SEMICOL
    (23) vars1 -> . ID SEMICOL vars
    (24) vars2 -> . ID IS value SEMICOL
    (25) vars2 -> . ID IS value SEMICOL vars
    (26) vars3 -> . ID COMMA vars3
    (27) vars3 -> . ID SEMICOL vars
    (28) vars3 -> . ID SEMICOL
    (29) vars4 -> . ID IS value check_type COMMA vars4
    (30) vars4 -> . ID IS value check_type SEMICOL vars
    (31) vars4 -> . ID IS value check_type SEMICOL
    (32) vars4 -> . empty
    (75) oper_aritmetica -> . ID IS expr SEMICOL
    (38) vars1G -> . ID SEMICOL
    (39) vars1G -> . ID SEMICOL varsG
    (40) vars2G -> . ID IS value check_type SEMICOL
    (41) vars2G -> . ID IS value check_type SEMICOL varsG
    (42) vars3G -> . ID COMMA vars3G
    (43) vars3G -> . ID SEMICOL varsG
    (44) vars3G -> . ID SEMICOL
    (45) vars4G -> . ID IS value check_type COMMA vars4G
    (46) vars4G -> . ID IS value check_type SEMICOL varsG
    (47) vars4G -> . ID IS value check_type SEMICOL
    (48) vars4G -> . empty
    (90) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 35
    VOID            reduce using rule 90 (empty -> .)
    INT             reduce using rule 90 (empty -> .)
    FLOAT           reduce using rule 90 (empty -> .)
    CHAR            reduce using rule 90 (empty -> .)
    IF              reduce using rule 90 (empty -> .)
    VAR             reduce using rule 90 (empty -> .)
    RB              reduce using rule 90 (empty -> .)

  ! ID              [ reduce using rule 90 (empty -> .) ]

    vars1                          shift and go to state 26
    vars2                          shift and go to state 27
    vars3                          shift and go to state 28
    vars4                          shift and go to state 29
    oper_aritmetica                shift and go to state 30
    vars1G                         shift and go to state 31
    vars2G                         shift and go to state 32
    vars3G                         shift and go to state 33
    vars4G                         shift and go to state 34
    empty                          shift and go to state 36

state 20

    (37) varsG -> VAR LB . varsG RB
    (33) varsG -> . VAR tipo vars1G
    (34) varsG -> . VAR tipo vars2G
    (35) varsG -> . VAR tipo vars3G
    (36) varsG -> . VAR tipo vars4G
    (37) varsG -> . VAR LB varsG RB

    VAR             shift and go to state 37

    varsG                          shift and go to state 38

state 21

    (61) funcion -> tipo ID . LP param RP LB statement RB funcion
    (62) funcion -> tipo ID . LP param RP LB statement RB

    LP              shift and go to state 39


state 22

    (59) funcion -> VOID ID . LP param RP LB statement RB funcion
    (60) funcion -> VOID ID . LP param RP LB statement RB

    LP              shift and go to state 40


state 23

    (2) programa1 -> vars funcion main . funcion
    (59) funcion -> . VOID ID LP param RP LB statement RB funcion
    (60) funcion -> . VOID ID LP param RP LB statement RB
    (61) funcion -> . tipo ID LP param RP LB statement RB funcion
    (62) funcion -> . tipo ID LP param RP LB statement RB
    (49) tipo -> . INT
    (50) tipo -> . FLOAT
    (51) tipo -> . CHAR

    VOID            shift and go to state 12
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

    funcion                        shift and go to state 41
    tipo                           shift and go to state 10

state 24

    (3) programa1 -> funcion main funcion .

    $end            reduce using rule 3 (programa1 -> funcion main funcion .)


state 25

    (7) main -> MAIN LP . RP LB statement RB

    RP              shift and go to state 42


state 26

    (15) vars -> VAR tipo vars1 .

    VOID            reduce using rule 15 (vars -> VAR tipo vars1 .)
    INT             reduce using rule 15 (vars -> VAR tipo vars1 .)
    FLOAT           reduce using rule 15 (vars -> VAR tipo vars1 .)
    CHAR            reduce using rule 15 (vars -> VAR tipo vars1 .)
    ID              reduce using rule 15 (vars -> VAR tipo vars1 .)
    IF              reduce using rule 15 (vars -> VAR tipo vars1 .)
    VAR             reduce using rule 15 (vars -> VAR tipo vars1 .)
    RB              reduce using rule 15 (vars -> VAR tipo vars1 .)


state 27

    (16) vars -> VAR tipo vars2 .

    VOID            reduce using rule 16 (vars -> VAR tipo vars2 .)
    INT             reduce using rule 16 (vars -> VAR tipo vars2 .)
    FLOAT           reduce using rule 16 (vars -> VAR tipo vars2 .)
    CHAR            reduce using rule 16 (vars -> VAR tipo vars2 .)
    ID              reduce using rule 16 (vars -> VAR tipo vars2 .)
    IF              reduce using rule 16 (vars -> VAR tipo vars2 .)
    VAR             reduce using rule 16 (vars -> VAR tipo vars2 .)
    RB              reduce using rule 16 (vars -> VAR tipo vars2 .)


state 28

    (17) vars -> VAR tipo vars3 .

    VOID            reduce using rule 17 (vars -> VAR tipo vars3 .)
    INT             reduce using rule 17 (vars -> VAR tipo vars3 .)
    FLOAT           reduce using rule 17 (vars -> VAR tipo vars3 .)
    CHAR            reduce using rule 17 (vars -> VAR tipo vars3 .)
    ID              reduce using rule 17 (vars -> VAR tipo vars3 .)
    IF              reduce using rule 17 (vars -> VAR tipo vars3 .)
    VAR             reduce using rule 17 (vars -> VAR tipo vars3 .)
    RB              reduce using rule 17 (vars -> VAR tipo vars3 .)


state 29

    (18) vars -> VAR tipo vars4 .

    VOID            reduce using rule 18 (vars -> VAR tipo vars4 .)
    INT             reduce using rule 18 (vars -> VAR tipo vars4 .)
    FLOAT           reduce using rule 18 (vars -> VAR tipo vars4 .)
    CHAR            reduce using rule 18 (vars -> VAR tipo vars4 .)
    ID              reduce using rule 18 (vars -> VAR tipo vars4 .)
    IF              reduce using rule 18 (vars -> VAR tipo vars4 .)
    VAR             reduce using rule 18 (vars -> VAR tipo vars4 .)
    RB              reduce using rule 18 (vars -> VAR tipo vars4 .)


state 30

    (19) vars -> VAR tipo oper_aritmetica .

    VOID            reduce using rule 19 (vars -> VAR tipo oper_aritmetica .)
    INT             reduce using rule 19 (vars -> VAR tipo oper_aritmetica .)
    FLOAT           reduce using rule 19 (vars -> VAR tipo oper_aritmetica .)
    CHAR            reduce using rule 19 (vars -> VAR tipo oper_aritmetica .)
    ID              reduce using rule 19 (vars -> VAR tipo oper_aritmetica .)
    IF              reduce using rule 19 (vars -> VAR tipo oper_aritmetica .)
    VAR             reduce using rule 19 (vars -> VAR tipo oper_aritmetica .)
    RB              reduce using rule 19 (vars -> VAR tipo oper_aritmetica .)


state 31

    (33) varsG -> VAR tipo vars1G .

    VOID            reduce using rule 33 (varsG -> VAR tipo vars1G .)
    INT             reduce using rule 33 (varsG -> VAR tipo vars1G .)
    FLOAT           reduce using rule 33 (varsG -> VAR tipo vars1G .)
    CHAR            reduce using rule 33 (varsG -> VAR tipo vars1G .)
    RB              reduce using rule 33 (varsG -> VAR tipo vars1G .)
    ID              reduce using rule 33 (varsG -> VAR tipo vars1G .)
    IF              reduce using rule 33 (varsG -> VAR tipo vars1G .)
    VAR             reduce using rule 33 (varsG -> VAR tipo vars1G .)


state 32

    (34) varsG -> VAR tipo vars2G .

    VOID            reduce using rule 34 (varsG -> VAR tipo vars2G .)
    INT             reduce using rule 34 (varsG -> VAR tipo vars2G .)
    FLOAT           reduce using rule 34 (varsG -> VAR tipo vars2G .)
    CHAR            reduce using rule 34 (varsG -> VAR tipo vars2G .)
    RB              reduce using rule 34 (varsG -> VAR tipo vars2G .)
    ID              reduce using rule 34 (varsG -> VAR tipo vars2G .)
    IF              reduce using rule 34 (varsG -> VAR tipo vars2G .)
    VAR             reduce using rule 34 (varsG -> VAR tipo vars2G .)


state 33

    (35) varsG -> VAR tipo vars3G .

    VOID            reduce using rule 35 (varsG -> VAR tipo vars3G .)
    INT             reduce using rule 35 (varsG -> VAR tipo vars3G .)
    FLOAT           reduce using rule 35 (varsG -> VAR tipo vars3G .)
    CHAR            reduce using rule 35 (varsG -> VAR tipo vars3G .)
    RB              reduce using rule 35 (varsG -> VAR tipo vars3G .)
    ID              reduce using rule 35 (varsG -> VAR tipo vars3G .)
    IF              reduce using rule 35 (varsG -> VAR tipo vars3G .)
    VAR             reduce using rule 35 (varsG -> VAR tipo vars3G .)


state 34

    (36) varsG -> VAR tipo vars4G .

    VOID            reduce using rule 36 (varsG -> VAR tipo vars4G .)
    INT             reduce using rule 36 (varsG -> VAR tipo vars4G .)
    FLOAT           reduce using rule 36 (varsG -> VAR tipo vars4G .)
    CHAR            reduce using rule 36 (varsG -> VAR tipo vars4G .)
    RB              reduce using rule 36 (varsG -> VAR tipo vars4G .)
    ID              reduce using rule 36 (varsG -> VAR tipo vars4G .)
    IF              reduce using rule 36 (varsG -> VAR tipo vars4G .)
    VAR             reduce using rule 36 (varsG -> VAR tipo vars4G .)


state 35

    (22) vars1 -> ID . SEMICOL
    (23) vars1 -> ID . SEMICOL vars
    (24) vars2 -> ID . IS value SEMICOL
    (25) vars2 -> ID . IS value SEMICOL vars
    (26) vars3 -> ID . COMMA vars3
    (27) vars3 -> ID . SEMICOL vars
    (28) vars3 -> ID . SEMICOL
    (29) vars4 -> ID . IS value check_type COMMA vars4
    (30) vars4 -> ID . IS value check_type SEMICOL vars
    (31) vars4 -> ID . IS value check_type SEMICOL
    (75) oper_aritmetica -> ID . IS expr SEMICOL
    (38) vars1G -> ID . SEMICOL
    (39) vars1G -> ID . SEMICOL varsG
    (40) vars2G -> ID . IS value check_type SEMICOL
    (41) vars2G -> ID . IS value check_type SEMICOL varsG
    (42) vars3G -> ID . COMMA vars3G
    (43) vars3G -> ID . SEMICOL varsG
    (44) vars3G -> ID . SEMICOL
    (45) vars4G -> ID . IS value check_type COMMA vars4G
    (46) vars4G -> ID . IS value check_type SEMICOL varsG
    (47) vars4G -> ID . IS value check_type SEMICOL

    SEMICOL         shift and go to state 43
    IS              shift and go to state 44
    COMMA           shift and go to state 45


state 36

    (32) vars4 -> empty .
    (48) vars4G -> empty .

  ! reduce/reduce conflict for VOID resolved using rule 32 (vars4 -> empty .)
  ! reduce/reduce conflict for INT resolved using rule 32 (vars4 -> empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 32 (vars4 -> empty .)
  ! reduce/reduce conflict for CHAR resolved using rule 32 (vars4 -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 32 (vars4 -> empty .)
  ! reduce/reduce conflict for IF resolved using rule 32 (vars4 -> empty .)
  ! reduce/reduce conflict for VAR resolved using rule 32 (vars4 -> empty .)
  ! reduce/reduce conflict for RB resolved using rule 32 (vars4 -> empty .)
    VOID            reduce using rule 32 (vars4 -> empty .)
    INT             reduce using rule 32 (vars4 -> empty .)
    FLOAT           reduce using rule 32 (vars4 -> empty .)
    CHAR            reduce using rule 32 (vars4 -> empty .)
    ID              reduce using rule 32 (vars4 -> empty .)
    IF              reduce using rule 32 (vars4 -> empty .)
    VAR             reduce using rule 32 (vars4 -> empty .)
    RB              reduce using rule 32 (vars4 -> empty .)

  ! VOID            [ reduce using rule 48 (vars4G -> empty .) ]
  ! INT             [ reduce using rule 48 (vars4G -> empty .) ]
  ! FLOAT           [ reduce using rule 48 (vars4G -> empty .) ]
  ! CHAR            [ reduce using rule 48 (vars4G -> empty .) ]
  ! ID              [ reduce using rule 48 (vars4G -> empty .) ]
  ! IF              [ reduce using rule 48 (vars4G -> empty .) ]
  ! VAR             [ reduce using rule 48 (vars4G -> empty .) ]
  ! RB              [ reduce using rule 48 (vars4G -> empty .) ]


state 37

    (33) varsG -> VAR . tipo vars1G
    (34) varsG -> VAR . tipo vars2G
    (35) varsG -> VAR . tipo vars3G
    (36) varsG -> VAR . tipo vars4G
    (37) varsG -> VAR . LB varsG RB
    (49) tipo -> . INT
    (50) tipo -> . FLOAT
    (51) tipo -> . CHAR

    LB              shift and go to state 20
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

    tipo                           shift and go to state 46

state 38

    (37) varsG -> VAR LB varsG . RB

    RB              shift and go to state 47


state 39

    (61) funcion -> tipo ID LP . param RP LB statement RB funcion
    (62) funcion -> tipo ID LP . param RP LB statement RB
    (63) param -> .

    RP              reduce using rule 63 (param -> .)

    param                          shift and go to state 48

state 40

    (59) funcion -> VOID ID LP . param RP LB statement RB funcion
    (60) funcion -> VOID ID LP . param RP LB statement RB
    (63) param -> .

    RP              reduce using rule 63 (param -> .)

    param                          shift and go to state 49

state 41

    (2) programa1 -> vars funcion main funcion .

    $end            reduce using rule 2 (programa1 -> vars funcion main funcion .)


state 42

    (7) main -> MAIN LP RP . LB statement RB

    LB              shift and go to state 50


state 43

    (22) vars1 -> ID SEMICOL .
    (23) vars1 -> ID SEMICOL . vars
    (27) vars3 -> ID SEMICOL . vars
    (28) vars3 -> ID SEMICOL .
    (38) vars1G -> ID SEMICOL .
    (39) vars1G -> ID SEMICOL . varsG
    (43) vars3G -> ID SEMICOL . varsG
    (44) vars3G -> ID SEMICOL .
    (15) vars -> . VAR tipo vars1
    (16) vars -> . VAR tipo vars2
    (17) vars -> . VAR tipo vars3
    (18) vars -> . VAR tipo vars4
    (19) vars -> . VAR tipo oper_aritmetica
    (20) vars -> . varsG
    (21) vars -> . empty
    (33) varsG -> . VAR tipo vars1G
    (34) varsG -> . VAR tipo vars2G
    (35) varsG -> . VAR tipo vars3G
    (36) varsG -> . VAR tipo vars4G
    (37) varsG -> . VAR LB varsG RB
    (90) empty -> .

  ! reduce/reduce conflict for VOID resolved using rule 22 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for INT resolved using rule 22 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for FLOAT resolved using rule 22 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for CHAR resolved using rule 22 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for ID resolved using rule 22 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for IF resolved using rule 22 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for VAR resolved using rule 22 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for RB resolved using rule 22 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for VOID resolved using rule 22 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for INT resolved using rule 22 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for FLOAT resolved using rule 22 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for CHAR resolved using rule 22 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for ID resolved using rule 22 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for IF resolved using rule 22 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for VAR resolved using rule 22 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for RB resolved using rule 22 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for VOID resolved using rule 22 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for INT resolved using rule 22 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for FLOAT resolved using rule 22 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for CHAR resolved using rule 22 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for ID resolved using rule 22 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for IF resolved using rule 22 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for VAR resolved using rule 22 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for RB resolved using rule 22 (vars1 -> ID SEMICOL .)
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for VOID resolved using rule 22 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for INT resolved using rule 22 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for FLOAT resolved using rule 22 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for CHAR resolved using rule 22 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for ID resolved using rule 22 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for IF resolved using rule 22 (vars1 -> ID SEMICOL .)
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for RB resolved using rule 22 (vars1 -> ID SEMICOL .)
    VOID            reduce using rule 22 (vars1 -> ID SEMICOL .)
    INT             reduce using rule 22 (vars1 -> ID SEMICOL .)
    FLOAT           reduce using rule 22 (vars1 -> ID SEMICOL .)
    CHAR            reduce using rule 22 (vars1 -> ID SEMICOL .)
    ID              reduce using rule 22 (vars1 -> ID SEMICOL .)
    IF              reduce using rule 22 (vars1 -> ID SEMICOL .)
    RB              reduce using rule 22 (vars1 -> ID SEMICOL .)
    VAR             shift and go to state 9

  ! VAR             [ reduce using rule 22 (vars1 -> ID SEMICOL .) ]
  ! VOID            [ reduce using rule 28 (vars3 -> ID SEMICOL .) ]
  ! INT             [ reduce using rule 28 (vars3 -> ID SEMICOL .) ]
  ! FLOAT           [ reduce using rule 28 (vars3 -> ID SEMICOL .) ]
  ! CHAR            [ reduce using rule 28 (vars3 -> ID SEMICOL .) ]
  ! ID              [ reduce using rule 28 (vars3 -> ID SEMICOL .) ]
  ! IF              [ reduce using rule 28 (vars3 -> ID SEMICOL .) ]
  ! VAR             [ reduce using rule 28 (vars3 -> ID SEMICOL .) ]
  ! RB              [ reduce using rule 28 (vars3 -> ID SEMICOL .) ]
  ! VOID            [ reduce using rule 38 (vars1G -> ID SEMICOL .) ]
  ! INT             [ reduce using rule 38 (vars1G -> ID SEMICOL .) ]
  ! FLOAT           [ reduce using rule 38 (vars1G -> ID SEMICOL .) ]
  ! CHAR            [ reduce using rule 38 (vars1G -> ID SEMICOL .) ]
  ! ID              [ reduce using rule 38 (vars1G -> ID SEMICOL .) ]
  ! IF              [ reduce using rule 38 (vars1G -> ID SEMICOL .) ]
  ! VAR             [ reduce using rule 38 (vars1G -> ID SEMICOL .) ]
  ! RB              [ reduce using rule 38 (vars1G -> ID SEMICOL .) ]
  ! VOID            [ reduce using rule 44 (vars3G -> ID SEMICOL .) ]
  ! INT             [ reduce using rule 44 (vars3G -> ID SEMICOL .) ]
  ! FLOAT           [ reduce using rule 44 (vars3G -> ID SEMICOL .) ]
  ! CHAR            [ reduce using rule 44 (vars3G -> ID SEMICOL .) ]
  ! ID              [ reduce using rule 44 (vars3G -> ID SEMICOL .) ]
  ! IF              [ reduce using rule 44 (vars3G -> ID SEMICOL .) ]
  ! VAR             [ reduce using rule 44 (vars3G -> ID SEMICOL .) ]
  ! RB              [ reduce using rule 44 (vars3G -> ID SEMICOL .) ]
  ! VOID            [ reduce using rule 90 (empty -> .) ]
  ! INT             [ reduce using rule 90 (empty -> .) ]
  ! FLOAT           [ reduce using rule 90 (empty -> .) ]
  ! CHAR            [ reduce using rule 90 (empty -> .) ]
  ! ID              [ reduce using rule 90 (empty -> .) ]
  ! IF              [ reduce using rule 90 (empty -> .) ]
  ! VAR             [ reduce using rule 90 (empty -> .) ]
  ! RB              [ reduce using rule 90 (empty -> .) ]

    vars                           shift and go to state 51
    varsG                          shift and go to state 52
    empty                          shift and go to state 53

state 44

    (24) vars2 -> ID IS . value SEMICOL
    (25) vars2 -> ID IS . value SEMICOL vars
    (29) vars4 -> ID IS . value check_type COMMA vars4
    (30) vars4 -> ID IS . value check_type SEMICOL vars
    (31) vars4 -> ID IS . value check_type SEMICOL
    (75) oper_aritmetica -> ID IS . expr SEMICOL
    (40) vars2G -> ID IS . value check_type SEMICOL
    (41) vars2G -> ID IS . value check_type SEMICOL varsG
    (45) vars4G -> ID IS . value check_type COMMA vars4G
    (46) vars4G -> ID IS . value check_type SEMICOL varsG
    (47) vars4G -> ID IS . value check_type SEMICOL
    (52) value -> . CTE_F
    (53) value -> . CTE_I
    (54) value -> . ID
    (55) value -> . CTE_C
    (56) value -> . COMILLA ID COMILLA
    (57) value -> . COMILLAS ID COMILLAS
    (76) expr -> . expr MUL expr
    (77) expr -> . expr DIV expr
    (78) expr -> . expr PLUS expr
    (79) expr -> . expr MINUS expr
    (80) expr -> . CTE_I
    (81) expr -> . CTE_F
    (82) expr -> . ID
    (83) expr -> . ID row
    (84) expr -> . ID matrix

    CTE_F           shift and go to state 57
    CTE_I           shift and go to state 58
    ID              shift and go to state 54
    CTE_C           shift and go to state 59
    COMILLA         shift and go to state 60
    COMILLAS        shift and go to state 61

    value                          shift and go to state 55
    expr                           shift and go to state 56

state 45

    (26) vars3 -> ID COMMA . vars3
    (42) vars3G -> ID COMMA . vars3G
    (26) vars3 -> . ID COMMA vars3
    (27) vars3 -> . ID SEMICOL vars
    (28) vars3 -> . ID SEMICOL
    (42) vars3G -> . ID COMMA vars3G
    (43) vars3G -> . ID SEMICOL varsG
    (44) vars3G -> . ID SEMICOL

    ID              shift and go to state 62

    vars3                          shift and go to state 63
    vars3G                         shift and go to state 64

state 46

    (33) varsG -> VAR tipo . vars1G
    (34) varsG -> VAR tipo . vars2G
    (35) varsG -> VAR tipo . vars3G
    (36) varsG -> VAR tipo . vars4G
    (38) vars1G -> . ID SEMICOL
    (39) vars1G -> . ID SEMICOL varsG
    (40) vars2G -> . ID IS value check_type SEMICOL
    (41) vars2G -> . ID IS value check_type SEMICOL varsG
    (42) vars3G -> . ID COMMA vars3G
    (43) vars3G -> . ID SEMICOL varsG
    (44) vars3G -> . ID SEMICOL
    (45) vars4G -> . ID IS value check_type COMMA vars4G
    (46) vars4G -> . ID IS value check_type SEMICOL varsG
    (47) vars4G -> . ID IS value check_type SEMICOL
    (48) vars4G -> . empty
    (90) empty -> .

    ID              shift and go to state 65
    RB              reduce using rule 90 (empty -> .)

    vars1G                         shift and go to state 31
    vars2G                         shift and go to state 32
    vars3G                         shift and go to state 33
    vars4G                         shift and go to state 34
    empty                          shift and go to state 66

state 47

    (37) varsG -> VAR LB varsG RB .

    VOID            reduce using rule 37 (varsG -> VAR LB varsG RB .)
    INT             reduce using rule 37 (varsG -> VAR LB varsG RB .)
    FLOAT           reduce using rule 37 (varsG -> VAR LB varsG RB .)
    CHAR            reduce using rule 37 (varsG -> VAR LB varsG RB .)
    RB              reduce using rule 37 (varsG -> VAR LB varsG RB .)
    ID              reduce using rule 37 (varsG -> VAR LB varsG RB .)
    IF              reduce using rule 37 (varsG -> VAR LB varsG RB .)
    VAR             reduce using rule 37 (varsG -> VAR LB varsG RB .)


state 48

    (61) funcion -> tipo ID LP param . RP LB statement RB funcion
    (62) funcion -> tipo ID LP param . RP LB statement RB

    RP              shift and go to state 67


state 49

    (59) funcion -> VOID ID LP param . RP LB statement RB funcion
    (60) funcion -> VOID ID LP param . RP LB statement RB

    RP              shift and go to state 68


state 50

    (7) main -> MAIN LP RP LB . statement RB
    (8) statement -> . asignacion SEMICOL statement
    (9) statement -> . if statement
    (10) statement -> . vars statement
    (11) statement -> . p_operacion statement
    (12) statement -> . oper_aritmetica statement
    (13) statement -> . empty
    (14) asignacion -> . ID IS value
    (91) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto
    (92) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto elseif
    (93) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto else
    (15) vars -> . VAR tipo vars1
    (16) vars -> . VAR tipo vars2
    (17) vars -> . VAR tipo vars3
    (18) vars -> . VAR tipo vars4
    (19) vars -> . VAR tipo oper_aritmetica
    (20) vars -> . varsG
    (21) vars -> . empty
    (110) p_operacion -> .
    (75) oper_aritmetica -> . ID IS expr SEMICOL
    (90) empty -> .
    (33) varsG -> . VAR tipo vars1G
    (34) varsG -> . VAR tipo vars2G
    (35) varsG -> . VAR tipo vars3G
    (36) varsG -> . VAR tipo vars4G
    (37) varsG -> . VAR LB varsG RB

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for RB resolved using rule 90 (empty -> .)
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
    ID              shift and go to state 76
    IF              shift and go to state 77
    VAR             shift and go to state 9
    RB              reduce using rule 90 (empty -> .)

  ! ID              [ reduce using rule 110 (p_operacion -> .) ]
  ! IF              [ reduce using rule 110 (p_operacion -> .) ]
  ! VAR             [ reduce using rule 110 (p_operacion -> .) ]
  ! RB              [ reduce using rule 110 (p_operacion -> .) ]
  ! ID              [ reduce using rule 90 (empty -> .) ]
  ! IF              [ reduce using rule 90 (empty -> .) ]
  ! VAR             [ reduce using rule 90 (empty -> .) ]

    statement                      shift and go to state 69
    asignacion                     shift and go to state 70
    if                             shift and go to state 71
    vars                           shift and go to state 72
    p_operacion                    shift and go to state 73
    oper_aritmetica                shift and go to state 74
    empty                          shift and go to state 75
    varsG                          shift and go to state 11

state 51

    (23) vars1 -> ID SEMICOL vars .
    (27) vars3 -> ID SEMICOL vars .

  ! reduce/reduce conflict for VOID resolved using rule 23 (vars1 -> ID SEMICOL vars .)
  ! reduce/reduce conflict for INT resolved using rule 23 (vars1 -> ID SEMICOL vars .)
  ! reduce/reduce conflict for FLOAT resolved using rule 23 (vars1 -> ID SEMICOL vars .)
  ! reduce/reduce conflict for CHAR resolved using rule 23 (vars1 -> ID SEMICOL vars .)
  ! reduce/reduce conflict for ID resolved using rule 23 (vars1 -> ID SEMICOL vars .)
  ! reduce/reduce conflict for IF resolved using rule 23 (vars1 -> ID SEMICOL vars .)
  ! reduce/reduce conflict for VAR resolved using rule 23 (vars1 -> ID SEMICOL vars .)
  ! reduce/reduce conflict for RB resolved using rule 23 (vars1 -> ID SEMICOL vars .)
    VOID            reduce using rule 23 (vars1 -> ID SEMICOL vars .)
    INT             reduce using rule 23 (vars1 -> ID SEMICOL vars .)
    FLOAT           reduce using rule 23 (vars1 -> ID SEMICOL vars .)
    CHAR            reduce using rule 23 (vars1 -> ID SEMICOL vars .)
    ID              reduce using rule 23 (vars1 -> ID SEMICOL vars .)
    IF              reduce using rule 23 (vars1 -> ID SEMICOL vars .)
    VAR             reduce using rule 23 (vars1 -> ID SEMICOL vars .)
    RB              reduce using rule 23 (vars1 -> ID SEMICOL vars .)

  ! VOID            [ reduce using rule 27 (vars3 -> ID SEMICOL vars .) ]
  ! INT             [ reduce using rule 27 (vars3 -> ID SEMICOL vars .) ]
  ! FLOAT           [ reduce using rule 27 (vars3 -> ID SEMICOL vars .) ]
  ! CHAR            [ reduce using rule 27 (vars3 -> ID SEMICOL vars .) ]
  ! ID              [ reduce using rule 27 (vars3 -> ID SEMICOL vars .) ]
  ! IF              [ reduce using rule 27 (vars3 -> ID SEMICOL vars .) ]
  ! VAR             [ reduce using rule 27 (vars3 -> ID SEMICOL vars .) ]
  ! RB              [ reduce using rule 27 (vars3 -> ID SEMICOL vars .) ]


state 52

    (39) vars1G -> ID SEMICOL varsG .
    (43) vars3G -> ID SEMICOL varsG .
    (20) vars -> varsG .

  ! reduce/reduce conflict for VOID resolved using rule 39 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for INT resolved using rule 39 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for FLOAT resolved using rule 39 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for CHAR resolved using rule 39 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for ID resolved using rule 39 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for IF resolved using rule 39 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for VAR resolved using rule 39 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for RB resolved using rule 39 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for VOID resolved using rule 20 (vars -> varsG .)
  ! reduce/reduce conflict for INT resolved using rule 20 (vars -> varsG .)
  ! reduce/reduce conflict for FLOAT resolved using rule 20 (vars -> varsG .)
  ! reduce/reduce conflict for CHAR resolved using rule 20 (vars -> varsG .)
  ! reduce/reduce conflict for ID resolved using rule 20 (vars -> varsG .)
  ! reduce/reduce conflict for IF resolved using rule 20 (vars -> varsG .)
  ! reduce/reduce conflict for VAR resolved using rule 20 (vars -> varsG .)
  ! reduce/reduce conflict for RB resolved using rule 20 (vars -> varsG .)
    VOID            reduce using rule 20 (vars -> varsG .)
    INT             reduce using rule 20 (vars -> varsG .)
    FLOAT           reduce using rule 20 (vars -> varsG .)
    CHAR            reduce using rule 20 (vars -> varsG .)
    ID              reduce using rule 20 (vars -> varsG .)
    IF              reduce using rule 20 (vars -> varsG .)
    VAR             reduce using rule 20 (vars -> varsG .)
    RB              reduce using rule 20 (vars -> varsG .)

  ! VOID            [ reduce using rule 39 (vars1G -> ID SEMICOL varsG .) ]
  ! INT             [ reduce using rule 39 (vars1G -> ID SEMICOL varsG .) ]
  ! FLOAT           [ reduce using rule 39 (vars1G -> ID SEMICOL varsG .) ]
  ! CHAR            [ reduce using rule 39 (vars1G -> ID SEMICOL varsG .) ]
  ! ID              [ reduce using rule 39 (vars1G -> ID SEMICOL varsG .) ]
  ! IF              [ reduce using rule 39 (vars1G -> ID SEMICOL varsG .) ]
  ! VAR             [ reduce using rule 39 (vars1G -> ID SEMICOL varsG .) ]
  ! RB              [ reduce using rule 39 (vars1G -> ID SEMICOL varsG .) ]
  ! VOID            [ reduce using rule 43 (vars3G -> ID SEMICOL varsG .) ]
  ! INT             [ reduce using rule 43 (vars3G -> ID SEMICOL varsG .) ]
  ! FLOAT           [ reduce using rule 43 (vars3G -> ID SEMICOL varsG .) ]
  ! CHAR            [ reduce using rule 43 (vars3G -> ID SEMICOL varsG .) ]
  ! ID              [ reduce using rule 43 (vars3G -> ID SEMICOL varsG .) ]
  ! IF              [ reduce using rule 43 (vars3G -> ID SEMICOL varsG .) ]
  ! VAR             [ reduce using rule 43 (vars3G -> ID SEMICOL varsG .) ]
  ! RB              [ reduce using rule 43 (vars3G -> ID SEMICOL varsG .) ]


state 53

    (21) vars -> empty .

    VOID            reduce using rule 21 (vars -> empty .)
    INT             reduce using rule 21 (vars -> empty .)
    FLOAT           reduce using rule 21 (vars -> empty .)
    CHAR            reduce using rule 21 (vars -> empty .)
    ID              reduce using rule 21 (vars -> empty .)
    IF              reduce using rule 21 (vars -> empty .)
    VAR             reduce using rule 21 (vars -> empty .)
    RB              reduce using rule 21 (vars -> empty .)


state 54

    (54) value -> ID .
    (82) expr -> ID .
    (83) expr -> ID . row
    (84) expr -> ID . matrix
    (88) row -> . LC expr RC
    (89) matrix -> . row row

  ! reduce/reduce conflict for SEMICOL resolved using rule 54 (value -> ID .)
    SEMICOL         reduce using rule 54 (value -> ID .)
    COMMA           reduce using rule 54 (value -> ID .)
    MUL             reduce using rule 82 (expr -> ID .)
    DIV             reduce using rule 82 (expr -> ID .)
    PLUS            reduce using rule 82 (expr -> ID .)
    MINUS           reduce using rule 82 (expr -> ID .)
    LC              shift and go to state 80

  ! SEMICOL         [ reduce using rule 82 (expr -> ID .) ]

    row                            shift and go to state 78
    matrix                         shift and go to state 79

state 55

    (24) vars2 -> ID IS value . SEMICOL
    (25) vars2 -> ID IS value . SEMICOL vars
    (29) vars4 -> ID IS value . check_type COMMA vars4
    (30) vars4 -> ID IS value . check_type SEMICOL vars
    (31) vars4 -> ID IS value . check_type SEMICOL
    (40) vars2G -> ID IS value . check_type SEMICOL
    (41) vars2G -> ID IS value . check_type SEMICOL varsG
    (45) vars4G -> ID IS value . check_type COMMA vars4G
    (46) vars4G -> ID IS value . check_type SEMICOL varsG
    (47) vars4G -> ID IS value . check_type SEMICOL
    (58) check_type -> .

  ! shift/reduce conflict for SEMICOL resolved as shift
    SEMICOL         shift and go to state 81
    COMMA           reduce using rule 58 (check_type -> .)

  ! SEMICOL         [ reduce using rule 58 (check_type -> .) ]

    check_type                     shift and go to state 82

state 56

    (75) oper_aritmetica -> ID IS expr . SEMICOL
    (76) expr -> expr . MUL expr
    (77) expr -> expr . DIV expr
    (78) expr -> expr . PLUS expr
    (79) expr -> expr . MINUS expr

    SEMICOL         shift and go to state 83
    MUL             shift and go to state 84
    DIV             shift and go to state 85
    PLUS            shift and go to state 86
    MINUS           shift and go to state 87


state 57

    (52) value -> CTE_F .
    (81) expr -> CTE_F .

  ! reduce/reduce conflict for SEMICOL resolved using rule 52 (value -> CTE_F .)
    SEMICOL         reduce using rule 52 (value -> CTE_F .)
    COMMA           reduce using rule 52 (value -> CTE_F .)
    MUL             reduce using rule 81 (expr -> CTE_F .)
    DIV             reduce using rule 81 (expr -> CTE_F .)
    PLUS            reduce using rule 81 (expr -> CTE_F .)
    MINUS           reduce using rule 81 (expr -> CTE_F .)

  ! SEMICOL         [ reduce using rule 81 (expr -> CTE_F .) ]


state 58

    (53) value -> CTE_I .
    (80) expr -> CTE_I .

  ! reduce/reduce conflict for SEMICOL resolved using rule 53 (value -> CTE_I .)
    SEMICOL         reduce using rule 53 (value -> CTE_I .)
    COMMA           reduce using rule 53 (value -> CTE_I .)
    MUL             reduce using rule 80 (expr -> CTE_I .)
    DIV             reduce using rule 80 (expr -> CTE_I .)
    PLUS            reduce using rule 80 (expr -> CTE_I .)
    MINUS           reduce using rule 80 (expr -> CTE_I .)

  ! SEMICOL         [ reduce using rule 80 (expr -> CTE_I .) ]


state 59

    (55) value -> CTE_C .

    SEMICOL         reduce using rule 55 (value -> CTE_C .)
    COMMA           reduce using rule 55 (value -> CTE_C .)


state 60

    (56) value -> COMILLA . ID COMILLA

    ID              shift and go to state 88


state 61

    (57) value -> COMILLAS . ID COMILLAS

    ID              shift and go to state 89


state 62

    (26) vars3 -> ID . COMMA vars3
    (27) vars3 -> ID . SEMICOL vars
    (28) vars3 -> ID . SEMICOL
    (42) vars3G -> ID . COMMA vars3G
    (43) vars3G -> ID . SEMICOL varsG
    (44) vars3G -> ID . SEMICOL

    COMMA           shift and go to state 45
    SEMICOL         shift and go to state 90


state 63

    (26) vars3 -> ID COMMA vars3 .

    VOID            reduce using rule 26 (vars3 -> ID COMMA vars3 .)
    INT             reduce using rule 26 (vars3 -> ID COMMA vars3 .)
    FLOAT           reduce using rule 26 (vars3 -> ID COMMA vars3 .)
    CHAR            reduce using rule 26 (vars3 -> ID COMMA vars3 .)
    ID              reduce using rule 26 (vars3 -> ID COMMA vars3 .)
    IF              reduce using rule 26 (vars3 -> ID COMMA vars3 .)
    VAR             reduce using rule 26 (vars3 -> ID COMMA vars3 .)
    RB              reduce using rule 26 (vars3 -> ID COMMA vars3 .)


state 64

    (42) vars3G -> ID COMMA vars3G .

    VOID            reduce using rule 42 (vars3G -> ID COMMA vars3G .)
    INT             reduce using rule 42 (vars3G -> ID COMMA vars3G .)
    FLOAT           reduce using rule 42 (vars3G -> ID COMMA vars3G .)
    CHAR            reduce using rule 42 (vars3G -> ID COMMA vars3G .)
    ID              reduce using rule 42 (vars3G -> ID COMMA vars3G .)
    IF              reduce using rule 42 (vars3G -> ID COMMA vars3G .)
    VAR             reduce using rule 42 (vars3G -> ID COMMA vars3G .)
    RB              reduce using rule 42 (vars3G -> ID COMMA vars3G .)


state 65

    (38) vars1G -> ID . SEMICOL
    (39) vars1G -> ID . SEMICOL varsG
    (40) vars2G -> ID . IS value check_type SEMICOL
    (41) vars2G -> ID . IS value check_type SEMICOL varsG
    (42) vars3G -> ID . COMMA vars3G
    (43) vars3G -> ID . SEMICOL varsG
    (44) vars3G -> ID . SEMICOL
    (45) vars4G -> ID . IS value check_type COMMA vars4G
    (46) vars4G -> ID . IS value check_type SEMICOL varsG
    (47) vars4G -> ID . IS value check_type SEMICOL

    SEMICOL         shift and go to state 91
    IS              shift and go to state 92
    COMMA           shift and go to state 93


state 66

    (48) vars4G -> empty .

    RB              reduce using rule 48 (vars4G -> empty .)


state 67

    (61) funcion -> tipo ID LP param RP . LB statement RB funcion
    (62) funcion -> tipo ID LP param RP . LB statement RB

    LB              shift and go to state 94


state 68

    (59) funcion -> VOID ID LP param RP . LB statement RB funcion
    (60) funcion -> VOID ID LP param RP . LB statement RB

    LB              shift and go to state 95


state 69

    (7) main -> MAIN LP RP LB statement . RB

    RB              shift and go to state 96


state 70

    (8) statement -> asignacion . SEMICOL statement

    SEMICOL         shift and go to state 97


state 71

    (9) statement -> if . statement
    (8) statement -> . asignacion SEMICOL statement
    (9) statement -> . if statement
    (10) statement -> . vars statement
    (11) statement -> . p_operacion statement
    (12) statement -> . oper_aritmetica statement
    (13) statement -> . empty
    (14) asignacion -> . ID IS value
    (91) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto
    (92) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto elseif
    (93) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto else
    (15) vars -> . VAR tipo vars1
    (16) vars -> . VAR tipo vars2
    (17) vars -> . VAR tipo vars3
    (18) vars -> . VAR tipo vars4
    (19) vars -> . VAR tipo oper_aritmetica
    (20) vars -> . varsG
    (21) vars -> . empty
    (110) p_operacion -> .
    (75) oper_aritmetica -> . ID IS expr SEMICOL
    (90) empty -> .
    (33) varsG -> . VAR tipo vars1G
    (34) varsG -> . VAR tipo vars2G
    (35) varsG -> . VAR tipo vars3G
    (36) varsG -> . VAR tipo vars4G
    (37) varsG -> . VAR LB varsG RB

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for RB resolved using rule 90 (empty -> .)
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
    ID              shift and go to state 76
    IF              shift and go to state 77
    VAR             shift and go to state 9
    RB              reduce using rule 90 (empty -> .)

  ! ID              [ reduce using rule 110 (p_operacion -> .) ]
  ! IF              [ reduce using rule 110 (p_operacion -> .) ]
  ! VAR             [ reduce using rule 110 (p_operacion -> .) ]
  ! RB              [ reduce using rule 110 (p_operacion -> .) ]
  ! ID              [ reduce using rule 90 (empty -> .) ]
  ! IF              [ reduce using rule 90 (empty -> .) ]
  ! VAR             [ reduce using rule 90 (empty -> .) ]

    if                             shift and go to state 71
    statement                      shift and go to state 98
    asignacion                     shift and go to state 70
    vars                           shift and go to state 72
    p_operacion                    shift and go to state 73
    oper_aritmetica                shift and go to state 74
    empty                          shift and go to state 75
    varsG                          shift and go to state 11

state 72

    (10) statement -> vars . statement
    (8) statement -> . asignacion SEMICOL statement
    (9) statement -> . if statement
    (10) statement -> . vars statement
    (11) statement -> . p_operacion statement
    (12) statement -> . oper_aritmetica statement
    (13) statement -> . empty
    (14) asignacion -> . ID IS value
    (91) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto
    (92) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto elseif
    (93) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto else
    (15) vars -> . VAR tipo vars1
    (16) vars -> . VAR tipo vars2
    (17) vars -> . VAR tipo vars3
    (18) vars -> . VAR tipo vars4
    (19) vars -> . VAR tipo oper_aritmetica
    (20) vars -> . varsG
    (21) vars -> . empty
    (110) p_operacion -> .
    (75) oper_aritmetica -> . ID IS expr SEMICOL
    (90) empty -> .
    (33) varsG -> . VAR tipo vars1G
    (34) varsG -> . VAR tipo vars2G
    (35) varsG -> . VAR tipo vars3G
    (36) varsG -> . VAR tipo vars4G
    (37) varsG -> . VAR LB varsG RB

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for RB resolved using rule 90 (empty -> .)
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
    ID              shift and go to state 76
    IF              shift and go to state 77
    VAR             shift and go to state 9
    RB              reduce using rule 90 (empty -> .)

  ! ID              [ reduce using rule 110 (p_operacion -> .) ]
  ! IF              [ reduce using rule 110 (p_operacion -> .) ]
  ! VAR             [ reduce using rule 110 (p_operacion -> .) ]
  ! RB              [ reduce using rule 110 (p_operacion -> .) ]
  ! ID              [ reduce using rule 90 (empty -> .) ]
  ! IF              [ reduce using rule 90 (empty -> .) ]
  ! VAR             [ reduce using rule 90 (empty -> .) ]

    vars                           shift and go to state 72
    statement                      shift and go to state 99
    asignacion                     shift and go to state 70
    if                             shift and go to state 71
    p_operacion                    shift and go to state 73
    oper_aritmetica                shift and go to state 74
    empty                          shift and go to state 75
    varsG                          shift and go to state 11

state 73

    (11) statement -> p_operacion . statement
    (8) statement -> . asignacion SEMICOL statement
    (9) statement -> . if statement
    (10) statement -> . vars statement
    (11) statement -> . p_operacion statement
    (12) statement -> . oper_aritmetica statement
    (13) statement -> . empty
    (14) asignacion -> . ID IS value
    (91) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto
    (92) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto elseif
    (93) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto else
    (15) vars -> . VAR tipo vars1
    (16) vars -> . VAR tipo vars2
    (17) vars -> . VAR tipo vars3
    (18) vars -> . VAR tipo vars4
    (19) vars -> . VAR tipo oper_aritmetica
    (20) vars -> . varsG
    (21) vars -> . empty
    (110) p_operacion -> .
    (75) oper_aritmetica -> . ID IS expr SEMICOL
    (90) empty -> .
    (33) varsG -> . VAR tipo vars1G
    (34) varsG -> . VAR tipo vars2G
    (35) varsG -> . VAR tipo vars3G
    (36) varsG -> . VAR tipo vars4G
    (37) varsG -> . VAR LB varsG RB

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for RB resolved using rule 90 (empty -> .)
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
    ID              shift and go to state 76
    IF              shift and go to state 77
    VAR             shift and go to state 9
    RB              reduce using rule 90 (empty -> .)

  ! ID              [ reduce using rule 110 (p_operacion -> .) ]
  ! IF              [ reduce using rule 110 (p_operacion -> .) ]
  ! VAR             [ reduce using rule 110 (p_operacion -> .) ]
  ! RB              [ reduce using rule 110 (p_operacion -> .) ]
  ! ID              [ reduce using rule 90 (empty -> .) ]
  ! IF              [ reduce using rule 90 (empty -> .) ]
  ! VAR             [ reduce using rule 90 (empty -> .) ]

    p_operacion                    shift and go to state 73
    statement                      shift and go to state 100
    asignacion                     shift and go to state 70
    if                             shift and go to state 71
    vars                           shift and go to state 72
    oper_aritmetica                shift and go to state 74
    empty                          shift and go to state 75
    varsG                          shift and go to state 11

state 74

    (12) statement -> oper_aritmetica . statement
    (8) statement -> . asignacion SEMICOL statement
    (9) statement -> . if statement
    (10) statement -> . vars statement
    (11) statement -> . p_operacion statement
    (12) statement -> . oper_aritmetica statement
    (13) statement -> . empty
    (14) asignacion -> . ID IS value
    (91) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto
    (92) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto elseif
    (93) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto else
    (15) vars -> . VAR tipo vars1
    (16) vars -> . VAR tipo vars2
    (17) vars -> . VAR tipo vars3
    (18) vars -> . VAR tipo vars4
    (19) vars -> . VAR tipo oper_aritmetica
    (20) vars -> . varsG
    (21) vars -> . empty
    (110) p_operacion -> .
    (75) oper_aritmetica -> . ID IS expr SEMICOL
    (90) empty -> .
    (33) varsG -> . VAR tipo vars1G
    (34) varsG -> . VAR tipo vars2G
    (35) varsG -> . VAR tipo vars3G
    (36) varsG -> . VAR tipo vars4G
    (37) varsG -> . VAR LB varsG RB

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for RB resolved using rule 90 (empty -> .)
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
    ID              shift and go to state 76
    IF              shift and go to state 77
    VAR             shift and go to state 9
    RB              reduce using rule 90 (empty -> .)

  ! ID              [ reduce using rule 110 (p_operacion -> .) ]
  ! IF              [ reduce using rule 110 (p_operacion -> .) ]
  ! VAR             [ reduce using rule 110 (p_operacion -> .) ]
  ! RB              [ reduce using rule 110 (p_operacion -> .) ]
  ! ID              [ reduce using rule 90 (empty -> .) ]
  ! IF              [ reduce using rule 90 (empty -> .) ]
  ! VAR             [ reduce using rule 90 (empty -> .) ]

    oper_aritmetica                shift and go to state 74
    statement                      shift and go to state 101
    asignacion                     shift and go to state 70
    if                             shift and go to state 71
    vars                           shift and go to state 72
    p_operacion                    shift and go to state 73
    empty                          shift and go to state 75
    varsG                          shift and go to state 11

state 75

    (13) statement -> empty .
    (21) vars -> empty .

  ! reduce/reduce conflict for RB resolved using rule 13 (statement -> empty .)
    RB              reduce using rule 13 (statement -> empty .)
    ID              reduce using rule 21 (vars -> empty .)
    IF              reduce using rule 21 (vars -> empty .)
    VAR             reduce using rule 21 (vars -> empty .)

  ! RB              [ reduce using rule 21 (vars -> empty .) ]


state 76

    (14) asignacion -> ID . IS value
    (75) oper_aritmetica -> ID . IS expr SEMICOL

    IS              shift and go to state 102


state 77

    (91) if -> IF . LP expression RP check_bool gotof LB statement RB guarda_salto
    (92) if -> IF . LP expression RP check_bool gotof LB statement RB guarda_salto elseif
    (93) if -> IF . LP expression RP check_bool gotof LB statement RB guarda_salto else

    LP              shift and go to state 103


state 78

    (83) expr -> ID row .
    (89) matrix -> row . row
    (88) row -> . LC expr RC

    SEMICOL         reduce using rule 83 (expr -> ID row .)
    MUL             reduce using rule 83 (expr -> ID row .)
    DIV             reduce using rule 83 (expr -> ID row .)
    PLUS            reduce using rule 83 (expr -> ID row .)
    MINUS           reduce using rule 83 (expr -> ID row .)
    RC              reduce using rule 83 (expr -> ID row .)
    GT              reduce using rule 83 (expr -> ID row .)
    LT              reduce using rule 83 (expr -> ID row .)
    EQUAL           reduce using rule 83 (expr -> ID row .)
    NEQ             reduce using rule 83 (expr -> ID row .)
    GEQ             reduce using rule 83 (expr -> ID row .)
    LEQ             reduce using rule 83 (expr -> ID row .)
    RP              reduce using rule 83 (expr -> ID row .)
    LC              shift and go to state 80

    row                            shift and go to state 104

state 79

    (84) expr -> ID matrix .

    SEMICOL         reduce using rule 84 (expr -> ID matrix .)
    MUL             reduce using rule 84 (expr -> ID matrix .)
    DIV             reduce using rule 84 (expr -> ID matrix .)
    PLUS            reduce using rule 84 (expr -> ID matrix .)
    MINUS           reduce using rule 84 (expr -> ID matrix .)
    RC              reduce using rule 84 (expr -> ID matrix .)
    GT              reduce using rule 84 (expr -> ID matrix .)
    LT              reduce using rule 84 (expr -> ID matrix .)
    EQUAL           reduce using rule 84 (expr -> ID matrix .)
    NEQ             reduce using rule 84 (expr -> ID matrix .)
    GEQ             reduce using rule 84 (expr -> ID matrix .)
    LEQ             reduce using rule 84 (expr -> ID matrix .)
    RP              reduce using rule 84 (expr -> ID matrix .)


state 80

    (88) row -> LC . expr RC
    (76) expr -> . expr MUL expr
    (77) expr -> . expr DIV expr
    (78) expr -> . expr PLUS expr
    (79) expr -> . expr MINUS expr
    (80) expr -> . CTE_I
    (81) expr -> . CTE_F
    (82) expr -> . ID
    (83) expr -> . ID row
    (84) expr -> . ID matrix

    CTE_I           shift and go to state 106
    CTE_F           shift and go to state 107
    ID              shift and go to state 108

    expr                           shift and go to state 105

state 81

    (24) vars2 -> ID IS value SEMICOL .
    (25) vars2 -> ID IS value SEMICOL . vars
    (15) vars -> . VAR tipo vars1
    (16) vars -> . VAR tipo vars2
    (17) vars -> . VAR tipo vars3
    (18) vars -> . VAR tipo vars4
    (19) vars -> . VAR tipo oper_aritmetica
    (20) vars -> . varsG
    (21) vars -> . empty
    (33) varsG -> . VAR tipo vars1G
    (34) varsG -> . VAR tipo vars2G
    (35) varsG -> . VAR tipo vars3G
    (36) varsG -> . VAR tipo vars4G
    (37) varsG -> . VAR LB varsG RB
    (90) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for VOID resolved using rule 24 (vars2 -> ID IS value SEMICOL .)
  ! reduce/reduce conflict for INT resolved using rule 24 (vars2 -> ID IS value SEMICOL .)
  ! reduce/reduce conflict for FLOAT resolved using rule 24 (vars2 -> ID IS value SEMICOL .)
  ! reduce/reduce conflict for CHAR resolved using rule 24 (vars2 -> ID IS value SEMICOL .)
  ! reduce/reduce conflict for ID resolved using rule 24 (vars2 -> ID IS value SEMICOL .)
  ! reduce/reduce conflict for IF resolved using rule 24 (vars2 -> ID IS value SEMICOL .)
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for RB resolved using rule 24 (vars2 -> ID IS value SEMICOL .)
    VOID            reduce using rule 24 (vars2 -> ID IS value SEMICOL .)
    INT             reduce using rule 24 (vars2 -> ID IS value SEMICOL .)
    FLOAT           reduce using rule 24 (vars2 -> ID IS value SEMICOL .)
    CHAR            reduce using rule 24 (vars2 -> ID IS value SEMICOL .)
    ID              reduce using rule 24 (vars2 -> ID IS value SEMICOL .)
    IF              reduce using rule 24 (vars2 -> ID IS value SEMICOL .)
    RB              reduce using rule 24 (vars2 -> ID IS value SEMICOL .)
    VAR             shift and go to state 9

  ! VAR             [ reduce using rule 24 (vars2 -> ID IS value SEMICOL .) ]
  ! VOID            [ reduce using rule 90 (empty -> .) ]
  ! INT             [ reduce using rule 90 (empty -> .) ]
  ! FLOAT           [ reduce using rule 90 (empty -> .) ]
  ! CHAR            [ reduce using rule 90 (empty -> .) ]
  ! ID              [ reduce using rule 90 (empty -> .) ]
  ! IF              [ reduce using rule 90 (empty -> .) ]
  ! VAR             [ reduce using rule 90 (empty -> .) ]
  ! RB              [ reduce using rule 90 (empty -> .) ]

    vars                           shift and go to state 109
    varsG                          shift and go to state 11
    empty                          shift and go to state 53

state 82

    (29) vars4 -> ID IS value check_type . COMMA vars4
    (30) vars4 -> ID IS value check_type . SEMICOL vars
    (31) vars4 -> ID IS value check_type . SEMICOL
    (40) vars2G -> ID IS value check_type . SEMICOL
    (41) vars2G -> ID IS value check_type . SEMICOL varsG
    (45) vars4G -> ID IS value check_type . COMMA vars4G
    (46) vars4G -> ID IS value check_type . SEMICOL varsG
    (47) vars4G -> ID IS value check_type . SEMICOL

    COMMA           shift and go to state 110
    SEMICOL         shift and go to state 111


state 83

    (75) oper_aritmetica -> ID IS expr SEMICOL .

    VOID            reduce using rule 75 (oper_aritmetica -> ID IS expr SEMICOL .)
    INT             reduce using rule 75 (oper_aritmetica -> ID IS expr SEMICOL .)
    FLOAT           reduce using rule 75 (oper_aritmetica -> ID IS expr SEMICOL .)
    CHAR            reduce using rule 75 (oper_aritmetica -> ID IS expr SEMICOL .)
    ID              reduce using rule 75 (oper_aritmetica -> ID IS expr SEMICOL .)
    IF              reduce using rule 75 (oper_aritmetica -> ID IS expr SEMICOL .)
    VAR             reduce using rule 75 (oper_aritmetica -> ID IS expr SEMICOL .)
    RB              reduce using rule 75 (oper_aritmetica -> ID IS expr SEMICOL .)


state 84

    (76) expr -> expr MUL . expr
    (76) expr -> . expr MUL expr
    (77) expr -> . expr DIV expr
    (78) expr -> . expr PLUS expr
    (79) expr -> . expr MINUS expr
    (80) expr -> . CTE_I
    (81) expr -> . CTE_F
    (82) expr -> . ID
    (83) expr -> . ID row
    (84) expr -> . ID matrix

    CTE_I           shift and go to state 106
    CTE_F           shift and go to state 107
    ID              shift and go to state 108

    expr                           shift and go to state 112

state 85

    (77) expr -> expr DIV . expr
    (76) expr -> . expr MUL expr
    (77) expr -> . expr DIV expr
    (78) expr -> . expr PLUS expr
    (79) expr -> . expr MINUS expr
    (80) expr -> . CTE_I
    (81) expr -> . CTE_F
    (82) expr -> . ID
    (83) expr -> . ID row
    (84) expr -> . ID matrix

    CTE_I           shift and go to state 106
    CTE_F           shift and go to state 107
    ID              shift and go to state 108

    expr                           shift and go to state 113

state 86

    (78) expr -> expr PLUS . expr
    (76) expr -> . expr MUL expr
    (77) expr -> . expr DIV expr
    (78) expr -> . expr PLUS expr
    (79) expr -> . expr MINUS expr
    (80) expr -> . CTE_I
    (81) expr -> . CTE_F
    (82) expr -> . ID
    (83) expr -> . ID row
    (84) expr -> . ID matrix

    CTE_I           shift and go to state 106
    CTE_F           shift and go to state 107
    ID              shift and go to state 108

    expr                           shift and go to state 114

state 87

    (79) expr -> expr MINUS . expr
    (76) expr -> . expr MUL expr
    (77) expr -> . expr DIV expr
    (78) expr -> . expr PLUS expr
    (79) expr -> . expr MINUS expr
    (80) expr -> . CTE_I
    (81) expr -> . CTE_F
    (82) expr -> . ID
    (83) expr -> . ID row
    (84) expr -> . ID matrix

    CTE_I           shift and go to state 106
    CTE_F           shift and go to state 107
    ID              shift and go to state 108

    expr                           shift and go to state 115

state 88

    (56) value -> COMILLA ID . COMILLA

    COMILLA         shift and go to state 116


state 89

    (57) value -> COMILLAS ID . COMILLAS

    COMILLAS        shift and go to state 117


state 90

    (27) vars3 -> ID SEMICOL . vars
    (28) vars3 -> ID SEMICOL .
    (43) vars3G -> ID SEMICOL . varsG
    (44) vars3G -> ID SEMICOL .
    (15) vars -> . VAR tipo vars1
    (16) vars -> . VAR tipo vars2
    (17) vars -> . VAR tipo vars3
    (18) vars -> . VAR tipo vars4
    (19) vars -> . VAR tipo oper_aritmetica
    (20) vars -> . varsG
    (21) vars -> . empty
    (33) varsG -> . VAR tipo vars1G
    (34) varsG -> . VAR tipo vars2G
    (35) varsG -> . VAR tipo vars3G
    (36) varsG -> . VAR tipo vars4G
    (37) varsG -> . VAR LB varsG RB
    (90) empty -> .

  ! reduce/reduce conflict for VOID resolved using rule 28 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for INT resolved using rule 28 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for FLOAT resolved using rule 28 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for CHAR resolved using rule 28 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for ID resolved using rule 28 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for IF resolved using rule 28 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for VAR resolved using rule 28 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for RB resolved using rule 28 (vars3 -> ID SEMICOL .)
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for VOID resolved using rule 28 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for INT resolved using rule 28 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for FLOAT resolved using rule 28 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for CHAR resolved using rule 28 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for ID resolved using rule 28 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for IF resolved using rule 28 (vars3 -> ID SEMICOL .)
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for RB resolved using rule 28 (vars3 -> ID SEMICOL .)
    VOID            reduce using rule 28 (vars3 -> ID SEMICOL .)
    INT             reduce using rule 28 (vars3 -> ID SEMICOL .)
    FLOAT           reduce using rule 28 (vars3 -> ID SEMICOL .)
    CHAR            reduce using rule 28 (vars3 -> ID SEMICOL .)
    ID              reduce using rule 28 (vars3 -> ID SEMICOL .)
    IF              reduce using rule 28 (vars3 -> ID SEMICOL .)
    RB              reduce using rule 28 (vars3 -> ID SEMICOL .)
    VAR             shift and go to state 9

  ! VAR             [ reduce using rule 28 (vars3 -> ID SEMICOL .) ]
  ! VOID            [ reduce using rule 44 (vars3G -> ID SEMICOL .) ]
  ! INT             [ reduce using rule 44 (vars3G -> ID SEMICOL .) ]
  ! FLOAT           [ reduce using rule 44 (vars3G -> ID SEMICOL .) ]
  ! CHAR            [ reduce using rule 44 (vars3G -> ID SEMICOL .) ]
  ! ID              [ reduce using rule 44 (vars3G -> ID SEMICOL .) ]
  ! IF              [ reduce using rule 44 (vars3G -> ID SEMICOL .) ]
  ! VAR             [ reduce using rule 44 (vars3G -> ID SEMICOL .) ]
  ! RB              [ reduce using rule 44 (vars3G -> ID SEMICOL .) ]
  ! VOID            [ reduce using rule 90 (empty -> .) ]
  ! INT             [ reduce using rule 90 (empty -> .) ]
  ! FLOAT           [ reduce using rule 90 (empty -> .) ]
  ! CHAR            [ reduce using rule 90 (empty -> .) ]
  ! ID              [ reduce using rule 90 (empty -> .) ]
  ! IF              [ reduce using rule 90 (empty -> .) ]
  ! VAR             [ reduce using rule 90 (empty -> .) ]
  ! RB              [ reduce using rule 90 (empty -> .) ]

    vars                           shift and go to state 118
    varsG                          shift and go to state 119
    empty                          shift and go to state 53

state 91

    (38) vars1G -> ID SEMICOL .
    (39) vars1G -> ID SEMICOL . varsG
    (43) vars3G -> ID SEMICOL . varsG
    (44) vars3G -> ID SEMICOL .
    (33) varsG -> . VAR tipo vars1G
    (34) varsG -> . VAR tipo vars2G
    (35) varsG -> . VAR tipo vars3G
    (36) varsG -> . VAR tipo vars4G
    (37) varsG -> . VAR LB varsG RB

  ! reduce/reduce conflict for RB resolved using rule 38 (vars1G -> ID SEMICOL .)
    RB              reduce using rule 38 (vars1G -> ID SEMICOL .)
    VAR             shift and go to state 37

  ! RB              [ reduce using rule 44 (vars3G -> ID SEMICOL .) ]

    varsG                          shift and go to state 120

state 92

    (40) vars2G -> ID IS . value check_type SEMICOL
    (41) vars2G -> ID IS . value check_type SEMICOL varsG
    (45) vars4G -> ID IS . value check_type COMMA vars4G
    (46) vars4G -> ID IS . value check_type SEMICOL varsG
    (47) vars4G -> ID IS . value check_type SEMICOL
    (52) value -> . CTE_F
    (53) value -> . CTE_I
    (54) value -> . ID
    (55) value -> . CTE_C
    (56) value -> . COMILLA ID COMILLA
    (57) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124
    ID              shift and go to state 121
    CTE_C           shift and go to state 59
    COMILLA         shift and go to state 60
    COMILLAS        shift and go to state 61

    value                          shift and go to state 122

state 93

    (42) vars3G -> ID COMMA . vars3G
    (42) vars3G -> . ID COMMA vars3G
    (43) vars3G -> . ID SEMICOL varsG
    (44) vars3G -> . ID SEMICOL

    ID              shift and go to state 125

    vars3G                         shift and go to state 64

state 94

    (61) funcion -> tipo ID LP param RP LB . statement RB funcion
    (62) funcion -> tipo ID LP param RP LB . statement RB
    (8) statement -> . asignacion SEMICOL statement
    (9) statement -> . if statement
    (10) statement -> . vars statement
    (11) statement -> . p_operacion statement
    (12) statement -> . oper_aritmetica statement
    (13) statement -> . empty
    (14) asignacion -> . ID IS value
    (91) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto
    (92) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto elseif
    (93) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto else
    (15) vars -> . VAR tipo vars1
    (16) vars -> . VAR tipo vars2
    (17) vars -> . VAR tipo vars3
    (18) vars -> . VAR tipo vars4
    (19) vars -> . VAR tipo oper_aritmetica
    (20) vars -> . varsG
    (21) vars -> . empty
    (110) p_operacion -> .
    (75) oper_aritmetica -> . ID IS expr SEMICOL
    (90) empty -> .
    (33) varsG -> . VAR tipo vars1G
    (34) varsG -> . VAR tipo vars2G
    (35) varsG -> . VAR tipo vars3G
    (36) varsG -> . VAR tipo vars4G
    (37) varsG -> . VAR LB varsG RB

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for RB resolved using rule 90 (empty -> .)
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
    ID              shift and go to state 76
    IF              shift and go to state 77
    VAR             shift and go to state 9
    RB              reduce using rule 90 (empty -> .)

  ! ID              [ reduce using rule 110 (p_operacion -> .) ]
  ! IF              [ reduce using rule 110 (p_operacion -> .) ]
  ! VAR             [ reduce using rule 110 (p_operacion -> .) ]
  ! RB              [ reduce using rule 110 (p_operacion -> .) ]
  ! ID              [ reduce using rule 90 (empty -> .) ]
  ! IF              [ reduce using rule 90 (empty -> .) ]
  ! VAR             [ reduce using rule 90 (empty -> .) ]

    statement                      shift and go to state 126
    asignacion                     shift and go to state 70
    if                             shift and go to state 71
    vars                           shift and go to state 72
    p_operacion                    shift and go to state 73
    oper_aritmetica                shift and go to state 74
    empty                          shift and go to state 75
    varsG                          shift and go to state 11

state 95

    (59) funcion -> VOID ID LP param RP LB . statement RB funcion
    (60) funcion -> VOID ID LP param RP LB . statement RB
    (8) statement -> . asignacion SEMICOL statement
    (9) statement -> . if statement
    (10) statement -> . vars statement
    (11) statement -> . p_operacion statement
    (12) statement -> . oper_aritmetica statement
    (13) statement -> . empty
    (14) asignacion -> . ID IS value
    (91) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto
    (92) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto elseif
    (93) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto else
    (15) vars -> . VAR tipo vars1
    (16) vars -> . VAR tipo vars2
    (17) vars -> . VAR tipo vars3
    (18) vars -> . VAR tipo vars4
    (19) vars -> . VAR tipo oper_aritmetica
    (20) vars -> . varsG
    (21) vars -> . empty
    (110) p_operacion -> .
    (75) oper_aritmetica -> . ID IS expr SEMICOL
    (90) empty -> .
    (33) varsG -> . VAR tipo vars1G
    (34) varsG -> . VAR tipo vars2G
    (35) varsG -> . VAR tipo vars3G
    (36) varsG -> . VAR tipo vars4G
    (37) varsG -> . VAR LB varsG RB

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for RB resolved using rule 90 (empty -> .)
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
    ID              shift and go to state 76
    IF              shift and go to state 77
    VAR             shift and go to state 9
    RB              reduce using rule 90 (empty -> .)

  ! ID              [ reduce using rule 110 (p_operacion -> .) ]
  ! IF              [ reduce using rule 110 (p_operacion -> .) ]
  ! VAR             [ reduce using rule 110 (p_operacion -> .) ]
  ! RB              [ reduce using rule 110 (p_operacion -> .) ]
  ! ID              [ reduce using rule 90 (empty -> .) ]
  ! IF              [ reduce using rule 90 (empty -> .) ]
  ! VAR             [ reduce using rule 90 (empty -> .) ]

    statement                      shift and go to state 127
    asignacion                     shift and go to state 70
    if                             shift and go to state 71
    vars                           shift and go to state 72
    p_operacion                    shift and go to state 73
    oper_aritmetica                shift and go to state 74
    empty                          shift and go to state 75
    varsG                          shift and go to state 11

state 96

    (7) main -> MAIN LP RP LB statement RB .

    VOID            reduce using rule 7 (main -> MAIN LP RP LB statement RB .)
    INT             reduce using rule 7 (main -> MAIN LP RP LB statement RB .)
    FLOAT           reduce using rule 7 (main -> MAIN LP RP LB statement RB .)
    CHAR            reduce using rule 7 (main -> MAIN LP RP LB statement RB .)


state 97

    (8) statement -> asignacion SEMICOL . statement
    (8) statement -> . asignacion SEMICOL statement
    (9) statement -> . if statement
    (10) statement -> . vars statement
    (11) statement -> . p_operacion statement
    (12) statement -> . oper_aritmetica statement
    (13) statement -> . empty
    (14) asignacion -> . ID IS value
    (91) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto
    (92) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto elseif
    (93) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto else
    (15) vars -> . VAR tipo vars1
    (16) vars -> . VAR tipo vars2
    (17) vars -> . VAR tipo vars3
    (18) vars -> . VAR tipo vars4
    (19) vars -> . VAR tipo oper_aritmetica
    (20) vars -> . varsG
    (21) vars -> . empty
    (110) p_operacion -> .
    (75) oper_aritmetica -> . ID IS expr SEMICOL
    (90) empty -> .
    (33) varsG -> . VAR tipo vars1G
    (34) varsG -> . VAR tipo vars2G
    (35) varsG -> . VAR tipo vars3G
    (36) varsG -> . VAR tipo vars4G
    (37) varsG -> . VAR LB varsG RB

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for RB resolved using rule 90 (empty -> .)
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
    ID              shift and go to state 76
    IF              shift and go to state 77
    VAR             shift and go to state 9
    RB              reduce using rule 90 (empty -> .)

  ! ID              [ reduce using rule 110 (p_operacion -> .) ]
  ! IF              [ reduce using rule 110 (p_operacion -> .) ]
  ! VAR             [ reduce using rule 110 (p_operacion -> .) ]
  ! RB              [ reduce using rule 110 (p_operacion -> .) ]
  ! ID              [ reduce using rule 90 (empty -> .) ]
  ! IF              [ reduce using rule 90 (empty -> .) ]
  ! VAR             [ reduce using rule 90 (empty -> .) ]

    asignacion                     shift and go to state 70
    statement                      shift and go to state 128
    if                             shift and go to state 71
    vars                           shift and go to state 72
    p_operacion                    shift and go to state 73
    oper_aritmetica                shift and go to state 74
    empty                          shift and go to state 75
    varsG                          shift and go to state 11

state 98

    (9) statement -> if statement .

    RB              reduce using rule 9 (statement -> if statement .)


state 99

    (10) statement -> vars statement .

    RB              reduce using rule 10 (statement -> vars statement .)


state 100

    (11) statement -> p_operacion statement .

    RB              reduce using rule 11 (statement -> p_operacion statement .)


state 101

    (12) statement -> oper_aritmetica statement .

    RB              reduce using rule 12 (statement -> oper_aritmetica statement .)


state 102

    (14) asignacion -> ID IS . value
    (75) oper_aritmetica -> ID IS . expr SEMICOL
    (52) value -> . CTE_F
    (53) value -> . CTE_I
    (54) value -> . ID
    (55) value -> . CTE_C
    (56) value -> . COMILLA ID COMILLA
    (57) value -> . COMILLAS ID COMILLAS
    (76) expr -> . expr MUL expr
    (77) expr -> . expr DIV expr
    (78) expr -> . expr PLUS expr
    (79) expr -> . expr MINUS expr
    (80) expr -> . CTE_I
    (81) expr -> . CTE_F
    (82) expr -> . ID
    (83) expr -> . ID row
    (84) expr -> . ID matrix

    CTE_F           shift and go to state 57
    CTE_I           shift and go to state 58
    ID              shift and go to state 54
    CTE_C           shift and go to state 59
    COMILLA         shift and go to state 60
    COMILLAS        shift and go to state 61

    value                          shift and go to state 129
    expr                           shift and go to state 56

state 103

    (91) if -> IF LP . expression RP check_bool gotof LB statement RB guarda_salto
    (92) if -> IF LP . expression RP check_bool gotof LB statement RB guarda_salto elseif
    (93) if -> IF LP . expression RP check_bool gotof LB statement RB guarda_salto else
    (98) expression -> . var_gt
    (99) expression -> . var_lt
    (100) expression -> . var_equal
    (101) expression -> . var_neq
    (102) expression -> . var_geq
    (103) expression -> . var_leq
    (104) expression -> . TRUE
    (105) expression -> . FALSE
    (106) expression -> . ID
    (70) var_gt -> . expr GT expr
    (69) var_lt -> . expr LT expr
    (73) var_equal -> . expr EQUAL expr
    (74) var_neq -> . expr NEQ expr
    (72) var_geq -> . expr GEQ expr
    (71) var_leq -> . expr LEQ expr
    (76) expr -> . expr MUL expr
    (77) expr -> . expr DIV expr
    (78) expr -> . expr PLUS expr
    (79) expr -> . expr MINUS expr
    (80) expr -> . CTE_I
    (81) expr -> . CTE_F
    (82) expr -> . ID
    (83) expr -> . ID row
    (84) expr -> . ID matrix

    TRUE            shift and go to state 137
    FALSE           shift and go to state 138
    ID              shift and go to state 139
    CTE_I           shift and go to state 106
    CTE_F           shift and go to state 107

    expression                     shift and go to state 130
    var_gt                         shift and go to state 131
    var_lt                         shift and go to state 132
    var_equal                      shift and go to state 133
    var_neq                        shift and go to state 134
    var_geq                        shift and go to state 135
    var_leq                        shift and go to state 136
    expr                           shift and go to state 140

state 104

    (89) matrix -> row row .

    SEMICOL         reduce using rule 89 (matrix -> row row .)
    MUL             reduce using rule 89 (matrix -> row row .)
    DIV             reduce using rule 89 (matrix -> row row .)
    PLUS            reduce using rule 89 (matrix -> row row .)
    MINUS           reduce using rule 89 (matrix -> row row .)
    RC              reduce using rule 89 (matrix -> row row .)
    GT              reduce using rule 89 (matrix -> row row .)
    LT              reduce using rule 89 (matrix -> row row .)
    EQUAL           reduce using rule 89 (matrix -> row row .)
    NEQ             reduce using rule 89 (matrix -> row row .)
    GEQ             reduce using rule 89 (matrix -> row row .)
    LEQ             reduce using rule 89 (matrix -> row row .)
    RP              reduce using rule 89 (matrix -> row row .)


state 105

    (88) row -> LC expr . RC
    (76) expr -> expr . MUL expr
    (77) expr -> expr . DIV expr
    (78) expr -> expr . PLUS expr
    (79) expr -> expr . MINUS expr

    RC              shift and go to state 141
    MUL             shift and go to state 84
    DIV             shift and go to state 85
    PLUS            shift and go to state 86
    MINUS           shift and go to state 87


state 106

    (80) expr -> CTE_I .

    RC              reduce using rule 80 (expr -> CTE_I .)
    MUL             reduce using rule 80 (expr -> CTE_I .)
    DIV             reduce using rule 80 (expr -> CTE_I .)
    PLUS            reduce using rule 80 (expr -> CTE_I .)
    MINUS           reduce using rule 80 (expr -> CTE_I .)
    SEMICOL         reduce using rule 80 (expr -> CTE_I .)
    GT              reduce using rule 80 (expr -> CTE_I .)
    LT              reduce using rule 80 (expr -> CTE_I .)
    EQUAL           reduce using rule 80 (expr -> CTE_I .)
    NEQ             reduce using rule 80 (expr -> CTE_I .)
    GEQ             reduce using rule 80 (expr -> CTE_I .)
    LEQ             reduce using rule 80 (expr -> CTE_I .)
    RP              reduce using rule 80 (expr -> CTE_I .)


state 107

    (81) expr -> CTE_F .

    RC              reduce using rule 81 (expr -> CTE_F .)
    MUL             reduce using rule 81 (expr -> CTE_F .)
    DIV             reduce using rule 81 (expr -> CTE_F .)
    PLUS            reduce using rule 81 (expr -> CTE_F .)
    MINUS           reduce using rule 81 (expr -> CTE_F .)
    SEMICOL         reduce using rule 81 (expr -> CTE_F .)
    GT              reduce using rule 81 (expr -> CTE_F .)
    LT              reduce using rule 81 (expr -> CTE_F .)
    EQUAL           reduce using rule 81 (expr -> CTE_F .)
    NEQ             reduce using rule 81 (expr -> CTE_F .)
    GEQ             reduce using rule 81 (expr -> CTE_F .)
    LEQ             reduce using rule 81 (expr -> CTE_F .)
    RP              reduce using rule 81 (expr -> CTE_F .)


state 108

    (82) expr -> ID .
    (83) expr -> ID . row
    (84) expr -> ID . matrix
    (88) row -> . LC expr RC
    (89) matrix -> . row row

    RC              reduce using rule 82 (expr -> ID .)
    MUL             reduce using rule 82 (expr -> ID .)
    DIV             reduce using rule 82 (expr -> ID .)
    PLUS            reduce using rule 82 (expr -> ID .)
    MINUS           reduce using rule 82 (expr -> ID .)
    SEMICOL         reduce using rule 82 (expr -> ID .)
    GT              reduce using rule 82 (expr -> ID .)
    LT              reduce using rule 82 (expr -> ID .)
    EQUAL           reduce using rule 82 (expr -> ID .)
    NEQ             reduce using rule 82 (expr -> ID .)
    GEQ             reduce using rule 82 (expr -> ID .)
    LEQ             reduce using rule 82 (expr -> ID .)
    RP              reduce using rule 82 (expr -> ID .)
    LC              shift and go to state 80

    row                            shift and go to state 78
    matrix                         shift and go to state 79

state 109

    (25) vars2 -> ID IS value SEMICOL vars .

    VOID            reduce using rule 25 (vars2 -> ID IS value SEMICOL vars .)
    INT             reduce using rule 25 (vars2 -> ID IS value SEMICOL vars .)
    FLOAT           reduce using rule 25 (vars2 -> ID IS value SEMICOL vars .)
    CHAR            reduce using rule 25 (vars2 -> ID IS value SEMICOL vars .)
    ID              reduce using rule 25 (vars2 -> ID IS value SEMICOL vars .)
    IF              reduce using rule 25 (vars2 -> ID IS value SEMICOL vars .)
    VAR             reduce using rule 25 (vars2 -> ID IS value SEMICOL vars .)
    RB              reduce using rule 25 (vars2 -> ID IS value SEMICOL vars .)


state 110

    (29) vars4 -> ID IS value check_type COMMA . vars4
    (45) vars4G -> ID IS value check_type COMMA . vars4G
    (29) vars4 -> . ID IS value check_type COMMA vars4
    (30) vars4 -> . ID IS value check_type SEMICOL vars
    (31) vars4 -> . ID IS value check_type SEMICOL
    (32) vars4 -> . empty
    (45) vars4G -> . ID IS value check_type COMMA vars4G
    (46) vars4G -> . ID IS value check_type SEMICOL varsG
    (47) vars4G -> . ID IS value check_type SEMICOL
    (48) vars4G -> . empty
    (90) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 142
    VOID            reduce using rule 90 (empty -> .)
    INT             reduce using rule 90 (empty -> .)
    FLOAT           reduce using rule 90 (empty -> .)
    CHAR            reduce using rule 90 (empty -> .)
    IF              reduce using rule 90 (empty -> .)
    VAR             reduce using rule 90 (empty -> .)
    RB              reduce using rule 90 (empty -> .)

  ! ID              [ reduce using rule 90 (empty -> .) ]

    vars4                          shift and go to state 143
    vars4G                         shift and go to state 144
    empty                          shift and go to state 36

state 111

    (30) vars4 -> ID IS value check_type SEMICOL . vars
    (31) vars4 -> ID IS value check_type SEMICOL .
    (40) vars2G -> ID IS value check_type SEMICOL .
    (41) vars2G -> ID IS value check_type SEMICOL . varsG
    (46) vars4G -> ID IS value check_type SEMICOL . varsG
    (47) vars4G -> ID IS value check_type SEMICOL .
    (15) vars -> . VAR tipo vars1
    (16) vars -> . VAR tipo vars2
    (17) vars -> . VAR tipo vars3
    (18) vars -> . VAR tipo vars4
    (19) vars -> . VAR tipo oper_aritmetica
    (20) vars -> . varsG
    (21) vars -> . empty
    (33) varsG -> . VAR tipo vars1G
    (34) varsG -> . VAR tipo vars2G
    (35) varsG -> . VAR tipo vars3G
    (36) varsG -> . VAR tipo vars4G
    (37) varsG -> . VAR LB varsG RB
    (90) empty -> .

  ! reduce/reduce conflict for VOID resolved using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
  ! reduce/reduce conflict for INT resolved using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
  ! reduce/reduce conflict for FLOAT resolved using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
  ! reduce/reduce conflict for CHAR resolved using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
  ! reduce/reduce conflict for ID resolved using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
  ! reduce/reduce conflict for IF resolved using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
  ! reduce/reduce conflict for VAR resolved using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
  ! reduce/reduce conflict for RB resolved using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
  ! reduce/reduce conflict for VOID resolved using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
  ! reduce/reduce conflict for INT resolved using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
  ! reduce/reduce conflict for FLOAT resolved using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
  ! reduce/reduce conflict for CHAR resolved using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
  ! reduce/reduce conflict for ID resolved using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
  ! reduce/reduce conflict for IF resolved using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
  ! reduce/reduce conflict for VAR resolved using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
  ! reduce/reduce conflict for RB resolved using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for VOID resolved using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
  ! reduce/reduce conflict for INT resolved using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
  ! reduce/reduce conflict for FLOAT resolved using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
  ! reduce/reduce conflict for CHAR resolved using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
  ! reduce/reduce conflict for ID resolved using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
  ! reduce/reduce conflict for IF resolved using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for RB resolved using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
    VOID            reduce using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
    INT             reduce using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
    FLOAT           reduce using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
    CHAR            reduce using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
    ID              reduce using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
    IF              reduce using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
    RB              reduce using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
    VAR             shift and go to state 9

  ! VAR             [ reduce using rule 31 (vars4 -> ID IS value check_type SEMICOL .) ]
  ! VOID            [ reduce using rule 40 (vars2G -> ID IS value check_type SEMICOL .) ]
  ! INT             [ reduce using rule 40 (vars2G -> ID IS value check_type SEMICOL .) ]
  ! FLOAT           [ reduce using rule 40 (vars2G -> ID IS value check_type SEMICOL .) ]
  ! CHAR            [ reduce using rule 40 (vars2G -> ID IS value check_type SEMICOL .) ]
  ! ID              [ reduce using rule 40 (vars2G -> ID IS value check_type SEMICOL .) ]
  ! IF              [ reduce using rule 40 (vars2G -> ID IS value check_type SEMICOL .) ]
  ! VAR             [ reduce using rule 40 (vars2G -> ID IS value check_type SEMICOL .) ]
  ! RB              [ reduce using rule 40 (vars2G -> ID IS value check_type SEMICOL .) ]
  ! VOID            [ reduce using rule 47 (vars4G -> ID IS value check_type SEMICOL .) ]
  ! INT             [ reduce using rule 47 (vars4G -> ID IS value check_type SEMICOL .) ]
  ! FLOAT           [ reduce using rule 47 (vars4G -> ID IS value check_type SEMICOL .) ]
  ! CHAR            [ reduce using rule 47 (vars4G -> ID IS value check_type SEMICOL .) ]
  ! ID              [ reduce using rule 47 (vars4G -> ID IS value check_type SEMICOL .) ]
  ! IF              [ reduce using rule 47 (vars4G -> ID IS value check_type SEMICOL .) ]
  ! VAR             [ reduce using rule 47 (vars4G -> ID IS value check_type SEMICOL .) ]
  ! RB              [ reduce using rule 47 (vars4G -> ID IS value check_type SEMICOL .) ]
  ! VOID            [ reduce using rule 90 (empty -> .) ]
  ! INT             [ reduce using rule 90 (empty -> .) ]
  ! FLOAT           [ reduce using rule 90 (empty -> .) ]
  ! CHAR            [ reduce using rule 90 (empty -> .) ]
  ! ID              [ reduce using rule 90 (empty -> .) ]
  ! IF              [ reduce using rule 90 (empty -> .) ]
  ! VAR             [ reduce using rule 90 (empty -> .) ]
  ! RB              [ reduce using rule 90 (empty -> .) ]

    vars                           shift and go to state 145
    varsG                          shift and go to state 146
    empty                          shift and go to state 53

state 112

    (76) expr -> expr MUL expr .
    (76) expr -> expr . MUL expr
    (77) expr -> expr . DIV expr
    (78) expr -> expr . PLUS expr
    (79) expr -> expr . MINUS expr

    SEMICOL         reduce using rule 76 (expr -> expr MUL expr .)
    MUL             reduce using rule 76 (expr -> expr MUL expr .)
    DIV             reduce using rule 76 (expr -> expr MUL expr .)
    PLUS            reduce using rule 76 (expr -> expr MUL expr .)
    MINUS           reduce using rule 76 (expr -> expr MUL expr .)
    RC              reduce using rule 76 (expr -> expr MUL expr .)
    GT              reduce using rule 76 (expr -> expr MUL expr .)
    LT              reduce using rule 76 (expr -> expr MUL expr .)
    EQUAL           reduce using rule 76 (expr -> expr MUL expr .)
    NEQ             reduce using rule 76 (expr -> expr MUL expr .)
    GEQ             reduce using rule 76 (expr -> expr MUL expr .)
    LEQ             reduce using rule 76 (expr -> expr MUL expr .)
    RP              reduce using rule 76 (expr -> expr MUL expr .)

  ! MUL             [ shift and go to state 84 ]
  ! DIV             [ shift and go to state 85 ]
  ! PLUS            [ shift and go to state 86 ]
  ! MINUS           [ shift and go to state 87 ]


state 113

    (77) expr -> expr DIV expr .
    (76) expr -> expr . MUL expr
    (77) expr -> expr . DIV expr
    (78) expr -> expr . PLUS expr
    (79) expr -> expr . MINUS expr

    SEMICOL         reduce using rule 77 (expr -> expr DIV expr .)
    MUL             reduce using rule 77 (expr -> expr DIV expr .)
    DIV             reduce using rule 77 (expr -> expr DIV expr .)
    PLUS            reduce using rule 77 (expr -> expr DIV expr .)
    MINUS           reduce using rule 77 (expr -> expr DIV expr .)
    RC              reduce using rule 77 (expr -> expr DIV expr .)
    GT              reduce using rule 77 (expr -> expr DIV expr .)
    LT              reduce using rule 77 (expr -> expr DIV expr .)
    EQUAL           reduce using rule 77 (expr -> expr DIV expr .)
    NEQ             reduce using rule 77 (expr -> expr DIV expr .)
    GEQ             reduce using rule 77 (expr -> expr DIV expr .)
    LEQ             reduce using rule 77 (expr -> expr DIV expr .)
    RP              reduce using rule 77 (expr -> expr DIV expr .)

  ! MUL             [ shift and go to state 84 ]
  ! DIV             [ shift and go to state 85 ]
  ! PLUS            [ shift and go to state 86 ]
  ! MINUS           [ shift and go to state 87 ]


state 114

    (78) expr -> expr PLUS expr .
    (76) expr -> expr . MUL expr
    (77) expr -> expr . DIV expr
    (78) expr -> expr . PLUS expr
    (79) expr -> expr . MINUS expr

    SEMICOL         reduce using rule 78 (expr -> expr PLUS expr .)
    PLUS            reduce using rule 78 (expr -> expr PLUS expr .)
    MINUS           reduce using rule 78 (expr -> expr PLUS expr .)
    RC              reduce using rule 78 (expr -> expr PLUS expr .)
    GT              reduce using rule 78 (expr -> expr PLUS expr .)
    LT              reduce using rule 78 (expr -> expr PLUS expr .)
    EQUAL           reduce using rule 78 (expr -> expr PLUS expr .)
    NEQ             reduce using rule 78 (expr -> expr PLUS expr .)
    GEQ             reduce using rule 78 (expr -> expr PLUS expr .)
    LEQ             reduce using rule 78 (expr -> expr PLUS expr .)
    RP              reduce using rule 78 (expr -> expr PLUS expr .)
    MUL             shift and go to state 84
    DIV             shift and go to state 85

  ! MUL             [ reduce using rule 78 (expr -> expr PLUS expr .) ]
  ! DIV             [ reduce using rule 78 (expr -> expr PLUS expr .) ]
  ! PLUS            [ shift and go to state 86 ]
  ! MINUS           [ shift and go to state 87 ]


state 115

    (79) expr -> expr MINUS expr .
    (76) expr -> expr . MUL expr
    (77) expr -> expr . DIV expr
    (78) expr -> expr . PLUS expr
    (79) expr -> expr . MINUS expr

    SEMICOL         reduce using rule 79 (expr -> expr MINUS expr .)
    PLUS            reduce using rule 79 (expr -> expr MINUS expr .)
    MINUS           reduce using rule 79 (expr -> expr MINUS expr .)
    RC              reduce using rule 79 (expr -> expr MINUS expr .)
    GT              reduce using rule 79 (expr -> expr MINUS expr .)
    LT              reduce using rule 79 (expr -> expr MINUS expr .)
    EQUAL           reduce using rule 79 (expr -> expr MINUS expr .)
    NEQ             reduce using rule 79 (expr -> expr MINUS expr .)
    GEQ             reduce using rule 79 (expr -> expr MINUS expr .)
    LEQ             reduce using rule 79 (expr -> expr MINUS expr .)
    RP              reduce using rule 79 (expr -> expr MINUS expr .)
    MUL             shift and go to state 84
    DIV             shift and go to state 85

  ! MUL             [ reduce using rule 79 (expr -> expr MINUS expr .) ]
  ! DIV             [ reduce using rule 79 (expr -> expr MINUS expr .) ]
  ! PLUS            [ shift and go to state 86 ]
  ! MINUS           [ shift and go to state 87 ]


state 116

    (56) value -> COMILLA ID COMILLA .

    SEMICOL         reduce using rule 56 (value -> COMILLA ID COMILLA .)
    COMMA           reduce using rule 56 (value -> COMILLA ID COMILLA .)


state 117

    (57) value -> COMILLAS ID COMILLAS .

    SEMICOL         reduce using rule 57 (value -> COMILLAS ID COMILLAS .)
    COMMA           reduce using rule 57 (value -> COMILLAS ID COMILLAS .)


state 118

    (27) vars3 -> ID SEMICOL vars .

    VOID            reduce using rule 27 (vars3 -> ID SEMICOL vars .)
    INT             reduce using rule 27 (vars3 -> ID SEMICOL vars .)
    FLOAT           reduce using rule 27 (vars3 -> ID SEMICOL vars .)
    CHAR            reduce using rule 27 (vars3 -> ID SEMICOL vars .)
    ID              reduce using rule 27 (vars3 -> ID SEMICOL vars .)
    IF              reduce using rule 27 (vars3 -> ID SEMICOL vars .)
    VAR             reduce using rule 27 (vars3 -> ID SEMICOL vars .)
    RB              reduce using rule 27 (vars3 -> ID SEMICOL vars .)


state 119

    (43) vars3G -> ID SEMICOL varsG .
    (20) vars -> varsG .

  ! reduce/reduce conflict for VOID resolved using rule 20 (vars -> varsG .)
  ! reduce/reduce conflict for INT resolved using rule 20 (vars -> varsG .)
  ! reduce/reduce conflict for FLOAT resolved using rule 20 (vars -> varsG .)
  ! reduce/reduce conflict for CHAR resolved using rule 20 (vars -> varsG .)
  ! reduce/reduce conflict for ID resolved using rule 20 (vars -> varsG .)
  ! reduce/reduce conflict for IF resolved using rule 20 (vars -> varsG .)
  ! reduce/reduce conflict for VAR resolved using rule 20 (vars -> varsG .)
  ! reduce/reduce conflict for RB resolved using rule 20 (vars -> varsG .)
    VOID            reduce using rule 20 (vars -> varsG .)
    INT             reduce using rule 20 (vars -> varsG .)
    FLOAT           reduce using rule 20 (vars -> varsG .)
    CHAR            reduce using rule 20 (vars -> varsG .)
    ID              reduce using rule 20 (vars -> varsG .)
    IF              reduce using rule 20 (vars -> varsG .)
    VAR             reduce using rule 20 (vars -> varsG .)
    RB              reduce using rule 20 (vars -> varsG .)

  ! VOID            [ reduce using rule 43 (vars3G -> ID SEMICOL varsG .) ]
  ! INT             [ reduce using rule 43 (vars3G -> ID SEMICOL varsG .) ]
  ! FLOAT           [ reduce using rule 43 (vars3G -> ID SEMICOL varsG .) ]
  ! CHAR            [ reduce using rule 43 (vars3G -> ID SEMICOL varsG .) ]
  ! ID              [ reduce using rule 43 (vars3G -> ID SEMICOL varsG .) ]
  ! IF              [ reduce using rule 43 (vars3G -> ID SEMICOL varsG .) ]
  ! VAR             [ reduce using rule 43 (vars3G -> ID SEMICOL varsG .) ]
  ! RB              [ reduce using rule 43 (vars3G -> ID SEMICOL varsG .) ]


state 120

    (39) vars1G -> ID SEMICOL varsG .
    (43) vars3G -> ID SEMICOL varsG .

  ! reduce/reduce conflict for RB resolved using rule 39 (vars1G -> ID SEMICOL varsG .)
    RB              reduce using rule 39 (vars1G -> ID SEMICOL varsG .)

  ! RB              [ reduce using rule 43 (vars3G -> ID SEMICOL varsG .) ]


state 121

    (54) value -> ID .

    SEMICOL         reduce using rule 54 (value -> ID .)
    COMMA           reduce using rule 54 (value -> ID .)


state 122

    (40) vars2G -> ID IS value . check_type SEMICOL
    (41) vars2G -> ID IS value . check_type SEMICOL varsG
    (45) vars4G -> ID IS value . check_type COMMA vars4G
    (46) vars4G -> ID IS value . check_type SEMICOL varsG
    (47) vars4G -> ID IS value . check_type SEMICOL
    (58) check_type -> .

    SEMICOL         reduce using rule 58 (check_type -> .)
    COMMA           reduce using rule 58 (check_type -> .)

    check_type                     shift and go to state 147

state 123

    (52) value -> CTE_F .

    SEMICOL         reduce using rule 52 (value -> CTE_F .)
    COMMA           reduce using rule 52 (value -> CTE_F .)


state 124

    (53) value -> CTE_I .

    SEMICOL         reduce using rule 53 (value -> CTE_I .)
    COMMA           reduce using rule 53 (value -> CTE_I .)


state 125

    (42) vars3G -> ID . COMMA vars3G
    (43) vars3G -> ID . SEMICOL varsG
    (44) vars3G -> ID . SEMICOL

    COMMA           shift and go to state 93
    SEMICOL         shift and go to state 148


state 126

    (61) funcion -> tipo ID LP param RP LB statement . RB funcion
    (62) funcion -> tipo ID LP param RP LB statement . RB

    RB              shift and go to state 149


state 127

    (59) funcion -> VOID ID LP param RP LB statement . RB funcion
    (60) funcion -> VOID ID LP param RP LB statement . RB

    RB              shift and go to state 150


state 128

    (8) statement -> asignacion SEMICOL statement .

    RB              reduce using rule 8 (statement -> asignacion SEMICOL statement .)


state 129

    (14) asignacion -> ID IS value .

    SEMICOL         reduce using rule 14 (asignacion -> ID IS value .)


state 130

    (91) if -> IF LP expression . RP check_bool gotof LB statement RB guarda_salto
    (92) if -> IF LP expression . RP check_bool gotof LB statement RB guarda_salto elseif
    (93) if -> IF LP expression . RP check_bool gotof LB statement RB guarda_salto else

    RP              shift and go to state 151


state 131

    (98) expression -> var_gt .

    RP              reduce using rule 98 (expression -> var_gt .)


state 132

    (99) expression -> var_lt .

    RP              reduce using rule 99 (expression -> var_lt .)


state 133

    (100) expression -> var_equal .

    RP              reduce using rule 100 (expression -> var_equal .)


state 134

    (101) expression -> var_neq .

    RP              reduce using rule 101 (expression -> var_neq .)


state 135

    (102) expression -> var_geq .

    RP              reduce using rule 102 (expression -> var_geq .)


state 136

    (103) expression -> var_leq .

    RP              reduce using rule 103 (expression -> var_leq .)


state 137

    (104) expression -> TRUE .

    RP              reduce using rule 104 (expression -> TRUE .)


state 138

    (105) expression -> FALSE .

    RP              reduce using rule 105 (expression -> FALSE .)


state 139

    (106) expression -> ID .
    (82) expr -> ID .
    (83) expr -> ID . row
    (84) expr -> ID . matrix
    (88) row -> . LC expr RC
    (89) matrix -> . row row

    RP              reduce using rule 106 (expression -> ID .)
    GT              reduce using rule 82 (expr -> ID .)
    LT              reduce using rule 82 (expr -> ID .)
    EQUAL           reduce using rule 82 (expr -> ID .)
    NEQ             reduce using rule 82 (expr -> ID .)
    GEQ             reduce using rule 82 (expr -> ID .)
    LEQ             reduce using rule 82 (expr -> ID .)
    MUL             reduce using rule 82 (expr -> ID .)
    DIV             reduce using rule 82 (expr -> ID .)
    PLUS            reduce using rule 82 (expr -> ID .)
    MINUS           reduce using rule 82 (expr -> ID .)
    LC              shift and go to state 80

    row                            shift and go to state 78
    matrix                         shift and go to state 79

state 140

    (70) var_gt -> expr . GT expr
    (69) var_lt -> expr . LT expr
    (73) var_equal -> expr . EQUAL expr
    (74) var_neq -> expr . NEQ expr
    (72) var_geq -> expr . GEQ expr
    (71) var_leq -> expr . LEQ expr
    (76) expr -> expr . MUL expr
    (77) expr -> expr . DIV expr
    (78) expr -> expr . PLUS expr
    (79) expr -> expr . MINUS expr

    GT              shift and go to state 152
    LT              shift and go to state 153
    EQUAL           shift and go to state 154
    NEQ             shift and go to state 155
    GEQ             shift and go to state 156
    LEQ             shift and go to state 157
    MUL             shift and go to state 84
    DIV             shift and go to state 85
    PLUS            shift and go to state 86
    MINUS           shift and go to state 87


state 141

    (88) row -> LC expr RC .

    LC              reduce using rule 88 (row -> LC expr RC .)
    SEMICOL         reduce using rule 88 (row -> LC expr RC .)
    MUL             reduce using rule 88 (row -> LC expr RC .)
    DIV             reduce using rule 88 (row -> LC expr RC .)
    PLUS            reduce using rule 88 (row -> LC expr RC .)
    MINUS           reduce using rule 88 (row -> LC expr RC .)
    RC              reduce using rule 88 (row -> LC expr RC .)
    GT              reduce using rule 88 (row -> LC expr RC .)
    LT              reduce using rule 88 (row -> LC expr RC .)
    EQUAL           reduce using rule 88 (row -> LC expr RC .)
    NEQ             reduce using rule 88 (row -> LC expr RC .)
    GEQ             reduce using rule 88 (row -> LC expr RC .)
    LEQ             reduce using rule 88 (row -> LC expr RC .)
    RP              reduce using rule 88 (row -> LC expr RC .)


state 142

    (29) vars4 -> ID . IS value check_type COMMA vars4
    (30) vars4 -> ID . IS value check_type SEMICOL vars
    (31) vars4 -> ID . IS value check_type SEMICOL
    (45) vars4G -> ID . IS value check_type COMMA vars4G
    (46) vars4G -> ID . IS value check_type SEMICOL varsG
    (47) vars4G -> ID . IS value check_type SEMICOL

    IS              shift and go to state 158


state 143

    (29) vars4 -> ID IS value check_type COMMA vars4 .

    VOID            reduce using rule 29 (vars4 -> ID IS value check_type COMMA vars4 .)
    INT             reduce using rule 29 (vars4 -> ID IS value check_type COMMA vars4 .)
    FLOAT           reduce using rule 29 (vars4 -> ID IS value check_type COMMA vars4 .)
    CHAR            reduce using rule 29 (vars4 -> ID IS value check_type COMMA vars4 .)
    ID              reduce using rule 29 (vars4 -> ID IS value check_type COMMA vars4 .)
    IF              reduce using rule 29 (vars4 -> ID IS value check_type COMMA vars4 .)
    VAR             reduce using rule 29 (vars4 -> ID IS value check_type COMMA vars4 .)
    RB              reduce using rule 29 (vars4 -> ID IS value check_type COMMA vars4 .)


state 144

    (45) vars4G -> ID IS value check_type COMMA vars4G .

    VOID            reduce using rule 45 (vars4G -> ID IS value check_type COMMA vars4G .)
    INT             reduce using rule 45 (vars4G -> ID IS value check_type COMMA vars4G .)
    FLOAT           reduce using rule 45 (vars4G -> ID IS value check_type COMMA vars4G .)
    CHAR            reduce using rule 45 (vars4G -> ID IS value check_type COMMA vars4G .)
    ID              reduce using rule 45 (vars4G -> ID IS value check_type COMMA vars4G .)
    IF              reduce using rule 45 (vars4G -> ID IS value check_type COMMA vars4G .)
    VAR             reduce using rule 45 (vars4G -> ID IS value check_type COMMA vars4G .)
    RB              reduce using rule 45 (vars4G -> ID IS value check_type COMMA vars4G .)


state 145

    (30) vars4 -> ID IS value check_type SEMICOL vars .

    VOID            reduce using rule 30 (vars4 -> ID IS value check_type SEMICOL vars .)
    INT             reduce using rule 30 (vars4 -> ID IS value check_type SEMICOL vars .)
    FLOAT           reduce using rule 30 (vars4 -> ID IS value check_type SEMICOL vars .)
    CHAR            reduce using rule 30 (vars4 -> ID IS value check_type SEMICOL vars .)
    ID              reduce using rule 30 (vars4 -> ID IS value check_type SEMICOL vars .)
    IF              reduce using rule 30 (vars4 -> ID IS value check_type SEMICOL vars .)
    VAR             reduce using rule 30 (vars4 -> ID IS value check_type SEMICOL vars .)
    RB              reduce using rule 30 (vars4 -> ID IS value check_type SEMICOL vars .)


state 146

    (41) vars2G -> ID IS value check_type SEMICOL varsG .
    (46) vars4G -> ID IS value check_type SEMICOL varsG .
    (20) vars -> varsG .

  ! reduce/reduce conflict for VOID resolved using rule 41 (vars2G -> ID IS value check_type SEMICOL varsG .)
  ! reduce/reduce conflict for INT resolved using rule 41 (vars2G -> ID IS value check_type SEMICOL varsG .)
  ! reduce/reduce conflict for FLOAT resolved using rule 41 (vars2G -> ID IS value check_type SEMICOL varsG .)
  ! reduce/reduce conflict for CHAR resolved using rule 41 (vars2G -> ID IS value check_type SEMICOL varsG .)
  ! reduce/reduce conflict for ID resolved using rule 41 (vars2G -> ID IS value check_type SEMICOL varsG .)
  ! reduce/reduce conflict for IF resolved using rule 41 (vars2G -> ID IS value check_type SEMICOL varsG .)
  ! reduce/reduce conflict for VAR resolved using rule 41 (vars2G -> ID IS value check_type SEMICOL varsG .)
  ! reduce/reduce conflict for RB resolved using rule 41 (vars2G -> ID IS value check_type SEMICOL varsG .)
  ! reduce/reduce conflict for VOID resolved using rule 20 (vars -> varsG .)
  ! reduce/reduce conflict for INT resolved using rule 20 (vars -> varsG .)
  ! reduce/reduce conflict for FLOAT resolved using rule 20 (vars -> varsG .)
  ! reduce/reduce conflict for CHAR resolved using rule 20 (vars -> varsG .)
  ! reduce/reduce conflict for ID resolved using rule 20 (vars -> varsG .)
  ! reduce/reduce conflict for IF resolved using rule 20 (vars -> varsG .)
  ! reduce/reduce conflict for VAR resolved using rule 20 (vars -> varsG .)
  ! reduce/reduce conflict for RB resolved using rule 20 (vars -> varsG .)
    VOID            reduce using rule 20 (vars -> varsG .)
    INT             reduce using rule 20 (vars -> varsG .)
    FLOAT           reduce using rule 20 (vars -> varsG .)
    CHAR            reduce using rule 20 (vars -> varsG .)
    ID              reduce using rule 20 (vars -> varsG .)
    IF              reduce using rule 20 (vars -> varsG .)
    VAR             reduce using rule 20 (vars -> varsG .)
    RB              reduce using rule 20 (vars -> varsG .)

  ! VOID            [ reduce using rule 41 (vars2G -> ID IS value check_type SEMICOL varsG .) ]
  ! INT             [ reduce using rule 41 (vars2G -> ID IS value check_type SEMICOL varsG .) ]
  ! FLOAT           [ reduce using rule 41 (vars2G -> ID IS value check_type SEMICOL varsG .) ]
  ! CHAR            [ reduce using rule 41 (vars2G -> ID IS value check_type SEMICOL varsG .) ]
  ! ID              [ reduce using rule 41 (vars2G -> ID IS value check_type SEMICOL varsG .) ]
  ! IF              [ reduce using rule 41 (vars2G -> ID IS value check_type SEMICOL varsG .) ]
  ! VAR             [ reduce using rule 41 (vars2G -> ID IS value check_type SEMICOL varsG .) ]
  ! RB              [ reduce using rule 41 (vars2G -> ID IS value check_type SEMICOL varsG .) ]
  ! VOID            [ reduce using rule 46 (vars4G -> ID IS value check_type SEMICOL varsG .) ]
  ! INT             [ reduce using rule 46 (vars4G -> ID IS value check_type SEMICOL varsG .) ]
  ! FLOAT           [ reduce using rule 46 (vars4G -> ID IS value check_type SEMICOL varsG .) ]
  ! CHAR            [ reduce using rule 46 (vars4G -> ID IS value check_type SEMICOL varsG .) ]
  ! ID              [ reduce using rule 46 (vars4G -> ID IS value check_type SEMICOL varsG .) ]
  ! IF              [ reduce using rule 46 (vars4G -> ID IS value check_type SEMICOL varsG .) ]
  ! VAR             [ reduce using rule 46 (vars4G -> ID IS value check_type SEMICOL varsG .) ]
  ! RB              [ reduce using rule 46 (vars4G -> ID IS value check_type SEMICOL varsG .) ]


state 147

    (40) vars2G -> ID IS value check_type . SEMICOL
    (41) vars2G -> ID IS value check_type . SEMICOL varsG
    (45) vars4G -> ID IS value check_type . COMMA vars4G
    (46) vars4G -> ID IS value check_type . SEMICOL varsG
    (47) vars4G -> ID IS value check_type . SEMICOL

    SEMICOL         shift and go to state 159
    COMMA           shift and go to state 160


state 148

    (43) vars3G -> ID SEMICOL . varsG
    (44) vars3G -> ID SEMICOL .
    (33) varsG -> . VAR tipo vars1G
    (34) varsG -> . VAR tipo vars2G
    (35) varsG -> . VAR tipo vars3G
    (36) varsG -> . VAR tipo vars4G
    (37) varsG -> . VAR LB varsG RB

    RB              reduce using rule 44 (vars3G -> ID SEMICOL .)
    VAR             shift and go to state 37

    varsG                          shift and go to state 161

state 149

    (61) funcion -> tipo ID LP param RP LB statement RB . funcion
    (62) funcion -> tipo ID LP param RP LB statement RB .
    (59) funcion -> . VOID ID LP param RP LB statement RB funcion
    (60) funcion -> . VOID ID LP param RP LB statement RB
    (61) funcion -> . tipo ID LP param RP LB statement RB funcion
    (62) funcion -> . tipo ID LP param RP LB statement RB
    (49) tipo -> . INT
    (50) tipo -> . FLOAT
    (51) tipo -> . CHAR

    MAIN            reduce using rule 62 (funcion -> tipo ID LP param RP LB statement RB .)
    $end            reduce using rule 62 (funcion -> tipo ID LP param RP LB statement RB .)
    VOID            shift and go to state 12
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

    tipo                           shift and go to state 10
    funcion                        shift and go to state 162

state 150

    (59) funcion -> VOID ID LP param RP LB statement RB . funcion
    (60) funcion -> VOID ID LP param RP LB statement RB .
    (59) funcion -> . VOID ID LP param RP LB statement RB funcion
    (60) funcion -> . VOID ID LP param RP LB statement RB
    (61) funcion -> . tipo ID LP param RP LB statement RB funcion
    (62) funcion -> . tipo ID LP param RP LB statement RB
    (49) tipo -> . INT
    (50) tipo -> . FLOAT
    (51) tipo -> . CHAR

    MAIN            reduce using rule 60 (funcion -> VOID ID LP param RP LB statement RB .)
    $end            reduce using rule 60 (funcion -> VOID ID LP param RP LB statement RB .)
    VOID            shift and go to state 12
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

    funcion                        shift and go to state 163
    tipo                           shift and go to state 10

state 151

    (91) if -> IF LP expression RP . check_bool gotof LB statement RB guarda_salto
    (92) if -> IF LP expression RP . check_bool gotof LB statement RB guarda_salto elseif
    (93) if -> IF LP expression RP . check_bool gotof LB statement RB guarda_salto else
    (107) check_bool -> .

    LB              reduce using rule 107 (check_bool -> .)

    check_bool                     shift and go to state 164

state 152

    (70) var_gt -> expr GT . expr
    (76) expr -> . expr MUL expr
    (77) expr -> . expr DIV expr
    (78) expr -> . expr PLUS expr
    (79) expr -> . expr MINUS expr
    (80) expr -> . CTE_I
    (81) expr -> . CTE_F
    (82) expr -> . ID
    (83) expr -> . ID row
    (84) expr -> . ID matrix

    CTE_I           shift and go to state 106
    CTE_F           shift and go to state 107
    ID              shift and go to state 108

    expr                           shift and go to state 165

state 153

    (69) var_lt -> expr LT . expr
    (76) expr -> . expr MUL expr
    (77) expr -> . expr DIV expr
    (78) expr -> . expr PLUS expr
    (79) expr -> . expr MINUS expr
    (80) expr -> . CTE_I
    (81) expr -> . CTE_F
    (82) expr -> . ID
    (83) expr -> . ID row
    (84) expr -> . ID matrix

    CTE_I           shift and go to state 106
    CTE_F           shift and go to state 107
    ID              shift and go to state 108

    expr                           shift and go to state 166

state 154

    (73) var_equal -> expr EQUAL . expr
    (76) expr -> . expr MUL expr
    (77) expr -> . expr DIV expr
    (78) expr -> . expr PLUS expr
    (79) expr -> . expr MINUS expr
    (80) expr -> . CTE_I
    (81) expr -> . CTE_F
    (82) expr -> . ID
    (83) expr -> . ID row
    (84) expr -> . ID matrix

    CTE_I           shift and go to state 106
    CTE_F           shift and go to state 107
    ID              shift and go to state 108

    expr                           shift and go to state 167

state 155

    (74) var_neq -> expr NEQ . expr
    (76) expr -> . expr MUL expr
    (77) expr -> . expr DIV expr
    (78) expr -> . expr PLUS expr
    (79) expr -> . expr MINUS expr
    (80) expr -> . CTE_I
    (81) expr -> . CTE_F
    (82) expr -> . ID
    (83) expr -> . ID row
    (84) expr -> . ID matrix

    CTE_I           shift and go to state 106
    CTE_F           shift and go to state 107
    ID              shift and go to state 108

    expr                           shift and go to state 168

state 156

    (72) var_geq -> expr GEQ . expr
    (76) expr -> . expr MUL expr
    (77) expr -> . expr DIV expr
    (78) expr -> . expr PLUS expr
    (79) expr -> . expr MINUS expr
    (80) expr -> . CTE_I
    (81) expr -> . CTE_F
    (82) expr -> . ID
    (83) expr -> . ID row
    (84) expr -> . ID matrix

    CTE_I           shift and go to state 106
    CTE_F           shift and go to state 107
    ID              shift and go to state 108

    expr                           shift and go to state 169

state 157

    (71) var_leq -> expr LEQ . expr
    (76) expr -> . expr MUL expr
    (77) expr -> . expr DIV expr
    (78) expr -> . expr PLUS expr
    (79) expr -> . expr MINUS expr
    (80) expr -> . CTE_I
    (81) expr -> . CTE_F
    (82) expr -> . ID
    (83) expr -> . ID row
    (84) expr -> . ID matrix

    CTE_I           shift and go to state 106
    CTE_F           shift and go to state 107
    ID              shift and go to state 108

    expr                           shift and go to state 170

state 158

    (29) vars4 -> ID IS . value check_type COMMA vars4
    (30) vars4 -> ID IS . value check_type SEMICOL vars
    (31) vars4 -> ID IS . value check_type SEMICOL
    (45) vars4G -> ID IS . value check_type COMMA vars4G
    (46) vars4G -> ID IS . value check_type SEMICOL varsG
    (47) vars4G -> ID IS . value check_type SEMICOL
    (52) value -> . CTE_F
    (53) value -> . CTE_I
    (54) value -> . ID
    (55) value -> . CTE_C
    (56) value -> . COMILLA ID COMILLA
    (57) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124
    ID              shift and go to state 121
    CTE_C           shift and go to state 59
    COMILLA         shift and go to state 60
    COMILLAS        shift and go to state 61

    value                          shift and go to state 171

state 159

    (40) vars2G -> ID IS value check_type SEMICOL .
    (41) vars2G -> ID IS value check_type SEMICOL . varsG
    (46) vars4G -> ID IS value check_type SEMICOL . varsG
    (47) vars4G -> ID IS value check_type SEMICOL .
    (33) varsG -> . VAR tipo vars1G
    (34) varsG -> . VAR tipo vars2G
    (35) varsG -> . VAR tipo vars3G
    (36) varsG -> . VAR tipo vars4G
    (37) varsG -> . VAR LB varsG RB

  ! reduce/reduce conflict for RB resolved using rule 40 (vars2G -> ID IS value check_type SEMICOL .)
    RB              reduce using rule 40 (vars2G -> ID IS value check_type SEMICOL .)
    VAR             shift and go to state 37

  ! RB              [ reduce using rule 47 (vars4G -> ID IS value check_type SEMICOL .) ]

    varsG                          shift and go to state 172

state 160

    (45) vars4G -> ID IS value check_type COMMA . vars4G
    (45) vars4G -> . ID IS value check_type COMMA vars4G
    (46) vars4G -> . ID IS value check_type SEMICOL varsG
    (47) vars4G -> . ID IS value check_type SEMICOL
    (48) vars4G -> . empty
    (90) empty -> .

    ID              shift and go to state 173
    RB              reduce using rule 90 (empty -> .)

    vars4G                         shift and go to state 144
    empty                          shift and go to state 66

state 161

    (43) vars3G -> ID SEMICOL varsG .

    RB              reduce using rule 43 (vars3G -> ID SEMICOL varsG .)


state 162

    (61) funcion -> tipo ID LP param RP LB statement RB funcion .

    MAIN            reduce using rule 61 (funcion -> tipo ID LP param RP LB statement RB funcion .)
    $end            reduce using rule 61 (funcion -> tipo ID LP param RP LB statement RB funcion .)


state 163

    (59) funcion -> VOID ID LP param RP LB statement RB funcion .

    MAIN            reduce using rule 59 (funcion -> VOID ID LP param RP LB statement RB funcion .)
    $end            reduce using rule 59 (funcion -> VOID ID LP param RP LB statement RB funcion .)


state 164

    (91) if -> IF LP expression RP check_bool . gotof LB statement RB guarda_salto
    (92) if -> IF LP expression RP check_bool . gotof LB statement RB guarda_salto elseif
    (93) if -> IF LP expression RP check_bool . gotof LB statement RB guarda_salto else
    (108) gotof -> .

    LB              reduce using rule 108 (gotof -> .)

    gotof                          shift and go to state 174

state 165

    (70) var_gt -> expr GT expr .
    (76) expr -> expr . MUL expr
    (77) expr -> expr . DIV expr
    (78) expr -> expr . PLUS expr
    (79) expr -> expr . MINUS expr

    RP              reduce using rule 70 (var_gt -> expr GT expr .)
    MUL             shift and go to state 84
    DIV             shift and go to state 85
    PLUS            shift and go to state 86
    MINUS           shift and go to state 87


state 166

    (69) var_lt -> expr LT expr .
    (76) expr -> expr . MUL expr
    (77) expr -> expr . DIV expr
    (78) expr -> expr . PLUS expr
    (79) expr -> expr . MINUS expr

    RP              reduce using rule 69 (var_lt -> expr LT expr .)
    MUL             shift and go to state 84
    DIV             shift and go to state 85
    PLUS            shift and go to state 86
    MINUS           shift and go to state 87


state 167

    (73) var_equal -> expr EQUAL expr .
    (76) expr -> expr . MUL expr
    (77) expr -> expr . DIV expr
    (78) expr -> expr . PLUS expr
    (79) expr -> expr . MINUS expr

    RP              reduce using rule 73 (var_equal -> expr EQUAL expr .)
    MUL             shift and go to state 84
    DIV             shift and go to state 85
    PLUS            shift and go to state 86
    MINUS           shift and go to state 87


state 168

    (74) var_neq -> expr NEQ expr .
    (76) expr -> expr . MUL expr
    (77) expr -> expr . DIV expr
    (78) expr -> expr . PLUS expr
    (79) expr -> expr . MINUS expr

    RP              reduce using rule 74 (var_neq -> expr NEQ expr .)
    MUL             shift and go to state 84
    DIV             shift and go to state 85
    PLUS            shift and go to state 86
    MINUS           shift and go to state 87


state 169

    (72) var_geq -> expr GEQ expr .
    (76) expr -> expr . MUL expr
    (77) expr -> expr . DIV expr
    (78) expr -> expr . PLUS expr
    (79) expr -> expr . MINUS expr

    RP              reduce using rule 72 (var_geq -> expr GEQ expr .)
    MUL             shift and go to state 84
    DIV             shift and go to state 85
    PLUS            shift and go to state 86
    MINUS           shift and go to state 87


state 170

    (71) var_leq -> expr LEQ expr .
    (76) expr -> expr . MUL expr
    (77) expr -> expr . DIV expr
    (78) expr -> expr . PLUS expr
    (79) expr -> expr . MINUS expr

    RP              reduce using rule 71 (var_leq -> expr LEQ expr .)
    MUL             shift and go to state 84
    DIV             shift and go to state 85
    PLUS            shift and go to state 86
    MINUS           shift and go to state 87


state 171

    (29) vars4 -> ID IS value . check_type COMMA vars4
    (30) vars4 -> ID IS value . check_type SEMICOL vars
    (31) vars4 -> ID IS value . check_type SEMICOL
    (45) vars4G -> ID IS value . check_type COMMA vars4G
    (46) vars4G -> ID IS value . check_type SEMICOL varsG
    (47) vars4G -> ID IS value . check_type SEMICOL
    (58) check_type -> .

    COMMA           reduce using rule 58 (check_type -> .)
    SEMICOL         reduce using rule 58 (check_type -> .)

    check_type                     shift and go to state 175

state 172

    (41) vars2G -> ID IS value check_type SEMICOL varsG .
    (46) vars4G -> ID IS value check_type SEMICOL varsG .

  ! reduce/reduce conflict for RB resolved using rule 41 (vars2G -> ID IS value check_type SEMICOL varsG .)
    RB              reduce using rule 41 (vars2G -> ID IS value check_type SEMICOL varsG .)

  ! RB              [ reduce using rule 46 (vars4G -> ID IS value check_type SEMICOL varsG .) ]


state 173

    (45) vars4G -> ID . IS value check_type COMMA vars4G
    (46) vars4G -> ID . IS value check_type SEMICOL varsG
    (47) vars4G -> ID . IS value check_type SEMICOL

    IS              shift and go to state 176


state 174

    (91) if -> IF LP expression RP check_bool gotof . LB statement RB guarda_salto
    (92) if -> IF LP expression RP check_bool gotof . LB statement RB guarda_salto elseif
    (93) if -> IF LP expression RP check_bool gotof . LB statement RB guarda_salto else

    LB              shift and go to state 177


state 175

    (29) vars4 -> ID IS value check_type . COMMA vars4
    (30) vars4 -> ID IS value check_type . SEMICOL vars
    (31) vars4 -> ID IS value check_type . SEMICOL
    (45) vars4G -> ID IS value check_type . COMMA vars4G
    (46) vars4G -> ID IS value check_type . SEMICOL varsG
    (47) vars4G -> ID IS value check_type . SEMICOL

    COMMA           shift and go to state 110
    SEMICOL         shift and go to state 178


state 176

    (45) vars4G -> ID IS . value check_type COMMA vars4G
    (46) vars4G -> ID IS . value check_type SEMICOL varsG
    (47) vars4G -> ID IS . value check_type SEMICOL
    (52) value -> . CTE_F
    (53) value -> . CTE_I
    (54) value -> . ID
    (55) value -> . CTE_C
    (56) value -> . COMILLA ID COMILLA
    (57) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124
    ID              shift and go to state 121
    CTE_C           shift and go to state 59
    COMILLA         shift and go to state 60
    COMILLAS        shift and go to state 61

    value                          shift and go to state 179

state 177

    (91) if -> IF LP expression RP check_bool gotof LB . statement RB guarda_salto
    (92) if -> IF LP expression RP check_bool gotof LB . statement RB guarda_salto elseif
    (93) if -> IF LP expression RP check_bool gotof LB . statement RB guarda_salto else
    (8) statement -> . asignacion SEMICOL statement
    (9) statement -> . if statement
    (10) statement -> . vars statement
    (11) statement -> . p_operacion statement
    (12) statement -> . oper_aritmetica statement
    (13) statement -> . empty
    (14) asignacion -> . ID IS value
    (91) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto
    (92) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto elseif
    (93) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto else
    (15) vars -> . VAR tipo vars1
    (16) vars -> . VAR tipo vars2
    (17) vars -> . VAR tipo vars3
    (18) vars -> . VAR tipo vars4
    (19) vars -> . VAR tipo oper_aritmetica
    (20) vars -> . varsG
    (21) vars -> . empty
    (110) p_operacion -> .
    (75) oper_aritmetica -> . ID IS expr SEMICOL
    (90) empty -> .
    (33) varsG -> . VAR tipo vars1G
    (34) varsG -> . VAR tipo vars2G
    (35) varsG -> . VAR tipo vars3G
    (36) varsG -> . VAR tipo vars4G
    (37) varsG -> . VAR LB varsG RB

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for RB resolved using rule 90 (empty -> .)
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
    ID              shift and go to state 76
    IF              shift and go to state 77
    VAR             shift and go to state 9
    RB              reduce using rule 90 (empty -> .)

  ! ID              [ reduce using rule 110 (p_operacion -> .) ]
  ! IF              [ reduce using rule 110 (p_operacion -> .) ]
  ! VAR             [ reduce using rule 110 (p_operacion -> .) ]
  ! RB              [ reduce using rule 110 (p_operacion -> .) ]
  ! ID              [ reduce using rule 90 (empty -> .) ]
  ! IF              [ reduce using rule 90 (empty -> .) ]
  ! VAR             [ reduce using rule 90 (empty -> .) ]

    statement                      shift and go to state 180
    asignacion                     shift and go to state 70
    if                             shift and go to state 71
    vars                           shift and go to state 72
    p_operacion                    shift and go to state 73
    oper_aritmetica                shift and go to state 74
    empty                          shift and go to state 75
    varsG                          shift and go to state 11

state 178

    (30) vars4 -> ID IS value check_type SEMICOL . vars
    (31) vars4 -> ID IS value check_type SEMICOL .
    (46) vars4G -> ID IS value check_type SEMICOL . varsG
    (47) vars4G -> ID IS value check_type SEMICOL .
    (15) vars -> . VAR tipo vars1
    (16) vars -> . VAR tipo vars2
    (17) vars -> . VAR tipo vars3
    (18) vars -> . VAR tipo vars4
    (19) vars -> . VAR tipo oper_aritmetica
    (20) vars -> . varsG
    (21) vars -> . empty
    (33) varsG -> . VAR tipo vars1G
    (34) varsG -> . VAR tipo vars2G
    (35) varsG -> . VAR tipo vars3G
    (36) varsG -> . VAR tipo vars4G
    (37) varsG -> . VAR LB varsG RB
    (90) empty -> .

  ! reduce/reduce conflict for VOID resolved using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
  ! reduce/reduce conflict for INT resolved using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
  ! reduce/reduce conflict for FLOAT resolved using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
  ! reduce/reduce conflict for CHAR resolved using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
  ! reduce/reduce conflict for ID resolved using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
  ! reduce/reduce conflict for IF resolved using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
  ! reduce/reduce conflict for VAR resolved using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
  ! reduce/reduce conflict for RB resolved using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for VOID resolved using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
  ! reduce/reduce conflict for INT resolved using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
  ! reduce/reduce conflict for FLOAT resolved using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
  ! reduce/reduce conflict for CHAR resolved using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
  ! reduce/reduce conflict for ID resolved using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
  ! reduce/reduce conflict for IF resolved using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for RB resolved using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
    VOID            reduce using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
    INT             reduce using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
    FLOAT           reduce using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
    CHAR            reduce using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
    ID              reduce using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
    IF              reduce using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
    RB              reduce using rule 31 (vars4 -> ID IS value check_type SEMICOL .)
    VAR             shift and go to state 9

  ! VAR             [ reduce using rule 31 (vars4 -> ID IS value check_type SEMICOL .) ]
  ! VOID            [ reduce using rule 47 (vars4G -> ID IS value check_type SEMICOL .) ]
  ! INT             [ reduce using rule 47 (vars4G -> ID IS value check_type SEMICOL .) ]
  ! FLOAT           [ reduce using rule 47 (vars4G -> ID IS value check_type SEMICOL .) ]
  ! CHAR            [ reduce using rule 47 (vars4G -> ID IS value check_type SEMICOL .) ]
  ! ID              [ reduce using rule 47 (vars4G -> ID IS value check_type SEMICOL .) ]
  ! IF              [ reduce using rule 47 (vars4G -> ID IS value check_type SEMICOL .) ]
  ! VAR             [ reduce using rule 47 (vars4G -> ID IS value check_type SEMICOL .) ]
  ! RB              [ reduce using rule 47 (vars4G -> ID IS value check_type SEMICOL .) ]
  ! VOID            [ reduce using rule 90 (empty -> .) ]
  ! INT             [ reduce using rule 90 (empty -> .) ]
  ! FLOAT           [ reduce using rule 90 (empty -> .) ]
  ! CHAR            [ reduce using rule 90 (empty -> .) ]
  ! ID              [ reduce using rule 90 (empty -> .) ]
  ! IF              [ reduce using rule 90 (empty -> .) ]
  ! VAR             [ reduce using rule 90 (empty -> .) ]
  ! RB              [ reduce using rule 90 (empty -> .) ]

    vars                           shift and go to state 145
    varsG                          shift and go to state 181
    empty                          shift and go to state 53

state 179

    (45) vars4G -> ID IS value . check_type COMMA vars4G
    (46) vars4G -> ID IS value . check_type SEMICOL varsG
    (47) vars4G -> ID IS value . check_type SEMICOL
    (58) check_type -> .

    COMMA           reduce using rule 58 (check_type -> .)
    SEMICOL         reduce using rule 58 (check_type -> .)

    check_type                     shift and go to state 182

state 180

    (91) if -> IF LP expression RP check_bool gotof LB statement . RB guarda_salto
    (92) if -> IF LP expression RP check_bool gotof LB statement . RB guarda_salto elseif
    (93) if -> IF LP expression RP check_bool gotof LB statement . RB guarda_salto else

    RB              shift and go to state 183


state 181

    (46) vars4G -> ID IS value check_type SEMICOL varsG .
    (20) vars -> varsG .

  ! reduce/reduce conflict for VOID resolved using rule 20 (vars -> varsG .)
  ! reduce/reduce conflict for INT resolved using rule 20 (vars -> varsG .)
  ! reduce/reduce conflict for FLOAT resolved using rule 20 (vars -> varsG .)
  ! reduce/reduce conflict for CHAR resolved using rule 20 (vars -> varsG .)
  ! reduce/reduce conflict for ID resolved using rule 20 (vars -> varsG .)
  ! reduce/reduce conflict for IF resolved using rule 20 (vars -> varsG .)
  ! reduce/reduce conflict for VAR resolved using rule 20 (vars -> varsG .)
  ! reduce/reduce conflict for RB resolved using rule 20 (vars -> varsG .)
    VOID            reduce using rule 20 (vars -> varsG .)
    INT             reduce using rule 20 (vars -> varsG .)
    FLOAT           reduce using rule 20 (vars -> varsG .)
    CHAR            reduce using rule 20 (vars -> varsG .)
    ID              reduce using rule 20 (vars -> varsG .)
    IF              reduce using rule 20 (vars -> varsG .)
    VAR             reduce using rule 20 (vars -> varsG .)
    RB              reduce using rule 20 (vars -> varsG .)

  ! VOID            [ reduce using rule 46 (vars4G -> ID IS value check_type SEMICOL varsG .) ]
  ! INT             [ reduce using rule 46 (vars4G -> ID IS value check_type SEMICOL varsG .) ]
  ! FLOAT           [ reduce using rule 46 (vars4G -> ID IS value check_type SEMICOL varsG .) ]
  ! CHAR            [ reduce using rule 46 (vars4G -> ID IS value check_type SEMICOL varsG .) ]
  ! ID              [ reduce using rule 46 (vars4G -> ID IS value check_type SEMICOL varsG .) ]
  ! IF              [ reduce using rule 46 (vars4G -> ID IS value check_type SEMICOL varsG .) ]
  ! VAR             [ reduce using rule 46 (vars4G -> ID IS value check_type SEMICOL varsG .) ]
  ! RB              [ reduce using rule 46 (vars4G -> ID IS value check_type SEMICOL varsG .) ]


state 182

    (45) vars4G -> ID IS value check_type . COMMA vars4G
    (46) vars4G -> ID IS value check_type . SEMICOL varsG
    (47) vars4G -> ID IS value check_type . SEMICOL

    COMMA           shift and go to state 160
    SEMICOL         shift and go to state 184


state 183

    (91) if -> IF LP expression RP check_bool gotof LB statement RB . guarda_salto
    (92) if -> IF LP expression RP check_bool gotof LB statement RB . guarda_salto elseif
    (93) if -> IF LP expression RP check_bool gotof LB statement RB . guarda_salto else
    (109) guarda_salto -> .

    ELSEIF          reduce using rule 109 (guarda_salto -> .)
    ELSE            reduce using rule 109 (guarda_salto -> .)
    ID              reduce using rule 109 (guarda_salto -> .)
    IF              reduce using rule 109 (guarda_salto -> .)
    VAR             reduce using rule 109 (guarda_salto -> .)
    RB              reduce using rule 109 (guarda_salto -> .)

    guarda_salto                   shift and go to state 185

state 184

    (46) vars4G -> ID IS value check_type SEMICOL . varsG
    (47) vars4G -> ID IS value check_type SEMICOL .
    (33) varsG -> . VAR tipo vars1G
    (34) varsG -> . VAR tipo vars2G
    (35) varsG -> . VAR tipo vars3G
    (36) varsG -> . VAR tipo vars4G
    (37) varsG -> . VAR LB varsG RB

    RB              reduce using rule 47 (vars4G -> ID IS value check_type SEMICOL .)
    VAR             shift and go to state 37

    varsG                          shift and go to state 186

state 185

    (91) if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto .
    (92) if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto . elseif
    (93) if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto . else
    (94) elseif -> . ELSEIF LP expression RP check_bool LB statement RB guarda_salto
    (95) elseif -> . ELSEIF LP expression RP check_bool LB statement RB guarda_salto elseif
    (96) elseif -> . ELSEIF LP expression RP check_bool LB statement RB guarda_salto else
    (97) else -> . ELSE LB statement RB guarda_salto

    ID              reduce using rule 91 (if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto .)
    IF              reduce using rule 91 (if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto .)
    VAR             reduce using rule 91 (if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto .)
    RB              reduce using rule 91 (if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto .)
    ELSEIF          shift and go to state 189
    ELSE            shift and go to state 190

    elseif                         shift and go to state 187
    else                           shift and go to state 188

state 186

    (46) vars4G -> ID IS value check_type SEMICOL varsG .

    RB              reduce using rule 46 (vars4G -> ID IS value check_type SEMICOL varsG .)


state 187

    (92) if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto elseif .

    ID              reduce using rule 92 (if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto elseif .)
    IF              reduce using rule 92 (if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto elseif .)
    VAR             reduce using rule 92 (if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto elseif .)
    RB              reduce using rule 92 (if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto elseif .)


state 188

    (93) if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto else .

    ID              reduce using rule 93 (if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto else .)
    IF              reduce using rule 93 (if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto else .)
    VAR             reduce using rule 93 (if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto else .)
    RB              reduce using rule 93 (if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto else .)


state 189

    (94) elseif -> ELSEIF . LP expression RP check_bool LB statement RB guarda_salto
    (95) elseif -> ELSEIF . LP expression RP check_bool LB statement RB guarda_salto elseif
    (96) elseif -> ELSEIF . LP expression RP check_bool LB statement RB guarda_salto else

    LP              shift and go to state 191


state 190

    (97) else -> ELSE . LB statement RB guarda_salto

    LB              shift and go to state 192


state 191

    (94) elseif -> ELSEIF LP . expression RP check_bool LB statement RB guarda_salto
    (95) elseif -> ELSEIF LP . expression RP check_bool LB statement RB guarda_salto elseif
    (96) elseif -> ELSEIF LP . expression RP check_bool LB statement RB guarda_salto else
    (98) expression -> . var_gt
    (99) expression -> . var_lt
    (100) expression -> . var_equal
    (101) expression -> . var_neq
    (102) expression -> . var_geq
    (103) expression -> . var_leq
    (104) expression -> . TRUE
    (105) expression -> . FALSE
    (106) expression -> . ID
    (70) var_gt -> . expr GT expr
    (69) var_lt -> . expr LT expr
    (73) var_equal -> . expr EQUAL expr
    (74) var_neq -> . expr NEQ expr
    (72) var_geq -> . expr GEQ expr
    (71) var_leq -> . expr LEQ expr
    (76) expr -> . expr MUL expr
    (77) expr -> . expr DIV expr
    (78) expr -> . expr PLUS expr
    (79) expr -> . expr MINUS expr
    (80) expr -> . CTE_I
    (81) expr -> . CTE_F
    (82) expr -> . ID
    (83) expr -> . ID row
    (84) expr -> . ID matrix

    TRUE            shift and go to state 137
    FALSE           shift and go to state 138
    ID              shift and go to state 139
    CTE_I           shift and go to state 106
    CTE_F           shift and go to state 107

    expression                     shift and go to state 193
    var_gt                         shift and go to state 131
    var_lt                         shift and go to state 132
    var_equal                      shift and go to state 133
    var_neq                        shift and go to state 134
    var_geq                        shift and go to state 135
    var_leq                        shift and go to state 136
    expr                           shift and go to state 140

state 192

    (97) else -> ELSE LB . statement RB guarda_salto
    (8) statement -> . asignacion SEMICOL statement
    (9) statement -> . if statement
    (10) statement -> . vars statement
    (11) statement -> . p_operacion statement
    (12) statement -> . oper_aritmetica statement
    (13) statement -> . empty
    (14) asignacion -> . ID IS value
    (91) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto
    (92) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto elseif
    (93) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto else
    (15) vars -> . VAR tipo vars1
    (16) vars -> . VAR tipo vars2
    (17) vars -> . VAR tipo vars3
    (18) vars -> . VAR tipo vars4
    (19) vars -> . VAR tipo oper_aritmetica
    (20) vars -> . varsG
    (21) vars -> . empty
    (110) p_operacion -> .
    (75) oper_aritmetica -> . ID IS expr SEMICOL
    (90) empty -> .
    (33) varsG -> . VAR tipo vars1G
    (34) varsG -> . VAR tipo vars2G
    (35) varsG -> . VAR tipo vars3G
    (36) varsG -> . VAR tipo vars4G
    (37) varsG -> . VAR LB varsG RB

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for RB resolved using rule 90 (empty -> .)
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
    ID              shift and go to state 76
    IF              shift and go to state 77
    VAR             shift and go to state 9
    RB              reduce using rule 90 (empty -> .)

  ! ID              [ reduce using rule 110 (p_operacion -> .) ]
  ! IF              [ reduce using rule 110 (p_operacion -> .) ]
  ! VAR             [ reduce using rule 110 (p_operacion -> .) ]
  ! RB              [ reduce using rule 110 (p_operacion -> .) ]
  ! ID              [ reduce using rule 90 (empty -> .) ]
  ! IF              [ reduce using rule 90 (empty -> .) ]
  ! VAR             [ reduce using rule 90 (empty -> .) ]

    statement                      shift and go to state 194
    asignacion                     shift and go to state 70
    if                             shift and go to state 71
    vars                           shift and go to state 72
    p_operacion                    shift and go to state 73
    oper_aritmetica                shift and go to state 74
    empty                          shift and go to state 75
    varsG                          shift and go to state 11

state 193

    (94) elseif -> ELSEIF LP expression . RP check_bool LB statement RB guarda_salto
    (95) elseif -> ELSEIF LP expression . RP check_bool LB statement RB guarda_salto elseif
    (96) elseif -> ELSEIF LP expression . RP check_bool LB statement RB guarda_salto else

    RP              shift and go to state 195


state 194

    (97) else -> ELSE LB statement . RB guarda_salto

    RB              shift and go to state 196


state 195

    (94) elseif -> ELSEIF LP expression RP . check_bool LB statement RB guarda_salto
    (95) elseif -> ELSEIF LP expression RP . check_bool LB statement RB guarda_salto elseif
    (96) elseif -> ELSEIF LP expression RP . check_bool LB statement RB guarda_salto else
    (107) check_bool -> .

    LB              reduce using rule 107 (check_bool -> .)

    check_bool                     shift and go to state 197

state 196

    (97) else -> ELSE LB statement RB . guarda_salto
    (109) guarda_salto -> .

    ID              reduce using rule 109 (guarda_salto -> .)
    IF              reduce using rule 109 (guarda_salto -> .)
    VAR             reduce using rule 109 (guarda_salto -> .)
    RB              reduce using rule 109 (guarda_salto -> .)

    guarda_salto                   shift and go to state 198

state 197

    (94) elseif -> ELSEIF LP expression RP check_bool . LB statement RB guarda_salto
    (95) elseif -> ELSEIF LP expression RP check_bool . LB statement RB guarda_salto elseif
    (96) elseif -> ELSEIF LP expression RP check_bool . LB statement RB guarda_salto else

    LB              shift and go to state 199


state 198

    (97) else -> ELSE LB statement RB guarda_salto .

    ID              reduce using rule 97 (else -> ELSE LB statement RB guarda_salto .)
    IF              reduce using rule 97 (else -> ELSE LB statement RB guarda_salto .)
    VAR             reduce using rule 97 (else -> ELSE LB statement RB guarda_salto .)
    RB              reduce using rule 97 (else -> ELSE LB statement RB guarda_salto .)


state 199

    (94) elseif -> ELSEIF LP expression RP check_bool LB . statement RB guarda_salto
    (95) elseif -> ELSEIF LP expression RP check_bool LB . statement RB guarda_salto elseif
    (96) elseif -> ELSEIF LP expression RP check_bool LB . statement RB guarda_salto else
    (8) statement -> . asignacion SEMICOL statement
    (9) statement -> . if statement
    (10) statement -> . vars statement
    (11) statement -> . p_operacion statement
    (12) statement -> . oper_aritmetica statement
    (13) statement -> . empty
    (14) asignacion -> . ID IS value
    (91) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto
    (92) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto elseif
    (93) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto else
    (15) vars -> . VAR tipo vars1
    (16) vars -> . VAR tipo vars2
    (17) vars -> . VAR tipo vars3
    (18) vars -> . VAR tipo vars4
    (19) vars -> . VAR tipo oper_aritmetica
    (20) vars -> . varsG
    (21) vars -> . empty
    (110) p_operacion -> .
    (75) oper_aritmetica -> . ID IS expr SEMICOL
    (90) empty -> .
    (33) varsG -> . VAR tipo vars1G
    (34) varsG -> . VAR tipo vars2G
    (35) varsG -> . VAR tipo vars3G
    (36) varsG -> . VAR tipo vars4G
    (37) varsG -> . VAR LB varsG RB

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for RB resolved using rule 90 (empty -> .)
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
    ID              shift and go to state 76
    IF              shift and go to state 77
    VAR             shift and go to state 9
    RB              reduce using rule 90 (empty -> .)

  ! ID              [ reduce using rule 110 (p_operacion -> .) ]
  ! IF              [ reduce using rule 110 (p_operacion -> .) ]
  ! VAR             [ reduce using rule 110 (p_operacion -> .) ]
  ! RB              [ reduce using rule 110 (p_operacion -> .) ]
  ! ID              [ reduce using rule 90 (empty -> .) ]
  ! IF              [ reduce using rule 90 (empty -> .) ]
  ! VAR             [ reduce using rule 90 (empty -> .) ]

    statement                      shift and go to state 200
    asignacion                     shift and go to state 70
    if                             shift and go to state 71
    vars                           shift and go to state 72
    p_operacion                    shift and go to state 73
    oper_aritmetica                shift and go to state 74
    empty                          shift and go to state 75
    varsG                          shift and go to state 11

state 200

    (94) elseif -> ELSEIF LP expression RP check_bool LB statement . RB guarda_salto
    (95) elseif -> ELSEIF LP expression RP check_bool LB statement . RB guarda_salto elseif
    (96) elseif -> ELSEIF LP expression RP check_bool LB statement . RB guarda_salto else

    RB              shift and go to state 201


state 201

    (94) elseif -> ELSEIF LP expression RP check_bool LB statement RB . guarda_salto
    (95) elseif -> ELSEIF LP expression RP check_bool LB statement RB . guarda_salto elseif
    (96) elseif -> ELSEIF LP expression RP check_bool LB statement RB . guarda_salto else
    (109) guarda_salto -> .

    ELSEIF          reduce using rule 109 (guarda_salto -> .)
    ELSE            reduce using rule 109 (guarda_salto -> .)
    ID              reduce using rule 109 (guarda_salto -> .)
    IF              reduce using rule 109 (guarda_salto -> .)
    VAR             reduce using rule 109 (guarda_salto -> .)
    RB              reduce using rule 109 (guarda_salto -> .)

    guarda_salto                   shift and go to state 202

state 202

    (94) elseif -> ELSEIF LP expression RP check_bool LB statement RB guarda_salto .
    (95) elseif -> ELSEIF LP expression RP check_bool LB statement RB guarda_salto . elseif
    (96) elseif -> ELSEIF LP expression RP check_bool LB statement RB guarda_salto . else
    (94) elseif -> . ELSEIF LP expression RP check_bool LB statement RB guarda_salto
    (95) elseif -> . ELSEIF LP expression RP check_bool LB statement RB guarda_salto elseif
    (96) elseif -> . ELSEIF LP expression RP check_bool LB statement RB guarda_salto else
    (97) else -> . ELSE LB statement RB guarda_salto

    ID              reduce using rule 94 (elseif -> ELSEIF LP expression RP check_bool LB statement RB guarda_salto .)
    IF              reduce using rule 94 (elseif -> ELSEIF LP expression RP check_bool LB statement RB guarda_salto .)
    VAR             reduce using rule 94 (elseif -> ELSEIF LP expression RP check_bool LB statement RB guarda_salto .)
    RB              reduce using rule 94 (elseif -> ELSEIF LP expression RP check_bool LB statement RB guarda_salto .)
    ELSEIF          shift and go to state 189
    ELSE            shift and go to state 190

    elseif                         shift and go to state 203
    else                           shift and go to state 204

state 203

    (95) elseif -> ELSEIF LP expression RP check_bool LB statement RB guarda_salto elseif .

    ID              reduce using rule 95 (elseif -> ELSEIF LP expression RP check_bool LB statement RB guarda_salto elseif .)
    IF              reduce using rule 95 (elseif -> ELSEIF LP expression RP check_bool LB statement RB guarda_salto elseif .)
    VAR             reduce using rule 95 (elseif -> ELSEIF LP expression RP check_bool LB statement RB guarda_salto elseif .)
    RB              reduce using rule 95 (elseif -> ELSEIF LP expression RP check_bool LB statement RB guarda_salto elseif .)


state 204

    (96) elseif -> ELSEIF LP expression RP check_bool LB statement RB guarda_salto else .

    ID              reduce using rule 96 (elseif -> ELSEIF LP expression RP check_bool LB statement RB guarda_salto else .)
    IF              reduce using rule 96 (elseif -> ELSEIF LP expression RP check_bool LB statement RB guarda_salto else .)
    VAR             reduce using rule 96 (elseif -> ELSEIF LP expression RP check_bool LB statement RB guarda_salto else .)
    RB              reduce using rule 96 (elseif -> ELSEIF LP expression RP check_bool LB statement RB guarda_salto else .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VOID in state 4 resolved as shift
WARNING: shift/reduce conflict for INT in state 4 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 4 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 4 resolved as shift
WARNING: shift/reduce conflict for ID in state 19 resolved as shift
WARNING: shift/reduce conflict for VAR in state 43 resolved as shift
WARNING: shift/reduce conflict for VAR in state 43 resolved as shift
WARNING: shift/reduce conflict for ID in state 50 resolved as shift
WARNING: shift/reduce conflict for IF in state 50 resolved as shift
WARNING: shift/reduce conflict for VAR in state 50 resolved as shift
WARNING: shift/reduce conflict for ID in state 50 resolved as shift
WARNING: shift/reduce conflict for IF in state 50 resolved as shift
WARNING: shift/reduce conflict for VAR in state 50 resolved as shift
WARNING: shift/reduce conflict for SEMICOL in state 55 resolved as shift
WARNING: shift/reduce conflict for ID in state 71 resolved as shift
WARNING: shift/reduce conflict for IF in state 71 resolved as shift
WARNING: shift/reduce conflict for VAR in state 71 resolved as shift
WARNING: shift/reduce conflict for ID in state 71 resolved as shift
WARNING: shift/reduce conflict for IF in state 71 resolved as shift
WARNING: shift/reduce conflict for VAR in state 71 resolved as shift
WARNING: shift/reduce conflict for ID in state 72 resolved as shift
WARNING: shift/reduce conflict for IF in state 72 resolved as shift
WARNING: shift/reduce conflict for VAR in state 72 resolved as shift
WARNING: shift/reduce conflict for ID in state 72 resolved as shift
WARNING: shift/reduce conflict for IF in state 72 resolved as shift
WARNING: shift/reduce conflict for VAR in state 72 resolved as shift
WARNING: shift/reduce conflict for ID in state 73 resolved as shift
WARNING: shift/reduce conflict for IF in state 73 resolved as shift
WARNING: shift/reduce conflict for VAR in state 73 resolved as shift
WARNING: shift/reduce conflict for ID in state 73 resolved as shift
WARNING: shift/reduce conflict for IF in state 73 resolved as shift
WARNING: shift/reduce conflict for VAR in state 73 resolved as shift
WARNING: shift/reduce conflict for ID in state 74 resolved as shift
WARNING: shift/reduce conflict for IF in state 74 resolved as shift
WARNING: shift/reduce conflict for VAR in state 74 resolved as shift
WARNING: shift/reduce conflict for ID in state 74 resolved as shift
WARNING: shift/reduce conflict for IF in state 74 resolved as shift
WARNING: shift/reduce conflict for VAR in state 74 resolved as shift
WARNING: shift/reduce conflict for VAR in state 81 resolved as shift
WARNING: shift/reduce conflict for VAR in state 81 resolved as shift
WARNING: shift/reduce conflict for VAR in state 90 resolved as shift
WARNING: shift/reduce conflict for VAR in state 90 resolved as shift
WARNING: shift/reduce conflict for ID in state 94 resolved as shift
WARNING: shift/reduce conflict for IF in state 94 resolved as shift
WARNING: shift/reduce conflict for VAR in state 94 resolved as shift
WARNING: shift/reduce conflict for ID in state 94 resolved as shift
WARNING: shift/reduce conflict for IF in state 94 resolved as shift
WARNING: shift/reduce conflict for VAR in state 94 resolved as shift
WARNING: shift/reduce conflict for ID in state 95 resolved as shift
WARNING: shift/reduce conflict for IF in state 95 resolved as shift
WARNING: shift/reduce conflict for VAR in state 95 resolved as shift
WARNING: shift/reduce conflict for ID in state 95 resolved as shift
WARNING: shift/reduce conflict for IF in state 95 resolved as shift
WARNING: shift/reduce conflict for VAR in state 95 resolved as shift
WARNING: shift/reduce conflict for ID in state 97 resolved as shift
WARNING: shift/reduce conflict for IF in state 97 resolved as shift
WARNING: shift/reduce conflict for VAR in state 97 resolved as shift
WARNING: shift/reduce conflict for ID in state 97 resolved as shift
WARNING: shift/reduce conflict for IF in state 97 resolved as shift
WARNING: shift/reduce conflict for VAR in state 97 resolved as shift
WARNING: shift/reduce conflict for ID in state 110 resolved as shift
WARNING: shift/reduce conflict for VAR in state 111 resolved as shift
WARNING: shift/reduce conflict for VAR in state 111 resolved as shift
WARNING: shift/reduce conflict for ID in state 177 resolved as shift
WARNING: shift/reduce conflict for IF in state 177 resolved as shift
WARNING: shift/reduce conflict for VAR in state 177 resolved as shift
WARNING: shift/reduce conflict for ID in state 177 resolved as shift
WARNING: shift/reduce conflict for IF in state 177 resolved as shift
WARNING: shift/reduce conflict for VAR in state 177 resolved as shift
WARNING: shift/reduce conflict for VAR in state 178 resolved as shift
WARNING: shift/reduce conflict for VAR in state 178 resolved as shift
WARNING: shift/reduce conflict for ID in state 192 resolved as shift
WARNING: shift/reduce conflict for IF in state 192 resolved as shift
WARNING: shift/reduce conflict for VAR in state 192 resolved as shift
WARNING: shift/reduce conflict for ID in state 192 resolved as shift
WARNING: shift/reduce conflict for IF in state 192 resolved as shift
WARNING: shift/reduce conflict for VAR in state 192 resolved as shift
WARNING: shift/reduce conflict for ID in state 199 resolved as shift
WARNING: shift/reduce conflict for IF in state 199 resolved as shift
WARNING: shift/reduce conflict for VAR in state 199 resolved as shift
WARNING: shift/reduce conflict for ID in state 199 resolved as shift
WARNING: shift/reduce conflict for IF in state 199 resolved as shift
WARNING: shift/reduce conflict for VAR in state 199 resolved as shift
WARNING: reduce/reduce conflict in state 36 resolved using rule (vars4 -> empty)
WARNING: rejected rule (vars4G -> empty) in state 36
WARNING: reduce/reduce conflict in state 43 resolved using rule (vars1 -> ID SEMICOL)
WARNING: rejected rule (vars3 -> ID SEMICOL) in state 43
WARNING: reduce/reduce conflict in state 43 resolved using rule (vars1 -> ID SEMICOL)
WARNING: rejected rule (vars1G -> ID SEMICOL) in state 43
WARNING: reduce/reduce conflict in state 43 resolved using rule (vars1 -> ID SEMICOL)
WARNING: rejected rule (vars3G -> ID SEMICOL) in state 43
WARNING: reduce/reduce conflict in state 43 resolved using rule (vars1 -> ID SEMICOL)
WARNING: rejected rule (empty -> <empty>) in state 43
WARNING: reduce/reduce conflict in state 50 resolved using rule (empty -> <empty>)
WARNING: rejected rule (p_operacion -> <empty>) in state 50
WARNING: reduce/reduce conflict in state 51 resolved using rule (vars1 -> ID SEMICOL vars)
WARNING: rejected rule (vars3 -> ID SEMICOL vars) in state 51
WARNING: reduce/reduce conflict in state 52 resolved using rule (vars1G -> ID SEMICOL varsG)
WARNING: rejected rule (vars3G -> ID SEMICOL varsG) in state 52
WARNING: reduce/reduce conflict in state 52 resolved using rule (vars -> varsG)
WARNING: rejected rule (vars1G -> ID SEMICOL varsG) in state 52
WARNING: reduce/reduce conflict in state 54 resolved using rule (value -> ID)
WARNING: rejected rule (expr -> ID) in state 54
WARNING: reduce/reduce conflict in state 57 resolved using rule (value -> CTE_F)
WARNING: rejected rule (expr -> CTE_F) in state 57
WARNING: reduce/reduce conflict in state 58 resolved using rule (value -> CTE_I)
WARNING: rejected rule (expr -> CTE_I) in state 58
WARNING: reduce/reduce conflict in state 71 resolved using rule (empty -> <empty>)
WARNING: rejected rule (p_operacion -> <empty>) in state 71
WARNING: reduce/reduce conflict in state 72 resolved using rule (empty -> <empty>)
WARNING: rejected rule (p_operacion -> <empty>) in state 72
WARNING: reduce/reduce conflict in state 73 resolved using rule (empty -> <empty>)
WARNING: rejected rule (p_operacion -> <empty>) in state 73
WARNING: reduce/reduce conflict in state 74 resolved using rule (empty -> <empty>)
WARNING: rejected rule (p_operacion -> <empty>) in state 74
WARNING: reduce/reduce conflict in state 75 resolved using rule (statement -> empty)
WARNING: rejected rule (vars -> empty) in state 75
WARNING: reduce/reduce conflict in state 81 resolved using rule (vars2 -> ID IS value SEMICOL)
WARNING: rejected rule (empty -> <empty>) in state 81
WARNING: reduce/reduce conflict in state 90 resolved using rule (vars3 -> ID SEMICOL)
WARNING: rejected rule (vars3G -> ID SEMICOL) in state 90
WARNING: reduce/reduce conflict in state 90 resolved using rule (vars3 -> ID SEMICOL)
WARNING: rejected rule (empty -> <empty>) in state 90
WARNING: reduce/reduce conflict in state 91 resolved using rule (vars1G -> ID SEMICOL)
WARNING: rejected rule (vars3G -> ID SEMICOL) in state 91
WARNING: reduce/reduce conflict in state 94 resolved using rule (empty -> <empty>)
WARNING: rejected rule (p_operacion -> <empty>) in state 94
WARNING: reduce/reduce conflict in state 95 resolved using rule (empty -> <empty>)
WARNING: rejected rule (p_operacion -> <empty>) in state 95
WARNING: reduce/reduce conflict in state 97 resolved using rule (empty -> <empty>)
WARNING: rejected rule (p_operacion -> <empty>) in state 97
WARNING: reduce/reduce conflict in state 111 resolved using rule (vars4 -> ID IS value check_type SEMICOL)
WARNING: rejected rule (vars2G -> ID IS value check_type SEMICOL) in state 111
WARNING: reduce/reduce conflict in state 111 resolved using rule (vars4 -> ID IS value check_type SEMICOL)
WARNING: rejected rule (vars4G -> ID IS value check_type SEMICOL) in state 111
WARNING: reduce/reduce conflict in state 111 resolved using rule (vars4 -> ID IS value check_type SEMICOL)
WARNING: rejected rule (empty -> <empty>) in state 111
WARNING: reduce/reduce conflict in state 119 resolved using rule (vars -> varsG)
WARNING: rejected rule (vars3G -> ID SEMICOL varsG) in state 119
WARNING: reduce/reduce conflict in state 120 resolved using rule (vars1G -> ID SEMICOL varsG)
WARNING: rejected rule (vars3G -> ID SEMICOL varsG) in state 120
WARNING: reduce/reduce conflict in state 146 resolved using rule (vars2G -> ID IS value check_type SEMICOL varsG)
WARNING: rejected rule (vars4G -> ID IS value check_type SEMICOL varsG) in state 146
WARNING: reduce/reduce conflict in state 146 resolved using rule (vars -> varsG)
WARNING: rejected rule (vars2G -> ID IS value check_type SEMICOL varsG) in state 146
WARNING: reduce/reduce conflict in state 159 resolved using rule (vars2G -> ID IS value check_type SEMICOL)
WARNING: rejected rule (vars4G -> ID IS value check_type SEMICOL) in state 159
WARNING: reduce/reduce conflict in state 172 resolved using rule (vars2G -> ID IS value check_type SEMICOL varsG)
WARNING: rejected rule (vars4G -> ID IS value check_type SEMICOL varsG) in state 172
WARNING: reduce/reduce conflict in state 177 resolved using rule (empty -> <empty>)
WARNING: rejected rule (p_operacion -> <empty>) in state 177
WARNING: reduce/reduce conflict in state 178 resolved using rule (vars4 -> ID IS value check_type SEMICOL)
WARNING: rejected rule (vars4G -> ID IS value check_type SEMICOL) in state 178
WARNING: reduce/reduce conflict in state 178 resolved using rule (vars4 -> ID IS value check_type SEMICOL)
WARNING: rejected rule (empty -> <empty>) in state 178
WARNING: reduce/reduce conflict in state 181 resolved using rule (vars -> varsG)
WARNING: rejected rule (vars4G -> ID IS value check_type SEMICOL varsG) in state 181
WARNING: reduce/reduce conflict in state 192 resolved using rule (empty -> <empty>)
WARNING: rejected rule (p_operacion -> <empty>) in state 192
WARNING: reduce/reduce conflict in state 199 resolved using rule (empty -> <empty>)
WARNING: rejected rule (p_operacion -> <empty>) in state 199
WARNING: Rule (p_operacion -> <empty>) is never reduced
