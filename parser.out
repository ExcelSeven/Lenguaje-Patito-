Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BEGIN
    BOOL
    COL
    CONST
    CTE_B
    CTE_S
    DETERMATRIZ
    DO
    DOT
    ELIF
    END
    EOF
    GLOBAL
    INPUT
    INVERMATRIZ
    LET
    LOCAL
    NOT
    OR
    SELECT
    SWITCH
    THEN
    TRANSMATRIZ

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SEMICOL programa1
Rule 2     programa1 -> varsG funciones
Rule 3     programa1 -> varsG funciones main funciones
Rule 4     programa1 -> varsG main funciones
Rule 5     programa1 -> varsG
Rule 6     programa1 -> main
Rule 7     programa1 -> funciones
Rule 8     funciones -> funcion
Rule 9     funciones -> funciones funcion
Rule 10    funciones -> empty
Rule 11    main -> tipo MAIN LP RP LB statement func_return_main RB end_main
Rule 12    main -> VOID MAIN LP RP LB statement RB
Rule 13    statement -> asignacion SEMICOL statement
Rule 14    statement -> if statement
Rule 15    statement -> vars statement
Rule 16    statement -> while statement
Rule 17    statement -> for statement
Rule 18    statement -> escritura statement
Rule 19    statement -> escritura_var statement
Rule 20    statement -> lectura statement
Rule 21    statement -> func_call statement
Rule 22    statement -> ID row SEMICOL
Rule 23    statement -> ID matrix SEMICOL
Rule 24    statement -> empty
Rule 25    asignacion -> ID IS value
Rule 26    vars -> VAR tipo vars1
Rule 27    vars -> VAR tipo vars2
Rule 28    vars -> VAR tipo vars3
Rule 29    vars -> VAR tipo oper_aritmetica
Rule 30    vars -> VAR tipo ID row SEMICOL
Rule 31    vars -> VAR tipo ID matrix SEMICOL
Rule 32    vars -> var_row
Rule 33    vars -> var_row vars
Rule 34    vars -> var_matrix
Rule 35    vars -> var_matrix vars
Rule 36    vars -> empty
Rule 37    vars1 -> ID SEMICOL
Rule 38    vars2 -> vars2_1 ID IS value SEMICOL
Rule 39    vars2_1 -> vars2_1 ID IS value COMMA
Rule 40    vars2_1 -> ID IS value COMMA
Rule 41    vars2_1 -> empty
Rule 42    vars2 -> ID IS value SEMICOL
Rule 43    vars3 -> vars3_1 ID SEMICOL
Rule 44    vars3_1 -> vars3_1 ID COMMA
Rule 45    vars3_1 -> ID COMMA
Rule 46    vars3 -> ID SEMICOL
Rule 47    vars3_1 -> empty
Rule 48    varsG -> VAR tipo vars1G varsG
Rule 49    varsG -> VAR tipo vars2G varsG
Rule 50    varsG -> VAR tipo vars3G varsG
Rule 51    varsG -> VAR LB varsG RB
Rule 52    varsG -> var_rowG
Rule 53    varsG -> var_rowG varsG
Rule 54    varsG -> var_matrixG
Rule 55    varsG -> var_matrixG varsG
Rule 56    varsG -> declarar_func varsG
Rule 57    varsG -> declarar_func
Rule 58    varsG -> empty
Rule 59    vars1G -> ID SEMICOL
Rule 60    vars2G -> vars2_1G ID IS value SEMICOL
Rule 61    vars2_1G -> vars2_1G ID IS value COMMA
Rule 62    vars2_1G -> ID IS value COMMA
Rule 63    vars2_1G -> empty
Rule 64    vars2G -> ID IS value SEMICOL
Rule 65    vars3G -> vars3_1G ID SEMICOL
Rule 66    vars3_1G -> vars3_1G ID COMMA
Rule 67    vars3_1G -> ID COMMA
Rule 68    vars3G -> ID SEMICOL
Rule 69    vars3_1G -> empty
Rule 70    tipo -> INT
Rule 71    tipo -> FLOAT
Rule 72    tipo -> CHAR
Rule 73    value -> CTE_F
Rule 74    value -> CTE_I
Rule 75    value -> ID
Rule 76    value -> CTE_C
Rule 77    value -> COMILLA ID COMILLA
Rule 78    value -> COMILLAS ID COMILLAS
Rule 79    check_type -> <empty>
Rule 80    funcion -> VOID ID LP param RP verificar LB var_func statement RB end_func
Rule 81    funcion -> VOID ID LP RP verificar2 LB var_func statement RB end_func
Rule 82    funcion -> tipo ID LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
Rule 83    funcion -> tipo ID LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
Rule 84    verificar -> <empty>
Rule 85    verificar2 -> <empty>
Rule 86    add_func_dir -> <empty>
Rule 87    add_func_dir2 -> <empty>
Rule 88    var_func -> vars
Rule 89    param -> tipo ID
Rule 90    param -> param COMMA tipo ID
Rule 91    param -> empty
Rule 92    declarar_func -> FUNC tipo ID LP RP SEMICOL
Rule 93    declarar_func -> FUNC VOID ID LP RP SEMICOL
Rule 94    declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL
Rule 95    declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL
Rule 96    declarar_param -> tipo COMMA declarar_param
Rule 97    declarar_param -> tipo declarar_param
Rule 98    declarar_param -> empty
Rule 99    end_func -> <empty>
Rule 100   func_call -> ID LP RP SEMICOL
Rule 101   func_call -> ID LP func_era func_call_param RP SEMICOL
Rule 102   func_era -> <empty>
Rule 103   func_call_param -> expr
Rule 104   func_call_param -> func_call_param COMMA expr
Rule 105   func_return -> RETURN expr SEMICOL
Rule 106   func_return_param -> RETURN expr SEMICOL
Rule 107   func_return_main -> RETURN expr SEMICOL
Rule 108   end_main -> <empty>
Rule 109   var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL
Rule 110   var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL
Rule 111   elem_lista -> value
Rule 112   elem_lista -> empty
Rule 113   lista2 -> elem_lista COMMA lista2
Rule 114   lista2 -> elem_lista COMMA elem_lista
Rule 115   row -> LC CTE_I RC
Rule 116   var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL
Rule 117   var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL
Rule 118   matrix2 -> LP lista2 RP COMMA matrix2
Rule 119   matrix2 -> LP lista2 RP COMMA LP lista2 RP
Rule 120   row_list -> row COMMA row_list
Rule 121   row_list -> row COMMA row
Rule 122   matrix -> row row
Rule 123   empty -> <empty>
Rule 124   if -> IF LP expression RP check_bool gotof LB statement RB
Rule 125   if -> IF LP expression RP check_bool gotof LB statement RB goto elseif
Rule 126   if -> IF LP expression RP check_bool gotof LB statement RB goto else
Rule 127   elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
Rule 128   elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto elseif
Rule 129   elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto else
Rule 130   else -> ELSE guarda_num_salto LB statement RB guarda_num_salto
Rule 131   goto -> <empty>
Rule 132   gotof -> <empty>
Rule 133   guarda_num_salto -> <empty>
Rule 134   while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
Rule 135   for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
Rule 136   gotof_for -> <empty>
Rule 137   opers -> IS value
Rule 138   opers -> PLUS IS value
Rule 139   opers -> MINUS IS value
Rule 140   opers -> DIV IS value
Rule 141   opers -> MUL IS value
Rule 142   opers -> PLUS PLUS
Rule 143   opers -> MINUS MINUS
Rule 144   escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL
Rule 145   escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL
Rule 146   escritura_var -> PRINT LP any_var RP SEMICOL
Rule 147   any_var -> ID
Rule 148   any -> expr any
Rule 149   any -> expression any
Rule 150   any -> empty
Rule 151   lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL
Rule 152   lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
Rule 153   any_lectura -> ID
Rule 154   expression -> var_gt
Rule 155   expression -> var_lt
Rule 156   expression -> var_equal
Rule 157   expression -> var_neq
Rule 158   expression -> var_geq
Rule 159   expression -> var_leq
Rule 160   expression -> expr
Rule 161   expression -> TRUE
Rule 162   expression -> FALSE
Rule 163   expression -> ID
Rule 164   var_lt -> expr LT expr
Rule 165   var_gt -> expr GT expr
Rule 166   var_leq -> expr LEQ expr
Rule 167   var_geq -> expr GEQ expr
Rule 168   var_equal -> expr EQUAL expr
Rule 169   var_neq -> expr NEQ expr
Rule 170   oper_aritmetica -> ID IS expr SEMICOL
Rule 171   expr -> expr MUL expr
Rule 172   expr -> expr DIV expr
Rule 173   expr -> expr PLUS expr
Rule 174   expr -> expr MINUS expr
Rule 175   expr -> CTE_I
Rule 176   expr -> CTE_F
Rule 177   expr -> ID
Rule 178   check_bool -> <empty>

Terminals, with rules where they appear

AND                  : 
BEGIN                : 
BOOL                 : 
CHAR                 : 72
COL                  : 
COMILLA              : 77 77 144 144 151 151
COMILLAS             : 78 78 145 145 152 152
COMMA                : 39 40 44 45 61 62 66 67 90 96 104 113 114 118 119 120 121
CONST                : 
CTE_B                : 
CTE_C                : 76
CTE_F                : 73 176
CTE_I                : 74 115 175
CTE_S                : 
DETERMATRIZ          : 
DIV                  : 140 172
DO                   : 
DOT                  : 
ELIF                 : 
ELSE                 : 130
ELSEIF               : 127 128 129
END                  : 
EOF                  : 
EQUAL                : 168
FALSE                : 162
FLOAT                : 71
FOR                  : 135
FUNC                 : 92 93 94 95
GEQ                  : 167
GLOBAL               : 
GT                   : 165
ID                   : 1 22 23 25 30 31 37 38 39 40 42 43 44 45 46 59 60 61 62 64 65 66 67 68 75 77 78 80 81 82 83 89 90 92 93 94 95 100 101 109 110 116 117 135 135 147 153 163 170 177
IF                   : 124 125 126
INPUT                : 
INT                  : 70
INVERMATRIZ          : 
IS                   : 25 38 39 40 42 60 61 62 64 109 110 116 117 135 137 138 139 140 141 170
LB                   : 11 12 51 80 81 82 83 124 125 126 127 128 129 130 134 135
LC                   : 115
LEQ                  : 166
LET                  : 
LOCAL                : 
LP                   : 11 12 80 81 82 83 92 93 94 95 100 101 109 110 118 119 119 124 125 126 127 128 129 134 135 144 145 146 151 152
LT                   : 164
MAIN                 : 11 12
MINUS                : 139 143 143 174
MUL                  : 141 171
NEQ                  : 169
NOT                  : 
OR                   : 
PLUS                 : 138 142 142 173
PRINT                : 144 145 146
PROGRAM              : 1
RB                   : 11 12 51 80 81 82 83 124 125 126 127 128 129 130 134 135
RC                   : 115
READ                 : 151 152
RETURN               : 105 106 107
RP                   : 11 12 80 81 82 83 92 93 94 95 100 101 109 110 118 119 119 124 125 126 127 128 129 134 135 144 145 146 151 152
SELECT               : 
SEMICOL              : 1 13 22 23 30 31 37 38 42 43 46 59 60 64 65 68 92 93 94 95 100 101 105 106 107 109 110 116 117 135 135 144 145 146 151 152 170
SWITCH               : 
THEN                 : 
TRANSMATRIZ          : 
TRUE                 : 161
VAR                  : 26 27 28 29 30 31 48 49 50 51 109 110 116 117 135
VOID                 : 12 80 81 93 95
WHILE                : 134
error                : 

Nonterminals, with rules where they appear

add_func_dir         : 83
add_func_dir2        : 82
any                  : 144 145 148 149
any_lectura          : 151 152
any_var              : 146
asignacion           : 13
check_bool           : 124 125 126 127 128 129 134 135
check_type           : 
declarar_func        : 56 57
declarar_param       : 94 95 96 97
elem_lista           : 113 114 114
else                 : 126 129
elseif               : 125 128
empty                : 10 24 36 41 47 58 63 69 91 98 112 150
end_func             : 80 81 82 83
end_main             : 11
escritura            : 18
escritura_var        : 19
expr                 : 103 104 105 106 107 148 160 164 164 165 165 166 166 167 167 168 168 169 169 170 171 171 172 172 173 173 174 174
expression           : 124 125 126 127 128 129 134 135 149
for                  : 17
func_call            : 21
func_call_param      : 101 104
func_era             : 101
func_return          : 82
func_return_main     : 11
func_return_param    : 83
funcion              : 8 9
funciones            : 2 3 3 4 7 9
goto                 : 125 126 127 128 129 134 135
gotof                : 124 125 126 127 128 129 134
gotof_for            : 135
guarda_num_salto     : 127 128 129 130 130 134
if                   : 14
lectura              : 20
lista2               : 109 110 113 118 119 119
main                 : 3 4 6
matrix               : 23 31 116 117
matrix2              : 116 117 118
oper_aritmetica      : 29
opers                : 135
param                : 80 83 90
programa             : 0
programa1            : 1
row                  : 22 30 109 110 120 121 121 122 122
row_list             : 120
statement            : 11 12 13 14 15 16 17 18 19 20 21 80 81 82 83 124 125 126 127 128 129 130 134 135
tipo                 : 11 26 27 28 29 30 31 48 49 50 82 83 89 90 92 94 96 97 109 110 116 117 135
value                : 25 38 39 40 42 60 61 62 64 111 135 137 138 139 140 141
var_equal            : 156
var_func             : 80 81 82 83
var_geq              : 158
var_gt               : 154
var_leq              : 159
var_lt               : 155
var_matrix           : 34 35
var_matrixG          : 54 55
var_neq              : 157
var_row              : 32 33
var_rowG             : 52 53
vars                 : 15 33 35 88
vars1                : 26
vars1G               : 48
vars2                : 27
vars2G               : 49
vars2_1              : 38 39
vars2_1G             : 60 61
vars3                : 28
vars3G               : 50
vars3_1              : 43 44
vars3_1G             : 65 66
varsG                : 2 3 4 5 48 49 50 51 53 55 56
verificar            : 80 83
verificar2           : 81 82
while                : 16

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SEMICOL programa1

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID SEMICOL programa1

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . SEMICOL programa1

    SEMICOL         shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SEMICOL . programa1
    (2) programa1 -> . varsG funciones
    (3) programa1 -> . varsG funciones main funciones
    (4) programa1 -> . varsG main funciones
    (5) programa1 -> . varsG
    (6) programa1 -> . main
    (7) programa1 -> . funciones
    (48) varsG -> . VAR tipo vars1G varsG
    (49) varsG -> . VAR tipo vars2G varsG
    (50) varsG -> . VAR tipo vars3G varsG
    (51) varsG -> . VAR LB varsG RB
    (52) varsG -> . var_rowG
    (53) varsG -> . var_rowG varsG
    (54) varsG -> . var_matrixG
    (55) varsG -> . var_matrixG varsG
    (56) varsG -> . declarar_func varsG
    (57) varsG -> . declarar_func
    (58) varsG -> . empty
    (11) main -> . tipo MAIN LP RP LB statement func_return_main RB end_main
    (12) main -> . VOID MAIN LP RP LB statement RB
    (8) funciones -> . funcion
    (9) funciones -> . funciones funcion
    (10) funciones -> . empty
    (110) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (117) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (92) declarar_func -> . FUNC tipo ID LP RP SEMICOL
    (93) declarar_func -> . FUNC VOID ID LP RP SEMICOL
    (94) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (95) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL
    (123) empty -> .
    (70) tipo -> . INT
    (71) tipo -> . FLOAT
    (72) tipo -> . CHAR
    (80) funcion -> . VOID ID LP param RP verificar LB var_func statement RB end_func
    (81) funcion -> . VOID ID LP RP verificar2 LB var_func statement RB end_func
    (82) funcion -> . tipo ID LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (83) funcion -> . tipo ID LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    VAR             shift and go to state 9
    VOID            shift and go to state 15
    FUNC            shift and go to state 17
    $end            reduce using rule 123 (empty -> .)
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

  ! VOID            [ reduce using rule 123 (empty -> .) ]
  ! INT             [ reduce using rule 123 (empty -> .) ]
  ! FLOAT           [ reduce using rule 123 (empty -> .) ]
  ! CHAR            [ reduce using rule 123 (empty -> .) ]

    programa1                      shift and go to state 5
    varsG                          shift and go to state 6
    funciones                      shift and go to state 7
    main                           shift and go to state 8
    tipo                           shift and go to state 10
    var_rowG                       shift and go to state 11
    var_matrixG                    shift and go to state 12
    declarar_func                  shift and go to state 13
    empty                          shift and go to state 14
    funcion                        shift and go to state 16

state 5

    (1) programa -> PROGRAM ID SEMICOL programa1 .

    $end            reduce using rule 1 (programa -> PROGRAM ID SEMICOL programa1 .)


state 6

    (2) programa1 -> varsG . funciones
    (3) programa1 -> varsG . funciones main funciones
    (4) programa1 -> varsG . main funciones
    (5) programa1 -> varsG .
    (8) funciones -> . funcion
    (9) funciones -> . funciones funcion
    (10) funciones -> . empty
    (11) main -> . tipo MAIN LP RP LB statement func_return_main RB end_main
    (12) main -> . VOID MAIN LP RP LB statement RB
    (80) funcion -> . VOID ID LP param RP verificar LB var_func statement RB end_func
    (81) funcion -> . VOID ID LP RP verificar2 LB var_func statement RB end_func
    (82) funcion -> . tipo ID LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (83) funcion -> . tipo ID LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (123) empty -> .
    (70) tipo -> . INT
    (71) tipo -> . FLOAT
    (72) tipo -> . CHAR

  ! shift/reduce conflict for VOID resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 5 (programa1 -> varsG .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    $end            reduce using rule 5 (programa1 -> varsG .)
    VOID            shift and go to state 15
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

  ! VOID            [ reduce using rule 123 (empty -> .) ]
  ! INT             [ reduce using rule 123 (empty -> .) ]
  ! FLOAT           [ reduce using rule 123 (empty -> .) ]
  ! CHAR            [ reduce using rule 123 (empty -> .) ]
  ! $end            [ reduce using rule 123 (empty -> .) ]

    funciones                      shift and go to state 21
    main                           shift and go to state 22
    funcion                        shift and go to state 16
    empty                          shift and go to state 23
    tipo                           shift and go to state 10

state 7

    (7) programa1 -> funciones .
    (9) funciones -> funciones . funcion
    (80) funcion -> . VOID ID LP param RP verificar LB var_func statement RB end_func
    (81) funcion -> . VOID ID LP RP verificar2 LB var_func statement RB end_func
    (82) funcion -> . tipo ID LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (83) funcion -> . tipo ID LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (70) tipo -> . INT
    (71) tipo -> . FLOAT
    (72) tipo -> . CHAR

    $end            reduce using rule 7 (programa1 -> funciones .)
    VOID            shift and go to state 25
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    funcion                        shift and go to state 24
    tipo                           shift and go to state 26

state 8

    (6) programa1 -> main .

    $end            reduce using rule 6 (programa1 -> main .)


state 9

    (48) varsG -> VAR . tipo vars1G varsG
    (49) varsG -> VAR . tipo vars2G varsG
    (50) varsG -> VAR . tipo vars3G varsG
    (51) varsG -> VAR . LB varsG RB
    (110) var_rowG -> VAR . tipo ID row IS LP lista2 RP SEMICOL
    (117) var_matrixG -> VAR . tipo ID matrix IS matrix2 SEMICOL
    (70) tipo -> . INT
    (71) tipo -> . FLOAT
    (72) tipo -> . CHAR

    LB              shift and go to state 28
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    tipo                           shift and go to state 27

state 10

    (11) main -> tipo . MAIN LP RP LB statement func_return_main RB end_main
    (82) funcion -> tipo . ID LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (83) funcion -> tipo . ID LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func

    MAIN            shift and go to state 29
    ID              shift and go to state 30


state 11

    (52) varsG -> var_rowG .
    (53) varsG -> var_rowG . varsG
    (48) varsG -> . VAR tipo vars1G varsG
    (49) varsG -> . VAR tipo vars2G varsG
    (50) varsG -> . VAR tipo vars3G varsG
    (51) varsG -> . VAR LB varsG RB
    (52) varsG -> . var_rowG
    (53) varsG -> . var_rowG varsG
    (54) varsG -> . var_matrixG
    (55) varsG -> . var_matrixG varsG
    (56) varsG -> . declarar_func varsG
    (57) varsG -> . declarar_func
    (58) varsG -> . empty
    (110) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (117) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (92) declarar_func -> . FUNC tipo ID LP RP SEMICOL
    (93) declarar_func -> . FUNC VOID ID LP RP SEMICOL
    (94) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (95) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL
    (123) empty -> .

  ! reduce/reduce conflict for VOID resolved using rule 52 (varsG -> var_rowG .)
  ! reduce/reduce conflict for INT resolved using rule 52 (varsG -> var_rowG .)
  ! reduce/reduce conflict for FLOAT resolved using rule 52 (varsG -> var_rowG .)
  ! reduce/reduce conflict for CHAR resolved using rule 52 (varsG -> var_rowG .)
  ! reduce/reduce conflict for $end resolved using rule 52 (varsG -> var_rowG .)
  ! reduce/reduce conflict for RB resolved using rule 52 (varsG -> var_rowG .)
    VOID            reduce using rule 52 (varsG -> var_rowG .)
    INT             reduce using rule 52 (varsG -> var_rowG .)
    FLOAT           reduce using rule 52 (varsG -> var_rowG .)
    CHAR            reduce using rule 52 (varsG -> var_rowG .)
    $end            reduce using rule 52 (varsG -> var_rowG .)
    RB              reduce using rule 52 (varsG -> var_rowG .)
    VAR             shift and go to state 9
    FUNC            shift and go to state 17

  ! VOID            [ reduce using rule 123 (empty -> .) ]
  ! INT             [ reduce using rule 123 (empty -> .) ]
  ! FLOAT           [ reduce using rule 123 (empty -> .) ]
  ! CHAR            [ reduce using rule 123 (empty -> .) ]
  ! $end            [ reduce using rule 123 (empty -> .) ]
  ! RB              [ reduce using rule 123 (empty -> .) ]

    var_rowG                       shift and go to state 11
    varsG                          shift and go to state 31
    var_matrixG                    shift and go to state 12
    declarar_func                  shift and go to state 13
    empty                          shift and go to state 32

state 12

    (54) varsG -> var_matrixG .
    (55) varsG -> var_matrixG . varsG
    (48) varsG -> . VAR tipo vars1G varsG
    (49) varsG -> . VAR tipo vars2G varsG
    (50) varsG -> . VAR tipo vars3G varsG
    (51) varsG -> . VAR LB varsG RB
    (52) varsG -> . var_rowG
    (53) varsG -> . var_rowG varsG
    (54) varsG -> . var_matrixG
    (55) varsG -> . var_matrixG varsG
    (56) varsG -> . declarar_func varsG
    (57) varsG -> . declarar_func
    (58) varsG -> . empty
    (110) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (117) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (92) declarar_func -> . FUNC tipo ID LP RP SEMICOL
    (93) declarar_func -> . FUNC VOID ID LP RP SEMICOL
    (94) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (95) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL
    (123) empty -> .

  ! reduce/reduce conflict for VOID resolved using rule 54 (varsG -> var_matrixG .)
  ! reduce/reduce conflict for INT resolved using rule 54 (varsG -> var_matrixG .)
  ! reduce/reduce conflict for FLOAT resolved using rule 54 (varsG -> var_matrixG .)
  ! reduce/reduce conflict for CHAR resolved using rule 54 (varsG -> var_matrixG .)
  ! reduce/reduce conflict for $end resolved using rule 54 (varsG -> var_matrixG .)
  ! reduce/reduce conflict for RB resolved using rule 54 (varsG -> var_matrixG .)
    VOID            reduce using rule 54 (varsG -> var_matrixG .)
    INT             reduce using rule 54 (varsG -> var_matrixG .)
    FLOAT           reduce using rule 54 (varsG -> var_matrixG .)
    CHAR            reduce using rule 54 (varsG -> var_matrixG .)
    $end            reduce using rule 54 (varsG -> var_matrixG .)
    RB              reduce using rule 54 (varsG -> var_matrixG .)
    VAR             shift and go to state 9
    FUNC            shift and go to state 17

  ! VOID            [ reduce using rule 123 (empty -> .) ]
  ! INT             [ reduce using rule 123 (empty -> .) ]
  ! FLOAT           [ reduce using rule 123 (empty -> .) ]
  ! CHAR            [ reduce using rule 123 (empty -> .) ]
  ! $end            [ reduce using rule 123 (empty -> .) ]
  ! RB              [ reduce using rule 123 (empty -> .) ]

    var_matrixG                    shift and go to state 12
    varsG                          shift and go to state 33
    var_rowG                       shift and go to state 11
    declarar_func                  shift and go to state 13
    empty                          shift and go to state 32

state 13

    (56) varsG -> declarar_func . varsG
    (57) varsG -> declarar_func .
    (48) varsG -> . VAR tipo vars1G varsG
    (49) varsG -> . VAR tipo vars2G varsG
    (50) varsG -> . VAR tipo vars3G varsG
    (51) varsG -> . VAR LB varsG RB
    (52) varsG -> . var_rowG
    (53) varsG -> . var_rowG varsG
    (54) varsG -> . var_matrixG
    (55) varsG -> . var_matrixG varsG
    (56) varsG -> . declarar_func varsG
    (57) varsG -> . declarar_func
    (58) varsG -> . empty
    (110) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (117) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (92) declarar_func -> . FUNC tipo ID LP RP SEMICOL
    (93) declarar_func -> . FUNC VOID ID LP RP SEMICOL
    (94) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (95) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL
    (123) empty -> .

  ! reduce/reduce conflict for VOID resolved using rule 57 (varsG -> declarar_func .)
  ! reduce/reduce conflict for INT resolved using rule 57 (varsG -> declarar_func .)
  ! reduce/reduce conflict for FLOAT resolved using rule 57 (varsG -> declarar_func .)
  ! reduce/reduce conflict for CHAR resolved using rule 57 (varsG -> declarar_func .)
  ! reduce/reduce conflict for $end resolved using rule 57 (varsG -> declarar_func .)
  ! reduce/reduce conflict for RB resolved using rule 57 (varsG -> declarar_func .)
    VOID            reduce using rule 57 (varsG -> declarar_func .)
    INT             reduce using rule 57 (varsG -> declarar_func .)
    FLOAT           reduce using rule 57 (varsG -> declarar_func .)
    CHAR            reduce using rule 57 (varsG -> declarar_func .)
    $end            reduce using rule 57 (varsG -> declarar_func .)
    RB              reduce using rule 57 (varsG -> declarar_func .)
    VAR             shift and go to state 9
    FUNC            shift and go to state 17

  ! VOID            [ reduce using rule 123 (empty -> .) ]
  ! INT             [ reduce using rule 123 (empty -> .) ]
  ! FLOAT           [ reduce using rule 123 (empty -> .) ]
  ! CHAR            [ reduce using rule 123 (empty -> .) ]
  ! $end            [ reduce using rule 123 (empty -> .) ]
  ! RB              [ reduce using rule 123 (empty -> .) ]

    declarar_func                  shift and go to state 13
    varsG                          shift and go to state 34
    var_rowG                       shift and go to state 11
    var_matrixG                    shift and go to state 12
    empty                          shift and go to state 32

state 14

    (58) varsG -> empty .
    (10) funciones -> empty .

  ! reduce/reduce conflict for VOID resolved using rule 10 (funciones -> empty .)
  ! reduce/reduce conflict for INT resolved using rule 10 (funciones -> empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 10 (funciones -> empty .)
  ! reduce/reduce conflict for CHAR resolved using rule 10 (funciones -> empty .)
  ! reduce/reduce conflict for $end resolved using rule 10 (funciones -> empty .)
    VOID            reduce using rule 10 (funciones -> empty .)
    INT             reduce using rule 10 (funciones -> empty .)
    FLOAT           reduce using rule 10 (funciones -> empty .)
    CHAR            reduce using rule 10 (funciones -> empty .)
    $end            reduce using rule 10 (funciones -> empty .)

  ! VOID            [ reduce using rule 58 (varsG -> empty .) ]
  ! INT             [ reduce using rule 58 (varsG -> empty .) ]
  ! FLOAT           [ reduce using rule 58 (varsG -> empty .) ]
  ! CHAR            [ reduce using rule 58 (varsG -> empty .) ]
  ! $end            [ reduce using rule 58 (varsG -> empty .) ]


state 15

    (12) main -> VOID . MAIN LP RP LB statement RB
    (80) funcion -> VOID . ID LP param RP verificar LB var_func statement RB end_func
    (81) funcion -> VOID . ID LP RP verificar2 LB var_func statement RB end_func

    MAIN            shift and go to state 35
    ID              shift and go to state 36


state 16

    (8) funciones -> funcion .

    VOID            reduce using rule 8 (funciones -> funcion .)
    INT             reduce using rule 8 (funciones -> funcion .)
    FLOAT           reduce using rule 8 (funciones -> funcion .)
    CHAR            reduce using rule 8 (funciones -> funcion .)
    $end            reduce using rule 8 (funciones -> funcion .)


state 17

    (92) declarar_func -> FUNC . tipo ID LP RP SEMICOL
    (93) declarar_func -> FUNC . VOID ID LP RP SEMICOL
    (94) declarar_func -> FUNC . tipo ID LP declarar_param RP SEMICOL
    (95) declarar_func -> FUNC . VOID ID LP declarar_param RP SEMICOL
    (70) tipo -> . INT
    (71) tipo -> . FLOAT
    (72) tipo -> . CHAR

    VOID            shift and go to state 38
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    tipo                           shift and go to state 37

state 18

    (70) tipo -> INT .

    MAIN            reduce using rule 70 (tipo -> INT .)
    ID              reduce using rule 70 (tipo -> INT .)
    COMMA           reduce using rule 70 (tipo -> INT .)
    INT             reduce using rule 70 (tipo -> INT .)
    FLOAT           reduce using rule 70 (tipo -> INT .)
    CHAR            reduce using rule 70 (tipo -> INT .)
    RP              reduce using rule 70 (tipo -> INT .)


state 19

    (71) tipo -> FLOAT .

    MAIN            reduce using rule 71 (tipo -> FLOAT .)
    ID              reduce using rule 71 (tipo -> FLOAT .)
    COMMA           reduce using rule 71 (tipo -> FLOAT .)
    INT             reduce using rule 71 (tipo -> FLOAT .)
    FLOAT           reduce using rule 71 (tipo -> FLOAT .)
    CHAR            reduce using rule 71 (tipo -> FLOAT .)
    RP              reduce using rule 71 (tipo -> FLOAT .)


state 20

    (72) tipo -> CHAR .

    MAIN            reduce using rule 72 (tipo -> CHAR .)
    ID              reduce using rule 72 (tipo -> CHAR .)
    COMMA           reduce using rule 72 (tipo -> CHAR .)
    INT             reduce using rule 72 (tipo -> CHAR .)
    FLOAT           reduce using rule 72 (tipo -> CHAR .)
    CHAR            reduce using rule 72 (tipo -> CHAR .)
    RP              reduce using rule 72 (tipo -> CHAR .)


state 21

    (2) programa1 -> varsG funciones .
    (3) programa1 -> varsG funciones . main funciones
    (9) funciones -> funciones . funcion
    (11) main -> . tipo MAIN LP RP LB statement func_return_main RB end_main
    (12) main -> . VOID MAIN LP RP LB statement RB
    (80) funcion -> . VOID ID LP param RP verificar LB var_func statement RB end_func
    (81) funcion -> . VOID ID LP RP verificar2 LB var_func statement RB end_func
    (82) funcion -> . tipo ID LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (83) funcion -> . tipo ID LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (70) tipo -> . INT
    (71) tipo -> . FLOAT
    (72) tipo -> . CHAR

    $end            reduce using rule 2 (programa1 -> varsG funciones .)
    VOID            shift and go to state 15
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    main                           shift and go to state 39
    funcion                        shift and go to state 24
    tipo                           shift and go to state 10

state 22

    (4) programa1 -> varsG main . funciones
    (8) funciones -> . funcion
    (9) funciones -> . funciones funcion
    (10) funciones -> . empty
    (80) funcion -> . VOID ID LP param RP verificar LB var_func statement RB end_func
    (81) funcion -> . VOID ID LP RP verificar2 LB var_func statement RB end_func
    (82) funcion -> . tipo ID LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (83) funcion -> . tipo ID LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (123) empty -> .
    (70) tipo -> . INT
    (71) tipo -> . FLOAT
    (72) tipo -> . CHAR

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    VOID            shift and go to state 25
    $end            reduce using rule 123 (empty -> .)
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

  ! VOID            [ reduce using rule 123 (empty -> .) ]
  ! INT             [ reduce using rule 123 (empty -> .) ]
  ! FLOAT           [ reduce using rule 123 (empty -> .) ]
  ! CHAR            [ reduce using rule 123 (empty -> .) ]

    funciones                      shift and go to state 40
    funcion                        shift and go to state 16
    empty                          shift and go to state 23
    tipo                           shift and go to state 26

state 23

    (10) funciones -> empty .

    VOID            reduce using rule 10 (funciones -> empty .)
    INT             reduce using rule 10 (funciones -> empty .)
    FLOAT           reduce using rule 10 (funciones -> empty .)
    CHAR            reduce using rule 10 (funciones -> empty .)
    $end            reduce using rule 10 (funciones -> empty .)


state 24

    (9) funciones -> funciones funcion .

    VOID            reduce using rule 9 (funciones -> funciones funcion .)
    INT             reduce using rule 9 (funciones -> funciones funcion .)
    FLOAT           reduce using rule 9 (funciones -> funciones funcion .)
    CHAR            reduce using rule 9 (funciones -> funciones funcion .)
    $end            reduce using rule 9 (funciones -> funciones funcion .)


state 25

    (80) funcion -> VOID . ID LP param RP verificar LB var_func statement RB end_func
    (81) funcion -> VOID . ID LP RP verificar2 LB var_func statement RB end_func

    ID              shift and go to state 36


state 26

    (82) funcion -> tipo . ID LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (83) funcion -> tipo . ID LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func

    ID              shift and go to state 30


state 27

    (48) varsG -> VAR tipo . vars1G varsG
    (49) varsG -> VAR tipo . vars2G varsG
    (50) varsG -> VAR tipo . vars3G varsG
    (110) var_rowG -> VAR tipo . ID row IS LP lista2 RP SEMICOL
    (117) var_matrixG -> VAR tipo . ID matrix IS matrix2 SEMICOL
    (59) vars1G -> . ID SEMICOL
    (60) vars2G -> . vars2_1G ID IS value SEMICOL
    (64) vars2G -> . ID IS value SEMICOL
    (65) vars3G -> . vars3_1G ID SEMICOL
    (68) vars3G -> . ID SEMICOL
    (61) vars2_1G -> . vars2_1G ID IS value COMMA
    (62) vars2_1G -> . ID IS value COMMA
    (63) vars2_1G -> . empty
    (66) vars3_1G -> . vars3_1G ID COMMA
    (67) vars3_1G -> . ID COMMA
    (69) vars3_1G -> . empty
    (123) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 44

  ! ID              [ reduce using rule 123 (empty -> .) ]

    vars1G                         shift and go to state 41
    vars2G                         shift and go to state 42
    vars3G                         shift and go to state 43
    vars2_1G                       shift and go to state 45
    vars3_1G                       shift and go to state 46
    empty                          shift and go to state 47

state 28

    (51) varsG -> VAR LB . varsG RB
    (48) varsG -> . VAR tipo vars1G varsG
    (49) varsG -> . VAR tipo vars2G varsG
    (50) varsG -> . VAR tipo vars3G varsG
    (51) varsG -> . VAR LB varsG RB
    (52) varsG -> . var_rowG
    (53) varsG -> . var_rowG varsG
    (54) varsG -> . var_matrixG
    (55) varsG -> . var_matrixG varsG
    (56) varsG -> . declarar_func varsG
    (57) varsG -> . declarar_func
    (58) varsG -> . empty
    (110) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (117) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (92) declarar_func -> . FUNC tipo ID LP RP SEMICOL
    (93) declarar_func -> . FUNC VOID ID LP RP SEMICOL
    (94) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (95) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL
    (123) empty -> .

    VAR             shift and go to state 9
    FUNC            shift and go to state 17
    RB              reduce using rule 123 (empty -> .)

    varsG                          shift and go to state 48
    var_rowG                       shift and go to state 11
    var_matrixG                    shift and go to state 12
    declarar_func                  shift and go to state 13
    empty                          shift and go to state 32

state 29

    (11) main -> tipo MAIN . LP RP LB statement func_return_main RB end_main

    LP              shift and go to state 49


state 30

    (82) funcion -> tipo ID . LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (83) funcion -> tipo ID . LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func

    LP              shift and go to state 50


state 31

    (53) varsG -> var_rowG varsG .

    VOID            reduce using rule 53 (varsG -> var_rowG varsG .)
    INT             reduce using rule 53 (varsG -> var_rowG varsG .)
    FLOAT           reduce using rule 53 (varsG -> var_rowG varsG .)
    CHAR            reduce using rule 53 (varsG -> var_rowG varsG .)
    $end            reduce using rule 53 (varsG -> var_rowG varsG .)
    RB              reduce using rule 53 (varsG -> var_rowG varsG .)


state 32

    (58) varsG -> empty .

    VOID            reduce using rule 58 (varsG -> empty .)
    INT             reduce using rule 58 (varsG -> empty .)
    FLOAT           reduce using rule 58 (varsG -> empty .)
    CHAR            reduce using rule 58 (varsG -> empty .)
    $end            reduce using rule 58 (varsG -> empty .)
    RB              reduce using rule 58 (varsG -> empty .)


state 33

    (55) varsG -> var_matrixG varsG .

    VOID            reduce using rule 55 (varsG -> var_matrixG varsG .)
    INT             reduce using rule 55 (varsG -> var_matrixG varsG .)
    FLOAT           reduce using rule 55 (varsG -> var_matrixG varsG .)
    CHAR            reduce using rule 55 (varsG -> var_matrixG varsG .)
    $end            reduce using rule 55 (varsG -> var_matrixG varsG .)
    RB              reduce using rule 55 (varsG -> var_matrixG varsG .)


state 34

    (56) varsG -> declarar_func varsG .

    VOID            reduce using rule 56 (varsG -> declarar_func varsG .)
    INT             reduce using rule 56 (varsG -> declarar_func varsG .)
    FLOAT           reduce using rule 56 (varsG -> declarar_func varsG .)
    CHAR            reduce using rule 56 (varsG -> declarar_func varsG .)
    $end            reduce using rule 56 (varsG -> declarar_func varsG .)
    RB              reduce using rule 56 (varsG -> declarar_func varsG .)


state 35

    (12) main -> VOID MAIN . LP RP LB statement RB

    LP              shift and go to state 51


state 36

    (80) funcion -> VOID ID . LP param RP verificar LB var_func statement RB end_func
    (81) funcion -> VOID ID . LP RP verificar2 LB var_func statement RB end_func

    LP              shift and go to state 52


state 37

    (92) declarar_func -> FUNC tipo . ID LP RP SEMICOL
    (94) declarar_func -> FUNC tipo . ID LP declarar_param RP SEMICOL

    ID              shift and go to state 53


state 38

    (93) declarar_func -> FUNC VOID . ID LP RP SEMICOL
    (95) declarar_func -> FUNC VOID . ID LP declarar_param RP SEMICOL

    ID              shift and go to state 54


state 39

    (3) programa1 -> varsG funciones main . funciones
    (8) funciones -> . funcion
    (9) funciones -> . funciones funcion
    (10) funciones -> . empty
    (80) funcion -> . VOID ID LP param RP verificar LB var_func statement RB end_func
    (81) funcion -> . VOID ID LP RP verificar2 LB var_func statement RB end_func
    (82) funcion -> . tipo ID LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (83) funcion -> . tipo ID LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (123) empty -> .
    (70) tipo -> . INT
    (71) tipo -> . FLOAT
    (72) tipo -> . CHAR

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    VOID            shift and go to state 25
    $end            reduce using rule 123 (empty -> .)
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

  ! VOID            [ reduce using rule 123 (empty -> .) ]
  ! INT             [ reduce using rule 123 (empty -> .) ]
  ! FLOAT           [ reduce using rule 123 (empty -> .) ]
  ! CHAR            [ reduce using rule 123 (empty -> .) ]

    funciones                      shift and go to state 55
    funcion                        shift and go to state 16
    empty                          shift and go to state 23
    tipo                           shift and go to state 26

state 40

    (4) programa1 -> varsG main funciones .
    (9) funciones -> funciones . funcion
    (80) funcion -> . VOID ID LP param RP verificar LB var_func statement RB end_func
    (81) funcion -> . VOID ID LP RP verificar2 LB var_func statement RB end_func
    (82) funcion -> . tipo ID LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (83) funcion -> . tipo ID LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (70) tipo -> . INT
    (71) tipo -> . FLOAT
    (72) tipo -> . CHAR

    $end            reduce using rule 4 (programa1 -> varsG main funciones .)
    VOID            shift and go to state 25
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    funcion                        shift and go to state 24
    tipo                           shift and go to state 26

state 41

    (48) varsG -> VAR tipo vars1G . varsG
    (48) varsG -> . VAR tipo vars1G varsG
    (49) varsG -> . VAR tipo vars2G varsG
    (50) varsG -> . VAR tipo vars3G varsG
    (51) varsG -> . VAR LB varsG RB
    (52) varsG -> . var_rowG
    (53) varsG -> . var_rowG varsG
    (54) varsG -> . var_matrixG
    (55) varsG -> . var_matrixG varsG
    (56) varsG -> . declarar_func varsG
    (57) varsG -> . declarar_func
    (58) varsG -> . empty
    (110) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (117) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (92) declarar_func -> . FUNC tipo ID LP RP SEMICOL
    (93) declarar_func -> . FUNC VOID ID LP RP SEMICOL
    (94) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (95) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL
    (123) empty -> .

    VAR             shift and go to state 9
    FUNC            shift and go to state 17
    VOID            reduce using rule 123 (empty -> .)
    INT             reduce using rule 123 (empty -> .)
    FLOAT           reduce using rule 123 (empty -> .)
    CHAR            reduce using rule 123 (empty -> .)
    $end            reduce using rule 123 (empty -> .)
    RB              reduce using rule 123 (empty -> .)

    varsG                          shift and go to state 56
    var_rowG                       shift and go to state 11
    var_matrixG                    shift and go to state 12
    declarar_func                  shift and go to state 13
    empty                          shift and go to state 32

state 42

    (49) varsG -> VAR tipo vars2G . varsG
    (48) varsG -> . VAR tipo vars1G varsG
    (49) varsG -> . VAR tipo vars2G varsG
    (50) varsG -> . VAR tipo vars3G varsG
    (51) varsG -> . VAR LB varsG RB
    (52) varsG -> . var_rowG
    (53) varsG -> . var_rowG varsG
    (54) varsG -> . var_matrixG
    (55) varsG -> . var_matrixG varsG
    (56) varsG -> . declarar_func varsG
    (57) varsG -> . declarar_func
    (58) varsG -> . empty
    (110) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (117) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (92) declarar_func -> . FUNC tipo ID LP RP SEMICOL
    (93) declarar_func -> . FUNC VOID ID LP RP SEMICOL
    (94) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (95) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL
    (123) empty -> .

    VAR             shift and go to state 9
    FUNC            shift and go to state 17
    VOID            reduce using rule 123 (empty -> .)
    INT             reduce using rule 123 (empty -> .)
    FLOAT           reduce using rule 123 (empty -> .)
    CHAR            reduce using rule 123 (empty -> .)
    $end            reduce using rule 123 (empty -> .)
    RB              reduce using rule 123 (empty -> .)

    varsG                          shift and go to state 57
    var_rowG                       shift and go to state 11
    var_matrixG                    shift and go to state 12
    declarar_func                  shift and go to state 13
    empty                          shift and go to state 32

state 43

    (50) varsG -> VAR tipo vars3G . varsG
    (48) varsG -> . VAR tipo vars1G varsG
    (49) varsG -> . VAR tipo vars2G varsG
    (50) varsG -> . VAR tipo vars3G varsG
    (51) varsG -> . VAR LB varsG RB
    (52) varsG -> . var_rowG
    (53) varsG -> . var_rowG varsG
    (54) varsG -> . var_matrixG
    (55) varsG -> . var_matrixG varsG
    (56) varsG -> . declarar_func varsG
    (57) varsG -> . declarar_func
    (58) varsG -> . empty
    (110) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (117) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (92) declarar_func -> . FUNC tipo ID LP RP SEMICOL
    (93) declarar_func -> . FUNC VOID ID LP RP SEMICOL
    (94) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (95) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL
    (123) empty -> .

    VAR             shift and go to state 9
    FUNC            shift and go to state 17
    VOID            reduce using rule 123 (empty -> .)
    INT             reduce using rule 123 (empty -> .)
    FLOAT           reduce using rule 123 (empty -> .)
    CHAR            reduce using rule 123 (empty -> .)
    $end            reduce using rule 123 (empty -> .)
    RB              reduce using rule 123 (empty -> .)

    varsG                          shift and go to state 58
    var_rowG                       shift and go to state 11
    var_matrixG                    shift and go to state 12
    declarar_func                  shift and go to state 13
    empty                          shift and go to state 32

state 44

    (110) var_rowG -> VAR tipo ID . row IS LP lista2 RP SEMICOL
    (117) var_matrixG -> VAR tipo ID . matrix IS matrix2 SEMICOL
    (59) vars1G -> ID . SEMICOL
    (64) vars2G -> ID . IS value SEMICOL
    (68) vars3G -> ID . SEMICOL
    (62) vars2_1G -> ID . IS value COMMA
    (67) vars3_1G -> ID . COMMA
    (115) row -> . LC CTE_I RC
    (122) matrix -> . row row

    SEMICOL         shift and go to state 61
    IS              shift and go to state 60
    COMMA           shift and go to state 63
    LC              shift and go to state 64

    row                            shift and go to state 59
    matrix                         shift and go to state 62

state 45

    (60) vars2G -> vars2_1G . ID IS value SEMICOL
    (61) vars2_1G -> vars2_1G . ID IS value COMMA

    ID              shift and go to state 65


state 46

    (65) vars3G -> vars3_1G . ID SEMICOL
    (66) vars3_1G -> vars3_1G . ID COMMA

    ID              shift and go to state 66


state 47

    (63) vars2_1G -> empty .
    (69) vars3_1G -> empty .

  ! reduce/reduce conflict for ID resolved using rule 63 (vars2_1G -> empty .)
    ID              reduce using rule 63 (vars2_1G -> empty .)

  ! ID              [ reduce using rule 69 (vars3_1G -> empty .) ]


state 48

    (51) varsG -> VAR LB varsG . RB

    RB              shift and go to state 67


state 49

    (11) main -> tipo MAIN LP . RP LB statement func_return_main RB end_main

    RP              shift and go to state 68


state 50

    (82) funcion -> tipo ID LP . RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (83) funcion -> tipo ID LP . param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (89) param -> . tipo ID
    (90) param -> . param COMMA tipo ID
    (91) param -> . empty
    (70) tipo -> . INT
    (71) tipo -> . FLOAT
    (72) tipo -> . CHAR
    (123) empty -> .

  ! shift/reduce conflict for RP resolved as shift
    RP              shift and go to state 70
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20
    COMMA           reduce using rule 123 (empty -> .)

  ! RP              [ reduce using rule 123 (empty -> .) ]

    tipo                           shift and go to state 69
    param                          shift and go to state 71
    empty                          shift and go to state 72

state 51

    (12) main -> VOID MAIN LP . RP LB statement RB

    RP              shift and go to state 73


state 52

    (80) funcion -> VOID ID LP . param RP verificar LB var_func statement RB end_func
    (81) funcion -> VOID ID LP . RP verificar2 LB var_func statement RB end_func
    (89) param -> . tipo ID
    (90) param -> . param COMMA tipo ID
    (91) param -> . empty
    (70) tipo -> . INT
    (71) tipo -> . FLOAT
    (72) tipo -> . CHAR
    (123) empty -> .

  ! shift/reduce conflict for RP resolved as shift
    RP              shift and go to state 75
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20
    COMMA           reduce using rule 123 (empty -> .)

  ! RP              [ reduce using rule 123 (empty -> .) ]

    param                          shift and go to state 74
    tipo                           shift and go to state 69
    empty                          shift and go to state 72

state 53

    (92) declarar_func -> FUNC tipo ID . LP RP SEMICOL
    (94) declarar_func -> FUNC tipo ID . LP declarar_param RP SEMICOL

    LP              shift and go to state 76


state 54

    (93) declarar_func -> FUNC VOID ID . LP RP SEMICOL
    (95) declarar_func -> FUNC VOID ID . LP declarar_param RP SEMICOL

    LP              shift and go to state 77


state 55

    (3) programa1 -> varsG funciones main funciones .
    (9) funciones -> funciones . funcion
    (80) funcion -> . VOID ID LP param RP verificar LB var_func statement RB end_func
    (81) funcion -> . VOID ID LP RP verificar2 LB var_func statement RB end_func
    (82) funcion -> . tipo ID LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (83) funcion -> . tipo ID LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (70) tipo -> . INT
    (71) tipo -> . FLOAT
    (72) tipo -> . CHAR

    $end            reduce using rule 3 (programa1 -> varsG funciones main funciones .)
    VOID            shift and go to state 25
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    funcion                        shift and go to state 24
    tipo                           shift and go to state 26

state 56

    (48) varsG -> VAR tipo vars1G varsG .

    VOID            reduce using rule 48 (varsG -> VAR tipo vars1G varsG .)
    INT             reduce using rule 48 (varsG -> VAR tipo vars1G varsG .)
    FLOAT           reduce using rule 48 (varsG -> VAR tipo vars1G varsG .)
    CHAR            reduce using rule 48 (varsG -> VAR tipo vars1G varsG .)
    $end            reduce using rule 48 (varsG -> VAR tipo vars1G varsG .)
    RB              reduce using rule 48 (varsG -> VAR tipo vars1G varsG .)


state 57

    (49) varsG -> VAR tipo vars2G varsG .

    VOID            reduce using rule 49 (varsG -> VAR tipo vars2G varsG .)
    INT             reduce using rule 49 (varsG -> VAR tipo vars2G varsG .)
    FLOAT           reduce using rule 49 (varsG -> VAR tipo vars2G varsG .)
    CHAR            reduce using rule 49 (varsG -> VAR tipo vars2G varsG .)
    $end            reduce using rule 49 (varsG -> VAR tipo vars2G varsG .)
    RB              reduce using rule 49 (varsG -> VAR tipo vars2G varsG .)


state 58

    (50) varsG -> VAR tipo vars3G varsG .

    VOID            reduce using rule 50 (varsG -> VAR tipo vars3G varsG .)
    INT             reduce using rule 50 (varsG -> VAR tipo vars3G varsG .)
    FLOAT           reduce using rule 50 (varsG -> VAR tipo vars3G varsG .)
    CHAR            reduce using rule 50 (varsG -> VAR tipo vars3G varsG .)
    $end            reduce using rule 50 (varsG -> VAR tipo vars3G varsG .)
    RB              reduce using rule 50 (varsG -> VAR tipo vars3G varsG .)


state 59

    (110) var_rowG -> VAR tipo ID row . IS LP lista2 RP SEMICOL
    (122) matrix -> row . row
    (115) row -> . LC CTE_I RC

    IS              shift and go to state 79
    LC              shift and go to state 64

    row                            shift and go to state 78

state 60

    (64) vars2G -> ID IS . value SEMICOL
    (62) vars2_1G -> ID IS . value COMMA
    (73) value -> . CTE_F
    (74) value -> . CTE_I
    (75) value -> . ID
    (76) value -> . CTE_C
    (77) value -> . COMILLA ID COMILLA
    (78) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 82
    CTE_I           shift and go to state 83
    ID              shift and go to state 80
    CTE_C           shift and go to state 84
    COMILLA         shift and go to state 85
    COMILLAS        shift and go to state 86

    value                          shift and go to state 81

state 61

    (59) vars1G -> ID SEMICOL .
    (68) vars3G -> ID SEMICOL .

  ! reduce/reduce conflict for VAR resolved using rule 59 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for FUNC resolved using rule 59 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for VOID resolved using rule 59 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for INT resolved using rule 59 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for FLOAT resolved using rule 59 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for CHAR resolved using rule 59 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for $end resolved using rule 59 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for RB resolved using rule 59 (vars1G -> ID SEMICOL .)
    VAR             reduce using rule 59 (vars1G -> ID SEMICOL .)
    FUNC            reduce using rule 59 (vars1G -> ID SEMICOL .)
    VOID            reduce using rule 59 (vars1G -> ID SEMICOL .)
    INT             reduce using rule 59 (vars1G -> ID SEMICOL .)
    FLOAT           reduce using rule 59 (vars1G -> ID SEMICOL .)
    CHAR            reduce using rule 59 (vars1G -> ID SEMICOL .)
    $end            reduce using rule 59 (vars1G -> ID SEMICOL .)
    RB              reduce using rule 59 (vars1G -> ID SEMICOL .)

  ! VAR             [ reduce using rule 68 (vars3G -> ID SEMICOL .) ]
  ! FUNC            [ reduce using rule 68 (vars3G -> ID SEMICOL .) ]
  ! VOID            [ reduce using rule 68 (vars3G -> ID SEMICOL .) ]
  ! INT             [ reduce using rule 68 (vars3G -> ID SEMICOL .) ]
  ! FLOAT           [ reduce using rule 68 (vars3G -> ID SEMICOL .) ]
  ! CHAR            [ reduce using rule 68 (vars3G -> ID SEMICOL .) ]
  ! $end            [ reduce using rule 68 (vars3G -> ID SEMICOL .) ]
  ! RB              [ reduce using rule 68 (vars3G -> ID SEMICOL .) ]


state 62

    (117) var_matrixG -> VAR tipo ID matrix . IS matrix2 SEMICOL

    IS              shift and go to state 87


state 63

    (67) vars3_1G -> ID COMMA .

    ID              reduce using rule 67 (vars3_1G -> ID COMMA .)


state 64

    (115) row -> LC . CTE_I RC

    CTE_I           shift and go to state 88


state 65

    (60) vars2G -> vars2_1G ID . IS value SEMICOL
    (61) vars2_1G -> vars2_1G ID . IS value COMMA

    IS              shift and go to state 89


state 66

    (65) vars3G -> vars3_1G ID . SEMICOL
    (66) vars3_1G -> vars3_1G ID . COMMA

    SEMICOL         shift and go to state 90
    COMMA           shift and go to state 91


state 67

    (51) varsG -> VAR LB varsG RB .

    VOID            reduce using rule 51 (varsG -> VAR LB varsG RB .)
    INT             reduce using rule 51 (varsG -> VAR LB varsG RB .)
    FLOAT           reduce using rule 51 (varsG -> VAR LB varsG RB .)
    CHAR            reduce using rule 51 (varsG -> VAR LB varsG RB .)
    $end            reduce using rule 51 (varsG -> VAR LB varsG RB .)
    RB              reduce using rule 51 (varsG -> VAR LB varsG RB .)


state 68

    (11) main -> tipo MAIN LP RP . LB statement func_return_main RB end_main

    LB              shift and go to state 92


state 69

    (89) param -> tipo . ID

    ID              shift and go to state 93


state 70

    (82) funcion -> tipo ID LP RP . verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (85) verificar2 -> .

    LB              reduce using rule 85 (verificar2 -> .)

    verificar2                     shift and go to state 94

state 71

    (83) funcion -> tipo ID LP param . RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (90) param -> param . COMMA tipo ID

    RP              shift and go to state 95
    COMMA           shift and go to state 96


state 72

    (91) param -> empty .

    RP              reduce using rule 91 (param -> empty .)
    COMMA           reduce using rule 91 (param -> empty .)


state 73

    (12) main -> VOID MAIN LP RP . LB statement RB

    LB              shift and go to state 97


state 74

    (80) funcion -> VOID ID LP param . RP verificar LB var_func statement RB end_func
    (90) param -> param . COMMA tipo ID

    RP              shift and go to state 98
    COMMA           shift and go to state 96


state 75

    (81) funcion -> VOID ID LP RP . verificar2 LB var_func statement RB end_func
    (85) verificar2 -> .

    LB              reduce using rule 85 (verificar2 -> .)

    verificar2                     shift and go to state 99

state 76

    (92) declarar_func -> FUNC tipo ID LP . RP SEMICOL
    (94) declarar_func -> FUNC tipo ID LP . declarar_param RP SEMICOL
    (96) declarar_param -> . tipo COMMA declarar_param
    (97) declarar_param -> . tipo declarar_param
    (98) declarar_param -> . empty
    (70) tipo -> . INT
    (71) tipo -> . FLOAT
    (72) tipo -> . CHAR
    (123) empty -> .

  ! shift/reduce conflict for RP resolved as shift
    RP              shift and go to state 101
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

  ! RP              [ reduce using rule 123 (empty -> .) ]

    tipo                           shift and go to state 100
    declarar_param                 shift and go to state 102
    empty                          shift and go to state 103

state 77

    (93) declarar_func -> FUNC VOID ID LP . RP SEMICOL
    (95) declarar_func -> FUNC VOID ID LP . declarar_param RP SEMICOL
    (96) declarar_param -> . tipo COMMA declarar_param
    (97) declarar_param -> . tipo declarar_param
    (98) declarar_param -> . empty
    (70) tipo -> . INT
    (71) tipo -> . FLOAT
    (72) tipo -> . CHAR
    (123) empty -> .

  ! shift/reduce conflict for RP resolved as shift
    RP              shift and go to state 104
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

  ! RP              [ reduce using rule 123 (empty -> .) ]

    declarar_param                 shift and go to state 105
    tipo                           shift and go to state 100
    empty                          shift and go to state 103

state 78

    (122) matrix -> row row .

    IS              reduce using rule 122 (matrix -> row row .)
    SEMICOL         reduce using rule 122 (matrix -> row row .)


state 79

    (110) var_rowG -> VAR tipo ID row IS . LP lista2 RP SEMICOL

    LP              shift and go to state 106


state 80

    (75) value -> ID .

    SEMICOL         reduce using rule 75 (value -> ID .)
    COMMA           reduce using rule 75 (value -> ID .)
    RP              reduce using rule 75 (value -> ID .)


state 81

    (64) vars2G -> ID IS value . SEMICOL
    (62) vars2_1G -> ID IS value . COMMA

    SEMICOL         shift and go to state 107
    COMMA           shift and go to state 108


state 82

    (73) value -> CTE_F .

    SEMICOL         reduce using rule 73 (value -> CTE_F .)
    COMMA           reduce using rule 73 (value -> CTE_F .)
    RP              reduce using rule 73 (value -> CTE_F .)


state 83

    (74) value -> CTE_I .

    SEMICOL         reduce using rule 74 (value -> CTE_I .)
    COMMA           reduce using rule 74 (value -> CTE_I .)
    RP              reduce using rule 74 (value -> CTE_I .)


state 84

    (76) value -> CTE_C .

    SEMICOL         reduce using rule 76 (value -> CTE_C .)
    COMMA           reduce using rule 76 (value -> CTE_C .)
    RP              reduce using rule 76 (value -> CTE_C .)


state 85

    (77) value -> COMILLA . ID COMILLA

    ID              shift and go to state 109


state 86

    (78) value -> COMILLAS . ID COMILLAS

    ID              shift and go to state 110


state 87

    (117) var_matrixG -> VAR tipo ID matrix IS . matrix2 SEMICOL
    (118) matrix2 -> . LP lista2 RP COMMA matrix2
    (119) matrix2 -> . LP lista2 RP COMMA LP lista2 RP

    LP              shift and go to state 112

    matrix2                        shift and go to state 111

state 88

    (115) row -> LC CTE_I . RC

    RC              shift and go to state 113


state 89

    (60) vars2G -> vars2_1G ID IS . value SEMICOL
    (61) vars2_1G -> vars2_1G ID IS . value COMMA
    (73) value -> . CTE_F
    (74) value -> . CTE_I
    (75) value -> . ID
    (76) value -> . CTE_C
    (77) value -> . COMILLA ID COMILLA
    (78) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 82
    CTE_I           shift and go to state 83
    ID              shift and go to state 80
    CTE_C           shift and go to state 84
    COMILLA         shift and go to state 85
    COMILLAS        shift and go to state 86

    value                          shift and go to state 114

state 90

    (65) vars3G -> vars3_1G ID SEMICOL .

    VAR             reduce using rule 65 (vars3G -> vars3_1G ID SEMICOL .)
    FUNC            reduce using rule 65 (vars3G -> vars3_1G ID SEMICOL .)
    VOID            reduce using rule 65 (vars3G -> vars3_1G ID SEMICOL .)
    INT             reduce using rule 65 (vars3G -> vars3_1G ID SEMICOL .)
    FLOAT           reduce using rule 65 (vars3G -> vars3_1G ID SEMICOL .)
    CHAR            reduce using rule 65 (vars3G -> vars3_1G ID SEMICOL .)
    $end            reduce using rule 65 (vars3G -> vars3_1G ID SEMICOL .)
    RB              reduce using rule 65 (vars3G -> vars3_1G ID SEMICOL .)


state 91

    (66) vars3_1G -> vars3_1G ID COMMA .

    ID              reduce using rule 66 (vars3_1G -> vars3_1G ID COMMA .)


state 92

    (11) main -> tipo MAIN LP RP LB . statement func_return_main RB end_main
    (13) statement -> . asignacion SEMICOL statement
    (14) statement -> . if statement
    (15) statement -> . vars statement
    (16) statement -> . while statement
    (17) statement -> . for statement
    (18) statement -> . escritura statement
    (19) statement -> . escritura_var statement
    (20) statement -> . lectura statement
    (21) statement -> . func_call statement
    (22) statement -> . ID row SEMICOL
    (23) statement -> . ID matrix SEMICOL
    (24) statement -> . empty
    (25) asignacion -> . ID IS value
    (124) if -> . IF LP expression RP check_bool gotof LB statement RB
    (125) if -> . IF LP expression RP check_bool gotof LB statement RB goto elseif
    (126) if -> . IF LP expression RP check_bool gotof LB statement RB goto else
    (26) vars -> . VAR tipo vars1
    (27) vars -> . VAR tipo vars2
    (28) vars -> . VAR tipo vars3
    (29) vars -> . VAR tipo oper_aritmetica
    (30) vars -> . VAR tipo ID row SEMICOL
    (31) vars -> . VAR tipo ID matrix SEMICOL
    (32) vars -> . var_row
    (33) vars -> . var_row vars
    (34) vars -> . var_matrix
    (35) vars -> . var_matrix vars
    (36) vars -> . empty
    (134) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (135) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (144) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (145) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (146) escritura_var -> . PRINT LP any_var RP SEMICOL
    (151) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (152) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (100) func_call -> . ID LP RP SEMICOL
    (101) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (123) empty -> .
    (109) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (116) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 125
    IF              shift and go to state 127
    VAR             shift and go to state 128
    WHILE           shift and go to state 131
    FOR             shift and go to state 132
    PRINT           shift and go to state 133
    READ            shift and go to state 134
    RETURN          reduce using rule 123 (empty -> .)

  ! ID              [ reduce using rule 123 (empty -> .) ]
  ! IF              [ reduce using rule 123 (empty -> .) ]
  ! VAR             [ reduce using rule 123 (empty -> .) ]
  ! WHILE           [ reduce using rule 123 (empty -> .) ]
  ! FOR             [ reduce using rule 123 (empty -> .) ]
  ! PRINT           [ reduce using rule 123 (empty -> .) ]
  ! READ            [ reduce using rule 123 (empty -> .) ]

    statement                      shift and go to state 115
    asignacion                     shift and go to state 116
    if                             shift and go to state 117
    vars                           shift and go to state 118
    while                          shift and go to state 119
    for                            shift and go to state 120
    escritura                      shift and go to state 121
    escritura_var                  shift and go to state 122
    lectura                        shift and go to state 123
    func_call                      shift and go to state 124
    empty                          shift and go to state 126
    var_row                        shift and go to state 129
    var_matrix                     shift and go to state 130

state 93

    (89) param -> tipo ID .

    RP              reduce using rule 89 (param -> tipo ID .)
    COMMA           reduce using rule 89 (param -> tipo ID .)


state 94

    (82) funcion -> tipo ID LP RP verificar2 . LB var_func statement add_func_dir2 func_return RB end_func

    LB              shift and go to state 135


state 95

    (83) funcion -> tipo ID LP param RP . verificar LB var_func statement add_func_dir func_return_param RB end_func
    (84) verificar -> .

    LB              reduce using rule 84 (verificar -> .)

    verificar                      shift and go to state 136

state 96

    (90) param -> param COMMA . tipo ID
    (70) tipo -> . INT
    (71) tipo -> . FLOAT
    (72) tipo -> . CHAR

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    tipo                           shift and go to state 137

state 97

    (12) main -> VOID MAIN LP RP LB . statement RB
    (13) statement -> . asignacion SEMICOL statement
    (14) statement -> . if statement
    (15) statement -> . vars statement
    (16) statement -> . while statement
    (17) statement -> . for statement
    (18) statement -> . escritura statement
    (19) statement -> . escritura_var statement
    (20) statement -> . lectura statement
    (21) statement -> . func_call statement
    (22) statement -> . ID row SEMICOL
    (23) statement -> . ID matrix SEMICOL
    (24) statement -> . empty
    (25) asignacion -> . ID IS value
    (124) if -> . IF LP expression RP check_bool gotof LB statement RB
    (125) if -> . IF LP expression RP check_bool gotof LB statement RB goto elseif
    (126) if -> . IF LP expression RP check_bool gotof LB statement RB goto else
    (26) vars -> . VAR tipo vars1
    (27) vars -> . VAR tipo vars2
    (28) vars -> . VAR tipo vars3
    (29) vars -> . VAR tipo oper_aritmetica
    (30) vars -> . VAR tipo ID row SEMICOL
    (31) vars -> . VAR tipo ID matrix SEMICOL
    (32) vars -> . var_row
    (33) vars -> . var_row vars
    (34) vars -> . var_matrix
    (35) vars -> . var_matrix vars
    (36) vars -> . empty
    (134) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (135) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (144) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (145) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (146) escritura_var -> . PRINT LP any_var RP SEMICOL
    (151) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (152) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (100) func_call -> . ID LP RP SEMICOL
    (101) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (123) empty -> .
    (109) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (116) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 125
    IF              shift and go to state 127
    VAR             shift and go to state 128
    WHILE           shift and go to state 131
    FOR             shift and go to state 132
    PRINT           shift and go to state 133
    READ            shift and go to state 134
    RB              reduce using rule 123 (empty -> .)

  ! ID              [ reduce using rule 123 (empty -> .) ]
  ! IF              [ reduce using rule 123 (empty -> .) ]
  ! VAR             [ reduce using rule 123 (empty -> .) ]
  ! WHILE           [ reduce using rule 123 (empty -> .) ]
  ! FOR             [ reduce using rule 123 (empty -> .) ]
  ! PRINT           [ reduce using rule 123 (empty -> .) ]
  ! READ            [ reduce using rule 123 (empty -> .) ]

    statement                      shift and go to state 138
    asignacion                     shift and go to state 116
    if                             shift and go to state 117
    vars                           shift and go to state 118
    while                          shift and go to state 119
    for                            shift and go to state 120
    escritura                      shift and go to state 121
    escritura_var                  shift and go to state 122
    lectura                        shift and go to state 123
    func_call                      shift and go to state 124
    empty                          shift and go to state 126
    var_row                        shift and go to state 129
    var_matrix                     shift and go to state 130

state 98

    (80) funcion -> VOID ID LP param RP . verificar LB var_func statement RB end_func
    (84) verificar -> .

    LB              reduce using rule 84 (verificar -> .)

    verificar                      shift and go to state 139

state 99

    (81) funcion -> VOID ID LP RP verificar2 . LB var_func statement RB end_func

    LB              shift and go to state 140


state 100

    (96) declarar_param -> tipo . COMMA declarar_param
    (97) declarar_param -> tipo . declarar_param
    (96) declarar_param -> . tipo COMMA declarar_param
    (97) declarar_param -> . tipo declarar_param
    (98) declarar_param -> . empty
    (70) tipo -> . INT
    (71) tipo -> . FLOAT
    (72) tipo -> . CHAR
    (123) empty -> .

    COMMA           shift and go to state 141
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20
    RP              reduce using rule 123 (empty -> .)

    tipo                           shift and go to state 100
    declarar_param                 shift and go to state 142
    empty                          shift and go to state 103

state 101

    (92) declarar_func -> FUNC tipo ID LP RP . SEMICOL

    SEMICOL         shift and go to state 143


state 102

    (94) declarar_func -> FUNC tipo ID LP declarar_param . RP SEMICOL

    RP              shift and go to state 144


state 103

    (98) declarar_param -> empty .

    RP              reduce using rule 98 (declarar_param -> empty .)


state 104

    (93) declarar_func -> FUNC VOID ID LP RP . SEMICOL

    SEMICOL         shift and go to state 145


state 105

    (95) declarar_func -> FUNC VOID ID LP declarar_param . RP SEMICOL

    RP              shift and go to state 146


state 106

    (110) var_rowG -> VAR tipo ID row IS LP . lista2 RP SEMICOL
    (113) lista2 -> . elem_lista COMMA lista2
    (114) lista2 -> . elem_lista COMMA elem_lista
    (111) elem_lista -> . value
    (112) elem_lista -> . empty
    (73) value -> . CTE_F
    (74) value -> . CTE_I
    (75) value -> . ID
    (76) value -> . CTE_C
    (77) value -> . COMILLA ID COMILLA
    (78) value -> . COMILLAS ID COMILLAS
    (123) empty -> .

    CTE_F           shift and go to state 82
    CTE_I           shift and go to state 83
    ID              shift and go to state 80
    CTE_C           shift and go to state 84
    COMILLA         shift and go to state 85
    COMILLAS        shift and go to state 86
    COMMA           reduce using rule 123 (empty -> .)

    lista2                         shift and go to state 147
    elem_lista                     shift and go to state 148
    value                          shift and go to state 149
    empty                          shift and go to state 150

state 107

    (64) vars2G -> ID IS value SEMICOL .

    VAR             reduce using rule 64 (vars2G -> ID IS value SEMICOL .)
    FUNC            reduce using rule 64 (vars2G -> ID IS value SEMICOL .)
    VOID            reduce using rule 64 (vars2G -> ID IS value SEMICOL .)
    INT             reduce using rule 64 (vars2G -> ID IS value SEMICOL .)
    FLOAT           reduce using rule 64 (vars2G -> ID IS value SEMICOL .)
    CHAR            reduce using rule 64 (vars2G -> ID IS value SEMICOL .)
    $end            reduce using rule 64 (vars2G -> ID IS value SEMICOL .)
    RB              reduce using rule 64 (vars2G -> ID IS value SEMICOL .)


state 108

    (62) vars2_1G -> ID IS value COMMA .

    ID              reduce using rule 62 (vars2_1G -> ID IS value COMMA .)


state 109

    (77) value -> COMILLA ID . COMILLA

    COMILLA         shift and go to state 151


state 110

    (78) value -> COMILLAS ID . COMILLAS

    COMILLAS        shift and go to state 152


state 111

    (117) var_matrixG -> VAR tipo ID matrix IS matrix2 . SEMICOL

    SEMICOL         shift and go to state 153


state 112

    (118) matrix2 -> LP . lista2 RP COMMA matrix2
    (119) matrix2 -> LP . lista2 RP COMMA LP lista2 RP
    (113) lista2 -> . elem_lista COMMA lista2
    (114) lista2 -> . elem_lista COMMA elem_lista
    (111) elem_lista -> . value
    (112) elem_lista -> . empty
    (73) value -> . CTE_F
    (74) value -> . CTE_I
    (75) value -> . ID
    (76) value -> . CTE_C
    (77) value -> . COMILLA ID COMILLA
    (78) value -> . COMILLAS ID COMILLAS
    (123) empty -> .

    CTE_F           shift and go to state 82
    CTE_I           shift and go to state 83
    ID              shift and go to state 80
    CTE_C           shift and go to state 84
    COMILLA         shift and go to state 85
    COMILLAS        shift and go to state 86
    COMMA           reduce using rule 123 (empty -> .)

    lista2                         shift and go to state 154
    elem_lista                     shift and go to state 148
    value                          shift and go to state 149
    empty                          shift and go to state 150

state 113

    (115) row -> LC CTE_I RC .

    IS              reduce using rule 115 (row -> LC CTE_I RC .)
    LC              reduce using rule 115 (row -> LC CTE_I RC .)
    SEMICOL         reduce using rule 115 (row -> LC CTE_I RC .)


state 114

    (60) vars2G -> vars2_1G ID IS value . SEMICOL
    (61) vars2_1G -> vars2_1G ID IS value . COMMA

    SEMICOL         shift and go to state 155
    COMMA           shift and go to state 156


state 115

    (11) main -> tipo MAIN LP RP LB statement . func_return_main RB end_main
    (107) func_return_main -> . RETURN expr SEMICOL

    RETURN          shift and go to state 158

    func_return_main               shift and go to state 157

state 116

    (13) statement -> asignacion . SEMICOL statement

    SEMICOL         shift and go to state 159


state 117

    (14) statement -> if . statement
    (13) statement -> . asignacion SEMICOL statement
    (14) statement -> . if statement
    (15) statement -> . vars statement
    (16) statement -> . while statement
    (17) statement -> . for statement
    (18) statement -> . escritura statement
    (19) statement -> . escritura_var statement
    (20) statement -> . lectura statement
    (21) statement -> . func_call statement
    (22) statement -> . ID row SEMICOL
    (23) statement -> . ID matrix SEMICOL
    (24) statement -> . empty
    (25) asignacion -> . ID IS value
    (124) if -> . IF LP expression RP check_bool gotof LB statement RB
    (125) if -> . IF LP expression RP check_bool gotof LB statement RB goto elseif
    (126) if -> . IF LP expression RP check_bool gotof LB statement RB goto else
    (26) vars -> . VAR tipo vars1
    (27) vars -> . VAR tipo vars2
    (28) vars -> . VAR tipo vars3
    (29) vars -> . VAR tipo oper_aritmetica
    (30) vars -> . VAR tipo ID row SEMICOL
    (31) vars -> . VAR tipo ID matrix SEMICOL
    (32) vars -> . var_row
    (33) vars -> . var_row vars
    (34) vars -> . var_matrix
    (35) vars -> . var_matrix vars
    (36) vars -> . empty
    (134) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (135) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (144) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (145) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (146) escritura_var -> . PRINT LP any_var RP SEMICOL
    (151) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (152) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (100) func_call -> . ID LP RP SEMICOL
    (101) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (123) empty -> .
    (109) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (116) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 125
    IF              shift and go to state 127
    VAR             shift and go to state 128
    WHILE           shift and go to state 131
    FOR             shift and go to state 132
    PRINT           shift and go to state 133
    READ            shift and go to state 134
    RETURN          reduce using rule 123 (empty -> .)
    RB              reduce using rule 123 (empty -> .)

  ! ID              [ reduce using rule 123 (empty -> .) ]
  ! IF              [ reduce using rule 123 (empty -> .) ]
  ! VAR             [ reduce using rule 123 (empty -> .) ]
  ! WHILE           [ reduce using rule 123 (empty -> .) ]
  ! FOR             [ reduce using rule 123 (empty -> .) ]
  ! PRINT           [ reduce using rule 123 (empty -> .) ]
  ! READ            [ reduce using rule 123 (empty -> .) ]

    if                             shift and go to state 117
    statement                      shift and go to state 160
    asignacion                     shift and go to state 116
    vars                           shift and go to state 118
    while                          shift and go to state 119
    for                            shift and go to state 120
    escritura                      shift and go to state 121
    escritura_var                  shift and go to state 122
    lectura                        shift and go to state 123
    func_call                      shift and go to state 124
    empty                          shift and go to state 126
    var_row                        shift and go to state 129
    var_matrix                     shift and go to state 130

state 118

    (15) statement -> vars . statement
    (13) statement -> . asignacion SEMICOL statement
    (14) statement -> . if statement
    (15) statement -> . vars statement
    (16) statement -> . while statement
    (17) statement -> . for statement
    (18) statement -> . escritura statement
    (19) statement -> . escritura_var statement
    (20) statement -> . lectura statement
    (21) statement -> . func_call statement
    (22) statement -> . ID row SEMICOL
    (23) statement -> . ID matrix SEMICOL
    (24) statement -> . empty
    (25) asignacion -> . ID IS value
    (124) if -> . IF LP expression RP check_bool gotof LB statement RB
    (125) if -> . IF LP expression RP check_bool gotof LB statement RB goto elseif
    (126) if -> . IF LP expression RP check_bool gotof LB statement RB goto else
    (26) vars -> . VAR tipo vars1
    (27) vars -> . VAR tipo vars2
    (28) vars -> . VAR tipo vars3
    (29) vars -> . VAR tipo oper_aritmetica
    (30) vars -> . VAR tipo ID row SEMICOL
    (31) vars -> . VAR tipo ID matrix SEMICOL
    (32) vars -> . var_row
    (33) vars -> . var_row vars
    (34) vars -> . var_matrix
    (35) vars -> . var_matrix vars
    (36) vars -> . empty
    (134) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (135) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (144) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (145) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (146) escritura_var -> . PRINT LP any_var RP SEMICOL
    (151) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (152) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (100) func_call -> . ID LP RP SEMICOL
    (101) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (123) empty -> .
    (109) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (116) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 125
    IF              shift and go to state 127
    VAR             shift and go to state 128
    WHILE           shift and go to state 131
    FOR             shift and go to state 132
    PRINT           shift and go to state 133
    READ            shift and go to state 134
    RETURN          reduce using rule 123 (empty -> .)
    RB              reduce using rule 123 (empty -> .)

  ! ID              [ reduce using rule 123 (empty -> .) ]
  ! IF              [ reduce using rule 123 (empty -> .) ]
  ! VAR             [ reduce using rule 123 (empty -> .) ]
  ! WHILE           [ reduce using rule 123 (empty -> .) ]
  ! FOR             [ reduce using rule 123 (empty -> .) ]
  ! PRINT           [ reduce using rule 123 (empty -> .) ]
  ! READ            [ reduce using rule 123 (empty -> .) ]

    vars                           shift and go to state 118
    statement                      shift and go to state 161
    asignacion                     shift and go to state 116
    if                             shift and go to state 117
    while                          shift and go to state 119
    for                            shift and go to state 120
    escritura                      shift and go to state 121
    escritura_var                  shift and go to state 122
    lectura                        shift and go to state 123
    func_call                      shift and go to state 124
    empty                          shift and go to state 126
    var_row                        shift and go to state 129
    var_matrix                     shift and go to state 130

state 119

    (16) statement -> while . statement
    (13) statement -> . asignacion SEMICOL statement
    (14) statement -> . if statement
    (15) statement -> . vars statement
    (16) statement -> . while statement
    (17) statement -> . for statement
    (18) statement -> . escritura statement
    (19) statement -> . escritura_var statement
    (20) statement -> . lectura statement
    (21) statement -> . func_call statement
    (22) statement -> . ID row SEMICOL
    (23) statement -> . ID matrix SEMICOL
    (24) statement -> . empty
    (25) asignacion -> . ID IS value
    (124) if -> . IF LP expression RP check_bool gotof LB statement RB
    (125) if -> . IF LP expression RP check_bool gotof LB statement RB goto elseif
    (126) if -> . IF LP expression RP check_bool gotof LB statement RB goto else
    (26) vars -> . VAR tipo vars1
    (27) vars -> . VAR tipo vars2
    (28) vars -> . VAR tipo vars3
    (29) vars -> . VAR tipo oper_aritmetica
    (30) vars -> . VAR tipo ID row SEMICOL
    (31) vars -> . VAR tipo ID matrix SEMICOL
    (32) vars -> . var_row
    (33) vars -> . var_row vars
    (34) vars -> . var_matrix
    (35) vars -> . var_matrix vars
    (36) vars -> . empty
    (134) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (135) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (144) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (145) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (146) escritura_var -> . PRINT LP any_var RP SEMICOL
    (151) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (152) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (100) func_call -> . ID LP RP SEMICOL
    (101) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (123) empty -> .
    (109) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (116) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 125
    IF              shift and go to state 127
    VAR             shift and go to state 128
    WHILE           shift and go to state 131
    FOR             shift and go to state 132
    PRINT           shift and go to state 133
    READ            shift and go to state 134
    RETURN          reduce using rule 123 (empty -> .)
    RB              reduce using rule 123 (empty -> .)

  ! ID              [ reduce using rule 123 (empty -> .) ]
  ! IF              [ reduce using rule 123 (empty -> .) ]
  ! VAR             [ reduce using rule 123 (empty -> .) ]
  ! WHILE           [ reduce using rule 123 (empty -> .) ]
  ! FOR             [ reduce using rule 123 (empty -> .) ]
  ! PRINT           [ reduce using rule 123 (empty -> .) ]
  ! READ            [ reduce using rule 123 (empty -> .) ]

    while                          shift and go to state 119
    statement                      shift and go to state 162
    asignacion                     shift and go to state 116
    if                             shift and go to state 117
    vars                           shift and go to state 118
    for                            shift and go to state 120
    escritura                      shift and go to state 121
    escritura_var                  shift and go to state 122
    lectura                        shift and go to state 123
    func_call                      shift and go to state 124
    empty                          shift and go to state 126
    var_row                        shift and go to state 129
    var_matrix                     shift and go to state 130

state 120

    (17) statement -> for . statement
    (13) statement -> . asignacion SEMICOL statement
    (14) statement -> . if statement
    (15) statement -> . vars statement
    (16) statement -> . while statement
    (17) statement -> . for statement
    (18) statement -> . escritura statement
    (19) statement -> . escritura_var statement
    (20) statement -> . lectura statement
    (21) statement -> . func_call statement
    (22) statement -> . ID row SEMICOL
    (23) statement -> . ID matrix SEMICOL
    (24) statement -> . empty
    (25) asignacion -> . ID IS value
    (124) if -> . IF LP expression RP check_bool gotof LB statement RB
    (125) if -> . IF LP expression RP check_bool gotof LB statement RB goto elseif
    (126) if -> . IF LP expression RP check_bool gotof LB statement RB goto else
    (26) vars -> . VAR tipo vars1
    (27) vars -> . VAR tipo vars2
    (28) vars -> . VAR tipo vars3
    (29) vars -> . VAR tipo oper_aritmetica
    (30) vars -> . VAR tipo ID row SEMICOL
    (31) vars -> . VAR tipo ID matrix SEMICOL
    (32) vars -> . var_row
    (33) vars -> . var_row vars
    (34) vars -> . var_matrix
    (35) vars -> . var_matrix vars
    (36) vars -> . empty
    (134) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (135) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (144) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (145) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (146) escritura_var -> . PRINT LP any_var RP SEMICOL
    (151) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (152) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (100) func_call -> . ID LP RP SEMICOL
    (101) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (123) empty -> .
    (109) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (116) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 125
    IF              shift and go to state 127
    VAR             shift and go to state 128
    WHILE           shift and go to state 131
    FOR             shift and go to state 132
    PRINT           shift and go to state 133
    READ            shift and go to state 134
    RETURN          reduce using rule 123 (empty -> .)
    RB              reduce using rule 123 (empty -> .)

  ! ID              [ reduce using rule 123 (empty -> .) ]
  ! IF              [ reduce using rule 123 (empty -> .) ]
  ! VAR             [ reduce using rule 123 (empty -> .) ]
  ! WHILE           [ reduce using rule 123 (empty -> .) ]
  ! FOR             [ reduce using rule 123 (empty -> .) ]
  ! PRINT           [ reduce using rule 123 (empty -> .) ]
  ! READ            [ reduce using rule 123 (empty -> .) ]

    for                            shift and go to state 120
    statement                      shift and go to state 163
    asignacion                     shift and go to state 116
    if                             shift and go to state 117
    vars                           shift and go to state 118
    while                          shift and go to state 119
    escritura                      shift and go to state 121
    escritura_var                  shift and go to state 122
    lectura                        shift and go to state 123
    func_call                      shift and go to state 124
    empty                          shift and go to state 126
    var_row                        shift and go to state 129
    var_matrix                     shift and go to state 130

state 121

    (18) statement -> escritura . statement
    (13) statement -> . asignacion SEMICOL statement
    (14) statement -> . if statement
    (15) statement -> . vars statement
    (16) statement -> . while statement
    (17) statement -> . for statement
    (18) statement -> . escritura statement
    (19) statement -> . escritura_var statement
    (20) statement -> . lectura statement
    (21) statement -> . func_call statement
    (22) statement -> . ID row SEMICOL
    (23) statement -> . ID matrix SEMICOL
    (24) statement -> . empty
    (25) asignacion -> . ID IS value
    (124) if -> . IF LP expression RP check_bool gotof LB statement RB
    (125) if -> . IF LP expression RP check_bool gotof LB statement RB goto elseif
    (126) if -> . IF LP expression RP check_bool gotof LB statement RB goto else
    (26) vars -> . VAR tipo vars1
    (27) vars -> . VAR tipo vars2
    (28) vars -> . VAR tipo vars3
    (29) vars -> . VAR tipo oper_aritmetica
    (30) vars -> . VAR tipo ID row SEMICOL
    (31) vars -> . VAR tipo ID matrix SEMICOL
    (32) vars -> . var_row
    (33) vars -> . var_row vars
    (34) vars -> . var_matrix
    (35) vars -> . var_matrix vars
    (36) vars -> . empty
    (134) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (135) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (144) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (145) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (146) escritura_var -> . PRINT LP any_var RP SEMICOL
    (151) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (152) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (100) func_call -> . ID LP RP SEMICOL
    (101) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (123) empty -> .
    (109) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (116) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 125
    IF              shift and go to state 127
    VAR             shift and go to state 128
    WHILE           shift and go to state 131
    FOR             shift and go to state 132
    PRINT           shift and go to state 133
    READ            shift and go to state 134
    RETURN          reduce using rule 123 (empty -> .)
    RB              reduce using rule 123 (empty -> .)

  ! ID              [ reduce using rule 123 (empty -> .) ]
  ! IF              [ reduce using rule 123 (empty -> .) ]
  ! VAR             [ reduce using rule 123 (empty -> .) ]
  ! WHILE           [ reduce using rule 123 (empty -> .) ]
  ! FOR             [ reduce using rule 123 (empty -> .) ]
  ! PRINT           [ reduce using rule 123 (empty -> .) ]
  ! READ            [ reduce using rule 123 (empty -> .) ]

    escritura                      shift and go to state 121
    statement                      shift and go to state 164
    asignacion                     shift and go to state 116
    if                             shift and go to state 117
    vars                           shift and go to state 118
    while                          shift and go to state 119
    for                            shift and go to state 120
    escritura_var                  shift and go to state 122
    lectura                        shift and go to state 123
    func_call                      shift and go to state 124
    empty                          shift and go to state 126
    var_row                        shift and go to state 129
    var_matrix                     shift and go to state 130

state 122

    (19) statement -> escritura_var . statement
    (13) statement -> . asignacion SEMICOL statement
    (14) statement -> . if statement
    (15) statement -> . vars statement
    (16) statement -> . while statement
    (17) statement -> . for statement
    (18) statement -> . escritura statement
    (19) statement -> . escritura_var statement
    (20) statement -> . lectura statement
    (21) statement -> . func_call statement
    (22) statement -> . ID row SEMICOL
    (23) statement -> . ID matrix SEMICOL
    (24) statement -> . empty
    (25) asignacion -> . ID IS value
    (124) if -> . IF LP expression RP check_bool gotof LB statement RB
    (125) if -> . IF LP expression RP check_bool gotof LB statement RB goto elseif
    (126) if -> . IF LP expression RP check_bool gotof LB statement RB goto else
    (26) vars -> . VAR tipo vars1
    (27) vars -> . VAR tipo vars2
    (28) vars -> . VAR tipo vars3
    (29) vars -> . VAR tipo oper_aritmetica
    (30) vars -> . VAR tipo ID row SEMICOL
    (31) vars -> . VAR tipo ID matrix SEMICOL
    (32) vars -> . var_row
    (33) vars -> . var_row vars
    (34) vars -> . var_matrix
    (35) vars -> . var_matrix vars
    (36) vars -> . empty
    (134) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (135) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (144) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (145) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (146) escritura_var -> . PRINT LP any_var RP SEMICOL
    (151) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (152) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (100) func_call -> . ID LP RP SEMICOL
    (101) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (123) empty -> .
    (109) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (116) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 125
    IF              shift and go to state 127
    VAR             shift and go to state 128
    WHILE           shift and go to state 131
    FOR             shift and go to state 132
    PRINT           shift and go to state 133
    READ            shift and go to state 134
    RETURN          reduce using rule 123 (empty -> .)
    RB              reduce using rule 123 (empty -> .)

  ! ID              [ reduce using rule 123 (empty -> .) ]
  ! IF              [ reduce using rule 123 (empty -> .) ]
  ! VAR             [ reduce using rule 123 (empty -> .) ]
  ! WHILE           [ reduce using rule 123 (empty -> .) ]
  ! FOR             [ reduce using rule 123 (empty -> .) ]
  ! PRINT           [ reduce using rule 123 (empty -> .) ]
  ! READ            [ reduce using rule 123 (empty -> .) ]

    escritura_var                  shift and go to state 122
    statement                      shift and go to state 165
    asignacion                     shift and go to state 116
    if                             shift and go to state 117
    vars                           shift and go to state 118
    while                          shift and go to state 119
    for                            shift and go to state 120
    escritura                      shift and go to state 121
    lectura                        shift and go to state 123
    func_call                      shift and go to state 124
    empty                          shift and go to state 126
    var_row                        shift and go to state 129
    var_matrix                     shift and go to state 130

state 123

    (20) statement -> lectura . statement
    (13) statement -> . asignacion SEMICOL statement
    (14) statement -> . if statement
    (15) statement -> . vars statement
    (16) statement -> . while statement
    (17) statement -> . for statement
    (18) statement -> . escritura statement
    (19) statement -> . escritura_var statement
    (20) statement -> . lectura statement
    (21) statement -> . func_call statement
    (22) statement -> . ID row SEMICOL
    (23) statement -> . ID matrix SEMICOL
    (24) statement -> . empty
    (25) asignacion -> . ID IS value
    (124) if -> . IF LP expression RP check_bool gotof LB statement RB
    (125) if -> . IF LP expression RP check_bool gotof LB statement RB goto elseif
    (126) if -> . IF LP expression RP check_bool gotof LB statement RB goto else
    (26) vars -> . VAR tipo vars1
    (27) vars -> . VAR tipo vars2
    (28) vars -> . VAR tipo vars3
    (29) vars -> . VAR tipo oper_aritmetica
    (30) vars -> . VAR tipo ID row SEMICOL
    (31) vars -> . VAR tipo ID matrix SEMICOL
    (32) vars -> . var_row
    (33) vars -> . var_row vars
    (34) vars -> . var_matrix
    (35) vars -> . var_matrix vars
    (36) vars -> . empty
    (134) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (135) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (144) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (145) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (146) escritura_var -> . PRINT LP any_var RP SEMICOL
    (151) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (152) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (100) func_call -> . ID LP RP SEMICOL
    (101) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (123) empty -> .
    (109) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (116) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 125
    IF              shift and go to state 127
    VAR             shift and go to state 128
    WHILE           shift and go to state 131
    FOR             shift and go to state 132
    PRINT           shift and go to state 133
    READ            shift and go to state 134
    RETURN          reduce using rule 123 (empty -> .)
    RB              reduce using rule 123 (empty -> .)

  ! ID              [ reduce using rule 123 (empty -> .) ]
  ! IF              [ reduce using rule 123 (empty -> .) ]
  ! VAR             [ reduce using rule 123 (empty -> .) ]
  ! WHILE           [ reduce using rule 123 (empty -> .) ]
  ! FOR             [ reduce using rule 123 (empty -> .) ]
  ! PRINT           [ reduce using rule 123 (empty -> .) ]
  ! READ            [ reduce using rule 123 (empty -> .) ]

    lectura                        shift and go to state 123
    statement                      shift and go to state 166
    asignacion                     shift and go to state 116
    if                             shift and go to state 117
    vars                           shift and go to state 118
    while                          shift and go to state 119
    for                            shift and go to state 120
    escritura                      shift and go to state 121
    escritura_var                  shift and go to state 122
    func_call                      shift and go to state 124
    empty                          shift and go to state 126
    var_row                        shift and go to state 129
    var_matrix                     shift and go to state 130

state 124

    (21) statement -> func_call . statement
    (13) statement -> . asignacion SEMICOL statement
    (14) statement -> . if statement
    (15) statement -> . vars statement
    (16) statement -> . while statement
    (17) statement -> . for statement
    (18) statement -> . escritura statement
    (19) statement -> . escritura_var statement
    (20) statement -> . lectura statement
    (21) statement -> . func_call statement
    (22) statement -> . ID row SEMICOL
    (23) statement -> . ID matrix SEMICOL
    (24) statement -> . empty
    (25) asignacion -> . ID IS value
    (124) if -> . IF LP expression RP check_bool gotof LB statement RB
    (125) if -> . IF LP expression RP check_bool gotof LB statement RB goto elseif
    (126) if -> . IF LP expression RP check_bool gotof LB statement RB goto else
    (26) vars -> . VAR tipo vars1
    (27) vars -> . VAR tipo vars2
    (28) vars -> . VAR tipo vars3
    (29) vars -> . VAR tipo oper_aritmetica
    (30) vars -> . VAR tipo ID row SEMICOL
    (31) vars -> . VAR tipo ID matrix SEMICOL
    (32) vars -> . var_row
    (33) vars -> . var_row vars
    (34) vars -> . var_matrix
    (35) vars -> . var_matrix vars
    (36) vars -> . empty
    (134) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (135) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (144) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (145) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (146) escritura_var -> . PRINT LP any_var RP SEMICOL
    (151) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (152) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (100) func_call -> . ID LP RP SEMICOL
    (101) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (123) empty -> .
    (109) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (116) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 125
    IF              shift and go to state 127
    VAR             shift and go to state 128
    WHILE           shift and go to state 131
    FOR             shift and go to state 132
    PRINT           shift and go to state 133
    READ            shift and go to state 134
    RETURN          reduce using rule 123 (empty -> .)
    RB              reduce using rule 123 (empty -> .)

  ! ID              [ reduce using rule 123 (empty -> .) ]
  ! IF              [ reduce using rule 123 (empty -> .) ]
  ! VAR             [ reduce using rule 123 (empty -> .) ]
  ! WHILE           [ reduce using rule 123 (empty -> .) ]
  ! FOR             [ reduce using rule 123 (empty -> .) ]
  ! PRINT           [ reduce using rule 123 (empty -> .) ]
  ! READ            [ reduce using rule 123 (empty -> .) ]

    func_call                      shift and go to state 124
    statement                      shift and go to state 167
    asignacion                     shift and go to state 116
    if                             shift and go to state 117
    vars                           shift and go to state 118
    while                          shift and go to state 119
    for                            shift and go to state 120
    escritura                      shift and go to state 121
    escritura_var                  shift and go to state 122
    lectura                        shift and go to state 123
    empty                          shift and go to state 126
    var_row                        shift and go to state 129
    var_matrix                     shift and go to state 130

state 125

    (22) statement -> ID . row SEMICOL
    (23) statement -> ID . matrix SEMICOL
    (25) asignacion -> ID . IS value
    (100) func_call -> ID . LP RP SEMICOL
    (101) func_call -> ID . LP func_era func_call_param RP SEMICOL
    (115) row -> . LC CTE_I RC
    (122) matrix -> . row row

    IS              shift and go to state 170
    LP              shift and go to state 171
    LC              shift and go to state 64

    row                            shift and go to state 168
    matrix                         shift and go to state 169

state 126

    (24) statement -> empty .
    (36) vars -> empty .

  ! reduce/reduce conflict for RETURN resolved using rule 24 (statement -> empty .)
  ! reduce/reduce conflict for RB resolved using rule 24 (statement -> empty .)
    RETURN          reduce using rule 24 (statement -> empty .)
    RB              reduce using rule 24 (statement -> empty .)
    ID              reduce using rule 36 (vars -> empty .)
    IF              reduce using rule 36 (vars -> empty .)
    VAR             reduce using rule 36 (vars -> empty .)
    WHILE           reduce using rule 36 (vars -> empty .)
    FOR             reduce using rule 36 (vars -> empty .)
    PRINT           reduce using rule 36 (vars -> empty .)
    READ            reduce using rule 36 (vars -> empty .)

  ! RETURN          [ reduce using rule 36 (vars -> empty .) ]
  ! RB              [ reduce using rule 36 (vars -> empty .) ]


state 127

    (124) if -> IF . LP expression RP check_bool gotof LB statement RB
    (125) if -> IF . LP expression RP check_bool gotof LB statement RB goto elseif
    (126) if -> IF . LP expression RP check_bool gotof LB statement RB goto else

    LP              shift and go to state 172


state 128

    (26) vars -> VAR . tipo vars1
    (27) vars -> VAR . tipo vars2
    (28) vars -> VAR . tipo vars3
    (29) vars -> VAR . tipo oper_aritmetica
    (30) vars -> VAR . tipo ID row SEMICOL
    (31) vars -> VAR . tipo ID matrix SEMICOL
    (109) var_row -> VAR . tipo ID row IS LP lista2 RP SEMICOL
    (116) var_matrix -> VAR . tipo ID matrix IS matrix2 SEMICOL
    (70) tipo -> . INT
    (71) tipo -> . FLOAT
    (72) tipo -> . CHAR

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    tipo                           shift and go to state 173

state 129

    (32) vars -> var_row .
    (33) vars -> var_row . vars
    (26) vars -> . VAR tipo vars1
    (27) vars -> . VAR tipo vars2
    (28) vars -> . VAR tipo vars3
    (29) vars -> . VAR tipo oper_aritmetica
    (30) vars -> . VAR tipo ID row SEMICOL
    (31) vars -> . VAR tipo ID matrix SEMICOL
    (32) vars -> . var_row
    (33) vars -> . var_row vars
    (34) vars -> . var_matrix
    (35) vars -> . var_matrix vars
    (36) vars -> . empty
    (109) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (116) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (123) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for ID resolved using rule 32 (vars -> var_row .)
  ! reduce/reduce conflict for IF resolved using rule 32 (vars -> var_row .)
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for WHILE resolved using rule 32 (vars -> var_row .)
  ! reduce/reduce conflict for FOR resolved using rule 32 (vars -> var_row .)
  ! reduce/reduce conflict for PRINT resolved using rule 32 (vars -> var_row .)
  ! reduce/reduce conflict for READ resolved using rule 32 (vars -> var_row .)
  ! reduce/reduce conflict for RETURN resolved using rule 32 (vars -> var_row .)
  ! reduce/reduce conflict for RB resolved using rule 32 (vars -> var_row .)
    ID              reduce using rule 32 (vars -> var_row .)
    IF              reduce using rule 32 (vars -> var_row .)
    WHILE           reduce using rule 32 (vars -> var_row .)
    FOR             reduce using rule 32 (vars -> var_row .)
    PRINT           reduce using rule 32 (vars -> var_row .)
    READ            reduce using rule 32 (vars -> var_row .)
    RETURN          reduce using rule 32 (vars -> var_row .)
    RB              reduce using rule 32 (vars -> var_row .)
    VAR             shift and go to state 128

  ! VAR             [ reduce using rule 32 (vars -> var_row .) ]
  ! ID              [ reduce using rule 123 (empty -> .) ]
  ! IF              [ reduce using rule 123 (empty -> .) ]
  ! VAR             [ reduce using rule 123 (empty -> .) ]
  ! WHILE           [ reduce using rule 123 (empty -> .) ]
  ! FOR             [ reduce using rule 123 (empty -> .) ]
  ! PRINT           [ reduce using rule 123 (empty -> .) ]
  ! READ            [ reduce using rule 123 (empty -> .) ]
  ! RETURN          [ reduce using rule 123 (empty -> .) ]
  ! RB              [ reduce using rule 123 (empty -> .) ]

    var_row                        shift and go to state 129
    vars                           shift and go to state 174
    var_matrix                     shift and go to state 130
    empty                          shift and go to state 175

state 130

    (34) vars -> var_matrix .
    (35) vars -> var_matrix . vars
    (26) vars -> . VAR tipo vars1
    (27) vars -> . VAR tipo vars2
    (28) vars -> . VAR tipo vars3
    (29) vars -> . VAR tipo oper_aritmetica
    (30) vars -> . VAR tipo ID row SEMICOL
    (31) vars -> . VAR tipo ID matrix SEMICOL
    (32) vars -> . var_row
    (33) vars -> . var_row vars
    (34) vars -> . var_matrix
    (35) vars -> . var_matrix vars
    (36) vars -> . empty
    (109) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (116) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (123) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for ID resolved using rule 34 (vars -> var_matrix .)
  ! reduce/reduce conflict for IF resolved using rule 34 (vars -> var_matrix .)
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for WHILE resolved using rule 34 (vars -> var_matrix .)
  ! reduce/reduce conflict for FOR resolved using rule 34 (vars -> var_matrix .)
  ! reduce/reduce conflict for PRINT resolved using rule 34 (vars -> var_matrix .)
  ! reduce/reduce conflict for READ resolved using rule 34 (vars -> var_matrix .)
  ! reduce/reduce conflict for RETURN resolved using rule 34 (vars -> var_matrix .)
  ! reduce/reduce conflict for RB resolved using rule 34 (vars -> var_matrix .)
    ID              reduce using rule 34 (vars -> var_matrix .)
    IF              reduce using rule 34 (vars -> var_matrix .)
    WHILE           reduce using rule 34 (vars -> var_matrix .)
    FOR             reduce using rule 34 (vars -> var_matrix .)
    PRINT           reduce using rule 34 (vars -> var_matrix .)
    READ            reduce using rule 34 (vars -> var_matrix .)
    RETURN          reduce using rule 34 (vars -> var_matrix .)
    RB              reduce using rule 34 (vars -> var_matrix .)
    VAR             shift and go to state 128

  ! VAR             [ reduce using rule 34 (vars -> var_matrix .) ]
  ! ID              [ reduce using rule 123 (empty -> .) ]
  ! IF              [ reduce using rule 123 (empty -> .) ]
  ! VAR             [ reduce using rule 123 (empty -> .) ]
  ! WHILE           [ reduce using rule 123 (empty -> .) ]
  ! FOR             [ reduce using rule 123 (empty -> .) ]
  ! PRINT           [ reduce using rule 123 (empty -> .) ]
  ! READ            [ reduce using rule 123 (empty -> .) ]
  ! RETURN          [ reduce using rule 123 (empty -> .) ]
  ! RB              [ reduce using rule 123 (empty -> .) ]

    var_matrix                     shift and go to state 130
    vars                           shift and go to state 176
    var_row                        shift and go to state 129
    empty                          shift and go to state 175

state 131

    (134) while -> WHILE . guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (133) guarda_num_salto -> .

    LP              reduce using rule 133 (guarda_num_salto -> .)

    guarda_num_salto               shift and go to state 177

state 132

    (135) for -> FOR . LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto

    LP              shift and go to state 178


state 133

    (144) escritura -> PRINT . LP COMILLA any COMILLA RP SEMICOL
    (145) escritura -> PRINT . LP COMILLAS any COMILLAS RP SEMICOL
    (146) escritura_var -> PRINT . LP any_var RP SEMICOL

    LP              shift and go to state 179


state 134

    (151) lectura -> READ . LP COMILLA any_lectura COMILLA RP SEMICOL
    (152) lectura -> READ . LP COMILLAS any_lectura COMILLAS RP SEMICOL

    LP              shift and go to state 180


state 135

    (82) funcion -> tipo ID LP RP verificar2 LB . var_func statement add_func_dir2 func_return RB end_func
    (88) var_func -> . vars
    (26) vars -> . VAR tipo vars1
    (27) vars -> . VAR tipo vars2
    (28) vars -> . VAR tipo vars3
    (29) vars -> . VAR tipo oper_aritmetica
    (30) vars -> . VAR tipo ID row SEMICOL
    (31) vars -> . VAR tipo ID matrix SEMICOL
    (32) vars -> . var_row
    (33) vars -> . var_row vars
    (34) vars -> . var_matrix
    (35) vars -> . var_matrix vars
    (36) vars -> . empty
    (109) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (116) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (123) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
    VAR             shift and go to state 128
    ID              reduce using rule 123 (empty -> .)
    IF              reduce using rule 123 (empty -> .)
    WHILE           reduce using rule 123 (empty -> .)
    FOR             reduce using rule 123 (empty -> .)
    PRINT           reduce using rule 123 (empty -> .)
    READ            reduce using rule 123 (empty -> .)
    RETURN          reduce using rule 123 (empty -> .)

  ! VAR             [ reduce using rule 123 (empty -> .) ]

    var_func                       shift and go to state 181
    vars                           shift and go to state 182
    var_row                        shift and go to state 129
    var_matrix                     shift and go to state 130
    empty                          shift and go to state 175

state 136

    (83) funcion -> tipo ID LP param RP verificar . LB var_func statement add_func_dir func_return_param RB end_func

    LB              shift and go to state 183


state 137

    (90) param -> param COMMA tipo . ID

    ID              shift and go to state 184


state 138

    (12) main -> VOID MAIN LP RP LB statement . RB

    RB              shift and go to state 185


state 139

    (80) funcion -> VOID ID LP param RP verificar . LB var_func statement RB end_func

    LB              shift and go to state 186


state 140

    (81) funcion -> VOID ID LP RP verificar2 LB . var_func statement RB end_func
    (88) var_func -> . vars
    (26) vars -> . VAR tipo vars1
    (27) vars -> . VAR tipo vars2
    (28) vars -> . VAR tipo vars3
    (29) vars -> . VAR tipo oper_aritmetica
    (30) vars -> . VAR tipo ID row SEMICOL
    (31) vars -> . VAR tipo ID matrix SEMICOL
    (32) vars -> . var_row
    (33) vars -> . var_row vars
    (34) vars -> . var_matrix
    (35) vars -> . var_matrix vars
    (36) vars -> . empty
    (109) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (116) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (123) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
    VAR             shift and go to state 128
    ID              reduce using rule 123 (empty -> .)
    IF              reduce using rule 123 (empty -> .)
    WHILE           reduce using rule 123 (empty -> .)
    FOR             reduce using rule 123 (empty -> .)
    PRINT           reduce using rule 123 (empty -> .)
    READ            reduce using rule 123 (empty -> .)
    RB              reduce using rule 123 (empty -> .)

  ! VAR             [ reduce using rule 123 (empty -> .) ]

    var_func                       shift and go to state 187
    vars                           shift and go to state 182
    var_row                        shift and go to state 129
    var_matrix                     shift and go to state 130
    empty                          shift and go to state 175

state 141

    (96) declarar_param -> tipo COMMA . declarar_param
    (96) declarar_param -> . tipo COMMA declarar_param
    (97) declarar_param -> . tipo declarar_param
    (98) declarar_param -> . empty
    (70) tipo -> . INT
    (71) tipo -> . FLOAT
    (72) tipo -> . CHAR
    (123) empty -> .

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20
    RP              reduce using rule 123 (empty -> .)

    tipo                           shift and go to state 100
    declarar_param                 shift and go to state 188
    empty                          shift and go to state 103

state 142

    (97) declarar_param -> tipo declarar_param .

    RP              reduce using rule 97 (declarar_param -> tipo declarar_param .)


state 143

    (92) declarar_func -> FUNC tipo ID LP RP SEMICOL .

    VAR             reduce using rule 92 (declarar_func -> FUNC tipo ID LP RP SEMICOL .)
    FUNC            reduce using rule 92 (declarar_func -> FUNC tipo ID LP RP SEMICOL .)
    VOID            reduce using rule 92 (declarar_func -> FUNC tipo ID LP RP SEMICOL .)
    INT             reduce using rule 92 (declarar_func -> FUNC tipo ID LP RP SEMICOL .)
    FLOAT           reduce using rule 92 (declarar_func -> FUNC tipo ID LP RP SEMICOL .)
    CHAR            reduce using rule 92 (declarar_func -> FUNC tipo ID LP RP SEMICOL .)
    $end            reduce using rule 92 (declarar_func -> FUNC tipo ID LP RP SEMICOL .)
    RB              reduce using rule 92 (declarar_func -> FUNC tipo ID LP RP SEMICOL .)


state 144

    (94) declarar_func -> FUNC tipo ID LP declarar_param RP . SEMICOL

    SEMICOL         shift and go to state 189


state 145

    (93) declarar_func -> FUNC VOID ID LP RP SEMICOL .

    VAR             reduce using rule 93 (declarar_func -> FUNC VOID ID LP RP SEMICOL .)
    FUNC            reduce using rule 93 (declarar_func -> FUNC VOID ID LP RP SEMICOL .)
    VOID            reduce using rule 93 (declarar_func -> FUNC VOID ID LP RP SEMICOL .)
    INT             reduce using rule 93 (declarar_func -> FUNC VOID ID LP RP SEMICOL .)
    FLOAT           reduce using rule 93 (declarar_func -> FUNC VOID ID LP RP SEMICOL .)
    CHAR            reduce using rule 93 (declarar_func -> FUNC VOID ID LP RP SEMICOL .)
    $end            reduce using rule 93 (declarar_func -> FUNC VOID ID LP RP SEMICOL .)
    RB              reduce using rule 93 (declarar_func -> FUNC VOID ID LP RP SEMICOL .)


state 146

    (95) declarar_func -> FUNC VOID ID LP declarar_param RP . SEMICOL

    SEMICOL         shift and go to state 190


state 147

    (110) var_rowG -> VAR tipo ID row IS LP lista2 . RP SEMICOL

    RP              shift and go to state 191


state 148

    (113) lista2 -> elem_lista . COMMA lista2
    (114) lista2 -> elem_lista . COMMA elem_lista

    COMMA           shift and go to state 192


state 149

    (111) elem_lista -> value .

    COMMA           reduce using rule 111 (elem_lista -> value .)
    RP              reduce using rule 111 (elem_lista -> value .)


state 150

    (112) elem_lista -> empty .

    COMMA           reduce using rule 112 (elem_lista -> empty .)
    RP              reduce using rule 112 (elem_lista -> empty .)


state 151

    (77) value -> COMILLA ID COMILLA .

    SEMICOL         reduce using rule 77 (value -> COMILLA ID COMILLA .)
    COMMA           reduce using rule 77 (value -> COMILLA ID COMILLA .)
    RP              reduce using rule 77 (value -> COMILLA ID COMILLA .)


state 152

    (78) value -> COMILLAS ID COMILLAS .

    SEMICOL         reduce using rule 78 (value -> COMILLAS ID COMILLAS .)
    COMMA           reduce using rule 78 (value -> COMILLAS ID COMILLAS .)
    RP              reduce using rule 78 (value -> COMILLAS ID COMILLAS .)


state 153

    (117) var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .

    VAR             reduce using rule 117 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    FUNC            reduce using rule 117 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    VOID            reduce using rule 117 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    INT             reduce using rule 117 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    FLOAT           reduce using rule 117 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    CHAR            reduce using rule 117 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    $end            reduce using rule 117 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    RB              reduce using rule 117 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)


state 154

    (118) matrix2 -> LP lista2 . RP COMMA matrix2
    (119) matrix2 -> LP lista2 . RP COMMA LP lista2 RP

    RP              shift and go to state 193


state 155

    (60) vars2G -> vars2_1G ID IS value SEMICOL .

    VAR             reduce using rule 60 (vars2G -> vars2_1G ID IS value SEMICOL .)
    FUNC            reduce using rule 60 (vars2G -> vars2_1G ID IS value SEMICOL .)
    VOID            reduce using rule 60 (vars2G -> vars2_1G ID IS value SEMICOL .)
    INT             reduce using rule 60 (vars2G -> vars2_1G ID IS value SEMICOL .)
    FLOAT           reduce using rule 60 (vars2G -> vars2_1G ID IS value SEMICOL .)
    CHAR            reduce using rule 60 (vars2G -> vars2_1G ID IS value SEMICOL .)
    $end            reduce using rule 60 (vars2G -> vars2_1G ID IS value SEMICOL .)
    RB              reduce using rule 60 (vars2G -> vars2_1G ID IS value SEMICOL .)


state 156

    (61) vars2_1G -> vars2_1G ID IS value COMMA .

    ID              reduce using rule 61 (vars2_1G -> vars2_1G ID IS value COMMA .)


state 157

    (11) main -> tipo MAIN LP RP LB statement func_return_main . RB end_main

    RB              shift and go to state 194


state 158

    (107) func_return_main -> RETURN . expr SEMICOL
    (171) expr -> . expr MUL expr
    (172) expr -> . expr DIV expr
    (173) expr -> . expr PLUS expr
    (174) expr -> . expr MINUS expr
    (175) expr -> . CTE_I
    (176) expr -> . CTE_F
    (177) expr -> . ID

    CTE_I           shift and go to state 196
    CTE_F           shift and go to state 197
    ID              shift and go to state 198

    expr                           shift and go to state 195

state 159

    (13) statement -> asignacion SEMICOL . statement
    (13) statement -> . asignacion SEMICOL statement
    (14) statement -> . if statement
    (15) statement -> . vars statement
    (16) statement -> . while statement
    (17) statement -> . for statement
    (18) statement -> . escritura statement
    (19) statement -> . escritura_var statement
    (20) statement -> . lectura statement
    (21) statement -> . func_call statement
    (22) statement -> . ID row SEMICOL
    (23) statement -> . ID matrix SEMICOL
    (24) statement -> . empty
    (25) asignacion -> . ID IS value
    (124) if -> . IF LP expression RP check_bool gotof LB statement RB
    (125) if -> . IF LP expression RP check_bool gotof LB statement RB goto elseif
    (126) if -> . IF LP expression RP check_bool gotof LB statement RB goto else
    (26) vars -> . VAR tipo vars1
    (27) vars -> . VAR tipo vars2
    (28) vars -> . VAR tipo vars3
    (29) vars -> . VAR tipo oper_aritmetica
    (30) vars -> . VAR tipo ID row SEMICOL
    (31) vars -> . VAR tipo ID matrix SEMICOL
    (32) vars -> . var_row
    (33) vars -> . var_row vars
    (34) vars -> . var_matrix
    (35) vars -> . var_matrix vars
    (36) vars -> . empty
    (134) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (135) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (144) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (145) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (146) escritura_var -> . PRINT LP any_var RP SEMICOL
    (151) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (152) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (100) func_call -> . ID LP RP SEMICOL
    (101) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (123) empty -> .
    (109) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (116) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 125
    IF              shift and go to state 127
    VAR             shift and go to state 128
    WHILE           shift and go to state 131
    FOR             shift and go to state 132
    PRINT           shift and go to state 133
    READ            shift and go to state 134
    RETURN          reduce using rule 123 (empty -> .)
    RB              reduce using rule 123 (empty -> .)

  ! ID              [ reduce using rule 123 (empty -> .) ]
  ! IF              [ reduce using rule 123 (empty -> .) ]
  ! VAR             [ reduce using rule 123 (empty -> .) ]
  ! WHILE           [ reduce using rule 123 (empty -> .) ]
  ! FOR             [ reduce using rule 123 (empty -> .) ]
  ! PRINT           [ reduce using rule 123 (empty -> .) ]
  ! READ            [ reduce using rule 123 (empty -> .) ]

    asignacion                     shift and go to state 116
    statement                      shift and go to state 199
    if                             shift and go to state 117
    vars                           shift and go to state 118
    while                          shift and go to state 119
    for                            shift and go to state 120
    escritura                      shift and go to state 121
    escritura_var                  shift and go to state 122
    lectura                        shift and go to state 123
    func_call                      shift and go to state 124
    empty                          shift and go to state 126
    var_row                        shift and go to state 129
    var_matrix                     shift and go to state 130

state 160

    (14) statement -> if statement .

    RETURN          reduce using rule 14 (statement -> if statement .)
    RB              reduce using rule 14 (statement -> if statement .)


state 161

    (15) statement -> vars statement .

    RETURN          reduce using rule 15 (statement -> vars statement .)
    RB              reduce using rule 15 (statement -> vars statement .)


state 162

    (16) statement -> while statement .

    RETURN          reduce using rule 16 (statement -> while statement .)
    RB              reduce using rule 16 (statement -> while statement .)


state 163

    (17) statement -> for statement .

    RETURN          reduce using rule 17 (statement -> for statement .)
    RB              reduce using rule 17 (statement -> for statement .)


state 164

    (18) statement -> escritura statement .

    RETURN          reduce using rule 18 (statement -> escritura statement .)
    RB              reduce using rule 18 (statement -> escritura statement .)


state 165

    (19) statement -> escritura_var statement .

    RETURN          reduce using rule 19 (statement -> escritura_var statement .)
    RB              reduce using rule 19 (statement -> escritura_var statement .)


state 166

    (20) statement -> lectura statement .

    RETURN          reduce using rule 20 (statement -> lectura statement .)
    RB              reduce using rule 20 (statement -> lectura statement .)


state 167

    (21) statement -> func_call statement .

    RETURN          reduce using rule 21 (statement -> func_call statement .)
    RB              reduce using rule 21 (statement -> func_call statement .)


state 168

    (22) statement -> ID row . SEMICOL
    (122) matrix -> row . row
    (115) row -> . LC CTE_I RC

    SEMICOL         shift and go to state 200
    LC              shift and go to state 64

    row                            shift and go to state 78

state 169

    (23) statement -> ID matrix . SEMICOL

    SEMICOL         shift and go to state 201


state 170

    (25) asignacion -> ID IS . value
    (73) value -> . CTE_F
    (74) value -> . CTE_I
    (75) value -> . ID
    (76) value -> . CTE_C
    (77) value -> . COMILLA ID COMILLA
    (78) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 82
    CTE_I           shift and go to state 83
    ID              shift and go to state 80
    CTE_C           shift and go to state 84
    COMILLA         shift and go to state 85
    COMILLAS        shift and go to state 86

    value                          shift and go to state 202

state 171

    (100) func_call -> ID LP . RP SEMICOL
    (101) func_call -> ID LP . func_era func_call_param RP SEMICOL
    (102) func_era -> .

    RP              shift and go to state 203
    CTE_I           reduce using rule 102 (func_era -> .)
    CTE_F           reduce using rule 102 (func_era -> .)
    ID              reduce using rule 102 (func_era -> .)

    func_era                       shift and go to state 204

state 172

    (124) if -> IF LP . expression RP check_bool gotof LB statement RB
    (125) if -> IF LP . expression RP check_bool gotof LB statement RB goto elseif
    (126) if -> IF LP . expression RP check_bool gotof LB statement RB goto else
    (154) expression -> . var_gt
    (155) expression -> . var_lt
    (156) expression -> . var_equal
    (157) expression -> . var_neq
    (158) expression -> . var_geq
    (159) expression -> . var_leq
    (160) expression -> . expr
    (161) expression -> . TRUE
    (162) expression -> . FALSE
    (163) expression -> . ID
    (165) var_gt -> . expr GT expr
    (164) var_lt -> . expr LT expr
    (168) var_equal -> . expr EQUAL expr
    (169) var_neq -> . expr NEQ expr
    (167) var_geq -> . expr GEQ expr
    (166) var_leq -> . expr LEQ expr
    (171) expr -> . expr MUL expr
    (172) expr -> . expr DIV expr
    (173) expr -> . expr PLUS expr
    (174) expr -> . expr MINUS expr
    (175) expr -> . CTE_I
    (176) expr -> . CTE_F
    (177) expr -> . ID

    TRUE            shift and go to state 213
    FALSE           shift and go to state 214
    ID              shift and go to state 215
    CTE_I           shift and go to state 196
    CTE_F           shift and go to state 197

    expression                     shift and go to state 205
    var_gt                         shift and go to state 206
    var_lt                         shift and go to state 207
    var_equal                      shift and go to state 208
    var_neq                        shift and go to state 209
    var_geq                        shift and go to state 210
    var_leq                        shift and go to state 211
    expr                           shift and go to state 212

state 173

    (26) vars -> VAR tipo . vars1
    (27) vars -> VAR tipo . vars2
    (28) vars -> VAR tipo . vars3
    (29) vars -> VAR tipo . oper_aritmetica
    (30) vars -> VAR tipo . ID row SEMICOL
    (31) vars -> VAR tipo . ID matrix SEMICOL
    (109) var_row -> VAR tipo . ID row IS LP lista2 RP SEMICOL
    (116) var_matrix -> VAR tipo . ID matrix IS matrix2 SEMICOL
    (37) vars1 -> . ID SEMICOL
    (38) vars2 -> . vars2_1 ID IS value SEMICOL
    (42) vars2 -> . ID IS value SEMICOL
    (43) vars3 -> . vars3_1 ID SEMICOL
    (46) vars3 -> . ID SEMICOL
    (170) oper_aritmetica -> . ID IS expr SEMICOL
    (39) vars2_1 -> . vars2_1 ID IS value COMMA
    (40) vars2_1 -> . ID IS value COMMA
    (41) vars2_1 -> . empty
    (44) vars3_1 -> . vars3_1 ID COMMA
    (45) vars3_1 -> . ID COMMA
    (47) vars3_1 -> . empty
    (123) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 220

  ! ID              [ reduce using rule 123 (empty -> .) ]

    vars1                          shift and go to state 216
    vars2                          shift and go to state 217
    vars3                          shift and go to state 218
    oper_aritmetica                shift and go to state 219
    vars2_1                        shift and go to state 221
    vars3_1                        shift and go to state 222
    empty                          shift and go to state 223

state 174

    (33) vars -> var_row vars .

    ID              reduce using rule 33 (vars -> var_row vars .)
    IF              reduce using rule 33 (vars -> var_row vars .)
    VAR             reduce using rule 33 (vars -> var_row vars .)
    WHILE           reduce using rule 33 (vars -> var_row vars .)
    FOR             reduce using rule 33 (vars -> var_row vars .)
    PRINT           reduce using rule 33 (vars -> var_row vars .)
    READ            reduce using rule 33 (vars -> var_row vars .)
    RETURN          reduce using rule 33 (vars -> var_row vars .)
    RB              reduce using rule 33 (vars -> var_row vars .)


state 175

    (36) vars -> empty .

    ID              reduce using rule 36 (vars -> empty .)
    IF              reduce using rule 36 (vars -> empty .)
    VAR             reduce using rule 36 (vars -> empty .)
    WHILE           reduce using rule 36 (vars -> empty .)
    FOR             reduce using rule 36 (vars -> empty .)
    PRINT           reduce using rule 36 (vars -> empty .)
    READ            reduce using rule 36 (vars -> empty .)
    RETURN          reduce using rule 36 (vars -> empty .)
    RB              reduce using rule 36 (vars -> empty .)


state 176

    (35) vars -> var_matrix vars .

    ID              reduce using rule 35 (vars -> var_matrix vars .)
    IF              reduce using rule 35 (vars -> var_matrix vars .)
    VAR             reduce using rule 35 (vars -> var_matrix vars .)
    WHILE           reduce using rule 35 (vars -> var_matrix vars .)
    FOR             reduce using rule 35 (vars -> var_matrix vars .)
    PRINT           reduce using rule 35 (vars -> var_matrix vars .)
    READ            reduce using rule 35 (vars -> var_matrix vars .)
    RETURN          reduce using rule 35 (vars -> var_matrix vars .)
    RB              reduce using rule 35 (vars -> var_matrix vars .)


state 177

    (134) while -> WHILE guarda_num_salto . LP expression RP check_bool gotof LB statement RB goto

    LP              shift and go to state 224


state 178

    (135) for -> FOR LP . VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto

    VAR             shift and go to state 225


state 179

    (144) escritura -> PRINT LP . COMILLA any COMILLA RP SEMICOL
    (145) escritura -> PRINT LP . COMILLAS any COMILLAS RP SEMICOL
    (146) escritura_var -> PRINT LP . any_var RP SEMICOL
    (147) any_var -> . ID

    COMILLA         shift and go to state 226
    COMILLAS        shift and go to state 227
    ID              shift and go to state 229

    any_var                        shift and go to state 228

state 180

    (151) lectura -> READ LP . COMILLA any_lectura COMILLA RP SEMICOL
    (152) lectura -> READ LP . COMILLAS any_lectura COMILLAS RP SEMICOL

    COMILLA         shift and go to state 230
    COMILLAS        shift and go to state 231


state 181

    (82) funcion -> tipo ID LP RP verificar2 LB var_func . statement add_func_dir2 func_return RB end_func
    (13) statement -> . asignacion SEMICOL statement
    (14) statement -> . if statement
    (15) statement -> . vars statement
    (16) statement -> . while statement
    (17) statement -> . for statement
    (18) statement -> . escritura statement
    (19) statement -> . escritura_var statement
    (20) statement -> . lectura statement
    (21) statement -> . func_call statement
    (22) statement -> . ID row SEMICOL
    (23) statement -> . ID matrix SEMICOL
    (24) statement -> . empty
    (25) asignacion -> . ID IS value
    (124) if -> . IF LP expression RP check_bool gotof LB statement RB
    (125) if -> . IF LP expression RP check_bool gotof LB statement RB goto elseif
    (126) if -> . IF LP expression RP check_bool gotof LB statement RB goto else
    (26) vars -> . VAR tipo vars1
    (27) vars -> . VAR tipo vars2
    (28) vars -> . VAR tipo vars3
    (29) vars -> . VAR tipo oper_aritmetica
    (30) vars -> . VAR tipo ID row SEMICOL
    (31) vars -> . VAR tipo ID matrix SEMICOL
    (32) vars -> . var_row
    (33) vars -> . var_row vars
    (34) vars -> . var_matrix
    (35) vars -> . var_matrix vars
    (36) vars -> . empty
    (134) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (135) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (144) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (145) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (146) escritura_var -> . PRINT LP any_var RP SEMICOL
    (151) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (152) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (100) func_call -> . ID LP RP SEMICOL
    (101) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (123) empty -> .
    (109) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (116) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 125
    IF              shift and go to state 127
    VAR             shift and go to state 128
    WHILE           shift and go to state 131
    FOR             shift and go to state 132
    PRINT           shift and go to state 133
    READ            shift and go to state 134
    RETURN          reduce using rule 123 (empty -> .)

  ! ID              [ reduce using rule 123 (empty -> .) ]
  ! IF              [ reduce using rule 123 (empty -> .) ]
  ! VAR             [ reduce using rule 123 (empty -> .) ]
  ! WHILE           [ reduce using rule 123 (empty -> .) ]
  ! FOR             [ reduce using rule 123 (empty -> .) ]
  ! PRINT           [ reduce using rule 123 (empty -> .) ]
  ! READ            [ reduce using rule 123 (empty -> .) ]

    statement                      shift and go to state 232
    asignacion                     shift and go to state 116
    if                             shift and go to state 117
    vars                           shift and go to state 118
    while                          shift and go to state 119
    for                            shift and go to state 120
    escritura                      shift and go to state 121
    escritura_var                  shift and go to state 122
    lectura                        shift and go to state 123
    func_call                      shift and go to state 124
    empty                          shift and go to state 126
    var_row                        shift and go to state 129
    var_matrix                     shift and go to state 130

state 182

    (88) var_func -> vars .

    ID              reduce using rule 88 (var_func -> vars .)
    IF              reduce using rule 88 (var_func -> vars .)
    VAR             reduce using rule 88 (var_func -> vars .)
    WHILE           reduce using rule 88 (var_func -> vars .)
    FOR             reduce using rule 88 (var_func -> vars .)
    PRINT           reduce using rule 88 (var_func -> vars .)
    READ            reduce using rule 88 (var_func -> vars .)
    RETURN          reduce using rule 88 (var_func -> vars .)
    RB              reduce using rule 88 (var_func -> vars .)


state 183

    (83) funcion -> tipo ID LP param RP verificar LB . var_func statement add_func_dir func_return_param RB end_func
    (88) var_func -> . vars
    (26) vars -> . VAR tipo vars1
    (27) vars -> . VAR tipo vars2
    (28) vars -> . VAR tipo vars3
    (29) vars -> . VAR tipo oper_aritmetica
    (30) vars -> . VAR tipo ID row SEMICOL
    (31) vars -> . VAR tipo ID matrix SEMICOL
    (32) vars -> . var_row
    (33) vars -> . var_row vars
    (34) vars -> . var_matrix
    (35) vars -> . var_matrix vars
    (36) vars -> . empty
    (109) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (116) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (123) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
    VAR             shift and go to state 128
    ID              reduce using rule 123 (empty -> .)
    IF              reduce using rule 123 (empty -> .)
    WHILE           reduce using rule 123 (empty -> .)
    FOR             reduce using rule 123 (empty -> .)
    PRINT           reduce using rule 123 (empty -> .)
    READ            reduce using rule 123 (empty -> .)
    RETURN          reduce using rule 123 (empty -> .)

  ! VAR             [ reduce using rule 123 (empty -> .) ]

    var_func                       shift and go to state 233
    vars                           shift and go to state 182
    var_row                        shift and go to state 129
    var_matrix                     shift and go to state 130
    empty                          shift and go to state 175

state 184

    (90) param -> param COMMA tipo ID .

    RP              reduce using rule 90 (param -> param COMMA tipo ID .)
    COMMA           reduce using rule 90 (param -> param COMMA tipo ID .)


state 185

    (12) main -> VOID MAIN LP RP LB statement RB .

    $end            reduce using rule 12 (main -> VOID MAIN LP RP LB statement RB .)
    VOID            reduce using rule 12 (main -> VOID MAIN LP RP LB statement RB .)
    INT             reduce using rule 12 (main -> VOID MAIN LP RP LB statement RB .)
    FLOAT           reduce using rule 12 (main -> VOID MAIN LP RP LB statement RB .)
    CHAR            reduce using rule 12 (main -> VOID MAIN LP RP LB statement RB .)


state 186

    (80) funcion -> VOID ID LP param RP verificar LB . var_func statement RB end_func
    (88) var_func -> . vars
    (26) vars -> . VAR tipo vars1
    (27) vars -> . VAR tipo vars2
    (28) vars -> . VAR tipo vars3
    (29) vars -> . VAR tipo oper_aritmetica
    (30) vars -> . VAR tipo ID row SEMICOL
    (31) vars -> . VAR tipo ID matrix SEMICOL
    (32) vars -> . var_row
    (33) vars -> . var_row vars
    (34) vars -> . var_matrix
    (35) vars -> . var_matrix vars
    (36) vars -> . empty
    (109) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (116) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (123) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
    VAR             shift and go to state 128
    ID              reduce using rule 123 (empty -> .)
    IF              reduce using rule 123 (empty -> .)
    WHILE           reduce using rule 123 (empty -> .)
    FOR             reduce using rule 123 (empty -> .)
    PRINT           reduce using rule 123 (empty -> .)
    READ            reduce using rule 123 (empty -> .)
    RB              reduce using rule 123 (empty -> .)

  ! VAR             [ reduce using rule 123 (empty -> .) ]

    var_func                       shift and go to state 234
    vars                           shift and go to state 182
    var_row                        shift and go to state 129
    var_matrix                     shift and go to state 130
    empty                          shift and go to state 175

state 187

    (81) funcion -> VOID ID LP RP verificar2 LB var_func . statement RB end_func
    (13) statement -> . asignacion SEMICOL statement
    (14) statement -> . if statement
    (15) statement -> . vars statement
    (16) statement -> . while statement
    (17) statement -> . for statement
    (18) statement -> . escritura statement
    (19) statement -> . escritura_var statement
    (20) statement -> . lectura statement
    (21) statement -> . func_call statement
    (22) statement -> . ID row SEMICOL
    (23) statement -> . ID matrix SEMICOL
    (24) statement -> . empty
    (25) asignacion -> . ID IS value
    (124) if -> . IF LP expression RP check_bool gotof LB statement RB
    (125) if -> . IF LP expression RP check_bool gotof LB statement RB goto elseif
    (126) if -> . IF LP expression RP check_bool gotof LB statement RB goto else
    (26) vars -> . VAR tipo vars1
    (27) vars -> . VAR tipo vars2
    (28) vars -> . VAR tipo vars3
    (29) vars -> . VAR tipo oper_aritmetica
    (30) vars -> . VAR tipo ID row SEMICOL
    (31) vars -> . VAR tipo ID matrix SEMICOL
    (32) vars -> . var_row
    (33) vars -> . var_row vars
    (34) vars -> . var_matrix
    (35) vars -> . var_matrix vars
    (36) vars -> . empty
    (134) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (135) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (144) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (145) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (146) escritura_var -> . PRINT LP any_var RP SEMICOL
    (151) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (152) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (100) func_call -> . ID LP RP SEMICOL
    (101) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (123) empty -> .
    (109) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (116) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 125
    IF              shift and go to state 127
    VAR             shift and go to state 128
    WHILE           shift and go to state 131
    FOR             shift and go to state 132
    PRINT           shift and go to state 133
    READ            shift and go to state 134
    RB              reduce using rule 123 (empty -> .)

  ! ID              [ reduce using rule 123 (empty -> .) ]
  ! IF              [ reduce using rule 123 (empty -> .) ]
  ! VAR             [ reduce using rule 123 (empty -> .) ]
  ! WHILE           [ reduce using rule 123 (empty -> .) ]
  ! FOR             [ reduce using rule 123 (empty -> .) ]
  ! PRINT           [ reduce using rule 123 (empty -> .) ]
  ! READ            [ reduce using rule 123 (empty -> .) ]

    statement                      shift and go to state 235
    asignacion                     shift and go to state 116
    if                             shift and go to state 117
    vars                           shift and go to state 118
    while                          shift and go to state 119
    for                            shift and go to state 120
    escritura                      shift and go to state 121
    escritura_var                  shift and go to state 122
    lectura                        shift and go to state 123
    func_call                      shift and go to state 124
    empty                          shift and go to state 126
    var_row                        shift and go to state 129
    var_matrix                     shift and go to state 130

state 188

    (96) declarar_param -> tipo COMMA declarar_param .

    RP              reduce using rule 96 (declarar_param -> tipo COMMA declarar_param .)


state 189

    (94) declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .

    VAR             reduce using rule 94 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    FUNC            reduce using rule 94 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    VOID            reduce using rule 94 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    INT             reduce using rule 94 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    FLOAT           reduce using rule 94 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    CHAR            reduce using rule 94 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    $end            reduce using rule 94 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    RB              reduce using rule 94 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)


state 190

    (95) declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .

    VAR             reduce using rule 95 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    FUNC            reduce using rule 95 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    VOID            reduce using rule 95 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    INT             reduce using rule 95 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    FLOAT           reduce using rule 95 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    CHAR            reduce using rule 95 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    $end            reduce using rule 95 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    RB              reduce using rule 95 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)


state 191

    (110) var_rowG -> VAR tipo ID row IS LP lista2 RP . SEMICOL

    SEMICOL         shift and go to state 236


state 192

    (113) lista2 -> elem_lista COMMA . lista2
    (114) lista2 -> elem_lista COMMA . elem_lista
    (113) lista2 -> . elem_lista COMMA lista2
    (114) lista2 -> . elem_lista COMMA elem_lista
    (111) elem_lista -> . value
    (112) elem_lista -> . empty
    (73) value -> . CTE_F
    (74) value -> . CTE_I
    (75) value -> . ID
    (76) value -> . CTE_C
    (77) value -> . COMILLA ID COMILLA
    (78) value -> . COMILLAS ID COMILLAS
    (123) empty -> .

    CTE_F           shift and go to state 82
    CTE_I           shift and go to state 83
    ID              shift and go to state 80
    CTE_C           shift and go to state 84
    COMILLA         shift and go to state 85
    COMILLAS        shift and go to state 86
    COMMA           reduce using rule 123 (empty -> .)
    RP              reduce using rule 123 (empty -> .)

    elem_lista                     shift and go to state 237
    lista2                         shift and go to state 238
    value                          shift and go to state 149
    empty                          shift and go to state 150

state 193

    (118) matrix2 -> LP lista2 RP . COMMA matrix2
    (119) matrix2 -> LP lista2 RP . COMMA LP lista2 RP

    COMMA           shift and go to state 239


state 194

    (11) main -> tipo MAIN LP RP LB statement func_return_main RB . end_main
    (108) end_main -> .

    $end            reduce using rule 108 (end_main -> .)
    VOID            reduce using rule 108 (end_main -> .)
    INT             reduce using rule 108 (end_main -> .)
    FLOAT           reduce using rule 108 (end_main -> .)
    CHAR            reduce using rule 108 (end_main -> .)

    end_main                       shift and go to state 240

state 195

    (107) func_return_main -> RETURN expr . SEMICOL
    (171) expr -> expr . MUL expr
    (172) expr -> expr . DIV expr
    (173) expr -> expr . PLUS expr
    (174) expr -> expr . MINUS expr

    SEMICOL         shift and go to state 241
    MUL             shift and go to state 242
    DIV             shift and go to state 243
    PLUS            shift and go to state 244
    MINUS           shift and go to state 245


state 196

    (175) expr -> CTE_I .

    SEMICOL         reduce using rule 175 (expr -> CTE_I .)
    MUL             reduce using rule 175 (expr -> CTE_I .)
    DIV             reduce using rule 175 (expr -> CTE_I .)
    PLUS            reduce using rule 175 (expr -> CTE_I .)
    MINUS           reduce using rule 175 (expr -> CTE_I .)
    GT              reduce using rule 175 (expr -> CTE_I .)
    LT              reduce using rule 175 (expr -> CTE_I .)
    EQUAL           reduce using rule 175 (expr -> CTE_I .)
    NEQ             reduce using rule 175 (expr -> CTE_I .)
    GEQ             reduce using rule 175 (expr -> CTE_I .)
    LEQ             reduce using rule 175 (expr -> CTE_I .)
    RP              reduce using rule 175 (expr -> CTE_I .)
    COMMA           reduce using rule 175 (expr -> CTE_I .)
    CTE_I           reduce using rule 175 (expr -> CTE_I .)
    CTE_F           reduce using rule 175 (expr -> CTE_I .)
    ID              reduce using rule 175 (expr -> CTE_I .)
    TRUE            reduce using rule 175 (expr -> CTE_I .)
    FALSE           reduce using rule 175 (expr -> CTE_I .)
    COMILLA         reduce using rule 175 (expr -> CTE_I .)
    COMILLAS        reduce using rule 175 (expr -> CTE_I .)


state 197

    (176) expr -> CTE_F .

    SEMICOL         reduce using rule 176 (expr -> CTE_F .)
    MUL             reduce using rule 176 (expr -> CTE_F .)
    DIV             reduce using rule 176 (expr -> CTE_F .)
    PLUS            reduce using rule 176 (expr -> CTE_F .)
    MINUS           reduce using rule 176 (expr -> CTE_F .)
    GT              reduce using rule 176 (expr -> CTE_F .)
    LT              reduce using rule 176 (expr -> CTE_F .)
    EQUAL           reduce using rule 176 (expr -> CTE_F .)
    NEQ             reduce using rule 176 (expr -> CTE_F .)
    GEQ             reduce using rule 176 (expr -> CTE_F .)
    LEQ             reduce using rule 176 (expr -> CTE_F .)
    RP              reduce using rule 176 (expr -> CTE_F .)
    COMMA           reduce using rule 176 (expr -> CTE_F .)
    CTE_I           reduce using rule 176 (expr -> CTE_F .)
    CTE_F           reduce using rule 176 (expr -> CTE_F .)
    ID              reduce using rule 176 (expr -> CTE_F .)
    TRUE            reduce using rule 176 (expr -> CTE_F .)
    FALSE           reduce using rule 176 (expr -> CTE_F .)
    COMILLA         reduce using rule 176 (expr -> CTE_F .)
    COMILLAS        reduce using rule 176 (expr -> CTE_F .)


state 198

    (177) expr -> ID .

    SEMICOL         reduce using rule 177 (expr -> ID .)
    MUL             reduce using rule 177 (expr -> ID .)
    DIV             reduce using rule 177 (expr -> ID .)
    PLUS            reduce using rule 177 (expr -> ID .)
    MINUS           reduce using rule 177 (expr -> ID .)
    RP              reduce using rule 177 (expr -> ID .)
    COMMA           reduce using rule 177 (expr -> ID .)
    GT              reduce using rule 177 (expr -> ID .)
    LT              reduce using rule 177 (expr -> ID .)
    EQUAL           reduce using rule 177 (expr -> ID .)
    NEQ             reduce using rule 177 (expr -> ID .)
    GEQ             reduce using rule 177 (expr -> ID .)
    LEQ             reduce using rule 177 (expr -> ID .)
    CTE_I           reduce using rule 177 (expr -> ID .)
    CTE_F           reduce using rule 177 (expr -> ID .)
    ID              reduce using rule 177 (expr -> ID .)
    TRUE            reduce using rule 177 (expr -> ID .)
    FALSE           reduce using rule 177 (expr -> ID .)
    COMILLA         reduce using rule 177 (expr -> ID .)
    COMILLAS        reduce using rule 177 (expr -> ID .)


state 199

    (13) statement -> asignacion SEMICOL statement .

    RETURN          reduce using rule 13 (statement -> asignacion SEMICOL statement .)
    RB              reduce using rule 13 (statement -> asignacion SEMICOL statement .)


state 200

    (22) statement -> ID row SEMICOL .

    RETURN          reduce using rule 22 (statement -> ID row SEMICOL .)
    RB              reduce using rule 22 (statement -> ID row SEMICOL .)


state 201

    (23) statement -> ID matrix SEMICOL .

    RETURN          reduce using rule 23 (statement -> ID matrix SEMICOL .)
    RB              reduce using rule 23 (statement -> ID matrix SEMICOL .)


state 202

    (25) asignacion -> ID IS value .

    SEMICOL         reduce using rule 25 (asignacion -> ID IS value .)


state 203

    (100) func_call -> ID LP RP . SEMICOL

    SEMICOL         shift and go to state 246


state 204

    (101) func_call -> ID LP func_era . func_call_param RP SEMICOL
    (103) func_call_param -> . expr
    (104) func_call_param -> . func_call_param COMMA expr
    (171) expr -> . expr MUL expr
    (172) expr -> . expr DIV expr
    (173) expr -> . expr PLUS expr
    (174) expr -> . expr MINUS expr
    (175) expr -> . CTE_I
    (176) expr -> . CTE_F
    (177) expr -> . ID

    CTE_I           shift and go to state 196
    CTE_F           shift and go to state 197
    ID              shift and go to state 198

    func_call_param                shift and go to state 247
    expr                           shift and go to state 248

state 205

    (124) if -> IF LP expression . RP check_bool gotof LB statement RB
    (125) if -> IF LP expression . RP check_bool gotof LB statement RB goto elseif
    (126) if -> IF LP expression . RP check_bool gotof LB statement RB goto else

    RP              shift and go to state 249


state 206

    (154) expression -> var_gt .

    RP              reduce using rule 154 (expression -> var_gt .)
    CTE_I           reduce using rule 154 (expression -> var_gt .)
    CTE_F           reduce using rule 154 (expression -> var_gt .)
    ID              reduce using rule 154 (expression -> var_gt .)
    TRUE            reduce using rule 154 (expression -> var_gt .)
    FALSE           reduce using rule 154 (expression -> var_gt .)
    COMILLA         reduce using rule 154 (expression -> var_gt .)
    COMILLAS        reduce using rule 154 (expression -> var_gt .)
    SEMICOL         reduce using rule 154 (expression -> var_gt .)


state 207

    (155) expression -> var_lt .

    RP              reduce using rule 155 (expression -> var_lt .)
    CTE_I           reduce using rule 155 (expression -> var_lt .)
    CTE_F           reduce using rule 155 (expression -> var_lt .)
    ID              reduce using rule 155 (expression -> var_lt .)
    TRUE            reduce using rule 155 (expression -> var_lt .)
    FALSE           reduce using rule 155 (expression -> var_lt .)
    COMILLA         reduce using rule 155 (expression -> var_lt .)
    COMILLAS        reduce using rule 155 (expression -> var_lt .)
    SEMICOL         reduce using rule 155 (expression -> var_lt .)


state 208

    (156) expression -> var_equal .

    RP              reduce using rule 156 (expression -> var_equal .)
    CTE_I           reduce using rule 156 (expression -> var_equal .)
    CTE_F           reduce using rule 156 (expression -> var_equal .)
    ID              reduce using rule 156 (expression -> var_equal .)
    TRUE            reduce using rule 156 (expression -> var_equal .)
    FALSE           reduce using rule 156 (expression -> var_equal .)
    COMILLA         reduce using rule 156 (expression -> var_equal .)
    COMILLAS        reduce using rule 156 (expression -> var_equal .)
    SEMICOL         reduce using rule 156 (expression -> var_equal .)


state 209

    (157) expression -> var_neq .

    RP              reduce using rule 157 (expression -> var_neq .)
    CTE_I           reduce using rule 157 (expression -> var_neq .)
    CTE_F           reduce using rule 157 (expression -> var_neq .)
    ID              reduce using rule 157 (expression -> var_neq .)
    TRUE            reduce using rule 157 (expression -> var_neq .)
    FALSE           reduce using rule 157 (expression -> var_neq .)
    COMILLA         reduce using rule 157 (expression -> var_neq .)
    COMILLAS        reduce using rule 157 (expression -> var_neq .)
    SEMICOL         reduce using rule 157 (expression -> var_neq .)


state 210

    (158) expression -> var_geq .

    RP              reduce using rule 158 (expression -> var_geq .)
    CTE_I           reduce using rule 158 (expression -> var_geq .)
    CTE_F           reduce using rule 158 (expression -> var_geq .)
    ID              reduce using rule 158 (expression -> var_geq .)
    TRUE            reduce using rule 158 (expression -> var_geq .)
    FALSE           reduce using rule 158 (expression -> var_geq .)
    COMILLA         reduce using rule 158 (expression -> var_geq .)
    COMILLAS        reduce using rule 158 (expression -> var_geq .)
    SEMICOL         reduce using rule 158 (expression -> var_geq .)


state 211

    (159) expression -> var_leq .

    RP              reduce using rule 159 (expression -> var_leq .)
    CTE_I           reduce using rule 159 (expression -> var_leq .)
    CTE_F           reduce using rule 159 (expression -> var_leq .)
    ID              reduce using rule 159 (expression -> var_leq .)
    TRUE            reduce using rule 159 (expression -> var_leq .)
    FALSE           reduce using rule 159 (expression -> var_leq .)
    COMILLA         reduce using rule 159 (expression -> var_leq .)
    COMILLAS        reduce using rule 159 (expression -> var_leq .)
    SEMICOL         reduce using rule 159 (expression -> var_leq .)


state 212

    (160) expression -> expr .
    (165) var_gt -> expr . GT expr
    (164) var_lt -> expr . LT expr
    (168) var_equal -> expr . EQUAL expr
    (169) var_neq -> expr . NEQ expr
    (167) var_geq -> expr . GEQ expr
    (166) var_leq -> expr . LEQ expr
    (171) expr -> expr . MUL expr
    (172) expr -> expr . DIV expr
    (173) expr -> expr . PLUS expr
    (174) expr -> expr . MINUS expr

    RP              reduce using rule 160 (expression -> expr .)
    SEMICOL         reduce using rule 160 (expression -> expr .)
    GT              shift and go to state 250
    LT              shift and go to state 251
    EQUAL           shift and go to state 252
    NEQ             shift and go to state 253
    GEQ             shift and go to state 254
    LEQ             shift and go to state 255
    MUL             shift and go to state 242
    DIV             shift and go to state 243
    PLUS            shift and go to state 244
    MINUS           shift and go to state 245


state 213

    (161) expression -> TRUE .

    RP              reduce using rule 161 (expression -> TRUE .)
    CTE_I           reduce using rule 161 (expression -> TRUE .)
    CTE_F           reduce using rule 161 (expression -> TRUE .)
    ID              reduce using rule 161 (expression -> TRUE .)
    TRUE            reduce using rule 161 (expression -> TRUE .)
    FALSE           reduce using rule 161 (expression -> TRUE .)
    COMILLA         reduce using rule 161 (expression -> TRUE .)
    COMILLAS        reduce using rule 161 (expression -> TRUE .)
    SEMICOL         reduce using rule 161 (expression -> TRUE .)


state 214

    (162) expression -> FALSE .

    RP              reduce using rule 162 (expression -> FALSE .)
    CTE_I           reduce using rule 162 (expression -> FALSE .)
    CTE_F           reduce using rule 162 (expression -> FALSE .)
    ID              reduce using rule 162 (expression -> FALSE .)
    TRUE            reduce using rule 162 (expression -> FALSE .)
    FALSE           reduce using rule 162 (expression -> FALSE .)
    COMILLA         reduce using rule 162 (expression -> FALSE .)
    COMILLAS        reduce using rule 162 (expression -> FALSE .)
    SEMICOL         reduce using rule 162 (expression -> FALSE .)


state 215

    (163) expression -> ID .
    (177) expr -> ID .

  ! reduce/reduce conflict for RP resolved using rule 163 (expression -> ID .)
  ! reduce/reduce conflict for SEMICOL resolved using rule 163 (expression -> ID .)
    RP              reduce using rule 163 (expression -> ID .)
    SEMICOL         reduce using rule 163 (expression -> ID .)
    GT              reduce using rule 177 (expr -> ID .)
    LT              reduce using rule 177 (expr -> ID .)
    EQUAL           reduce using rule 177 (expr -> ID .)
    NEQ             reduce using rule 177 (expr -> ID .)
    GEQ             reduce using rule 177 (expr -> ID .)
    LEQ             reduce using rule 177 (expr -> ID .)
    MUL             reduce using rule 177 (expr -> ID .)
    DIV             reduce using rule 177 (expr -> ID .)
    PLUS            reduce using rule 177 (expr -> ID .)
    MINUS           reduce using rule 177 (expr -> ID .)

  ! RP              [ reduce using rule 177 (expr -> ID .) ]
  ! SEMICOL         [ reduce using rule 177 (expr -> ID .) ]


state 216

    (26) vars -> VAR tipo vars1 .

    ID              reduce using rule 26 (vars -> VAR tipo vars1 .)
    IF              reduce using rule 26 (vars -> VAR tipo vars1 .)
    VAR             reduce using rule 26 (vars -> VAR tipo vars1 .)
    WHILE           reduce using rule 26 (vars -> VAR tipo vars1 .)
    FOR             reduce using rule 26 (vars -> VAR tipo vars1 .)
    PRINT           reduce using rule 26 (vars -> VAR tipo vars1 .)
    READ            reduce using rule 26 (vars -> VAR tipo vars1 .)
    RETURN          reduce using rule 26 (vars -> VAR tipo vars1 .)
    RB              reduce using rule 26 (vars -> VAR tipo vars1 .)


state 217

    (27) vars -> VAR tipo vars2 .

    ID              reduce using rule 27 (vars -> VAR tipo vars2 .)
    IF              reduce using rule 27 (vars -> VAR tipo vars2 .)
    VAR             reduce using rule 27 (vars -> VAR tipo vars2 .)
    WHILE           reduce using rule 27 (vars -> VAR tipo vars2 .)
    FOR             reduce using rule 27 (vars -> VAR tipo vars2 .)
    PRINT           reduce using rule 27 (vars -> VAR tipo vars2 .)
    READ            reduce using rule 27 (vars -> VAR tipo vars2 .)
    RETURN          reduce using rule 27 (vars -> VAR tipo vars2 .)
    RB              reduce using rule 27 (vars -> VAR tipo vars2 .)


state 218

    (28) vars -> VAR tipo vars3 .

    ID              reduce using rule 28 (vars -> VAR tipo vars3 .)
    IF              reduce using rule 28 (vars -> VAR tipo vars3 .)
    VAR             reduce using rule 28 (vars -> VAR tipo vars3 .)
    WHILE           reduce using rule 28 (vars -> VAR tipo vars3 .)
    FOR             reduce using rule 28 (vars -> VAR tipo vars3 .)
    PRINT           reduce using rule 28 (vars -> VAR tipo vars3 .)
    READ            reduce using rule 28 (vars -> VAR tipo vars3 .)
    RETURN          reduce using rule 28 (vars -> VAR tipo vars3 .)
    RB              reduce using rule 28 (vars -> VAR tipo vars3 .)


state 219

    (29) vars -> VAR tipo oper_aritmetica .

    ID              reduce using rule 29 (vars -> VAR tipo oper_aritmetica .)
    IF              reduce using rule 29 (vars -> VAR tipo oper_aritmetica .)
    VAR             reduce using rule 29 (vars -> VAR tipo oper_aritmetica .)
    WHILE           reduce using rule 29 (vars -> VAR tipo oper_aritmetica .)
    FOR             reduce using rule 29 (vars -> VAR tipo oper_aritmetica .)
    PRINT           reduce using rule 29 (vars -> VAR tipo oper_aritmetica .)
    READ            reduce using rule 29 (vars -> VAR tipo oper_aritmetica .)
    RETURN          reduce using rule 29 (vars -> VAR tipo oper_aritmetica .)
    RB              reduce using rule 29 (vars -> VAR tipo oper_aritmetica .)


state 220

    (30) vars -> VAR tipo ID . row SEMICOL
    (31) vars -> VAR tipo ID . matrix SEMICOL
    (109) var_row -> VAR tipo ID . row IS LP lista2 RP SEMICOL
    (116) var_matrix -> VAR tipo ID . matrix IS matrix2 SEMICOL
    (37) vars1 -> ID . SEMICOL
    (42) vars2 -> ID . IS value SEMICOL
    (46) vars3 -> ID . SEMICOL
    (170) oper_aritmetica -> ID . IS expr SEMICOL
    (40) vars2_1 -> ID . IS value COMMA
    (45) vars3_1 -> ID . COMMA
    (115) row -> . LC CTE_I RC
    (122) matrix -> . row row

    SEMICOL         shift and go to state 257
    IS              shift and go to state 259
    COMMA           shift and go to state 260
    LC              shift and go to state 64

    row                            shift and go to state 256
    matrix                         shift and go to state 258

state 221

    (38) vars2 -> vars2_1 . ID IS value SEMICOL
    (39) vars2_1 -> vars2_1 . ID IS value COMMA

    ID              shift and go to state 261


state 222

    (43) vars3 -> vars3_1 . ID SEMICOL
    (44) vars3_1 -> vars3_1 . ID COMMA

    ID              shift and go to state 262


state 223

    (41) vars2_1 -> empty .
    (47) vars3_1 -> empty .

  ! reduce/reduce conflict for ID resolved using rule 41 (vars2_1 -> empty .)
    ID              reduce using rule 41 (vars2_1 -> empty .)

  ! ID              [ reduce using rule 47 (vars3_1 -> empty .) ]


state 224

    (134) while -> WHILE guarda_num_salto LP . expression RP check_bool gotof LB statement RB goto
    (154) expression -> . var_gt
    (155) expression -> . var_lt
    (156) expression -> . var_equal
    (157) expression -> . var_neq
    (158) expression -> . var_geq
    (159) expression -> . var_leq
    (160) expression -> . expr
    (161) expression -> . TRUE
    (162) expression -> . FALSE
    (163) expression -> . ID
    (165) var_gt -> . expr GT expr
    (164) var_lt -> . expr LT expr
    (168) var_equal -> . expr EQUAL expr
    (169) var_neq -> . expr NEQ expr
    (167) var_geq -> . expr GEQ expr
    (166) var_leq -> . expr LEQ expr
    (171) expr -> . expr MUL expr
    (172) expr -> . expr DIV expr
    (173) expr -> . expr PLUS expr
    (174) expr -> . expr MINUS expr
    (175) expr -> . CTE_I
    (176) expr -> . CTE_F
    (177) expr -> . ID

    TRUE            shift and go to state 213
    FALSE           shift and go to state 214
    ID              shift and go to state 215
    CTE_I           shift and go to state 196
    CTE_F           shift and go to state 197

    expression                     shift and go to state 263
    var_gt                         shift and go to state 206
    var_lt                         shift and go to state 207
    var_equal                      shift and go to state 208
    var_neq                        shift and go to state 209
    var_geq                        shift and go to state 210
    var_leq                        shift and go to state 211
    expr                           shift and go to state 212

state 225

    (135) for -> FOR LP VAR . tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (70) tipo -> . INT
    (71) tipo -> . FLOAT
    (72) tipo -> . CHAR

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    tipo                           shift and go to state 264

state 226

    (144) escritura -> PRINT LP COMILLA . any COMILLA RP SEMICOL
    (148) any -> . expr any
    (149) any -> . expression any
    (150) any -> . empty
    (171) expr -> . expr MUL expr
    (172) expr -> . expr DIV expr
    (173) expr -> . expr PLUS expr
    (174) expr -> . expr MINUS expr
    (175) expr -> . CTE_I
    (176) expr -> . CTE_F
    (177) expr -> . ID
    (154) expression -> . var_gt
    (155) expression -> . var_lt
    (156) expression -> . var_equal
    (157) expression -> . var_neq
    (158) expression -> . var_geq
    (159) expression -> . var_leq
    (160) expression -> . expr
    (161) expression -> . TRUE
    (162) expression -> . FALSE
    (163) expression -> . ID
    (123) empty -> .
    (165) var_gt -> . expr GT expr
    (164) var_lt -> . expr LT expr
    (168) var_equal -> . expr EQUAL expr
    (169) var_neq -> . expr NEQ expr
    (167) var_geq -> . expr GEQ expr
    (166) var_leq -> . expr LEQ expr

    CTE_I           shift and go to state 196
    CTE_F           shift and go to state 197
    ID              shift and go to state 269
    TRUE            shift and go to state 213
    FALSE           shift and go to state 214
    COMILLA         reduce using rule 123 (empty -> .)

    any                            shift and go to state 265
    expr                           shift and go to state 266
    expression                     shift and go to state 267
    empty                          shift and go to state 268
    var_gt                         shift and go to state 206
    var_lt                         shift and go to state 207
    var_equal                      shift and go to state 208
    var_neq                        shift and go to state 209
    var_geq                        shift and go to state 210
    var_leq                        shift and go to state 211

state 227

    (145) escritura -> PRINT LP COMILLAS . any COMILLAS RP SEMICOL
    (148) any -> . expr any
    (149) any -> . expression any
    (150) any -> . empty
    (171) expr -> . expr MUL expr
    (172) expr -> . expr DIV expr
    (173) expr -> . expr PLUS expr
    (174) expr -> . expr MINUS expr
    (175) expr -> . CTE_I
    (176) expr -> . CTE_F
    (177) expr -> . ID
    (154) expression -> . var_gt
    (155) expression -> . var_lt
    (156) expression -> . var_equal
    (157) expression -> . var_neq
    (158) expression -> . var_geq
    (159) expression -> . var_leq
    (160) expression -> . expr
    (161) expression -> . TRUE
    (162) expression -> . FALSE
    (163) expression -> . ID
    (123) empty -> .
    (165) var_gt -> . expr GT expr
    (164) var_lt -> . expr LT expr
    (168) var_equal -> . expr EQUAL expr
    (169) var_neq -> . expr NEQ expr
    (167) var_geq -> . expr GEQ expr
    (166) var_leq -> . expr LEQ expr

    CTE_I           shift and go to state 196
    CTE_F           shift and go to state 197
    ID              shift and go to state 269
    TRUE            shift and go to state 213
    FALSE           shift and go to state 214
    COMILLAS        reduce using rule 123 (empty -> .)

    any                            shift and go to state 270
    expr                           shift and go to state 266
    expression                     shift and go to state 267
    empty                          shift and go to state 268
    var_gt                         shift and go to state 206
    var_lt                         shift and go to state 207
    var_equal                      shift and go to state 208
    var_neq                        shift and go to state 209
    var_geq                        shift and go to state 210
    var_leq                        shift and go to state 211

state 228

    (146) escritura_var -> PRINT LP any_var . RP SEMICOL

    RP              shift and go to state 271


state 229

    (147) any_var -> ID .

    RP              reduce using rule 147 (any_var -> ID .)


state 230

    (151) lectura -> READ LP COMILLA . any_lectura COMILLA RP SEMICOL
    (153) any_lectura -> . ID

    ID              shift and go to state 273

    any_lectura                    shift and go to state 272

state 231

    (152) lectura -> READ LP COMILLAS . any_lectura COMILLAS RP SEMICOL
    (153) any_lectura -> . ID

    ID              shift and go to state 273

    any_lectura                    shift and go to state 274

state 232

    (82) funcion -> tipo ID LP RP verificar2 LB var_func statement . add_func_dir2 func_return RB end_func
    (87) add_func_dir2 -> .

    RETURN          reduce using rule 87 (add_func_dir2 -> .)

    add_func_dir2                  shift and go to state 275

state 233

    (83) funcion -> tipo ID LP param RP verificar LB var_func . statement add_func_dir func_return_param RB end_func
    (13) statement -> . asignacion SEMICOL statement
    (14) statement -> . if statement
    (15) statement -> . vars statement
    (16) statement -> . while statement
    (17) statement -> . for statement
    (18) statement -> . escritura statement
    (19) statement -> . escritura_var statement
    (20) statement -> . lectura statement
    (21) statement -> . func_call statement
    (22) statement -> . ID row SEMICOL
    (23) statement -> . ID matrix SEMICOL
    (24) statement -> . empty
    (25) asignacion -> . ID IS value
    (124) if -> . IF LP expression RP check_bool gotof LB statement RB
    (125) if -> . IF LP expression RP check_bool gotof LB statement RB goto elseif
    (126) if -> . IF LP expression RP check_bool gotof LB statement RB goto else
    (26) vars -> . VAR tipo vars1
    (27) vars -> . VAR tipo vars2
    (28) vars -> . VAR tipo vars3
    (29) vars -> . VAR tipo oper_aritmetica
    (30) vars -> . VAR tipo ID row SEMICOL
    (31) vars -> . VAR tipo ID matrix SEMICOL
    (32) vars -> . var_row
    (33) vars -> . var_row vars
    (34) vars -> . var_matrix
    (35) vars -> . var_matrix vars
    (36) vars -> . empty
    (134) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (135) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (144) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (145) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (146) escritura_var -> . PRINT LP any_var RP SEMICOL
    (151) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (152) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (100) func_call -> . ID LP RP SEMICOL
    (101) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (123) empty -> .
    (109) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (116) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 125
    IF              shift and go to state 127
    VAR             shift and go to state 128
    WHILE           shift and go to state 131
    FOR             shift and go to state 132
    PRINT           shift and go to state 133
    READ            shift and go to state 134
    RETURN          reduce using rule 123 (empty -> .)

  ! ID              [ reduce using rule 123 (empty -> .) ]
  ! IF              [ reduce using rule 123 (empty -> .) ]
  ! VAR             [ reduce using rule 123 (empty -> .) ]
  ! WHILE           [ reduce using rule 123 (empty -> .) ]
  ! FOR             [ reduce using rule 123 (empty -> .) ]
  ! PRINT           [ reduce using rule 123 (empty -> .) ]
  ! READ            [ reduce using rule 123 (empty -> .) ]

    statement                      shift and go to state 276
    asignacion                     shift and go to state 116
    if                             shift and go to state 117
    vars                           shift and go to state 118
    while                          shift and go to state 119
    for                            shift and go to state 120
    escritura                      shift and go to state 121
    escritura_var                  shift and go to state 122
    lectura                        shift and go to state 123
    func_call                      shift and go to state 124
    empty                          shift and go to state 126
    var_row                        shift and go to state 129
    var_matrix                     shift and go to state 130

state 234

    (80) funcion -> VOID ID LP param RP verificar LB var_func . statement RB end_func
    (13) statement -> . asignacion SEMICOL statement
    (14) statement -> . if statement
    (15) statement -> . vars statement
    (16) statement -> . while statement
    (17) statement -> . for statement
    (18) statement -> . escritura statement
    (19) statement -> . escritura_var statement
    (20) statement -> . lectura statement
    (21) statement -> . func_call statement
    (22) statement -> . ID row SEMICOL
    (23) statement -> . ID matrix SEMICOL
    (24) statement -> . empty
    (25) asignacion -> . ID IS value
    (124) if -> . IF LP expression RP check_bool gotof LB statement RB
    (125) if -> . IF LP expression RP check_bool gotof LB statement RB goto elseif
    (126) if -> . IF LP expression RP check_bool gotof LB statement RB goto else
    (26) vars -> . VAR tipo vars1
    (27) vars -> . VAR tipo vars2
    (28) vars -> . VAR tipo vars3
    (29) vars -> . VAR tipo oper_aritmetica
    (30) vars -> . VAR tipo ID row SEMICOL
    (31) vars -> . VAR tipo ID matrix SEMICOL
    (32) vars -> . var_row
    (33) vars -> . var_row vars
    (34) vars -> . var_matrix
    (35) vars -> . var_matrix vars
    (36) vars -> . empty
    (134) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (135) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (144) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (145) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (146) escritura_var -> . PRINT LP any_var RP SEMICOL
    (151) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (152) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (100) func_call -> . ID LP RP SEMICOL
    (101) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (123) empty -> .
    (109) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (116) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 125
    IF              shift and go to state 127
    VAR             shift and go to state 128
    WHILE           shift and go to state 131
    FOR             shift and go to state 132
    PRINT           shift and go to state 133
    READ            shift and go to state 134
    RB              reduce using rule 123 (empty -> .)

  ! ID              [ reduce using rule 123 (empty -> .) ]
  ! IF              [ reduce using rule 123 (empty -> .) ]
  ! VAR             [ reduce using rule 123 (empty -> .) ]
  ! WHILE           [ reduce using rule 123 (empty -> .) ]
  ! FOR             [ reduce using rule 123 (empty -> .) ]
  ! PRINT           [ reduce using rule 123 (empty -> .) ]
  ! READ            [ reduce using rule 123 (empty -> .) ]

    statement                      shift and go to state 277
    asignacion                     shift and go to state 116
    if                             shift and go to state 117
    vars                           shift and go to state 118
    while                          shift and go to state 119
    for                            shift and go to state 120
    escritura                      shift and go to state 121
    escritura_var                  shift and go to state 122
    lectura                        shift and go to state 123
    func_call                      shift and go to state 124
    empty                          shift and go to state 126
    var_row                        shift and go to state 129
    var_matrix                     shift and go to state 130

state 235

    (81) funcion -> VOID ID LP RP verificar2 LB var_func statement . RB end_func

    RB              shift and go to state 278


state 236

    (110) var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .

    VAR             reduce using rule 110 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    FUNC            reduce using rule 110 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    VOID            reduce using rule 110 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    INT             reduce using rule 110 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    FLOAT           reduce using rule 110 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    CHAR            reduce using rule 110 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    $end            reduce using rule 110 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    RB              reduce using rule 110 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)


state 237

    (114) lista2 -> elem_lista COMMA elem_lista .
    (113) lista2 -> elem_lista . COMMA lista2
    (114) lista2 -> elem_lista . COMMA elem_lista

    RP              reduce using rule 114 (lista2 -> elem_lista COMMA elem_lista .)
    COMMA           shift and go to state 192


state 238

    (113) lista2 -> elem_lista COMMA lista2 .

    RP              reduce using rule 113 (lista2 -> elem_lista COMMA lista2 .)


state 239

    (118) matrix2 -> LP lista2 RP COMMA . matrix2
    (119) matrix2 -> LP lista2 RP COMMA . LP lista2 RP
    (118) matrix2 -> . LP lista2 RP COMMA matrix2
    (119) matrix2 -> . LP lista2 RP COMMA LP lista2 RP

    LP              shift and go to state 279

    matrix2                        shift and go to state 280

state 240

    (11) main -> tipo MAIN LP RP LB statement func_return_main RB end_main .

    $end            reduce using rule 11 (main -> tipo MAIN LP RP LB statement func_return_main RB end_main .)
    VOID            reduce using rule 11 (main -> tipo MAIN LP RP LB statement func_return_main RB end_main .)
    INT             reduce using rule 11 (main -> tipo MAIN LP RP LB statement func_return_main RB end_main .)
    FLOAT           reduce using rule 11 (main -> tipo MAIN LP RP LB statement func_return_main RB end_main .)
    CHAR            reduce using rule 11 (main -> tipo MAIN LP RP LB statement func_return_main RB end_main .)


state 241

    (107) func_return_main -> RETURN expr SEMICOL .

    RB              reduce using rule 107 (func_return_main -> RETURN expr SEMICOL .)


state 242

    (171) expr -> expr MUL . expr
    (171) expr -> . expr MUL expr
    (172) expr -> . expr DIV expr
    (173) expr -> . expr PLUS expr
    (174) expr -> . expr MINUS expr
    (175) expr -> . CTE_I
    (176) expr -> . CTE_F
    (177) expr -> . ID

    CTE_I           shift and go to state 196
    CTE_F           shift and go to state 197
    ID              shift and go to state 198

    expr                           shift and go to state 281

state 243

    (172) expr -> expr DIV . expr
    (171) expr -> . expr MUL expr
    (172) expr -> . expr DIV expr
    (173) expr -> . expr PLUS expr
    (174) expr -> . expr MINUS expr
    (175) expr -> . CTE_I
    (176) expr -> . CTE_F
    (177) expr -> . ID

    CTE_I           shift and go to state 196
    CTE_F           shift and go to state 197
    ID              shift and go to state 198

    expr                           shift and go to state 282

state 244

    (173) expr -> expr PLUS . expr
    (171) expr -> . expr MUL expr
    (172) expr -> . expr DIV expr
    (173) expr -> . expr PLUS expr
    (174) expr -> . expr MINUS expr
    (175) expr -> . CTE_I
    (176) expr -> . CTE_F
    (177) expr -> . ID

    CTE_I           shift and go to state 196
    CTE_F           shift and go to state 197
    ID              shift and go to state 198

    expr                           shift and go to state 283

state 245

    (174) expr -> expr MINUS . expr
    (171) expr -> . expr MUL expr
    (172) expr -> . expr DIV expr
    (173) expr -> . expr PLUS expr
    (174) expr -> . expr MINUS expr
    (175) expr -> . CTE_I
    (176) expr -> . CTE_F
    (177) expr -> . ID

    CTE_I           shift and go to state 196
    CTE_F           shift and go to state 197
    ID              shift and go to state 198

    expr                           shift and go to state 284

state 246

    (100) func_call -> ID LP RP SEMICOL .

    ID              reduce using rule 100 (func_call -> ID LP RP SEMICOL .)
    IF              reduce using rule 100 (func_call -> ID LP RP SEMICOL .)
    VAR             reduce using rule 100 (func_call -> ID LP RP SEMICOL .)
    WHILE           reduce using rule 100 (func_call -> ID LP RP SEMICOL .)
    FOR             reduce using rule 100 (func_call -> ID LP RP SEMICOL .)
    PRINT           reduce using rule 100 (func_call -> ID LP RP SEMICOL .)
    READ            reduce using rule 100 (func_call -> ID LP RP SEMICOL .)
    RETURN          reduce using rule 100 (func_call -> ID LP RP SEMICOL .)
    RB              reduce using rule 100 (func_call -> ID LP RP SEMICOL .)


state 247

    (101) func_call -> ID LP func_era func_call_param . RP SEMICOL
    (104) func_call_param -> func_call_param . COMMA expr

    RP              shift and go to state 285
    COMMA           shift and go to state 286


state 248

    (103) func_call_param -> expr .
    (171) expr -> expr . MUL expr
    (172) expr -> expr . DIV expr
    (173) expr -> expr . PLUS expr
    (174) expr -> expr . MINUS expr

    RP              reduce using rule 103 (func_call_param -> expr .)
    COMMA           reduce using rule 103 (func_call_param -> expr .)
    MUL             shift and go to state 242
    DIV             shift and go to state 243
    PLUS            shift and go to state 244
    MINUS           shift and go to state 245


state 249

    (124) if -> IF LP expression RP . check_bool gotof LB statement RB
    (125) if -> IF LP expression RP . check_bool gotof LB statement RB goto elseif
    (126) if -> IF LP expression RP . check_bool gotof LB statement RB goto else
    (178) check_bool -> .

    LB              reduce using rule 178 (check_bool -> .)

    check_bool                     shift and go to state 287

state 250

    (165) var_gt -> expr GT . expr
    (171) expr -> . expr MUL expr
    (172) expr -> . expr DIV expr
    (173) expr -> . expr PLUS expr
    (174) expr -> . expr MINUS expr
    (175) expr -> . CTE_I
    (176) expr -> . CTE_F
    (177) expr -> . ID

    CTE_I           shift and go to state 196
    CTE_F           shift and go to state 197
    ID              shift and go to state 198

    expr                           shift and go to state 288

state 251

    (164) var_lt -> expr LT . expr
    (171) expr -> . expr MUL expr
    (172) expr -> . expr DIV expr
    (173) expr -> . expr PLUS expr
    (174) expr -> . expr MINUS expr
    (175) expr -> . CTE_I
    (176) expr -> . CTE_F
    (177) expr -> . ID

    CTE_I           shift and go to state 196
    CTE_F           shift and go to state 197
    ID              shift and go to state 198

    expr                           shift and go to state 289

state 252

    (168) var_equal -> expr EQUAL . expr
    (171) expr -> . expr MUL expr
    (172) expr -> . expr DIV expr
    (173) expr -> . expr PLUS expr
    (174) expr -> . expr MINUS expr
    (175) expr -> . CTE_I
    (176) expr -> . CTE_F
    (177) expr -> . ID

    CTE_I           shift and go to state 196
    CTE_F           shift and go to state 197
    ID              shift and go to state 198

    expr                           shift and go to state 290

state 253

    (169) var_neq -> expr NEQ . expr
    (171) expr -> . expr MUL expr
    (172) expr -> . expr DIV expr
    (173) expr -> . expr PLUS expr
    (174) expr -> . expr MINUS expr
    (175) expr -> . CTE_I
    (176) expr -> . CTE_F
    (177) expr -> . ID

    CTE_I           shift and go to state 196
    CTE_F           shift and go to state 197
    ID              shift and go to state 198

    expr                           shift and go to state 291

state 254

    (167) var_geq -> expr GEQ . expr
    (171) expr -> . expr MUL expr
    (172) expr -> . expr DIV expr
    (173) expr -> . expr PLUS expr
    (174) expr -> . expr MINUS expr
    (175) expr -> . CTE_I
    (176) expr -> . CTE_F
    (177) expr -> . ID

    CTE_I           shift and go to state 196
    CTE_F           shift and go to state 197
    ID              shift and go to state 198

    expr                           shift and go to state 292

state 255

    (166) var_leq -> expr LEQ . expr
    (171) expr -> . expr MUL expr
    (172) expr -> . expr DIV expr
    (173) expr -> . expr PLUS expr
    (174) expr -> . expr MINUS expr
    (175) expr -> . CTE_I
    (176) expr -> . CTE_F
    (177) expr -> . ID

    CTE_I           shift and go to state 196
    CTE_F           shift and go to state 197
    ID              shift and go to state 198

    expr                           shift and go to state 293

state 256

    (30) vars -> VAR tipo ID row . SEMICOL
    (109) var_row -> VAR tipo ID row . IS LP lista2 RP SEMICOL
    (122) matrix -> row . row
    (115) row -> . LC CTE_I RC

    SEMICOL         shift and go to state 294
    IS              shift and go to state 295
    LC              shift and go to state 64

    row                            shift and go to state 78

state 257

    (37) vars1 -> ID SEMICOL .
    (46) vars3 -> ID SEMICOL .

  ! reduce/reduce conflict for ID resolved using rule 37 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for IF resolved using rule 37 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for VAR resolved using rule 37 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for WHILE resolved using rule 37 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for FOR resolved using rule 37 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for PRINT resolved using rule 37 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for READ resolved using rule 37 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for RETURN resolved using rule 37 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for RB resolved using rule 37 (vars1 -> ID SEMICOL .)
    ID              reduce using rule 37 (vars1 -> ID SEMICOL .)
    IF              reduce using rule 37 (vars1 -> ID SEMICOL .)
    VAR             reduce using rule 37 (vars1 -> ID SEMICOL .)
    WHILE           reduce using rule 37 (vars1 -> ID SEMICOL .)
    FOR             reduce using rule 37 (vars1 -> ID SEMICOL .)
    PRINT           reduce using rule 37 (vars1 -> ID SEMICOL .)
    READ            reduce using rule 37 (vars1 -> ID SEMICOL .)
    RETURN          reduce using rule 37 (vars1 -> ID SEMICOL .)
    RB              reduce using rule 37 (vars1 -> ID SEMICOL .)

  ! ID              [ reduce using rule 46 (vars3 -> ID SEMICOL .) ]
  ! IF              [ reduce using rule 46 (vars3 -> ID SEMICOL .) ]
  ! VAR             [ reduce using rule 46 (vars3 -> ID SEMICOL .) ]
  ! WHILE           [ reduce using rule 46 (vars3 -> ID SEMICOL .) ]
  ! FOR             [ reduce using rule 46 (vars3 -> ID SEMICOL .) ]
  ! PRINT           [ reduce using rule 46 (vars3 -> ID SEMICOL .) ]
  ! READ            [ reduce using rule 46 (vars3 -> ID SEMICOL .) ]
  ! RETURN          [ reduce using rule 46 (vars3 -> ID SEMICOL .) ]
  ! RB              [ reduce using rule 46 (vars3 -> ID SEMICOL .) ]


state 258

    (31) vars -> VAR tipo ID matrix . SEMICOL
    (116) var_matrix -> VAR tipo ID matrix . IS matrix2 SEMICOL

    SEMICOL         shift and go to state 296
    IS              shift and go to state 297


state 259

    (42) vars2 -> ID IS . value SEMICOL
    (170) oper_aritmetica -> ID IS . expr SEMICOL
    (40) vars2_1 -> ID IS . value COMMA
    (73) value -> . CTE_F
    (74) value -> . CTE_I
    (75) value -> . ID
    (76) value -> . CTE_C
    (77) value -> . COMILLA ID COMILLA
    (78) value -> . COMILLAS ID COMILLAS
    (171) expr -> . expr MUL expr
    (172) expr -> . expr DIV expr
    (173) expr -> . expr PLUS expr
    (174) expr -> . expr MINUS expr
    (175) expr -> . CTE_I
    (176) expr -> . CTE_F
    (177) expr -> . ID

    CTE_F           shift and go to state 301
    CTE_I           shift and go to state 302
    ID              shift and go to state 298
    CTE_C           shift and go to state 84
    COMILLA         shift and go to state 85
    COMILLAS        shift and go to state 86

    value                          shift and go to state 299
    expr                           shift and go to state 300

state 260

    (45) vars3_1 -> ID COMMA .

    ID              reduce using rule 45 (vars3_1 -> ID COMMA .)


state 261

    (38) vars2 -> vars2_1 ID . IS value SEMICOL
    (39) vars2_1 -> vars2_1 ID . IS value COMMA

    IS              shift and go to state 303


state 262

    (43) vars3 -> vars3_1 ID . SEMICOL
    (44) vars3_1 -> vars3_1 ID . COMMA

    SEMICOL         shift and go to state 304
    COMMA           shift and go to state 305


state 263

    (134) while -> WHILE guarda_num_salto LP expression . RP check_bool gotof LB statement RB goto

    RP              shift and go to state 306


state 264

    (135) for -> FOR LP VAR tipo . ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto

    ID              shift and go to state 307


state 265

    (144) escritura -> PRINT LP COMILLA any . COMILLA RP SEMICOL

    COMILLA         shift and go to state 308


state 266

    (148) any -> expr . any
    (171) expr -> expr . MUL expr
    (172) expr -> expr . DIV expr
    (173) expr -> expr . PLUS expr
    (174) expr -> expr . MINUS expr
    (160) expression -> expr .
    (165) var_gt -> expr . GT expr
    (164) var_lt -> expr . LT expr
    (168) var_equal -> expr . EQUAL expr
    (169) var_neq -> expr . NEQ expr
    (167) var_geq -> expr . GEQ expr
    (166) var_leq -> expr . LEQ expr
    (148) any -> . expr any
    (149) any -> . expression any
    (150) any -> . empty
    (171) expr -> . expr MUL expr
    (172) expr -> . expr DIV expr
    (173) expr -> . expr PLUS expr
    (174) expr -> . expr MINUS expr
    (175) expr -> . CTE_I
    (176) expr -> . CTE_F
    (177) expr -> . ID
    (154) expression -> . var_gt
    (155) expression -> . var_lt
    (156) expression -> . var_equal
    (157) expression -> . var_neq
    (158) expression -> . var_geq
    (159) expression -> . var_leq
    (160) expression -> . expr
    (161) expression -> . TRUE
    (162) expression -> . FALSE
    (163) expression -> . ID
    (123) empty -> .
    (165) var_gt -> . expr GT expr
    (164) var_lt -> . expr LT expr
    (168) var_equal -> . expr EQUAL expr
    (169) var_neq -> . expr NEQ expr
    (167) var_geq -> . expr GEQ expr
    (166) var_leq -> . expr LEQ expr

  ! shift/reduce conflict for CTE_I resolved as shift
  ! shift/reduce conflict for CTE_F resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! reduce/reduce conflict for COMILLA resolved using rule 123 (empty -> .)
  ! reduce/reduce conflict for COMILLAS resolved using rule 123 (empty -> .)
    MUL             shift and go to state 242
    DIV             shift and go to state 243
    PLUS            shift and go to state 244
    MINUS           shift and go to state 245
    GT              shift and go to state 250
    LT              shift and go to state 251
    EQUAL           shift and go to state 252
    NEQ             shift and go to state 253
    GEQ             shift and go to state 254
    LEQ             shift and go to state 255
    CTE_I           shift and go to state 196
    CTE_F           shift and go to state 197
    ID              shift and go to state 269
    TRUE            shift and go to state 213
    FALSE           shift and go to state 214
    COMILLA         reduce using rule 123 (empty -> .)
    COMILLAS        reduce using rule 123 (empty -> .)

  ! CTE_I           [ reduce using rule 160 (expression -> expr .) ]
  ! CTE_F           [ reduce using rule 160 (expression -> expr .) ]
  ! ID              [ reduce using rule 160 (expression -> expr .) ]
  ! TRUE            [ reduce using rule 160 (expression -> expr .) ]
  ! FALSE           [ reduce using rule 160 (expression -> expr .) ]
  ! COMILLA         [ reduce using rule 160 (expression -> expr .) ]
  ! COMILLAS        [ reduce using rule 160 (expression -> expr .) ]

    expr                           shift and go to state 266
    any                            shift and go to state 309
    expression                     shift and go to state 267
    empty                          shift and go to state 268
    var_gt                         shift and go to state 206
    var_lt                         shift and go to state 207
    var_equal                      shift and go to state 208
    var_neq                        shift and go to state 209
    var_geq                        shift and go to state 210
    var_leq                        shift and go to state 211

state 267

    (149) any -> expression . any
    (148) any -> . expr any
    (149) any -> . expression any
    (150) any -> . empty
    (171) expr -> . expr MUL expr
    (172) expr -> . expr DIV expr
    (173) expr -> . expr PLUS expr
    (174) expr -> . expr MINUS expr
    (175) expr -> . CTE_I
    (176) expr -> . CTE_F
    (177) expr -> . ID
    (154) expression -> . var_gt
    (155) expression -> . var_lt
    (156) expression -> . var_equal
    (157) expression -> . var_neq
    (158) expression -> . var_geq
    (159) expression -> . var_leq
    (160) expression -> . expr
    (161) expression -> . TRUE
    (162) expression -> . FALSE
    (163) expression -> . ID
    (123) empty -> .
    (165) var_gt -> . expr GT expr
    (164) var_lt -> . expr LT expr
    (168) var_equal -> . expr EQUAL expr
    (169) var_neq -> . expr NEQ expr
    (167) var_geq -> . expr GEQ expr
    (166) var_leq -> . expr LEQ expr

    CTE_I           shift and go to state 196
    CTE_F           shift and go to state 197
    ID              shift and go to state 269
    TRUE            shift and go to state 213
    FALSE           shift and go to state 214
    COMILLA         reduce using rule 123 (empty -> .)
    COMILLAS        reduce using rule 123 (empty -> .)

    expression                     shift and go to state 267
    any                            shift and go to state 310
    expr                           shift and go to state 266
    empty                          shift and go to state 268
    var_gt                         shift and go to state 206
    var_lt                         shift and go to state 207
    var_equal                      shift and go to state 208
    var_neq                        shift and go to state 209
    var_geq                        shift and go to state 210
    var_leq                        shift and go to state 211

state 268

    (150) any -> empty .

    COMILLA         reduce using rule 150 (any -> empty .)
    COMILLAS        reduce using rule 150 (any -> empty .)


state 269

    (177) expr -> ID .
    (163) expression -> ID .

  ! reduce/reduce conflict for CTE_I resolved using rule 163 (expression -> ID .)
  ! reduce/reduce conflict for CTE_F resolved using rule 163 (expression -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 163 (expression -> ID .)
  ! reduce/reduce conflict for TRUE resolved using rule 163 (expression -> ID .)
  ! reduce/reduce conflict for FALSE resolved using rule 163 (expression -> ID .)
  ! reduce/reduce conflict for COMILLA resolved using rule 163 (expression -> ID .)
  ! reduce/reduce conflict for COMILLAS resolved using rule 163 (expression -> ID .)
    MUL             reduce using rule 177 (expr -> ID .)
    DIV             reduce using rule 177 (expr -> ID .)
    PLUS            reduce using rule 177 (expr -> ID .)
    MINUS           reduce using rule 177 (expr -> ID .)
    GT              reduce using rule 177 (expr -> ID .)
    LT              reduce using rule 177 (expr -> ID .)
    EQUAL           reduce using rule 177 (expr -> ID .)
    NEQ             reduce using rule 177 (expr -> ID .)
    GEQ             reduce using rule 177 (expr -> ID .)
    LEQ             reduce using rule 177 (expr -> ID .)
    CTE_I           reduce using rule 163 (expression -> ID .)
    CTE_F           reduce using rule 163 (expression -> ID .)
    ID              reduce using rule 163 (expression -> ID .)
    TRUE            reduce using rule 163 (expression -> ID .)
    FALSE           reduce using rule 163 (expression -> ID .)
    COMILLA         reduce using rule 163 (expression -> ID .)
    COMILLAS        reduce using rule 163 (expression -> ID .)

  ! CTE_I           [ reduce using rule 177 (expr -> ID .) ]
  ! CTE_F           [ reduce using rule 177 (expr -> ID .) ]
  ! ID              [ reduce using rule 177 (expr -> ID .) ]
  ! TRUE            [ reduce using rule 177 (expr -> ID .) ]
  ! FALSE           [ reduce using rule 177 (expr -> ID .) ]
  ! COMILLA         [ reduce using rule 177 (expr -> ID .) ]
  ! COMILLAS        [ reduce using rule 177 (expr -> ID .) ]


state 270

    (145) escritura -> PRINT LP COMILLAS any . COMILLAS RP SEMICOL

    COMILLAS        shift and go to state 311


state 271

    (146) escritura_var -> PRINT LP any_var RP . SEMICOL

    SEMICOL         shift and go to state 312


state 272

    (151) lectura -> READ LP COMILLA any_lectura . COMILLA RP SEMICOL

    COMILLA         shift and go to state 313


state 273

    (153) any_lectura -> ID .

    COMILLA         reduce using rule 153 (any_lectura -> ID .)
    COMILLAS        reduce using rule 153 (any_lectura -> ID .)


state 274

    (152) lectura -> READ LP COMILLAS any_lectura . COMILLAS RP SEMICOL

    COMILLAS        shift and go to state 314


state 275

    (82) funcion -> tipo ID LP RP verificar2 LB var_func statement add_func_dir2 . func_return RB end_func
    (105) func_return -> . RETURN expr SEMICOL

    RETURN          shift and go to state 316

    func_return                    shift and go to state 315

state 276

    (83) funcion -> tipo ID LP param RP verificar LB var_func statement . add_func_dir func_return_param RB end_func
    (86) add_func_dir -> .

    RETURN          reduce using rule 86 (add_func_dir -> .)

    add_func_dir                   shift and go to state 317

state 277

    (80) funcion -> VOID ID LP param RP verificar LB var_func statement . RB end_func

    RB              shift and go to state 318


state 278

    (81) funcion -> VOID ID LP RP verificar2 LB var_func statement RB . end_func
    (99) end_func -> .

    VOID            reduce using rule 99 (end_func -> .)
    INT             reduce using rule 99 (end_func -> .)
    FLOAT           reduce using rule 99 (end_func -> .)
    CHAR            reduce using rule 99 (end_func -> .)
    $end            reduce using rule 99 (end_func -> .)

    end_func                       shift and go to state 319

state 279

    (119) matrix2 -> LP lista2 RP COMMA LP . lista2 RP
    (118) matrix2 -> LP . lista2 RP COMMA matrix2
    (119) matrix2 -> LP . lista2 RP COMMA LP lista2 RP
    (113) lista2 -> . elem_lista COMMA lista2
    (114) lista2 -> . elem_lista COMMA elem_lista
    (111) elem_lista -> . value
    (112) elem_lista -> . empty
    (73) value -> . CTE_F
    (74) value -> . CTE_I
    (75) value -> . ID
    (76) value -> . CTE_C
    (77) value -> . COMILLA ID COMILLA
    (78) value -> . COMILLAS ID COMILLAS
    (123) empty -> .

    CTE_F           shift and go to state 82
    CTE_I           shift and go to state 83
    ID              shift and go to state 80
    CTE_C           shift and go to state 84
    COMILLA         shift and go to state 85
    COMILLAS        shift and go to state 86
    COMMA           reduce using rule 123 (empty -> .)

    lista2                         shift and go to state 320
    elem_lista                     shift and go to state 148
    value                          shift and go to state 149
    empty                          shift and go to state 150

state 280

    (118) matrix2 -> LP lista2 RP COMMA matrix2 .

    SEMICOL         reduce using rule 118 (matrix2 -> LP lista2 RP COMMA matrix2 .)


state 281

    (171) expr -> expr MUL expr .
    (171) expr -> expr . MUL expr
    (172) expr -> expr . DIV expr
    (173) expr -> expr . PLUS expr
    (174) expr -> expr . MINUS expr

    SEMICOL         reduce using rule 171 (expr -> expr MUL expr .)
    MUL             reduce using rule 171 (expr -> expr MUL expr .)
    DIV             reduce using rule 171 (expr -> expr MUL expr .)
    PLUS            reduce using rule 171 (expr -> expr MUL expr .)
    MINUS           reduce using rule 171 (expr -> expr MUL expr .)
    GT              reduce using rule 171 (expr -> expr MUL expr .)
    LT              reduce using rule 171 (expr -> expr MUL expr .)
    EQUAL           reduce using rule 171 (expr -> expr MUL expr .)
    NEQ             reduce using rule 171 (expr -> expr MUL expr .)
    GEQ             reduce using rule 171 (expr -> expr MUL expr .)
    LEQ             reduce using rule 171 (expr -> expr MUL expr .)
    RP              reduce using rule 171 (expr -> expr MUL expr .)
    COMMA           reduce using rule 171 (expr -> expr MUL expr .)
    CTE_I           reduce using rule 171 (expr -> expr MUL expr .)
    CTE_F           reduce using rule 171 (expr -> expr MUL expr .)
    ID              reduce using rule 171 (expr -> expr MUL expr .)
    TRUE            reduce using rule 171 (expr -> expr MUL expr .)
    FALSE           reduce using rule 171 (expr -> expr MUL expr .)
    COMILLA         reduce using rule 171 (expr -> expr MUL expr .)
    COMILLAS        reduce using rule 171 (expr -> expr MUL expr .)

  ! MUL             [ shift and go to state 242 ]
  ! DIV             [ shift and go to state 243 ]
  ! PLUS            [ shift and go to state 244 ]
  ! MINUS           [ shift and go to state 245 ]


state 282

    (172) expr -> expr DIV expr .
    (171) expr -> expr . MUL expr
    (172) expr -> expr . DIV expr
    (173) expr -> expr . PLUS expr
    (174) expr -> expr . MINUS expr

    SEMICOL         reduce using rule 172 (expr -> expr DIV expr .)
    MUL             reduce using rule 172 (expr -> expr DIV expr .)
    DIV             reduce using rule 172 (expr -> expr DIV expr .)
    PLUS            reduce using rule 172 (expr -> expr DIV expr .)
    MINUS           reduce using rule 172 (expr -> expr DIV expr .)
    GT              reduce using rule 172 (expr -> expr DIV expr .)
    LT              reduce using rule 172 (expr -> expr DIV expr .)
    EQUAL           reduce using rule 172 (expr -> expr DIV expr .)
    NEQ             reduce using rule 172 (expr -> expr DIV expr .)
    GEQ             reduce using rule 172 (expr -> expr DIV expr .)
    LEQ             reduce using rule 172 (expr -> expr DIV expr .)
    RP              reduce using rule 172 (expr -> expr DIV expr .)
    COMMA           reduce using rule 172 (expr -> expr DIV expr .)
    CTE_I           reduce using rule 172 (expr -> expr DIV expr .)
    CTE_F           reduce using rule 172 (expr -> expr DIV expr .)
    ID              reduce using rule 172 (expr -> expr DIV expr .)
    TRUE            reduce using rule 172 (expr -> expr DIV expr .)
    FALSE           reduce using rule 172 (expr -> expr DIV expr .)
    COMILLA         reduce using rule 172 (expr -> expr DIV expr .)
    COMILLAS        reduce using rule 172 (expr -> expr DIV expr .)

  ! MUL             [ shift and go to state 242 ]
  ! DIV             [ shift and go to state 243 ]
  ! PLUS            [ shift and go to state 244 ]
  ! MINUS           [ shift and go to state 245 ]


state 283

    (173) expr -> expr PLUS expr .
    (171) expr -> expr . MUL expr
    (172) expr -> expr . DIV expr
    (173) expr -> expr . PLUS expr
    (174) expr -> expr . MINUS expr

    SEMICOL         reduce using rule 173 (expr -> expr PLUS expr .)
    PLUS            reduce using rule 173 (expr -> expr PLUS expr .)
    MINUS           reduce using rule 173 (expr -> expr PLUS expr .)
    GT              reduce using rule 173 (expr -> expr PLUS expr .)
    LT              reduce using rule 173 (expr -> expr PLUS expr .)
    EQUAL           reduce using rule 173 (expr -> expr PLUS expr .)
    NEQ             reduce using rule 173 (expr -> expr PLUS expr .)
    GEQ             reduce using rule 173 (expr -> expr PLUS expr .)
    LEQ             reduce using rule 173 (expr -> expr PLUS expr .)
    RP              reduce using rule 173 (expr -> expr PLUS expr .)
    COMMA           reduce using rule 173 (expr -> expr PLUS expr .)
    CTE_I           reduce using rule 173 (expr -> expr PLUS expr .)
    CTE_F           reduce using rule 173 (expr -> expr PLUS expr .)
    ID              reduce using rule 173 (expr -> expr PLUS expr .)
    TRUE            reduce using rule 173 (expr -> expr PLUS expr .)
    FALSE           reduce using rule 173 (expr -> expr PLUS expr .)
    COMILLA         reduce using rule 173 (expr -> expr PLUS expr .)
    COMILLAS        reduce using rule 173 (expr -> expr PLUS expr .)
    MUL             shift and go to state 242
    DIV             shift and go to state 243

  ! MUL             [ reduce using rule 173 (expr -> expr PLUS expr .) ]
  ! DIV             [ reduce using rule 173 (expr -> expr PLUS expr .) ]
  ! PLUS            [ shift and go to state 244 ]
  ! MINUS           [ shift and go to state 245 ]


state 284

    (174) expr -> expr MINUS expr .
    (171) expr -> expr . MUL expr
    (172) expr -> expr . DIV expr
    (173) expr -> expr . PLUS expr
    (174) expr -> expr . MINUS expr

    SEMICOL         reduce using rule 174 (expr -> expr MINUS expr .)
    PLUS            reduce using rule 174 (expr -> expr MINUS expr .)
    MINUS           reduce using rule 174 (expr -> expr MINUS expr .)
    GT              reduce using rule 174 (expr -> expr MINUS expr .)
    LT              reduce using rule 174 (expr -> expr MINUS expr .)
    EQUAL           reduce using rule 174 (expr -> expr MINUS expr .)
    NEQ             reduce using rule 174 (expr -> expr MINUS expr .)
    GEQ             reduce using rule 174 (expr -> expr MINUS expr .)
    LEQ             reduce using rule 174 (expr -> expr MINUS expr .)
    RP              reduce using rule 174 (expr -> expr MINUS expr .)
    COMMA           reduce using rule 174 (expr -> expr MINUS expr .)
    CTE_I           reduce using rule 174 (expr -> expr MINUS expr .)
    CTE_F           reduce using rule 174 (expr -> expr MINUS expr .)
    ID              reduce using rule 174 (expr -> expr MINUS expr .)
    TRUE            reduce using rule 174 (expr -> expr MINUS expr .)
    FALSE           reduce using rule 174 (expr -> expr MINUS expr .)
    COMILLA         reduce using rule 174 (expr -> expr MINUS expr .)
    COMILLAS        reduce using rule 174 (expr -> expr MINUS expr .)
    MUL             shift and go to state 242
    DIV             shift and go to state 243

  ! MUL             [ reduce using rule 174 (expr -> expr MINUS expr .) ]
  ! DIV             [ reduce using rule 174 (expr -> expr MINUS expr .) ]
  ! PLUS            [ shift and go to state 244 ]
  ! MINUS           [ shift and go to state 245 ]


state 285

    (101) func_call -> ID LP func_era func_call_param RP . SEMICOL

    SEMICOL         shift and go to state 321


state 286

    (104) func_call_param -> func_call_param COMMA . expr
    (171) expr -> . expr MUL expr
    (172) expr -> . expr DIV expr
    (173) expr -> . expr PLUS expr
    (174) expr -> . expr MINUS expr
    (175) expr -> . CTE_I
    (176) expr -> . CTE_F
    (177) expr -> . ID

    CTE_I           shift and go to state 196
    CTE_F           shift and go to state 197
    ID              shift and go to state 198

    expr                           shift and go to state 322

state 287

    (124) if -> IF LP expression RP check_bool . gotof LB statement RB
    (125) if -> IF LP expression RP check_bool . gotof LB statement RB goto elseif
    (126) if -> IF LP expression RP check_bool . gotof LB statement RB goto else
    (132) gotof -> .

    LB              reduce using rule 132 (gotof -> .)

    gotof                          shift and go to state 323

state 288

    (165) var_gt -> expr GT expr .
    (171) expr -> expr . MUL expr
    (172) expr -> expr . DIV expr
    (173) expr -> expr . PLUS expr
    (174) expr -> expr . MINUS expr

    RP              reduce using rule 165 (var_gt -> expr GT expr .)
    CTE_I           reduce using rule 165 (var_gt -> expr GT expr .)
    CTE_F           reduce using rule 165 (var_gt -> expr GT expr .)
    ID              reduce using rule 165 (var_gt -> expr GT expr .)
    TRUE            reduce using rule 165 (var_gt -> expr GT expr .)
    FALSE           reduce using rule 165 (var_gt -> expr GT expr .)
    COMILLA         reduce using rule 165 (var_gt -> expr GT expr .)
    COMILLAS        reduce using rule 165 (var_gt -> expr GT expr .)
    SEMICOL         reduce using rule 165 (var_gt -> expr GT expr .)
    MUL             shift and go to state 242
    DIV             shift and go to state 243
    PLUS            shift and go to state 244
    MINUS           shift and go to state 245


state 289

    (164) var_lt -> expr LT expr .
    (171) expr -> expr . MUL expr
    (172) expr -> expr . DIV expr
    (173) expr -> expr . PLUS expr
    (174) expr -> expr . MINUS expr

    RP              reduce using rule 164 (var_lt -> expr LT expr .)
    CTE_I           reduce using rule 164 (var_lt -> expr LT expr .)
    CTE_F           reduce using rule 164 (var_lt -> expr LT expr .)
    ID              reduce using rule 164 (var_lt -> expr LT expr .)
    TRUE            reduce using rule 164 (var_lt -> expr LT expr .)
    FALSE           reduce using rule 164 (var_lt -> expr LT expr .)
    COMILLA         reduce using rule 164 (var_lt -> expr LT expr .)
    COMILLAS        reduce using rule 164 (var_lt -> expr LT expr .)
    SEMICOL         reduce using rule 164 (var_lt -> expr LT expr .)
    MUL             shift and go to state 242
    DIV             shift and go to state 243
    PLUS            shift and go to state 244
    MINUS           shift and go to state 245


state 290

    (168) var_equal -> expr EQUAL expr .
    (171) expr -> expr . MUL expr
    (172) expr -> expr . DIV expr
    (173) expr -> expr . PLUS expr
    (174) expr -> expr . MINUS expr

    RP              reduce using rule 168 (var_equal -> expr EQUAL expr .)
    CTE_I           reduce using rule 168 (var_equal -> expr EQUAL expr .)
    CTE_F           reduce using rule 168 (var_equal -> expr EQUAL expr .)
    ID              reduce using rule 168 (var_equal -> expr EQUAL expr .)
    TRUE            reduce using rule 168 (var_equal -> expr EQUAL expr .)
    FALSE           reduce using rule 168 (var_equal -> expr EQUAL expr .)
    COMILLA         reduce using rule 168 (var_equal -> expr EQUAL expr .)
    COMILLAS        reduce using rule 168 (var_equal -> expr EQUAL expr .)
    SEMICOL         reduce using rule 168 (var_equal -> expr EQUAL expr .)
    MUL             shift and go to state 242
    DIV             shift and go to state 243
    PLUS            shift and go to state 244
    MINUS           shift and go to state 245


state 291

    (169) var_neq -> expr NEQ expr .
    (171) expr -> expr . MUL expr
    (172) expr -> expr . DIV expr
    (173) expr -> expr . PLUS expr
    (174) expr -> expr . MINUS expr

    RP              reduce using rule 169 (var_neq -> expr NEQ expr .)
    CTE_I           reduce using rule 169 (var_neq -> expr NEQ expr .)
    CTE_F           reduce using rule 169 (var_neq -> expr NEQ expr .)
    ID              reduce using rule 169 (var_neq -> expr NEQ expr .)
    TRUE            reduce using rule 169 (var_neq -> expr NEQ expr .)
    FALSE           reduce using rule 169 (var_neq -> expr NEQ expr .)
    COMILLA         reduce using rule 169 (var_neq -> expr NEQ expr .)
    COMILLAS        reduce using rule 169 (var_neq -> expr NEQ expr .)
    SEMICOL         reduce using rule 169 (var_neq -> expr NEQ expr .)
    MUL             shift and go to state 242
    DIV             shift and go to state 243
    PLUS            shift and go to state 244
    MINUS           shift and go to state 245


state 292

    (167) var_geq -> expr GEQ expr .
    (171) expr -> expr . MUL expr
    (172) expr -> expr . DIV expr
    (173) expr -> expr . PLUS expr
    (174) expr -> expr . MINUS expr

    RP              reduce using rule 167 (var_geq -> expr GEQ expr .)
    CTE_I           reduce using rule 167 (var_geq -> expr GEQ expr .)
    CTE_F           reduce using rule 167 (var_geq -> expr GEQ expr .)
    ID              reduce using rule 167 (var_geq -> expr GEQ expr .)
    TRUE            reduce using rule 167 (var_geq -> expr GEQ expr .)
    FALSE           reduce using rule 167 (var_geq -> expr GEQ expr .)
    COMILLA         reduce using rule 167 (var_geq -> expr GEQ expr .)
    COMILLAS        reduce using rule 167 (var_geq -> expr GEQ expr .)
    SEMICOL         reduce using rule 167 (var_geq -> expr GEQ expr .)
    MUL             shift and go to state 242
    DIV             shift and go to state 243
    PLUS            shift and go to state 244
    MINUS           shift and go to state 245


state 293

    (166) var_leq -> expr LEQ expr .
    (171) expr -> expr . MUL expr
    (172) expr -> expr . DIV expr
    (173) expr -> expr . PLUS expr
    (174) expr -> expr . MINUS expr

    RP              reduce using rule 166 (var_leq -> expr LEQ expr .)
    CTE_I           reduce using rule 166 (var_leq -> expr LEQ expr .)
    CTE_F           reduce using rule 166 (var_leq -> expr LEQ expr .)
    ID              reduce using rule 166 (var_leq -> expr LEQ expr .)
    TRUE            reduce using rule 166 (var_leq -> expr LEQ expr .)
    FALSE           reduce using rule 166 (var_leq -> expr LEQ expr .)
    COMILLA         reduce using rule 166 (var_leq -> expr LEQ expr .)
    COMILLAS        reduce using rule 166 (var_leq -> expr LEQ expr .)
    SEMICOL         reduce using rule 166 (var_leq -> expr LEQ expr .)
    MUL             shift and go to state 242
    DIV             shift and go to state 243
    PLUS            shift and go to state 244
    MINUS           shift and go to state 245


state 294

    (30) vars -> VAR tipo ID row SEMICOL .

    ID              reduce using rule 30 (vars -> VAR tipo ID row SEMICOL .)
    IF              reduce using rule 30 (vars -> VAR tipo ID row SEMICOL .)
    VAR             reduce using rule 30 (vars -> VAR tipo ID row SEMICOL .)
    WHILE           reduce using rule 30 (vars -> VAR tipo ID row SEMICOL .)
    FOR             reduce using rule 30 (vars -> VAR tipo ID row SEMICOL .)
    PRINT           reduce using rule 30 (vars -> VAR tipo ID row SEMICOL .)
    READ            reduce using rule 30 (vars -> VAR tipo ID row SEMICOL .)
    RETURN          reduce using rule 30 (vars -> VAR tipo ID row SEMICOL .)
    RB              reduce using rule 30 (vars -> VAR tipo ID row SEMICOL .)


state 295

    (109) var_row -> VAR tipo ID row IS . LP lista2 RP SEMICOL

    LP              shift and go to state 324


state 296

    (31) vars -> VAR tipo ID matrix SEMICOL .

    ID              reduce using rule 31 (vars -> VAR tipo ID matrix SEMICOL .)
    IF              reduce using rule 31 (vars -> VAR tipo ID matrix SEMICOL .)
    VAR             reduce using rule 31 (vars -> VAR tipo ID matrix SEMICOL .)
    WHILE           reduce using rule 31 (vars -> VAR tipo ID matrix SEMICOL .)
    FOR             reduce using rule 31 (vars -> VAR tipo ID matrix SEMICOL .)
    PRINT           reduce using rule 31 (vars -> VAR tipo ID matrix SEMICOL .)
    READ            reduce using rule 31 (vars -> VAR tipo ID matrix SEMICOL .)
    RETURN          reduce using rule 31 (vars -> VAR tipo ID matrix SEMICOL .)
    RB              reduce using rule 31 (vars -> VAR tipo ID matrix SEMICOL .)


state 297

    (116) var_matrix -> VAR tipo ID matrix IS . matrix2 SEMICOL
    (118) matrix2 -> . LP lista2 RP COMMA matrix2
    (119) matrix2 -> . LP lista2 RP COMMA LP lista2 RP

    LP              shift and go to state 112

    matrix2                        shift and go to state 325

state 298

    (75) value -> ID .
    (177) expr -> ID .

  ! reduce/reduce conflict for SEMICOL resolved using rule 75 (value -> ID .)
    SEMICOL         reduce using rule 75 (value -> ID .)
    COMMA           reduce using rule 75 (value -> ID .)
    MUL             reduce using rule 177 (expr -> ID .)
    DIV             reduce using rule 177 (expr -> ID .)
    PLUS            reduce using rule 177 (expr -> ID .)
    MINUS           reduce using rule 177 (expr -> ID .)

  ! SEMICOL         [ reduce using rule 177 (expr -> ID .) ]


state 299

    (42) vars2 -> ID IS value . SEMICOL
    (40) vars2_1 -> ID IS value . COMMA

    SEMICOL         shift and go to state 326
    COMMA           shift and go to state 327


state 300

    (170) oper_aritmetica -> ID IS expr . SEMICOL
    (171) expr -> expr . MUL expr
    (172) expr -> expr . DIV expr
    (173) expr -> expr . PLUS expr
    (174) expr -> expr . MINUS expr

    SEMICOL         shift and go to state 328
    MUL             shift and go to state 242
    DIV             shift and go to state 243
    PLUS            shift and go to state 244
    MINUS           shift and go to state 245


state 301

    (73) value -> CTE_F .
    (176) expr -> CTE_F .

  ! reduce/reduce conflict for SEMICOL resolved using rule 73 (value -> CTE_F .)
    SEMICOL         reduce using rule 73 (value -> CTE_F .)
    COMMA           reduce using rule 73 (value -> CTE_F .)
    MUL             reduce using rule 176 (expr -> CTE_F .)
    DIV             reduce using rule 176 (expr -> CTE_F .)
    PLUS            reduce using rule 176 (expr -> CTE_F .)
    MINUS           reduce using rule 176 (expr -> CTE_F .)

  ! SEMICOL         [ reduce using rule 176 (expr -> CTE_F .) ]


state 302

    (74) value -> CTE_I .
    (175) expr -> CTE_I .

  ! reduce/reduce conflict for SEMICOL resolved using rule 74 (value -> CTE_I .)
    SEMICOL         reduce using rule 74 (value -> CTE_I .)
    COMMA           reduce using rule 74 (value -> CTE_I .)
    MUL             reduce using rule 175 (expr -> CTE_I .)
    DIV             reduce using rule 175 (expr -> CTE_I .)
    PLUS            reduce using rule 175 (expr -> CTE_I .)
    MINUS           reduce using rule 175 (expr -> CTE_I .)

  ! SEMICOL         [ reduce using rule 175 (expr -> CTE_I .) ]


state 303

    (38) vars2 -> vars2_1 ID IS . value SEMICOL
    (39) vars2_1 -> vars2_1 ID IS . value COMMA
    (73) value -> . CTE_F
    (74) value -> . CTE_I
    (75) value -> . ID
    (76) value -> . CTE_C
    (77) value -> . COMILLA ID COMILLA
    (78) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 82
    CTE_I           shift and go to state 83
    ID              shift and go to state 80
    CTE_C           shift and go to state 84
    COMILLA         shift and go to state 85
    COMILLAS        shift and go to state 86

    value                          shift and go to state 329

state 304

    (43) vars3 -> vars3_1 ID SEMICOL .

    ID              reduce using rule 43 (vars3 -> vars3_1 ID SEMICOL .)
    IF              reduce using rule 43 (vars3 -> vars3_1 ID SEMICOL .)
    VAR             reduce using rule 43 (vars3 -> vars3_1 ID SEMICOL .)
    WHILE           reduce using rule 43 (vars3 -> vars3_1 ID SEMICOL .)
    FOR             reduce using rule 43 (vars3 -> vars3_1 ID SEMICOL .)
    PRINT           reduce using rule 43 (vars3 -> vars3_1 ID SEMICOL .)
    READ            reduce using rule 43 (vars3 -> vars3_1 ID SEMICOL .)
    RETURN          reduce using rule 43 (vars3 -> vars3_1 ID SEMICOL .)
    RB              reduce using rule 43 (vars3 -> vars3_1 ID SEMICOL .)


state 305

    (44) vars3_1 -> vars3_1 ID COMMA .

    ID              reduce using rule 44 (vars3_1 -> vars3_1 ID COMMA .)


state 306

    (134) while -> WHILE guarda_num_salto LP expression RP . check_bool gotof LB statement RB goto
    (178) check_bool -> .

    LB              reduce using rule 178 (check_bool -> .)

    check_bool                     shift and go to state 330

state 307

    (135) for -> FOR LP VAR tipo ID . IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto

    IS              shift and go to state 331


state 308

    (144) escritura -> PRINT LP COMILLA any COMILLA . RP SEMICOL

    RP              shift and go to state 332


state 309

    (148) any -> expr any .

    COMILLA         reduce using rule 148 (any -> expr any .)
    COMILLAS        reduce using rule 148 (any -> expr any .)


state 310

    (149) any -> expression any .

    COMILLA         reduce using rule 149 (any -> expression any .)
    COMILLAS        reduce using rule 149 (any -> expression any .)


state 311

    (145) escritura -> PRINT LP COMILLAS any COMILLAS . RP SEMICOL

    RP              shift and go to state 333


state 312

    (146) escritura_var -> PRINT LP any_var RP SEMICOL .

    ID              reduce using rule 146 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    IF              reduce using rule 146 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    VAR             reduce using rule 146 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    WHILE           reduce using rule 146 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    FOR             reduce using rule 146 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    PRINT           reduce using rule 146 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    READ            reduce using rule 146 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    RETURN          reduce using rule 146 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    RB              reduce using rule 146 (escritura_var -> PRINT LP any_var RP SEMICOL .)


state 313

    (151) lectura -> READ LP COMILLA any_lectura COMILLA . RP SEMICOL

    RP              shift and go to state 334


state 314

    (152) lectura -> READ LP COMILLAS any_lectura COMILLAS . RP SEMICOL

    RP              shift and go to state 335


state 315

    (82) funcion -> tipo ID LP RP verificar2 LB var_func statement add_func_dir2 func_return . RB end_func

    RB              shift and go to state 336


state 316

    (105) func_return -> RETURN . expr SEMICOL
    (171) expr -> . expr MUL expr
    (172) expr -> . expr DIV expr
    (173) expr -> . expr PLUS expr
    (174) expr -> . expr MINUS expr
    (175) expr -> . CTE_I
    (176) expr -> . CTE_F
    (177) expr -> . ID

    CTE_I           shift and go to state 196
    CTE_F           shift and go to state 197
    ID              shift and go to state 198

    expr                           shift and go to state 337

state 317

    (83) funcion -> tipo ID LP param RP verificar LB var_func statement add_func_dir . func_return_param RB end_func
    (106) func_return_param -> . RETURN expr SEMICOL

    RETURN          shift and go to state 339

    func_return_param              shift and go to state 338

state 318

    (80) funcion -> VOID ID LP param RP verificar LB var_func statement RB . end_func
    (99) end_func -> .

    VOID            reduce using rule 99 (end_func -> .)
    INT             reduce using rule 99 (end_func -> .)
    FLOAT           reduce using rule 99 (end_func -> .)
    CHAR            reduce using rule 99 (end_func -> .)
    $end            reduce using rule 99 (end_func -> .)

    end_func                       shift and go to state 340

state 319

    (81) funcion -> VOID ID LP RP verificar2 LB var_func statement RB end_func .

    VOID            reduce using rule 81 (funcion -> VOID ID LP RP verificar2 LB var_func statement RB end_func .)
    INT             reduce using rule 81 (funcion -> VOID ID LP RP verificar2 LB var_func statement RB end_func .)
    FLOAT           reduce using rule 81 (funcion -> VOID ID LP RP verificar2 LB var_func statement RB end_func .)
    CHAR            reduce using rule 81 (funcion -> VOID ID LP RP verificar2 LB var_func statement RB end_func .)
    $end            reduce using rule 81 (funcion -> VOID ID LP RP verificar2 LB var_func statement RB end_func .)


state 320

    (119) matrix2 -> LP lista2 RP COMMA LP lista2 . RP
    (118) matrix2 -> LP lista2 . RP COMMA matrix2
    (119) matrix2 -> LP lista2 . RP COMMA LP lista2 RP

    RP              shift and go to state 341


state 321

    (101) func_call -> ID LP func_era func_call_param RP SEMICOL .

    ID              reduce using rule 101 (func_call -> ID LP func_era func_call_param RP SEMICOL .)
    IF              reduce using rule 101 (func_call -> ID LP func_era func_call_param RP SEMICOL .)
    VAR             reduce using rule 101 (func_call -> ID LP func_era func_call_param RP SEMICOL .)
    WHILE           reduce using rule 101 (func_call -> ID LP func_era func_call_param RP SEMICOL .)
    FOR             reduce using rule 101 (func_call -> ID LP func_era func_call_param RP SEMICOL .)
    PRINT           reduce using rule 101 (func_call -> ID LP func_era func_call_param RP SEMICOL .)
    READ            reduce using rule 101 (func_call -> ID LP func_era func_call_param RP SEMICOL .)
    RETURN          reduce using rule 101 (func_call -> ID LP func_era func_call_param RP SEMICOL .)
    RB              reduce using rule 101 (func_call -> ID LP func_era func_call_param RP SEMICOL .)


state 322

    (104) func_call_param -> func_call_param COMMA expr .
    (171) expr -> expr . MUL expr
    (172) expr -> expr . DIV expr
    (173) expr -> expr . PLUS expr
    (174) expr -> expr . MINUS expr

    RP              reduce using rule 104 (func_call_param -> func_call_param COMMA expr .)
    COMMA           reduce using rule 104 (func_call_param -> func_call_param COMMA expr .)
    MUL             shift and go to state 242
    DIV             shift and go to state 243
    PLUS            shift and go to state 244
    MINUS           shift and go to state 245


state 323

    (124) if -> IF LP expression RP check_bool gotof . LB statement RB
    (125) if -> IF LP expression RP check_bool gotof . LB statement RB goto elseif
    (126) if -> IF LP expression RP check_bool gotof . LB statement RB goto else

    LB              shift and go to state 342


state 324

    (109) var_row -> VAR tipo ID row IS LP . lista2 RP SEMICOL
    (113) lista2 -> . elem_lista COMMA lista2
    (114) lista2 -> . elem_lista COMMA elem_lista
    (111) elem_lista -> . value
    (112) elem_lista -> . empty
    (73) value -> . CTE_F
    (74) value -> . CTE_I
    (75) value -> . ID
    (76) value -> . CTE_C
    (77) value -> . COMILLA ID COMILLA
    (78) value -> . COMILLAS ID COMILLAS
    (123) empty -> .

    CTE_F           shift and go to state 82
    CTE_I           shift and go to state 83
    ID              shift and go to state 80
    CTE_C           shift and go to state 84
    COMILLA         shift and go to state 85
    COMILLAS        shift and go to state 86
    COMMA           reduce using rule 123 (empty -> .)

    lista2                         shift and go to state 343
    elem_lista                     shift and go to state 148
    value                          shift and go to state 149
    empty                          shift and go to state 150

state 325

    (116) var_matrix -> VAR tipo ID matrix IS matrix2 . SEMICOL

    SEMICOL         shift and go to state 344


state 326

    (42) vars2 -> ID IS value SEMICOL .

    ID              reduce using rule 42 (vars2 -> ID IS value SEMICOL .)
    IF              reduce using rule 42 (vars2 -> ID IS value SEMICOL .)
    VAR             reduce using rule 42 (vars2 -> ID IS value SEMICOL .)
    WHILE           reduce using rule 42 (vars2 -> ID IS value SEMICOL .)
    FOR             reduce using rule 42 (vars2 -> ID IS value SEMICOL .)
    PRINT           reduce using rule 42 (vars2 -> ID IS value SEMICOL .)
    READ            reduce using rule 42 (vars2 -> ID IS value SEMICOL .)
    RETURN          reduce using rule 42 (vars2 -> ID IS value SEMICOL .)
    RB              reduce using rule 42 (vars2 -> ID IS value SEMICOL .)


state 327

    (40) vars2_1 -> ID IS value COMMA .

    ID              reduce using rule 40 (vars2_1 -> ID IS value COMMA .)


state 328

    (170) oper_aritmetica -> ID IS expr SEMICOL .

    ID              reduce using rule 170 (oper_aritmetica -> ID IS expr SEMICOL .)
    IF              reduce using rule 170 (oper_aritmetica -> ID IS expr SEMICOL .)
    VAR             reduce using rule 170 (oper_aritmetica -> ID IS expr SEMICOL .)
    WHILE           reduce using rule 170 (oper_aritmetica -> ID IS expr SEMICOL .)
    FOR             reduce using rule 170 (oper_aritmetica -> ID IS expr SEMICOL .)
    PRINT           reduce using rule 170 (oper_aritmetica -> ID IS expr SEMICOL .)
    READ            reduce using rule 170 (oper_aritmetica -> ID IS expr SEMICOL .)
    RETURN          reduce using rule 170 (oper_aritmetica -> ID IS expr SEMICOL .)
    RB              reduce using rule 170 (oper_aritmetica -> ID IS expr SEMICOL .)


state 329

    (38) vars2 -> vars2_1 ID IS value . SEMICOL
    (39) vars2_1 -> vars2_1 ID IS value . COMMA

    SEMICOL         shift and go to state 345
    COMMA           shift and go to state 346


state 330

    (134) while -> WHILE guarda_num_salto LP expression RP check_bool . gotof LB statement RB goto
    (132) gotof -> .

    LB              reduce using rule 132 (gotof -> .)

    gotof                          shift and go to state 347

state 331

    (135) for -> FOR LP VAR tipo ID IS . value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (73) value -> . CTE_F
    (74) value -> . CTE_I
    (75) value -> . ID
    (76) value -> . CTE_C
    (77) value -> . COMILLA ID COMILLA
    (78) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 82
    CTE_I           shift and go to state 83
    ID              shift and go to state 80
    CTE_C           shift and go to state 84
    COMILLA         shift and go to state 85
    COMILLAS        shift and go to state 86

    value                          shift and go to state 348

state 332

    (144) escritura -> PRINT LP COMILLA any COMILLA RP . SEMICOL

    SEMICOL         shift and go to state 349


state 333

    (145) escritura -> PRINT LP COMILLAS any COMILLAS RP . SEMICOL

    SEMICOL         shift and go to state 350


state 334

    (151) lectura -> READ LP COMILLA any_lectura COMILLA RP . SEMICOL

    SEMICOL         shift and go to state 351


state 335

    (152) lectura -> READ LP COMILLAS any_lectura COMILLAS RP . SEMICOL

    SEMICOL         shift and go to state 352


state 336

    (82) funcion -> tipo ID LP RP verificar2 LB var_func statement add_func_dir2 func_return RB . end_func
    (99) end_func -> .

    VOID            reduce using rule 99 (end_func -> .)
    INT             reduce using rule 99 (end_func -> .)
    FLOAT           reduce using rule 99 (end_func -> .)
    CHAR            reduce using rule 99 (end_func -> .)
    $end            reduce using rule 99 (end_func -> .)

    end_func                       shift and go to state 353

state 337

    (105) func_return -> RETURN expr . SEMICOL
    (171) expr -> expr . MUL expr
    (172) expr -> expr . DIV expr
    (173) expr -> expr . PLUS expr
    (174) expr -> expr . MINUS expr

    SEMICOL         shift and go to state 354
    MUL             shift and go to state 242
    DIV             shift and go to state 243
    PLUS            shift and go to state 244
    MINUS           shift and go to state 245


state 338

    (83) funcion -> tipo ID LP param RP verificar LB var_func statement add_func_dir func_return_param . RB end_func

    RB              shift and go to state 355


state 339

    (106) func_return_param -> RETURN . expr SEMICOL
    (171) expr -> . expr MUL expr
    (172) expr -> . expr DIV expr
    (173) expr -> . expr PLUS expr
    (174) expr -> . expr MINUS expr
    (175) expr -> . CTE_I
    (176) expr -> . CTE_F
    (177) expr -> . ID

    CTE_I           shift and go to state 196
    CTE_F           shift and go to state 197
    ID              shift and go to state 198

    expr                           shift and go to state 356

state 340

    (80) funcion -> VOID ID LP param RP verificar LB var_func statement RB end_func .

    VOID            reduce using rule 80 (funcion -> VOID ID LP param RP verificar LB var_func statement RB end_func .)
    INT             reduce using rule 80 (funcion -> VOID ID LP param RP verificar LB var_func statement RB end_func .)
    FLOAT           reduce using rule 80 (funcion -> VOID ID LP param RP verificar LB var_func statement RB end_func .)
    CHAR            reduce using rule 80 (funcion -> VOID ID LP param RP verificar LB var_func statement RB end_func .)
    $end            reduce using rule 80 (funcion -> VOID ID LP param RP verificar LB var_func statement RB end_func .)


state 341

    (119) matrix2 -> LP lista2 RP COMMA LP lista2 RP .
    (118) matrix2 -> LP lista2 RP . COMMA matrix2
    (119) matrix2 -> LP lista2 RP . COMMA LP lista2 RP

    SEMICOL         reduce using rule 119 (matrix2 -> LP lista2 RP COMMA LP lista2 RP .)
    COMMA           shift and go to state 239


state 342

    (124) if -> IF LP expression RP check_bool gotof LB . statement RB
    (125) if -> IF LP expression RP check_bool gotof LB . statement RB goto elseif
    (126) if -> IF LP expression RP check_bool gotof LB . statement RB goto else
    (13) statement -> . asignacion SEMICOL statement
    (14) statement -> . if statement
    (15) statement -> . vars statement
    (16) statement -> . while statement
    (17) statement -> . for statement
    (18) statement -> . escritura statement
    (19) statement -> . escritura_var statement
    (20) statement -> . lectura statement
    (21) statement -> . func_call statement
    (22) statement -> . ID row SEMICOL
    (23) statement -> . ID matrix SEMICOL
    (24) statement -> . empty
    (25) asignacion -> . ID IS value
    (124) if -> . IF LP expression RP check_bool gotof LB statement RB
    (125) if -> . IF LP expression RP check_bool gotof LB statement RB goto elseif
    (126) if -> . IF LP expression RP check_bool gotof LB statement RB goto else
    (26) vars -> . VAR tipo vars1
    (27) vars -> . VAR tipo vars2
    (28) vars -> . VAR tipo vars3
    (29) vars -> . VAR tipo oper_aritmetica
    (30) vars -> . VAR tipo ID row SEMICOL
    (31) vars -> . VAR tipo ID matrix SEMICOL
    (32) vars -> . var_row
    (33) vars -> . var_row vars
    (34) vars -> . var_matrix
    (35) vars -> . var_matrix vars
    (36) vars -> . empty
    (134) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (135) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (144) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (145) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (146) escritura_var -> . PRINT LP any_var RP SEMICOL
    (151) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (152) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (100) func_call -> . ID LP RP SEMICOL
    (101) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (123) empty -> .
    (109) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (116) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 125
    IF              shift and go to state 127
    VAR             shift and go to state 128
    WHILE           shift and go to state 131
    FOR             shift and go to state 132
    PRINT           shift and go to state 133
    READ            shift and go to state 134
    RB              reduce using rule 123 (empty -> .)

  ! ID              [ reduce using rule 123 (empty -> .) ]
  ! IF              [ reduce using rule 123 (empty -> .) ]
  ! VAR             [ reduce using rule 123 (empty -> .) ]
  ! WHILE           [ reduce using rule 123 (empty -> .) ]
  ! FOR             [ reduce using rule 123 (empty -> .) ]
  ! PRINT           [ reduce using rule 123 (empty -> .) ]
  ! READ            [ reduce using rule 123 (empty -> .) ]

    statement                      shift and go to state 357
    asignacion                     shift and go to state 116
    if                             shift and go to state 117
    vars                           shift and go to state 118
    while                          shift and go to state 119
    for                            shift and go to state 120
    escritura                      shift and go to state 121
    escritura_var                  shift and go to state 122
    lectura                        shift and go to state 123
    func_call                      shift and go to state 124
    empty                          shift and go to state 126
    var_row                        shift and go to state 129
    var_matrix                     shift and go to state 130

state 343

    (109) var_row -> VAR tipo ID row IS LP lista2 . RP SEMICOL

    RP              shift and go to state 358


state 344

    (116) var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .

    VAR             reduce using rule 116 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    ID              reduce using rule 116 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    IF              reduce using rule 116 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    WHILE           reduce using rule 116 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    FOR             reduce using rule 116 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    PRINT           reduce using rule 116 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    READ            reduce using rule 116 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    RETURN          reduce using rule 116 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    RB              reduce using rule 116 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)


state 345

    (38) vars2 -> vars2_1 ID IS value SEMICOL .

    ID              reduce using rule 38 (vars2 -> vars2_1 ID IS value SEMICOL .)
    IF              reduce using rule 38 (vars2 -> vars2_1 ID IS value SEMICOL .)
    VAR             reduce using rule 38 (vars2 -> vars2_1 ID IS value SEMICOL .)
    WHILE           reduce using rule 38 (vars2 -> vars2_1 ID IS value SEMICOL .)
    FOR             reduce using rule 38 (vars2 -> vars2_1 ID IS value SEMICOL .)
    PRINT           reduce using rule 38 (vars2 -> vars2_1 ID IS value SEMICOL .)
    READ            reduce using rule 38 (vars2 -> vars2_1 ID IS value SEMICOL .)
    RETURN          reduce using rule 38 (vars2 -> vars2_1 ID IS value SEMICOL .)
    RB              reduce using rule 38 (vars2 -> vars2_1 ID IS value SEMICOL .)


state 346

    (39) vars2_1 -> vars2_1 ID IS value COMMA .

    ID              reduce using rule 39 (vars2_1 -> vars2_1 ID IS value COMMA .)


state 347

    (134) while -> WHILE guarda_num_salto LP expression RP check_bool gotof . LB statement RB goto

    LB              shift and go to state 359


state 348

    (135) for -> FOR LP VAR tipo ID IS value . SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto

    SEMICOL         shift and go to state 360


state 349

    (144) escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .

    ID              reduce using rule 144 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    IF              reduce using rule 144 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    VAR             reduce using rule 144 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    WHILE           reduce using rule 144 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    FOR             reduce using rule 144 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    PRINT           reduce using rule 144 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    READ            reduce using rule 144 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    RETURN          reduce using rule 144 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    RB              reduce using rule 144 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)


state 350

    (145) escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .

    ID              reduce using rule 145 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    IF              reduce using rule 145 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    VAR             reduce using rule 145 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    WHILE           reduce using rule 145 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    FOR             reduce using rule 145 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    PRINT           reduce using rule 145 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    READ            reduce using rule 145 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    RETURN          reduce using rule 145 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    RB              reduce using rule 145 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)


state 351

    (151) lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .

    ID              reduce using rule 151 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    IF              reduce using rule 151 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    VAR             reduce using rule 151 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    WHILE           reduce using rule 151 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    FOR             reduce using rule 151 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    PRINT           reduce using rule 151 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    READ            reduce using rule 151 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    RETURN          reduce using rule 151 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    RB              reduce using rule 151 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)


state 352

    (152) lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .

    ID              reduce using rule 152 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    IF              reduce using rule 152 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    VAR             reduce using rule 152 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    WHILE           reduce using rule 152 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    FOR             reduce using rule 152 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    PRINT           reduce using rule 152 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    READ            reduce using rule 152 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    RETURN          reduce using rule 152 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    RB              reduce using rule 152 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)


state 353

    (82) funcion -> tipo ID LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func .

    VOID            reduce using rule 82 (funcion -> tipo ID LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func .)
    INT             reduce using rule 82 (funcion -> tipo ID LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func .)
    FLOAT           reduce using rule 82 (funcion -> tipo ID LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func .)
    CHAR            reduce using rule 82 (funcion -> tipo ID LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func .)
    $end            reduce using rule 82 (funcion -> tipo ID LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func .)


state 354

    (105) func_return -> RETURN expr SEMICOL .

    RB              reduce using rule 105 (func_return -> RETURN expr SEMICOL .)


state 355

    (83) funcion -> tipo ID LP param RP verificar LB var_func statement add_func_dir func_return_param RB . end_func
    (99) end_func -> .

    VOID            reduce using rule 99 (end_func -> .)
    INT             reduce using rule 99 (end_func -> .)
    FLOAT           reduce using rule 99 (end_func -> .)
    CHAR            reduce using rule 99 (end_func -> .)
    $end            reduce using rule 99 (end_func -> .)

    end_func                       shift and go to state 361

state 356

    (106) func_return_param -> RETURN expr . SEMICOL
    (171) expr -> expr . MUL expr
    (172) expr -> expr . DIV expr
    (173) expr -> expr . PLUS expr
    (174) expr -> expr . MINUS expr

    SEMICOL         shift and go to state 362
    MUL             shift and go to state 242
    DIV             shift and go to state 243
    PLUS            shift and go to state 244
    MINUS           shift and go to state 245


state 357

    (124) if -> IF LP expression RP check_bool gotof LB statement . RB
    (125) if -> IF LP expression RP check_bool gotof LB statement . RB goto elseif
    (126) if -> IF LP expression RP check_bool gotof LB statement . RB goto else

    RB              shift and go to state 363


state 358

    (109) var_row -> VAR tipo ID row IS LP lista2 RP . SEMICOL

    SEMICOL         shift and go to state 364


state 359

    (134) while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB . statement RB goto
    (13) statement -> . asignacion SEMICOL statement
    (14) statement -> . if statement
    (15) statement -> . vars statement
    (16) statement -> . while statement
    (17) statement -> . for statement
    (18) statement -> . escritura statement
    (19) statement -> . escritura_var statement
    (20) statement -> . lectura statement
    (21) statement -> . func_call statement
    (22) statement -> . ID row SEMICOL
    (23) statement -> . ID matrix SEMICOL
    (24) statement -> . empty
    (25) asignacion -> . ID IS value
    (124) if -> . IF LP expression RP check_bool gotof LB statement RB
    (125) if -> . IF LP expression RP check_bool gotof LB statement RB goto elseif
    (126) if -> . IF LP expression RP check_bool gotof LB statement RB goto else
    (26) vars -> . VAR tipo vars1
    (27) vars -> . VAR tipo vars2
    (28) vars -> . VAR tipo vars3
    (29) vars -> . VAR tipo oper_aritmetica
    (30) vars -> . VAR tipo ID row SEMICOL
    (31) vars -> . VAR tipo ID matrix SEMICOL
    (32) vars -> . var_row
    (33) vars -> . var_row vars
    (34) vars -> . var_matrix
    (35) vars -> . var_matrix vars
    (36) vars -> . empty
    (134) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (135) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (144) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (145) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (146) escritura_var -> . PRINT LP any_var RP SEMICOL
    (151) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (152) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (100) func_call -> . ID LP RP SEMICOL
    (101) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (123) empty -> .
    (109) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (116) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 125
    IF              shift and go to state 127
    VAR             shift and go to state 128
    WHILE           shift and go to state 131
    FOR             shift and go to state 132
    PRINT           shift and go to state 133
    READ            shift and go to state 134
    RB              reduce using rule 123 (empty -> .)

  ! ID              [ reduce using rule 123 (empty -> .) ]
  ! IF              [ reduce using rule 123 (empty -> .) ]
  ! VAR             [ reduce using rule 123 (empty -> .) ]
  ! WHILE           [ reduce using rule 123 (empty -> .) ]
  ! FOR             [ reduce using rule 123 (empty -> .) ]
  ! PRINT           [ reduce using rule 123 (empty -> .) ]
  ! READ            [ reduce using rule 123 (empty -> .) ]

    statement                      shift and go to state 365
    asignacion                     shift and go to state 116
    if                             shift and go to state 117
    vars                           shift and go to state 118
    while                          shift and go to state 119
    for                            shift and go to state 120
    escritura                      shift and go to state 121
    escritura_var                  shift and go to state 122
    lectura                        shift and go to state 123
    func_call                      shift and go to state 124
    empty                          shift and go to state 126
    var_row                        shift and go to state 129
    var_matrix                     shift and go to state 130

state 360

    (135) for -> FOR LP VAR tipo ID IS value SEMICOL . expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (154) expression -> . var_gt
    (155) expression -> . var_lt
    (156) expression -> . var_equal
    (157) expression -> . var_neq
    (158) expression -> . var_geq
    (159) expression -> . var_leq
    (160) expression -> . expr
    (161) expression -> . TRUE
    (162) expression -> . FALSE
    (163) expression -> . ID
    (165) var_gt -> . expr GT expr
    (164) var_lt -> . expr LT expr
    (168) var_equal -> . expr EQUAL expr
    (169) var_neq -> . expr NEQ expr
    (167) var_geq -> . expr GEQ expr
    (166) var_leq -> . expr LEQ expr
    (171) expr -> . expr MUL expr
    (172) expr -> . expr DIV expr
    (173) expr -> . expr PLUS expr
    (174) expr -> . expr MINUS expr
    (175) expr -> . CTE_I
    (176) expr -> . CTE_F
    (177) expr -> . ID

    TRUE            shift and go to state 213
    FALSE           shift and go to state 214
    ID              shift and go to state 215
    CTE_I           shift and go to state 196
    CTE_F           shift and go to state 197

    expression                     shift and go to state 366
    var_gt                         shift and go to state 206
    var_lt                         shift and go to state 207
    var_equal                      shift and go to state 208
    var_neq                        shift and go to state 209
    var_geq                        shift and go to state 210
    var_leq                        shift and go to state 211
    expr                           shift and go to state 212

state 361

    (83) funcion -> tipo ID LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func .

    VOID            reduce using rule 83 (funcion -> tipo ID LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func .)
    INT             reduce using rule 83 (funcion -> tipo ID LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func .)
    FLOAT           reduce using rule 83 (funcion -> tipo ID LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func .)
    CHAR            reduce using rule 83 (funcion -> tipo ID LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func .)
    $end            reduce using rule 83 (funcion -> tipo ID LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func .)


state 362

    (106) func_return_param -> RETURN expr SEMICOL .

    RB              reduce using rule 106 (func_return_param -> RETURN expr SEMICOL .)


state 363

    (124) if -> IF LP expression RP check_bool gotof LB statement RB .
    (125) if -> IF LP expression RP check_bool gotof LB statement RB . goto elseif
    (126) if -> IF LP expression RP check_bool gotof LB statement RB . goto else
    (131) goto -> .

    ID              reduce using rule 124 (if -> IF LP expression RP check_bool gotof LB statement RB .)
    IF              reduce using rule 124 (if -> IF LP expression RP check_bool gotof LB statement RB .)
    VAR             reduce using rule 124 (if -> IF LP expression RP check_bool gotof LB statement RB .)
    WHILE           reduce using rule 124 (if -> IF LP expression RP check_bool gotof LB statement RB .)
    FOR             reduce using rule 124 (if -> IF LP expression RP check_bool gotof LB statement RB .)
    PRINT           reduce using rule 124 (if -> IF LP expression RP check_bool gotof LB statement RB .)
    READ            reduce using rule 124 (if -> IF LP expression RP check_bool gotof LB statement RB .)
    RETURN          reduce using rule 124 (if -> IF LP expression RP check_bool gotof LB statement RB .)
    RB              reduce using rule 124 (if -> IF LP expression RP check_bool gotof LB statement RB .)
    ELSEIF          reduce using rule 131 (goto -> .)
    ELSE            reduce using rule 131 (goto -> .)

    goto                           shift and go to state 367

state 364

    (109) var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .

    VAR             reduce using rule 109 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    ID              reduce using rule 109 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    IF              reduce using rule 109 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    WHILE           reduce using rule 109 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    FOR             reduce using rule 109 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    PRINT           reduce using rule 109 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    READ            reduce using rule 109 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    RETURN          reduce using rule 109 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    RB              reduce using rule 109 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)


state 365

    (134) while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB statement . RB goto

    RB              shift and go to state 368


state 366

    (135) for -> FOR LP VAR tipo ID IS value SEMICOL expression . check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (178) check_bool -> .

    SEMICOL         reduce using rule 178 (check_bool -> .)

    check_bool                     shift and go to state 369

state 367

    (125) if -> IF LP expression RP check_bool gotof LB statement RB goto . elseif
    (126) if -> IF LP expression RP check_bool gotof LB statement RB goto . else
    (127) elseif -> . ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (128) elseif -> . ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto elseif
    (129) elseif -> . ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto else
    (130) else -> . ELSE guarda_num_salto LB statement RB guarda_num_salto

    ELSEIF          shift and go to state 372
    ELSE            shift and go to state 373

    elseif                         shift and go to state 370
    else                           shift and go to state 371

state 368

    (134) while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB . goto
    (131) goto -> .

    ID              reduce using rule 131 (goto -> .)
    IF              reduce using rule 131 (goto -> .)
    VAR             reduce using rule 131 (goto -> .)
    WHILE           reduce using rule 131 (goto -> .)
    FOR             reduce using rule 131 (goto -> .)
    PRINT           reduce using rule 131 (goto -> .)
    READ            reduce using rule 131 (goto -> .)
    RETURN          reduce using rule 131 (goto -> .)
    RB              reduce using rule 131 (goto -> .)

    goto                           shift and go to state 374

state 369

    (135) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool . gotof_for SEMICOL ID opers RP LB statement RB goto
    (136) gotof_for -> .

    SEMICOL         reduce using rule 136 (gotof_for -> .)

    gotof_for                      shift and go to state 375

state 370

    (125) if -> IF LP expression RP check_bool gotof LB statement RB goto elseif .

    ID              reduce using rule 125 (if -> IF LP expression RP check_bool gotof LB statement RB goto elseif .)
    IF              reduce using rule 125 (if -> IF LP expression RP check_bool gotof LB statement RB goto elseif .)
    VAR             reduce using rule 125 (if -> IF LP expression RP check_bool gotof LB statement RB goto elseif .)
    WHILE           reduce using rule 125 (if -> IF LP expression RP check_bool gotof LB statement RB goto elseif .)
    FOR             reduce using rule 125 (if -> IF LP expression RP check_bool gotof LB statement RB goto elseif .)
    PRINT           reduce using rule 125 (if -> IF LP expression RP check_bool gotof LB statement RB goto elseif .)
    READ            reduce using rule 125 (if -> IF LP expression RP check_bool gotof LB statement RB goto elseif .)
    RETURN          reduce using rule 125 (if -> IF LP expression RP check_bool gotof LB statement RB goto elseif .)
    RB              reduce using rule 125 (if -> IF LP expression RP check_bool gotof LB statement RB goto elseif .)


state 371

    (126) if -> IF LP expression RP check_bool gotof LB statement RB goto else .

    ID              reduce using rule 126 (if -> IF LP expression RP check_bool gotof LB statement RB goto else .)
    IF              reduce using rule 126 (if -> IF LP expression RP check_bool gotof LB statement RB goto else .)
    VAR             reduce using rule 126 (if -> IF LP expression RP check_bool gotof LB statement RB goto else .)
    WHILE           reduce using rule 126 (if -> IF LP expression RP check_bool gotof LB statement RB goto else .)
    FOR             reduce using rule 126 (if -> IF LP expression RP check_bool gotof LB statement RB goto else .)
    PRINT           reduce using rule 126 (if -> IF LP expression RP check_bool gotof LB statement RB goto else .)
    READ            reduce using rule 126 (if -> IF LP expression RP check_bool gotof LB statement RB goto else .)
    RETURN          reduce using rule 126 (if -> IF LP expression RP check_bool gotof LB statement RB goto else .)
    RB              reduce using rule 126 (if -> IF LP expression RP check_bool gotof LB statement RB goto else .)


state 372

    (127) elseif -> ELSEIF . guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (128) elseif -> ELSEIF . guarda_num_salto LP expression RP check_bool gotof LB statement RB goto elseif
    (129) elseif -> ELSEIF . guarda_num_salto LP expression RP check_bool gotof LB statement RB goto else
    (133) guarda_num_salto -> .

    LP              reduce using rule 133 (guarda_num_salto -> .)

    guarda_num_salto               shift and go to state 376

state 373

    (130) else -> ELSE . guarda_num_salto LB statement RB guarda_num_salto
    (133) guarda_num_salto -> .

    LB              reduce using rule 133 (guarda_num_salto -> .)

    guarda_num_salto               shift and go to state 377

state 374

    (134) while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .

    ID              reduce using rule 134 (while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    IF              reduce using rule 134 (while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    VAR             reduce using rule 134 (while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    WHILE           reduce using rule 134 (while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    FOR             reduce using rule 134 (while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    PRINT           reduce using rule 134 (while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    READ            reduce using rule 134 (while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    RETURN          reduce using rule 134 (while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    RB              reduce using rule 134 (while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)


state 375

    (135) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for . SEMICOL ID opers RP LB statement RB goto

    SEMICOL         shift and go to state 378


state 376

    (127) elseif -> ELSEIF guarda_num_salto . LP expression RP check_bool gotof LB statement RB goto
    (128) elseif -> ELSEIF guarda_num_salto . LP expression RP check_bool gotof LB statement RB goto elseif
    (129) elseif -> ELSEIF guarda_num_salto . LP expression RP check_bool gotof LB statement RB goto else

    LP              shift and go to state 379


state 377

    (130) else -> ELSE guarda_num_salto . LB statement RB guarda_num_salto

    LB              shift and go to state 380


state 378

    (135) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL . ID opers RP LB statement RB goto

    ID              shift and go to state 381


state 379

    (127) elseif -> ELSEIF guarda_num_salto LP . expression RP check_bool gotof LB statement RB goto
    (128) elseif -> ELSEIF guarda_num_salto LP . expression RP check_bool gotof LB statement RB goto elseif
    (129) elseif -> ELSEIF guarda_num_salto LP . expression RP check_bool gotof LB statement RB goto else
    (154) expression -> . var_gt
    (155) expression -> . var_lt
    (156) expression -> . var_equal
    (157) expression -> . var_neq
    (158) expression -> . var_geq
    (159) expression -> . var_leq
    (160) expression -> . expr
    (161) expression -> . TRUE
    (162) expression -> . FALSE
    (163) expression -> . ID
    (165) var_gt -> . expr GT expr
    (164) var_lt -> . expr LT expr
    (168) var_equal -> . expr EQUAL expr
    (169) var_neq -> . expr NEQ expr
    (167) var_geq -> . expr GEQ expr
    (166) var_leq -> . expr LEQ expr
    (171) expr -> . expr MUL expr
    (172) expr -> . expr DIV expr
    (173) expr -> . expr PLUS expr
    (174) expr -> . expr MINUS expr
    (175) expr -> . CTE_I
    (176) expr -> . CTE_F
    (177) expr -> . ID

    TRUE            shift and go to state 213
    FALSE           shift and go to state 214
    ID              shift and go to state 215
    CTE_I           shift and go to state 196
    CTE_F           shift and go to state 197

    expression                     shift and go to state 382
    var_gt                         shift and go to state 206
    var_lt                         shift and go to state 207
    var_equal                      shift and go to state 208
    var_neq                        shift and go to state 209
    var_geq                        shift and go to state 210
    var_leq                        shift and go to state 211
    expr                           shift and go to state 212

state 380

    (130) else -> ELSE guarda_num_salto LB . statement RB guarda_num_salto
    (13) statement -> . asignacion SEMICOL statement
    (14) statement -> . if statement
    (15) statement -> . vars statement
    (16) statement -> . while statement
    (17) statement -> . for statement
    (18) statement -> . escritura statement
    (19) statement -> . escritura_var statement
    (20) statement -> . lectura statement
    (21) statement -> . func_call statement
    (22) statement -> . ID row SEMICOL
    (23) statement -> . ID matrix SEMICOL
    (24) statement -> . empty
    (25) asignacion -> . ID IS value
    (124) if -> . IF LP expression RP check_bool gotof LB statement RB
    (125) if -> . IF LP expression RP check_bool gotof LB statement RB goto elseif
    (126) if -> . IF LP expression RP check_bool gotof LB statement RB goto else
    (26) vars -> . VAR tipo vars1
    (27) vars -> . VAR tipo vars2
    (28) vars -> . VAR tipo vars3
    (29) vars -> . VAR tipo oper_aritmetica
    (30) vars -> . VAR tipo ID row SEMICOL
    (31) vars -> . VAR tipo ID matrix SEMICOL
    (32) vars -> . var_row
    (33) vars -> . var_row vars
    (34) vars -> . var_matrix
    (35) vars -> . var_matrix vars
    (36) vars -> . empty
    (134) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (135) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (144) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (145) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (146) escritura_var -> . PRINT LP any_var RP SEMICOL
    (151) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (152) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (100) func_call -> . ID LP RP SEMICOL
    (101) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (123) empty -> .
    (109) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (116) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 125
    IF              shift and go to state 127
    VAR             shift and go to state 128
    WHILE           shift and go to state 131
    FOR             shift and go to state 132
    PRINT           shift and go to state 133
    READ            shift and go to state 134
    RB              reduce using rule 123 (empty -> .)

  ! ID              [ reduce using rule 123 (empty -> .) ]
  ! IF              [ reduce using rule 123 (empty -> .) ]
  ! VAR             [ reduce using rule 123 (empty -> .) ]
  ! WHILE           [ reduce using rule 123 (empty -> .) ]
  ! FOR             [ reduce using rule 123 (empty -> .) ]
  ! PRINT           [ reduce using rule 123 (empty -> .) ]
  ! READ            [ reduce using rule 123 (empty -> .) ]

    statement                      shift and go to state 383
    asignacion                     shift and go to state 116
    if                             shift and go to state 117
    vars                           shift and go to state 118
    while                          shift and go to state 119
    for                            shift and go to state 120
    escritura                      shift and go to state 121
    escritura_var                  shift and go to state 122
    lectura                        shift and go to state 123
    func_call                      shift and go to state 124
    empty                          shift and go to state 126
    var_row                        shift and go to state 129
    var_matrix                     shift and go to state 130

state 381

    (135) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID . opers RP LB statement RB goto
    (137) opers -> . IS value
    (138) opers -> . PLUS IS value
    (139) opers -> . MINUS IS value
    (140) opers -> . DIV IS value
    (141) opers -> . MUL IS value
    (142) opers -> . PLUS PLUS
    (143) opers -> . MINUS MINUS

    IS              shift and go to state 384
    PLUS            shift and go to state 386
    MINUS           shift and go to state 387
    DIV             shift and go to state 388
    MUL             shift and go to state 389

    opers                          shift and go to state 385

state 382

    (127) elseif -> ELSEIF guarda_num_salto LP expression . RP check_bool gotof LB statement RB goto
    (128) elseif -> ELSEIF guarda_num_salto LP expression . RP check_bool gotof LB statement RB goto elseif
    (129) elseif -> ELSEIF guarda_num_salto LP expression . RP check_bool gotof LB statement RB goto else

    RP              shift and go to state 390


state 383

    (130) else -> ELSE guarda_num_salto LB statement . RB guarda_num_salto

    RB              shift and go to state 391


state 384

    (137) opers -> IS . value
    (73) value -> . CTE_F
    (74) value -> . CTE_I
    (75) value -> . ID
    (76) value -> . CTE_C
    (77) value -> . COMILLA ID COMILLA
    (78) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 82
    CTE_I           shift and go to state 83
    ID              shift and go to state 80
    CTE_C           shift and go to state 84
    COMILLA         shift and go to state 85
    COMILLAS        shift and go to state 86

    value                          shift and go to state 392

state 385

    (135) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers . RP LB statement RB goto

    RP              shift and go to state 393


state 386

    (138) opers -> PLUS . IS value
    (142) opers -> PLUS . PLUS

    IS              shift and go to state 395
    PLUS            shift and go to state 394


state 387

    (139) opers -> MINUS . IS value
    (143) opers -> MINUS . MINUS

    IS              shift and go to state 397
    MINUS           shift and go to state 396


state 388

    (140) opers -> DIV . IS value

    IS              shift and go to state 398


state 389

    (141) opers -> MUL . IS value

    IS              shift and go to state 399


state 390

    (127) elseif -> ELSEIF guarda_num_salto LP expression RP . check_bool gotof LB statement RB goto
    (128) elseif -> ELSEIF guarda_num_salto LP expression RP . check_bool gotof LB statement RB goto elseif
    (129) elseif -> ELSEIF guarda_num_salto LP expression RP . check_bool gotof LB statement RB goto else
    (178) check_bool -> .

    LB              reduce using rule 178 (check_bool -> .)

    check_bool                     shift and go to state 400

state 391

    (130) else -> ELSE guarda_num_salto LB statement RB . guarda_num_salto
    (133) guarda_num_salto -> .

    ID              reduce using rule 133 (guarda_num_salto -> .)
    IF              reduce using rule 133 (guarda_num_salto -> .)
    VAR             reduce using rule 133 (guarda_num_salto -> .)
    WHILE           reduce using rule 133 (guarda_num_salto -> .)
    FOR             reduce using rule 133 (guarda_num_salto -> .)
    PRINT           reduce using rule 133 (guarda_num_salto -> .)
    READ            reduce using rule 133 (guarda_num_salto -> .)
    RETURN          reduce using rule 133 (guarda_num_salto -> .)
    RB              reduce using rule 133 (guarda_num_salto -> .)

    guarda_num_salto               shift and go to state 401

state 392

    (137) opers -> IS value .

    RP              reduce using rule 137 (opers -> IS value .)


state 393

    (135) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP . LB statement RB goto

    LB              shift and go to state 402


state 394

    (142) opers -> PLUS PLUS .

    RP              reduce using rule 142 (opers -> PLUS PLUS .)


state 395

    (138) opers -> PLUS IS . value
    (73) value -> . CTE_F
    (74) value -> . CTE_I
    (75) value -> . ID
    (76) value -> . CTE_C
    (77) value -> . COMILLA ID COMILLA
    (78) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 82
    CTE_I           shift and go to state 83
    ID              shift and go to state 80
    CTE_C           shift and go to state 84
    COMILLA         shift and go to state 85
    COMILLAS        shift and go to state 86

    value                          shift and go to state 403

state 396

    (143) opers -> MINUS MINUS .

    RP              reduce using rule 143 (opers -> MINUS MINUS .)


state 397

    (139) opers -> MINUS IS . value
    (73) value -> . CTE_F
    (74) value -> . CTE_I
    (75) value -> . ID
    (76) value -> . CTE_C
    (77) value -> . COMILLA ID COMILLA
    (78) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 82
    CTE_I           shift and go to state 83
    ID              shift and go to state 80
    CTE_C           shift and go to state 84
    COMILLA         shift and go to state 85
    COMILLAS        shift and go to state 86

    value                          shift and go to state 404

state 398

    (140) opers -> DIV IS . value
    (73) value -> . CTE_F
    (74) value -> . CTE_I
    (75) value -> . ID
    (76) value -> . CTE_C
    (77) value -> . COMILLA ID COMILLA
    (78) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 82
    CTE_I           shift and go to state 83
    ID              shift and go to state 80
    CTE_C           shift and go to state 84
    COMILLA         shift and go to state 85
    COMILLAS        shift and go to state 86

    value                          shift and go to state 405

state 399

    (141) opers -> MUL IS . value
    (73) value -> . CTE_F
    (74) value -> . CTE_I
    (75) value -> . ID
    (76) value -> . CTE_C
    (77) value -> . COMILLA ID COMILLA
    (78) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 82
    CTE_I           shift and go to state 83
    ID              shift and go to state 80
    CTE_C           shift and go to state 84
    COMILLA         shift and go to state 85
    COMILLAS        shift and go to state 86

    value                          shift and go to state 406

state 400

    (127) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool . gotof LB statement RB goto
    (128) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool . gotof LB statement RB goto elseif
    (129) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool . gotof LB statement RB goto else
    (132) gotof -> .

    LB              reduce using rule 132 (gotof -> .)

    gotof                          shift and go to state 407

state 401

    (130) else -> ELSE guarda_num_salto LB statement RB guarda_num_salto .

    ID              reduce using rule 130 (else -> ELSE guarda_num_salto LB statement RB guarda_num_salto .)
    IF              reduce using rule 130 (else -> ELSE guarda_num_salto LB statement RB guarda_num_salto .)
    VAR             reduce using rule 130 (else -> ELSE guarda_num_salto LB statement RB guarda_num_salto .)
    WHILE           reduce using rule 130 (else -> ELSE guarda_num_salto LB statement RB guarda_num_salto .)
    FOR             reduce using rule 130 (else -> ELSE guarda_num_salto LB statement RB guarda_num_salto .)
    PRINT           reduce using rule 130 (else -> ELSE guarda_num_salto LB statement RB guarda_num_salto .)
    READ            reduce using rule 130 (else -> ELSE guarda_num_salto LB statement RB guarda_num_salto .)
    RETURN          reduce using rule 130 (else -> ELSE guarda_num_salto LB statement RB guarda_num_salto .)
    RB              reduce using rule 130 (else -> ELSE guarda_num_salto LB statement RB guarda_num_salto .)


state 402

    (135) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB . statement RB goto
    (13) statement -> . asignacion SEMICOL statement
    (14) statement -> . if statement
    (15) statement -> . vars statement
    (16) statement -> . while statement
    (17) statement -> . for statement
    (18) statement -> . escritura statement
    (19) statement -> . escritura_var statement
    (20) statement -> . lectura statement
    (21) statement -> . func_call statement
    (22) statement -> . ID row SEMICOL
    (23) statement -> . ID matrix SEMICOL
    (24) statement -> . empty
    (25) asignacion -> . ID IS value
    (124) if -> . IF LP expression RP check_bool gotof LB statement RB
    (125) if -> . IF LP expression RP check_bool gotof LB statement RB goto elseif
    (126) if -> . IF LP expression RP check_bool gotof LB statement RB goto else
    (26) vars -> . VAR tipo vars1
    (27) vars -> . VAR tipo vars2
    (28) vars -> . VAR tipo vars3
    (29) vars -> . VAR tipo oper_aritmetica
    (30) vars -> . VAR tipo ID row SEMICOL
    (31) vars -> . VAR tipo ID matrix SEMICOL
    (32) vars -> . var_row
    (33) vars -> . var_row vars
    (34) vars -> . var_matrix
    (35) vars -> . var_matrix vars
    (36) vars -> . empty
    (134) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (135) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (144) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (145) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (146) escritura_var -> . PRINT LP any_var RP SEMICOL
    (151) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (152) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (100) func_call -> . ID LP RP SEMICOL
    (101) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (123) empty -> .
    (109) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (116) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 125
    IF              shift and go to state 127
    VAR             shift and go to state 128
    WHILE           shift and go to state 131
    FOR             shift and go to state 132
    PRINT           shift and go to state 133
    READ            shift and go to state 134
    RB              reduce using rule 123 (empty -> .)

  ! ID              [ reduce using rule 123 (empty -> .) ]
  ! IF              [ reduce using rule 123 (empty -> .) ]
  ! VAR             [ reduce using rule 123 (empty -> .) ]
  ! WHILE           [ reduce using rule 123 (empty -> .) ]
  ! FOR             [ reduce using rule 123 (empty -> .) ]
  ! PRINT           [ reduce using rule 123 (empty -> .) ]
  ! READ            [ reduce using rule 123 (empty -> .) ]

    statement                      shift and go to state 408
    asignacion                     shift and go to state 116
    if                             shift and go to state 117
    vars                           shift and go to state 118
    while                          shift and go to state 119
    for                            shift and go to state 120
    escritura                      shift and go to state 121
    escritura_var                  shift and go to state 122
    lectura                        shift and go to state 123
    func_call                      shift and go to state 124
    empty                          shift and go to state 126
    var_row                        shift and go to state 129
    var_matrix                     shift and go to state 130

state 403

    (138) opers -> PLUS IS value .

    RP              reduce using rule 138 (opers -> PLUS IS value .)


state 404

    (139) opers -> MINUS IS value .

    RP              reduce using rule 139 (opers -> MINUS IS value .)


state 405

    (140) opers -> DIV IS value .

    RP              reduce using rule 140 (opers -> DIV IS value .)


state 406

    (141) opers -> MUL IS value .

    RP              reduce using rule 141 (opers -> MUL IS value .)


state 407

    (127) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof . LB statement RB goto
    (128) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof . LB statement RB goto elseif
    (129) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof . LB statement RB goto else

    LB              shift and go to state 409


state 408

    (135) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement . RB goto

    RB              shift and go to state 410


state 409

    (127) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB . statement RB goto
    (128) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB . statement RB goto elseif
    (129) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB . statement RB goto else
    (13) statement -> . asignacion SEMICOL statement
    (14) statement -> . if statement
    (15) statement -> . vars statement
    (16) statement -> . while statement
    (17) statement -> . for statement
    (18) statement -> . escritura statement
    (19) statement -> . escritura_var statement
    (20) statement -> . lectura statement
    (21) statement -> . func_call statement
    (22) statement -> . ID row SEMICOL
    (23) statement -> . ID matrix SEMICOL
    (24) statement -> . empty
    (25) asignacion -> . ID IS value
    (124) if -> . IF LP expression RP check_bool gotof LB statement RB
    (125) if -> . IF LP expression RP check_bool gotof LB statement RB goto elseif
    (126) if -> . IF LP expression RP check_bool gotof LB statement RB goto else
    (26) vars -> . VAR tipo vars1
    (27) vars -> . VAR tipo vars2
    (28) vars -> . VAR tipo vars3
    (29) vars -> . VAR tipo oper_aritmetica
    (30) vars -> . VAR tipo ID row SEMICOL
    (31) vars -> . VAR tipo ID matrix SEMICOL
    (32) vars -> . var_row
    (33) vars -> . var_row vars
    (34) vars -> . var_matrix
    (35) vars -> . var_matrix vars
    (36) vars -> . empty
    (134) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (135) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (144) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (145) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (146) escritura_var -> . PRINT LP any_var RP SEMICOL
    (151) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (152) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (100) func_call -> . ID LP RP SEMICOL
    (101) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (123) empty -> .
    (109) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (116) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 125
    IF              shift and go to state 127
    VAR             shift and go to state 128
    WHILE           shift and go to state 131
    FOR             shift and go to state 132
    PRINT           shift and go to state 133
    READ            shift and go to state 134
    RB              reduce using rule 123 (empty -> .)

  ! ID              [ reduce using rule 123 (empty -> .) ]
  ! IF              [ reduce using rule 123 (empty -> .) ]
  ! VAR             [ reduce using rule 123 (empty -> .) ]
  ! WHILE           [ reduce using rule 123 (empty -> .) ]
  ! FOR             [ reduce using rule 123 (empty -> .) ]
  ! PRINT           [ reduce using rule 123 (empty -> .) ]
  ! READ            [ reduce using rule 123 (empty -> .) ]

    statement                      shift and go to state 411
    asignacion                     shift and go to state 116
    if                             shift and go to state 117
    vars                           shift and go to state 118
    while                          shift and go to state 119
    for                            shift and go to state 120
    escritura                      shift and go to state 121
    escritura_var                  shift and go to state 122
    lectura                        shift and go to state 123
    func_call                      shift and go to state 124
    empty                          shift and go to state 126
    var_row                        shift and go to state 129
    var_matrix                     shift and go to state 130

state 410

    (135) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB . goto
    (131) goto -> .

    ID              reduce using rule 131 (goto -> .)
    IF              reduce using rule 131 (goto -> .)
    VAR             reduce using rule 131 (goto -> .)
    WHILE           reduce using rule 131 (goto -> .)
    FOR             reduce using rule 131 (goto -> .)
    PRINT           reduce using rule 131 (goto -> .)
    READ            reduce using rule 131 (goto -> .)
    RETURN          reduce using rule 131 (goto -> .)
    RB              reduce using rule 131 (goto -> .)

    goto                           shift and go to state 412

state 411

    (127) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement . RB goto
    (128) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement . RB goto elseif
    (129) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement . RB goto else

    RB              shift and go to state 413


state 412

    (135) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .

    ID              reduce using rule 135 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    IF              reduce using rule 135 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    VAR             reduce using rule 135 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    WHILE           reduce using rule 135 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    FOR             reduce using rule 135 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    PRINT           reduce using rule 135 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    READ            reduce using rule 135 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    RETURN          reduce using rule 135 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    RB              reduce using rule 135 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)


state 413

    (127) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB . goto
    (128) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB . goto elseif
    (129) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB . goto else
    (131) goto -> .

    ELSEIF          reduce using rule 131 (goto -> .)
    ELSE            reduce using rule 131 (goto -> .)
    ID              reduce using rule 131 (goto -> .)
    IF              reduce using rule 131 (goto -> .)
    VAR             reduce using rule 131 (goto -> .)
    WHILE           reduce using rule 131 (goto -> .)
    FOR             reduce using rule 131 (goto -> .)
    PRINT           reduce using rule 131 (goto -> .)
    READ            reduce using rule 131 (goto -> .)
    RETURN          reduce using rule 131 (goto -> .)
    RB              reduce using rule 131 (goto -> .)

    goto                           shift and go to state 414

state 414

    (127) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .
    (128) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto . elseif
    (129) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto . else
    (127) elseif -> . ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (128) elseif -> . ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto elseif
    (129) elseif -> . ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto else
    (130) else -> . ELSE guarda_num_salto LB statement RB guarda_num_salto

    ID              reduce using rule 127 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    IF              reduce using rule 127 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    VAR             reduce using rule 127 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    WHILE           reduce using rule 127 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    FOR             reduce using rule 127 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    PRINT           reduce using rule 127 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    READ            reduce using rule 127 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    RETURN          reduce using rule 127 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    RB              reduce using rule 127 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    ELSEIF          shift and go to state 372
    ELSE            shift and go to state 373

    elseif                         shift and go to state 415
    else                           shift and go to state 416

state 415

    (128) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto elseif .

    ID              reduce using rule 128 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto elseif .)
    IF              reduce using rule 128 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto elseif .)
    VAR             reduce using rule 128 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto elseif .)
    WHILE           reduce using rule 128 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto elseif .)
    FOR             reduce using rule 128 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto elseif .)
    PRINT           reduce using rule 128 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto elseif .)
    READ            reduce using rule 128 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto elseif .)
    RETURN          reduce using rule 128 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto elseif .)
    RB              reduce using rule 128 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto elseif .)


state 416

    (129) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto else .

    ID              reduce using rule 129 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto else .)
    IF              reduce using rule 129 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto else .)
    VAR             reduce using rule 129 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto else .)
    WHILE           reduce using rule 129 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto else .)
    FOR             reduce using rule 129 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto else .)
    PRINT           reduce using rule 129 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto else .)
    READ            reduce using rule 129 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto else .)
    RETURN          reduce using rule 129 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto else .)
    RB              reduce using rule 129 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto else .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VOID in state 4 resolved as shift
WARNING: shift/reduce conflict for INT in state 4 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 4 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 4 resolved as shift
WARNING: shift/reduce conflict for VOID in state 6 resolved as shift
WARNING: shift/reduce conflict for INT in state 6 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 6 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 6 resolved as shift
WARNING: shift/reduce conflict for VOID in state 22 resolved as shift
WARNING: shift/reduce conflict for INT in state 22 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 22 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 22 resolved as shift
WARNING: shift/reduce conflict for ID in state 27 resolved as shift
WARNING: shift/reduce conflict for VOID in state 39 resolved as shift
WARNING: shift/reduce conflict for INT in state 39 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 39 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 39 resolved as shift
WARNING: shift/reduce conflict for RP in state 50 resolved as shift
WARNING: shift/reduce conflict for RP in state 52 resolved as shift
WARNING: shift/reduce conflict for RP in state 76 resolved as shift
WARNING: shift/reduce conflict for RP in state 77 resolved as shift
WARNING: shift/reduce conflict for ID in state 92 resolved as shift
WARNING: shift/reduce conflict for IF in state 92 resolved as shift
WARNING: shift/reduce conflict for VAR in state 92 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 92 resolved as shift
WARNING: shift/reduce conflict for FOR in state 92 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 92 resolved as shift
WARNING: shift/reduce conflict for READ in state 92 resolved as shift
WARNING: shift/reduce conflict for ID in state 97 resolved as shift
WARNING: shift/reduce conflict for IF in state 97 resolved as shift
WARNING: shift/reduce conflict for VAR in state 97 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 97 resolved as shift
WARNING: shift/reduce conflict for FOR in state 97 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 97 resolved as shift
WARNING: shift/reduce conflict for READ in state 97 resolved as shift
WARNING: shift/reduce conflict for ID in state 117 resolved as shift
WARNING: shift/reduce conflict for IF in state 117 resolved as shift
WARNING: shift/reduce conflict for VAR in state 117 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 117 resolved as shift
WARNING: shift/reduce conflict for FOR in state 117 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 117 resolved as shift
WARNING: shift/reduce conflict for READ in state 117 resolved as shift
WARNING: shift/reduce conflict for ID in state 118 resolved as shift
WARNING: shift/reduce conflict for IF in state 118 resolved as shift
WARNING: shift/reduce conflict for VAR in state 118 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 118 resolved as shift
WARNING: shift/reduce conflict for FOR in state 118 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 118 resolved as shift
WARNING: shift/reduce conflict for READ in state 118 resolved as shift
WARNING: shift/reduce conflict for ID in state 119 resolved as shift
WARNING: shift/reduce conflict for IF in state 119 resolved as shift
WARNING: shift/reduce conflict for VAR in state 119 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 119 resolved as shift
WARNING: shift/reduce conflict for FOR in state 119 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 119 resolved as shift
WARNING: shift/reduce conflict for READ in state 119 resolved as shift
WARNING: shift/reduce conflict for ID in state 120 resolved as shift
WARNING: shift/reduce conflict for IF in state 120 resolved as shift
WARNING: shift/reduce conflict for VAR in state 120 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 120 resolved as shift
WARNING: shift/reduce conflict for FOR in state 120 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 120 resolved as shift
WARNING: shift/reduce conflict for READ in state 120 resolved as shift
WARNING: shift/reduce conflict for ID in state 121 resolved as shift
WARNING: shift/reduce conflict for IF in state 121 resolved as shift
WARNING: shift/reduce conflict for VAR in state 121 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 121 resolved as shift
WARNING: shift/reduce conflict for FOR in state 121 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 121 resolved as shift
WARNING: shift/reduce conflict for READ in state 121 resolved as shift
WARNING: shift/reduce conflict for ID in state 122 resolved as shift
WARNING: shift/reduce conflict for IF in state 122 resolved as shift
WARNING: shift/reduce conflict for VAR in state 122 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 122 resolved as shift
WARNING: shift/reduce conflict for FOR in state 122 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 122 resolved as shift
WARNING: shift/reduce conflict for READ in state 122 resolved as shift
WARNING: shift/reduce conflict for ID in state 123 resolved as shift
WARNING: shift/reduce conflict for IF in state 123 resolved as shift
WARNING: shift/reduce conflict for VAR in state 123 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 123 resolved as shift
WARNING: shift/reduce conflict for FOR in state 123 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 123 resolved as shift
WARNING: shift/reduce conflict for READ in state 123 resolved as shift
WARNING: shift/reduce conflict for ID in state 124 resolved as shift
WARNING: shift/reduce conflict for IF in state 124 resolved as shift
WARNING: shift/reduce conflict for VAR in state 124 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 124 resolved as shift
WARNING: shift/reduce conflict for FOR in state 124 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 124 resolved as shift
WARNING: shift/reduce conflict for READ in state 124 resolved as shift
WARNING: shift/reduce conflict for VAR in state 129 resolved as shift
WARNING: shift/reduce conflict for VAR in state 129 resolved as shift
WARNING: shift/reduce conflict for VAR in state 130 resolved as shift
WARNING: shift/reduce conflict for VAR in state 130 resolved as shift
WARNING: shift/reduce conflict for VAR in state 135 resolved as shift
WARNING: shift/reduce conflict for VAR in state 140 resolved as shift
WARNING: shift/reduce conflict for ID in state 159 resolved as shift
WARNING: shift/reduce conflict for IF in state 159 resolved as shift
WARNING: shift/reduce conflict for VAR in state 159 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 159 resolved as shift
WARNING: shift/reduce conflict for FOR in state 159 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 159 resolved as shift
WARNING: shift/reduce conflict for READ in state 159 resolved as shift
WARNING: shift/reduce conflict for ID in state 173 resolved as shift
WARNING: shift/reduce conflict for ID in state 181 resolved as shift
WARNING: shift/reduce conflict for IF in state 181 resolved as shift
WARNING: shift/reduce conflict for VAR in state 181 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 181 resolved as shift
WARNING: shift/reduce conflict for FOR in state 181 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 181 resolved as shift
WARNING: shift/reduce conflict for READ in state 181 resolved as shift
WARNING: shift/reduce conflict for VAR in state 183 resolved as shift
WARNING: shift/reduce conflict for VAR in state 186 resolved as shift
WARNING: shift/reduce conflict for ID in state 187 resolved as shift
WARNING: shift/reduce conflict for IF in state 187 resolved as shift
WARNING: shift/reduce conflict for VAR in state 187 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 187 resolved as shift
WARNING: shift/reduce conflict for FOR in state 187 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 187 resolved as shift
WARNING: shift/reduce conflict for READ in state 187 resolved as shift
WARNING: shift/reduce conflict for ID in state 233 resolved as shift
WARNING: shift/reduce conflict for IF in state 233 resolved as shift
WARNING: shift/reduce conflict for VAR in state 233 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 233 resolved as shift
WARNING: shift/reduce conflict for FOR in state 233 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 233 resolved as shift
WARNING: shift/reduce conflict for READ in state 233 resolved as shift
WARNING: shift/reduce conflict for ID in state 234 resolved as shift
WARNING: shift/reduce conflict for IF in state 234 resolved as shift
WARNING: shift/reduce conflict for VAR in state 234 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 234 resolved as shift
WARNING: shift/reduce conflict for FOR in state 234 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 234 resolved as shift
WARNING: shift/reduce conflict for READ in state 234 resolved as shift
WARNING: shift/reduce conflict for CTE_I in state 266 resolved as shift
WARNING: shift/reduce conflict for CTE_F in state 266 resolved as shift
WARNING: shift/reduce conflict for ID in state 266 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 266 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 266 resolved as shift
WARNING: shift/reduce conflict for ID in state 342 resolved as shift
WARNING: shift/reduce conflict for IF in state 342 resolved as shift
WARNING: shift/reduce conflict for VAR in state 342 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 342 resolved as shift
WARNING: shift/reduce conflict for FOR in state 342 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 342 resolved as shift
WARNING: shift/reduce conflict for READ in state 342 resolved as shift
WARNING: shift/reduce conflict for ID in state 359 resolved as shift
WARNING: shift/reduce conflict for IF in state 359 resolved as shift
WARNING: shift/reduce conflict for VAR in state 359 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 359 resolved as shift
WARNING: shift/reduce conflict for FOR in state 359 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 359 resolved as shift
WARNING: shift/reduce conflict for READ in state 359 resolved as shift
WARNING: shift/reduce conflict for ID in state 380 resolved as shift
WARNING: shift/reduce conflict for IF in state 380 resolved as shift
WARNING: shift/reduce conflict for VAR in state 380 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 380 resolved as shift
WARNING: shift/reduce conflict for FOR in state 380 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 380 resolved as shift
WARNING: shift/reduce conflict for READ in state 380 resolved as shift
WARNING: shift/reduce conflict for ID in state 402 resolved as shift
WARNING: shift/reduce conflict for IF in state 402 resolved as shift
WARNING: shift/reduce conflict for VAR in state 402 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 402 resolved as shift
WARNING: shift/reduce conflict for FOR in state 402 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 402 resolved as shift
WARNING: shift/reduce conflict for READ in state 402 resolved as shift
WARNING: shift/reduce conflict for ID in state 409 resolved as shift
WARNING: shift/reduce conflict for IF in state 409 resolved as shift
WARNING: shift/reduce conflict for VAR in state 409 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 409 resolved as shift
WARNING: shift/reduce conflict for FOR in state 409 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 409 resolved as shift
WARNING: shift/reduce conflict for READ in state 409 resolved as shift
WARNING: reduce/reduce conflict in state 6 resolved using rule (programa1 -> varsG)
WARNING: rejected rule (empty -> <empty>) in state 6
WARNING: reduce/reduce conflict in state 11 resolved using rule (varsG -> var_rowG)
WARNING: rejected rule (empty -> <empty>) in state 11
WARNING: reduce/reduce conflict in state 12 resolved using rule (varsG -> var_matrixG)
WARNING: rejected rule (empty -> <empty>) in state 12
WARNING: reduce/reduce conflict in state 13 resolved using rule (varsG -> declarar_func)
WARNING: rejected rule (empty -> <empty>) in state 13
WARNING: reduce/reduce conflict in state 14 resolved using rule (funciones -> empty)
WARNING: rejected rule (varsG -> empty) in state 14
WARNING: reduce/reduce conflict in state 47 resolved using rule (vars2_1G -> empty)
WARNING: rejected rule (vars3_1G -> empty) in state 47
WARNING: reduce/reduce conflict in state 61 resolved using rule (vars1G -> ID SEMICOL)
WARNING: rejected rule (vars3G -> ID SEMICOL) in state 61
WARNING: reduce/reduce conflict in state 126 resolved using rule (statement -> empty)
WARNING: rejected rule (vars -> empty) in state 126
WARNING: reduce/reduce conflict in state 129 resolved using rule (vars -> var_row)
WARNING: rejected rule (empty -> <empty>) in state 129
WARNING: reduce/reduce conflict in state 130 resolved using rule (vars -> var_matrix)
WARNING: rejected rule (empty -> <empty>) in state 130
WARNING: reduce/reduce conflict in state 215 resolved using rule (expression -> ID)
WARNING: rejected rule (expr -> ID) in state 215
WARNING: reduce/reduce conflict in state 223 resolved using rule (vars2_1 -> empty)
WARNING: rejected rule (vars3_1 -> empty) in state 223
WARNING: reduce/reduce conflict in state 257 resolved using rule (vars1 -> ID SEMICOL)
WARNING: rejected rule (vars3 -> ID SEMICOL) in state 257
WARNING: reduce/reduce conflict in state 266 resolved using rule (empty -> <empty>)
WARNING: rejected rule (expression -> expr) in state 266
WARNING: reduce/reduce conflict in state 269 resolved using rule (expression -> ID)
WARNING: rejected rule (expr -> ID) in state 269
WARNING: reduce/reduce conflict in state 298 resolved using rule (value -> ID)
WARNING: rejected rule (expr -> ID) in state 298
WARNING: reduce/reduce conflict in state 301 resolved using rule (value -> CTE_F)
WARNING: rejected rule (expr -> CTE_F) in state 301
WARNING: reduce/reduce conflict in state 302 resolved using rule (value -> CTE_I)
WARNING: rejected rule (expr -> CTE_I) in state 302
WARNING: Rule (vars3_1G -> empty) is never reduced
WARNING: Rule (vars3G -> ID SEMICOL) is never reduced
WARNING: Rule (vars3_1 -> empty) is never reduced
WARNING: Rule (vars3 -> ID SEMICOL) is never reduced
