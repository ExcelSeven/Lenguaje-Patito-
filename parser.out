Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BEGIN
    BOOL
    COL
    CONST
    CTE_B
    CTE_S
    DETERMATRIZ
    DO
    DOT
    ELIF
    ELSEIF
    END
    EOF
    GLOBAL
    INPUT
    INVERMATRIZ
    LET
    LOCAL
    NOT
    OR
    SELECT
    SWITCH
    THEN
    TRANSMATRIZ

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SEMICOL programa1
Rule 2     programa1 -> varsG funciones
Rule 3     programa1 -> varsG funciones main funciones
Rule 4     programa1 -> varsG main funciones
Rule 5     programa1 -> varsG
Rule 6     programa1 -> main
Rule 7     programa1 -> funciones
Rule 8     funciones -> funcion
Rule 9     funciones -> funciones funcion
Rule 10    funciones -> empty
Rule 11    main -> tipo MAIN quad_main LP RP LB statement func_return_main RB end_main
Rule 12    main -> VOID MAIN quad_main LP RP LB statement RB
Rule 13    quad_main -> <empty>
Rule 14    statement -> asignacion SEMICOL statement
Rule 15    statement -> if statement
Rule 16    statement -> vars statement
Rule 17    statement -> while statement
Rule 18    statement -> for statement
Rule 19    statement -> escritura statement
Rule 20    statement -> escritura_var statement
Rule 21    statement -> lectura statement
Rule 22    statement -> func_call statement
Rule 23    statement -> ID row SEMICOL
Rule 24    statement -> ID matrix SEMICOL
Rule 25    statement -> empty
Rule 26    asignacion -> ID IS value
Rule 27    vars -> VAR tipo vars1
Rule 28    vars -> VAR tipo vars2
Rule 29    vars -> VAR tipo vars3
Rule 30    vars -> VAR tipo oper_aritmetica
Rule 31    vars -> VAR tipo ID row SEMICOL
Rule 32    vars -> VAR tipo ID matrix SEMICOL
Rule 33    vars -> var_row
Rule 34    vars -> var_row vars
Rule 35    vars -> var_matrix
Rule 36    vars -> var_matrix vars
Rule 37    vars -> empty
Rule 38    vars1 -> ID SEMICOL
Rule 39    vars2 -> vars2_1 ID IS value SEMICOL
Rule 40    vars2_1 -> vars2_1 ID IS value COMMA
Rule 41    vars2_1 -> ID IS value COMMA
Rule 42    vars2_1 -> empty
Rule 43    vars2 -> ID IS value SEMICOL
Rule 44    vars3 -> vars3_1 ID SEMICOL
Rule 45    vars3_1 -> vars3_1 ID COMMA
Rule 46    vars3_1 -> ID COMMA
Rule 47    vars3 -> ID SEMICOL
Rule 48    vars3_1 -> empty
Rule 49    varsG -> VAR tipo vars1G varsG
Rule 50    varsG -> VAR tipo vars2G varsG
Rule 51    varsG -> VAR tipo vars3G varsG
Rule 52    varsG -> VAR LB varsG RB
Rule 53    varsG -> var_rowG
Rule 54    varsG -> var_rowG varsG
Rule 55    varsG -> var_matrixG
Rule 56    varsG -> var_matrixG varsG
Rule 57    varsG -> declarar_func varsG
Rule 58    varsG -> declarar_func
Rule 59    varsG -> empty
Rule 60    vars1G -> ID SEMICOL
Rule 61    vars2G -> vars2_1G ID IS value SEMICOL
Rule 62    vars2_1G -> vars2_1G ID IS value COMMA
Rule 63    vars2_1G -> ID IS value COMMA
Rule 64    vars2_1G -> empty
Rule 65    vars2G -> ID IS value SEMICOL
Rule 66    vars3G -> vars3_1G ID SEMICOL
Rule 67    vars3_1G -> vars3_1G ID COMMA
Rule 68    vars3_1G -> ID COMMA
Rule 69    vars3G -> ID SEMICOL
Rule 70    vars3_1G -> empty
Rule 71    tipo -> INT
Rule 72    tipo -> FLOAT
Rule 73    tipo -> CHAR
Rule 74    value -> CTE_F
Rule 75    value -> CTE_I
Rule 76    value -> ID
Rule 77    value -> CTE_C
Rule 78    value -> COMILLA ID COMILLA
Rule 79    value -> COMILLAS ID COMILLAS
Rule 80    check_type -> <empty>
Rule 81    funcion -> VOID ID LP param RP verificar LB var_func statement RB end_func
Rule 82    funcion -> VOID ID LP RP verificar2 LB var_func statement RB end_func
Rule 83    funcion -> tipo ID LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
Rule 84    funcion -> tipo ID LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
Rule 85    verificar -> <empty>
Rule 86    verificar2 -> <empty>
Rule 87    add_func_dir -> <empty>
Rule 88    add_func_dir2 -> <empty>
Rule 89    var_func -> vars
Rule 90    param -> tipo ID
Rule 91    param -> param COMMA tipo ID
Rule 92    param -> empty
Rule 93    declarar_func -> FUNC tipo ID LP RP SEMICOL
Rule 94    declarar_func -> FUNC VOID ID LP RP SEMICOL
Rule 95    declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL
Rule 96    declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL
Rule 97    declarar_param -> tipo COMMA declarar_param
Rule 98    declarar_param -> tipo declarar_param
Rule 99    declarar_param -> empty
Rule 100   end_func -> <empty>
Rule 101   func_call -> ID LP RP SEMICOL
Rule 102   func_call -> ID LP func_era func_call_param RP SEMICOL
Rule 103   func_era -> <empty>
Rule 104   func_call_param -> expr
Rule 105   func_call_param -> func_call_param COMMA expr
Rule 106   func_return -> RETURN expr SEMICOL
Rule 107   func_return_param -> RETURN expr SEMICOL
Rule 108   func_return_main -> RETURN expr SEMICOL
Rule 109   end_main -> <empty>
Rule 110   var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL
Rule 111   var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL
Rule 112   elem_lista -> value
Rule 113   elem_lista -> empty
Rule 114   lista2 -> elem_lista COMMA lista2
Rule 115   lista2 -> elem_lista COMMA elem_lista
Rule 116   row -> LC CTE_I RC
Rule 117   var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL
Rule 118   var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL
Rule 119   matrix2 -> LP lista2 RP COMMA matrix2
Rule 120   matrix2 -> LP lista2 RP COMMA LP lista2 RP
Rule 121   row_list -> row COMMA row_list
Rule 122   row_list -> row COMMA row
Rule 123   matrix -> row row
Rule 124   empty -> <empty>
Rule 125   if -> IF LP expression RP check_bool gotof LB statement RB fill_if
Rule 126   if -> IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
Rule 127   else -> ELSE guarda_num_salto LB statement RB fill_goto_else
Rule 128   goto -> <empty>
Rule 129   gotof -> <empty>
Rule 130   fill_goto_else -> <empty>
Rule 131   fill_gotof -> <empty>
Rule 132   fill_gotof2 -> <empty>
Rule 133   fill_if -> <empty>
Rule 134   guarda_num_salto -> <empty>
Rule 135   while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
Rule 136   for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
Rule 137   gotof_for -> <empty>
Rule 138   opers -> IS value
Rule 139   opers -> PLUS IS value
Rule 140   opers -> MINUS IS value
Rule 141   opers -> DIV IS value
Rule 142   opers -> MUL IS value
Rule 143   opers -> PLUS PLUS
Rule 144   opers -> MINUS MINUS
Rule 145   escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL
Rule 146   escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL
Rule 147   escritura_var -> PRINT LP any_var RP SEMICOL
Rule 148   any_var -> ID
Rule 149   any -> expr any
Rule 150   any -> expression any
Rule 151   any -> empty
Rule 152   lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL
Rule 153   lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
Rule 154   any_lectura -> ID
Rule 155   expression -> var_gt
Rule 156   expression -> var_lt
Rule 157   expression -> var_equal
Rule 158   expression -> var_neq
Rule 159   expression -> var_geq
Rule 160   expression -> var_leq
Rule 161   expression -> expr
Rule 162   expression -> TRUE
Rule 163   expression -> FALSE
Rule 164   expression -> ID
Rule 165   var_lt -> expr LT expr
Rule 166   var_gt -> expr GT expr
Rule 167   var_leq -> expr LEQ expr
Rule 168   var_geq -> expr GEQ expr
Rule 169   var_equal -> expr EQUAL expr
Rule 170   var_neq -> expr NEQ expr
Rule 171   oper_aritmetica -> ID IS expr SEMICOL
Rule 172   expr -> expr MUL expr
Rule 173   expr -> expr DIV expr
Rule 174   expr -> expr PLUS expr
Rule 175   expr -> expr MINUS expr
Rule 176   expr -> CTE_I
Rule 177   expr -> CTE_F
Rule 178   expr -> ID
Rule 179   check_bool -> <empty>

Terminals, with rules where they appear

AND                  : 
BEGIN                : 
BOOL                 : 
CHAR                 : 73
COL                  : 
COMILLA              : 78 78 145 145 152 152
COMILLAS             : 79 79 146 146 153 153
COMMA                : 40 41 45 46 62 63 67 68 91 97 105 114 115 119 120 121 122
CONST                : 
CTE_B                : 
CTE_C                : 77
CTE_F                : 74 177
CTE_I                : 75 116 176
CTE_S                : 
DETERMATRIZ          : 
DIV                  : 141 173
DO                   : 
DOT                  : 
ELIF                 : 
ELSE                 : 127
ELSEIF               : 
END                  : 
EOF                  : 
EQUAL                : 169
FALSE                : 163
FLOAT                : 72
FOR                  : 136
FUNC                 : 93 94 95 96
GEQ                  : 168
GLOBAL               : 
GT                   : 166
ID                   : 1 23 24 26 31 32 38 39 40 41 43 44 45 46 47 60 61 62 63 65 66 67 68 69 76 78 79 81 82 83 84 90 91 93 94 95 96 101 102 110 111 117 118 136 136 148 154 164 171 178
IF                   : 125 126
INPUT                : 
INT                  : 71
INVERMATRIZ          : 
IS                   : 26 39 40 41 43 61 62 63 65 110 111 117 118 136 138 139 140 141 142 171
LB                   : 11 12 52 81 82 83 84 125 126 127 135 136
LC                   : 116
LEQ                  : 167
LET                  : 
LOCAL                : 
LP                   : 11 12 81 82 83 84 93 94 95 96 101 102 110 111 119 120 120 125 126 135 136 145 146 147 152 153
LT                   : 165
MAIN                 : 11 12
MINUS                : 140 144 144 175
MUL                  : 142 172
NEQ                  : 170
NOT                  : 
OR                   : 
PLUS                 : 139 143 143 174
PRINT                : 145 146 147
PROGRAM              : 1
RB                   : 11 12 52 81 82 83 84 125 126 127 135 136
RC                   : 116
READ                 : 152 153
RETURN               : 106 107 108
RP                   : 11 12 81 82 83 84 93 94 95 96 101 102 110 111 119 120 120 125 126 135 136 145 146 147 152 153
SELECT               : 
SEMICOL              : 1 14 23 24 31 32 38 39 43 44 47 60 61 65 66 69 93 94 95 96 101 102 106 107 108 110 111 117 118 136 136 145 146 147 152 153 171
SWITCH               : 
THEN                 : 
TRANSMATRIZ          : 
TRUE                 : 162
VAR                  : 27 28 29 30 31 32 49 50 51 52 110 111 117 118 136
VOID                 : 12 81 82 94 96
WHILE                : 135
error                : 

Nonterminals, with rules where they appear

add_func_dir         : 84
add_func_dir2        : 83
any                  : 145 146 149 150
any_lectura          : 152 153
any_var              : 147
asignacion           : 14
check_bool           : 125 126 135 136
check_type           : 
declarar_func        : 57 58
declarar_param       : 95 96 97 98
elem_lista           : 114 115 115
else                 : 126
empty                : 10 25 37 42 48 59 64 70 92 99 113 151
end_func             : 81 82 83 84
end_main             : 11
escritura            : 19
escritura_var        : 20
expr                 : 104 105 106 107 108 149 161 165 165 166 166 167 167 168 168 169 169 170 170 171 172 172 173 173 174 174 175 175
expression           : 125 126 135 136 150
fill_goto_else       : 127
fill_gotof           : 126
fill_gotof2          : 
fill_if              : 125
for                  : 18
func_call            : 22
func_call_param      : 102 105
func_era             : 102
func_return          : 83
func_return_main     : 11
func_return_param    : 84
funcion              : 8 9
funciones            : 2 3 3 4 7 9
goto                 : 126 135 136
gotof                : 125 126 135
gotof_for            : 136
guarda_num_salto     : 127 135
if                   : 15
lectura              : 21
lista2               : 110 111 114 119 120 120
main                 : 3 4 6
matrix               : 24 32 117 118
matrix2              : 117 118 119
oper_aritmetica      : 30
opers                : 136
param                : 81 84 91
programa             : 0
programa1            : 1
quad_main            : 11 12
row                  : 23 31 110 111 121 122 122 123 123
row_list             : 121
statement            : 11 12 14 15 16 17 18 19 20 21 22 81 82 83 84 125 126 127 135 136
tipo                 : 11 27 28 29 30 31 32 49 50 51 83 84 90 91 93 95 97 98 110 111 117 118 136
value                : 26 39 40 41 43 61 62 63 65 112 136 138 139 140 141 142
var_equal            : 157
var_func             : 81 82 83 84
var_geq              : 159
var_gt               : 155
var_leq              : 160
var_lt               : 156
var_matrix           : 35 36
var_matrixG          : 55 56
var_neq              : 158
var_row              : 33 34
var_rowG             : 53 54
vars                 : 16 34 36 89
vars1                : 27
vars1G               : 49
vars2                : 28
vars2G               : 50
vars2_1              : 39 40
vars2_1G             : 61 62
vars3                : 29
vars3G               : 51
vars3_1              : 44 45
vars3_1G             : 66 67
varsG                : 2 3 4 5 49 50 51 52 54 56 57
verificar            : 81 84
verificar2           : 82 83
while                : 17

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SEMICOL programa1

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID SEMICOL programa1

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . SEMICOL programa1

    SEMICOL         shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SEMICOL . programa1
    (2) programa1 -> . varsG funciones
    (3) programa1 -> . varsG funciones main funciones
    (4) programa1 -> . varsG main funciones
    (5) programa1 -> . varsG
    (6) programa1 -> . main
    (7) programa1 -> . funciones
    (49) varsG -> . VAR tipo vars1G varsG
    (50) varsG -> . VAR tipo vars2G varsG
    (51) varsG -> . VAR tipo vars3G varsG
    (52) varsG -> . VAR LB varsG RB
    (53) varsG -> . var_rowG
    (54) varsG -> . var_rowG varsG
    (55) varsG -> . var_matrixG
    (56) varsG -> . var_matrixG varsG
    (57) varsG -> . declarar_func varsG
    (58) varsG -> . declarar_func
    (59) varsG -> . empty
    (11) main -> . tipo MAIN quad_main LP RP LB statement func_return_main RB end_main
    (12) main -> . VOID MAIN quad_main LP RP LB statement RB
    (8) funciones -> . funcion
    (9) funciones -> . funciones funcion
    (10) funciones -> . empty
    (111) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (118) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (93) declarar_func -> . FUNC tipo ID LP RP SEMICOL
    (94) declarar_func -> . FUNC VOID ID LP RP SEMICOL
    (95) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (96) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL
    (124) empty -> .
    (71) tipo -> . INT
    (72) tipo -> . FLOAT
    (73) tipo -> . CHAR
    (81) funcion -> . VOID ID LP param RP verificar LB var_func statement RB end_func
    (82) funcion -> . VOID ID LP RP verificar2 LB var_func statement RB end_func
    (83) funcion -> . tipo ID LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (84) funcion -> . tipo ID LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    VAR             shift and go to state 9
    VOID            shift and go to state 15
    FUNC            shift and go to state 17
    $end            reduce using rule 124 (empty -> .)
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

  ! VOID            [ reduce using rule 124 (empty -> .) ]
  ! INT             [ reduce using rule 124 (empty -> .) ]
  ! FLOAT           [ reduce using rule 124 (empty -> .) ]
  ! CHAR            [ reduce using rule 124 (empty -> .) ]

    programa1                      shift and go to state 5
    varsG                          shift and go to state 6
    funciones                      shift and go to state 7
    main                           shift and go to state 8
    tipo                           shift and go to state 10
    var_rowG                       shift and go to state 11
    var_matrixG                    shift and go to state 12
    declarar_func                  shift and go to state 13
    empty                          shift and go to state 14
    funcion                        shift and go to state 16

state 5

    (1) programa -> PROGRAM ID SEMICOL programa1 .

    $end            reduce using rule 1 (programa -> PROGRAM ID SEMICOL programa1 .)


state 6

    (2) programa1 -> varsG . funciones
    (3) programa1 -> varsG . funciones main funciones
    (4) programa1 -> varsG . main funciones
    (5) programa1 -> varsG .
    (8) funciones -> . funcion
    (9) funciones -> . funciones funcion
    (10) funciones -> . empty
    (11) main -> . tipo MAIN quad_main LP RP LB statement func_return_main RB end_main
    (12) main -> . VOID MAIN quad_main LP RP LB statement RB
    (81) funcion -> . VOID ID LP param RP verificar LB var_func statement RB end_func
    (82) funcion -> . VOID ID LP RP verificar2 LB var_func statement RB end_func
    (83) funcion -> . tipo ID LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (84) funcion -> . tipo ID LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (124) empty -> .
    (71) tipo -> . INT
    (72) tipo -> . FLOAT
    (73) tipo -> . CHAR

  ! shift/reduce conflict for VOID resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 5 (programa1 -> varsG .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    $end            reduce using rule 5 (programa1 -> varsG .)
    VOID            shift and go to state 15
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

  ! VOID            [ reduce using rule 124 (empty -> .) ]
  ! INT             [ reduce using rule 124 (empty -> .) ]
  ! FLOAT           [ reduce using rule 124 (empty -> .) ]
  ! CHAR            [ reduce using rule 124 (empty -> .) ]
  ! $end            [ reduce using rule 124 (empty -> .) ]

    funciones                      shift and go to state 21
    main                           shift and go to state 22
    funcion                        shift and go to state 16
    empty                          shift and go to state 23
    tipo                           shift and go to state 10

state 7

    (7) programa1 -> funciones .
    (9) funciones -> funciones . funcion
    (81) funcion -> . VOID ID LP param RP verificar LB var_func statement RB end_func
    (82) funcion -> . VOID ID LP RP verificar2 LB var_func statement RB end_func
    (83) funcion -> . tipo ID LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (84) funcion -> . tipo ID LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (71) tipo -> . INT
    (72) tipo -> . FLOAT
    (73) tipo -> . CHAR

    $end            reduce using rule 7 (programa1 -> funciones .)
    VOID            shift and go to state 25
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    funcion                        shift and go to state 24
    tipo                           shift and go to state 26

state 8

    (6) programa1 -> main .

    $end            reduce using rule 6 (programa1 -> main .)


state 9

    (49) varsG -> VAR . tipo vars1G varsG
    (50) varsG -> VAR . tipo vars2G varsG
    (51) varsG -> VAR . tipo vars3G varsG
    (52) varsG -> VAR . LB varsG RB
    (111) var_rowG -> VAR . tipo ID row IS LP lista2 RP SEMICOL
    (118) var_matrixG -> VAR . tipo ID matrix IS matrix2 SEMICOL
    (71) tipo -> . INT
    (72) tipo -> . FLOAT
    (73) tipo -> . CHAR

    LB              shift and go to state 28
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    tipo                           shift and go to state 27

state 10

    (11) main -> tipo . MAIN quad_main LP RP LB statement func_return_main RB end_main
    (83) funcion -> tipo . ID LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (84) funcion -> tipo . ID LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func

    MAIN            shift and go to state 29
    ID              shift and go to state 30


state 11

    (53) varsG -> var_rowG .
    (54) varsG -> var_rowG . varsG
    (49) varsG -> . VAR tipo vars1G varsG
    (50) varsG -> . VAR tipo vars2G varsG
    (51) varsG -> . VAR tipo vars3G varsG
    (52) varsG -> . VAR LB varsG RB
    (53) varsG -> . var_rowG
    (54) varsG -> . var_rowG varsG
    (55) varsG -> . var_matrixG
    (56) varsG -> . var_matrixG varsG
    (57) varsG -> . declarar_func varsG
    (58) varsG -> . declarar_func
    (59) varsG -> . empty
    (111) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (118) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (93) declarar_func -> . FUNC tipo ID LP RP SEMICOL
    (94) declarar_func -> . FUNC VOID ID LP RP SEMICOL
    (95) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (96) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL
    (124) empty -> .

  ! reduce/reduce conflict for VOID resolved using rule 53 (varsG -> var_rowG .)
  ! reduce/reduce conflict for INT resolved using rule 53 (varsG -> var_rowG .)
  ! reduce/reduce conflict for FLOAT resolved using rule 53 (varsG -> var_rowG .)
  ! reduce/reduce conflict for CHAR resolved using rule 53 (varsG -> var_rowG .)
  ! reduce/reduce conflict for $end resolved using rule 53 (varsG -> var_rowG .)
  ! reduce/reduce conflict for RB resolved using rule 53 (varsG -> var_rowG .)
    VOID            reduce using rule 53 (varsG -> var_rowG .)
    INT             reduce using rule 53 (varsG -> var_rowG .)
    FLOAT           reduce using rule 53 (varsG -> var_rowG .)
    CHAR            reduce using rule 53 (varsG -> var_rowG .)
    $end            reduce using rule 53 (varsG -> var_rowG .)
    RB              reduce using rule 53 (varsG -> var_rowG .)
    VAR             shift and go to state 9
    FUNC            shift and go to state 17

  ! VOID            [ reduce using rule 124 (empty -> .) ]
  ! INT             [ reduce using rule 124 (empty -> .) ]
  ! FLOAT           [ reduce using rule 124 (empty -> .) ]
  ! CHAR            [ reduce using rule 124 (empty -> .) ]
  ! $end            [ reduce using rule 124 (empty -> .) ]
  ! RB              [ reduce using rule 124 (empty -> .) ]

    var_rowG                       shift and go to state 11
    varsG                          shift and go to state 31
    var_matrixG                    shift and go to state 12
    declarar_func                  shift and go to state 13
    empty                          shift and go to state 32

state 12

    (55) varsG -> var_matrixG .
    (56) varsG -> var_matrixG . varsG
    (49) varsG -> . VAR tipo vars1G varsG
    (50) varsG -> . VAR tipo vars2G varsG
    (51) varsG -> . VAR tipo vars3G varsG
    (52) varsG -> . VAR LB varsG RB
    (53) varsG -> . var_rowG
    (54) varsG -> . var_rowG varsG
    (55) varsG -> . var_matrixG
    (56) varsG -> . var_matrixG varsG
    (57) varsG -> . declarar_func varsG
    (58) varsG -> . declarar_func
    (59) varsG -> . empty
    (111) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (118) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (93) declarar_func -> . FUNC tipo ID LP RP SEMICOL
    (94) declarar_func -> . FUNC VOID ID LP RP SEMICOL
    (95) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (96) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL
    (124) empty -> .

  ! reduce/reduce conflict for VOID resolved using rule 55 (varsG -> var_matrixG .)
  ! reduce/reduce conflict for INT resolved using rule 55 (varsG -> var_matrixG .)
  ! reduce/reduce conflict for FLOAT resolved using rule 55 (varsG -> var_matrixG .)
  ! reduce/reduce conflict for CHAR resolved using rule 55 (varsG -> var_matrixG .)
  ! reduce/reduce conflict for $end resolved using rule 55 (varsG -> var_matrixG .)
  ! reduce/reduce conflict for RB resolved using rule 55 (varsG -> var_matrixG .)
    VOID            reduce using rule 55 (varsG -> var_matrixG .)
    INT             reduce using rule 55 (varsG -> var_matrixG .)
    FLOAT           reduce using rule 55 (varsG -> var_matrixG .)
    CHAR            reduce using rule 55 (varsG -> var_matrixG .)
    $end            reduce using rule 55 (varsG -> var_matrixG .)
    RB              reduce using rule 55 (varsG -> var_matrixG .)
    VAR             shift and go to state 9
    FUNC            shift and go to state 17

  ! VOID            [ reduce using rule 124 (empty -> .) ]
  ! INT             [ reduce using rule 124 (empty -> .) ]
  ! FLOAT           [ reduce using rule 124 (empty -> .) ]
  ! CHAR            [ reduce using rule 124 (empty -> .) ]
  ! $end            [ reduce using rule 124 (empty -> .) ]
  ! RB              [ reduce using rule 124 (empty -> .) ]

    var_matrixG                    shift and go to state 12
    varsG                          shift and go to state 33
    var_rowG                       shift and go to state 11
    declarar_func                  shift and go to state 13
    empty                          shift and go to state 32

state 13

    (57) varsG -> declarar_func . varsG
    (58) varsG -> declarar_func .
    (49) varsG -> . VAR tipo vars1G varsG
    (50) varsG -> . VAR tipo vars2G varsG
    (51) varsG -> . VAR tipo vars3G varsG
    (52) varsG -> . VAR LB varsG RB
    (53) varsG -> . var_rowG
    (54) varsG -> . var_rowG varsG
    (55) varsG -> . var_matrixG
    (56) varsG -> . var_matrixG varsG
    (57) varsG -> . declarar_func varsG
    (58) varsG -> . declarar_func
    (59) varsG -> . empty
    (111) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (118) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (93) declarar_func -> . FUNC tipo ID LP RP SEMICOL
    (94) declarar_func -> . FUNC VOID ID LP RP SEMICOL
    (95) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (96) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL
    (124) empty -> .

  ! reduce/reduce conflict for VOID resolved using rule 58 (varsG -> declarar_func .)
  ! reduce/reduce conflict for INT resolved using rule 58 (varsG -> declarar_func .)
  ! reduce/reduce conflict for FLOAT resolved using rule 58 (varsG -> declarar_func .)
  ! reduce/reduce conflict for CHAR resolved using rule 58 (varsG -> declarar_func .)
  ! reduce/reduce conflict for $end resolved using rule 58 (varsG -> declarar_func .)
  ! reduce/reduce conflict for RB resolved using rule 58 (varsG -> declarar_func .)
    VOID            reduce using rule 58 (varsG -> declarar_func .)
    INT             reduce using rule 58 (varsG -> declarar_func .)
    FLOAT           reduce using rule 58 (varsG -> declarar_func .)
    CHAR            reduce using rule 58 (varsG -> declarar_func .)
    $end            reduce using rule 58 (varsG -> declarar_func .)
    RB              reduce using rule 58 (varsG -> declarar_func .)
    VAR             shift and go to state 9
    FUNC            shift and go to state 17

  ! VOID            [ reduce using rule 124 (empty -> .) ]
  ! INT             [ reduce using rule 124 (empty -> .) ]
  ! FLOAT           [ reduce using rule 124 (empty -> .) ]
  ! CHAR            [ reduce using rule 124 (empty -> .) ]
  ! $end            [ reduce using rule 124 (empty -> .) ]
  ! RB              [ reduce using rule 124 (empty -> .) ]

    declarar_func                  shift and go to state 13
    varsG                          shift and go to state 34
    var_rowG                       shift and go to state 11
    var_matrixG                    shift and go to state 12
    empty                          shift and go to state 32

state 14

    (59) varsG -> empty .
    (10) funciones -> empty .

  ! reduce/reduce conflict for VOID resolved using rule 10 (funciones -> empty .)
  ! reduce/reduce conflict for INT resolved using rule 10 (funciones -> empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 10 (funciones -> empty .)
  ! reduce/reduce conflict for CHAR resolved using rule 10 (funciones -> empty .)
  ! reduce/reduce conflict for $end resolved using rule 10 (funciones -> empty .)
    VOID            reduce using rule 10 (funciones -> empty .)
    INT             reduce using rule 10 (funciones -> empty .)
    FLOAT           reduce using rule 10 (funciones -> empty .)
    CHAR            reduce using rule 10 (funciones -> empty .)
    $end            reduce using rule 10 (funciones -> empty .)

  ! VOID            [ reduce using rule 59 (varsG -> empty .) ]
  ! INT             [ reduce using rule 59 (varsG -> empty .) ]
  ! FLOAT           [ reduce using rule 59 (varsG -> empty .) ]
  ! CHAR            [ reduce using rule 59 (varsG -> empty .) ]
  ! $end            [ reduce using rule 59 (varsG -> empty .) ]


state 15

    (12) main -> VOID . MAIN quad_main LP RP LB statement RB
    (81) funcion -> VOID . ID LP param RP verificar LB var_func statement RB end_func
    (82) funcion -> VOID . ID LP RP verificar2 LB var_func statement RB end_func

    MAIN            shift and go to state 35
    ID              shift and go to state 36


state 16

    (8) funciones -> funcion .

    VOID            reduce using rule 8 (funciones -> funcion .)
    INT             reduce using rule 8 (funciones -> funcion .)
    FLOAT           reduce using rule 8 (funciones -> funcion .)
    CHAR            reduce using rule 8 (funciones -> funcion .)
    $end            reduce using rule 8 (funciones -> funcion .)


state 17

    (93) declarar_func -> FUNC . tipo ID LP RP SEMICOL
    (94) declarar_func -> FUNC . VOID ID LP RP SEMICOL
    (95) declarar_func -> FUNC . tipo ID LP declarar_param RP SEMICOL
    (96) declarar_func -> FUNC . VOID ID LP declarar_param RP SEMICOL
    (71) tipo -> . INT
    (72) tipo -> . FLOAT
    (73) tipo -> . CHAR

    VOID            shift and go to state 38
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    tipo                           shift and go to state 37

state 18

    (71) tipo -> INT .

    MAIN            reduce using rule 71 (tipo -> INT .)
    ID              reduce using rule 71 (tipo -> INT .)
    COMMA           reduce using rule 71 (tipo -> INT .)
    INT             reduce using rule 71 (tipo -> INT .)
    FLOAT           reduce using rule 71 (tipo -> INT .)
    CHAR            reduce using rule 71 (tipo -> INT .)
    RP              reduce using rule 71 (tipo -> INT .)


state 19

    (72) tipo -> FLOAT .

    MAIN            reduce using rule 72 (tipo -> FLOAT .)
    ID              reduce using rule 72 (tipo -> FLOAT .)
    COMMA           reduce using rule 72 (tipo -> FLOAT .)
    INT             reduce using rule 72 (tipo -> FLOAT .)
    FLOAT           reduce using rule 72 (tipo -> FLOAT .)
    CHAR            reduce using rule 72 (tipo -> FLOAT .)
    RP              reduce using rule 72 (tipo -> FLOAT .)


state 20

    (73) tipo -> CHAR .

    MAIN            reduce using rule 73 (tipo -> CHAR .)
    ID              reduce using rule 73 (tipo -> CHAR .)
    COMMA           reduce using rule 73 (tipo -> CHAR .)
    INT             reduce using rule 73 (tipo -> CHAR .)
    FLOAT           reduce using rule 73 (tipo -> CHAR .)
    CHAR            reduce using rule 73 (tipo -> CHAR .)
    RP              reduce using rule 73 (tipo -> CHAR .)


state 21

    (2) programa1 -> varsG funciones .
    (3) programa1 -> varsG funciones . main funciones
    (9) funciones -> funciones . funcion
    (11) main -> . tipo MAIN quad_main LP RP LB statement func_return_main RB end_main
    (12) main -> . VOID MAIN quad_main LP RP LB statement RB
    (81) funcion -> . VOID ID LP param RP verificar LB var_func statement RB end_func
    (82) funcion -> . VOID ID LP RP verificar2 LB var_func statement RB end_func
    (83) funcion -> . tipo ID LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (84) funcion -> . tipo ID LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (71) tipo -> . INT
    (72) tipo -> . FLOAT
    (73) tipo -> . CHAR

    $end            reduce using rule 2 (programa1 -> varsG funciones .)
    VOID            shift and go to state 15
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    main                           shift and go to state 39
    funcion                        shift and go to state 24
    tipo                           shift and go to state 10

state 22

    (4) programa1 -> varsG main . funciones
    (8) funciones -> . funcion
    (9) funciones -> . funciones funcion
    (10) funciones -> . empty
    (81) funcion -> . VOID ID LP param RP verificar LB var_func statement RB end_func
    (82) funcion -> . VOID ID LP RP verificar2 LB var_func statement RB end_func
    (83) funcion -> . tipo ID LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (84) funcion -> . tipo ID LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (124) empty -> .
    (71) tipo -> . INT
    (72) tipo -> . FLOAT
    (73) tipo -> . CHAR

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    VOID            shift and go to state 25
    $end            reduce using rule 124 (empty -> .)
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

  ! VOID            [ reduce using rule 124 (empty -> .) ]
  ! INT             [ reduce using rule 124 (empty -> .) ]
  ! FLOAT           [ reduce using rule 124 (empty -> .) ]
  ! CHAR            [ reduce using rule 124 (empty -> .) ]

    funciones                      shift and go to state 40
    funcion                        shift and go to state 16
    empty                          shift and go to state 23
    tipo                           shift and go to state 26

state 23

    (10) funciones -> empty .

    VOID            reduce using rule 10 (funciones -> empty .)
    INT             reduce using rule 10 (funciones -> empty .)
    FLOAT           reduce using rule 10 (funciones -> empty .)
    CHAR            reduce using rule 10 (funciones -> empty .)
    $end            reduce using rule 10 (funciones -> empty .)


state 24

    (9) funciones -> funciones funcion .

    VOID            reduce using rule 9 (funciones -> funciones funcion .)
    INT             reduce using rule 9 (funciones -> funciones funcion .)
    FLOAT           reduce using rule 9 (funciones -> funciones funcion .)
    CHAR            reduce using rule 9 (funciones -> funciones funcion .)
    $end            reduce using rule 9 (funciones -> funciones funcion .)


state 25

    (81) funcion -> VOID . ID LP param RP verificar LB var_func statement RB end_func
    (82) funcion -> VOID . ID LP RP verificar2 LB var_func statement RB end_func

    ID              shift and go to state 36


state 26

    (83) funcion -> tipo . ID LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (84) funcion -> tipo . ID LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func

    ID              shift and go to state 30


state 27

    (49) varsG -> VAR tipo . vars1G varsG
    (50) varsG -> VAR tipo . vars2G varsG
    (51) varsG -> VAR tipo . vars3G varsG
    (111) var_rowG -> VAR tipo . ID row IS LP lista2 RP SEMICOL
    (118) var_matrixG -> VAR tipo . ID matrix IS matrix2 SEMICOL
    (60) vars1G -> . ID SEMICOL
    (61) vars2G -> . vars2_1G ID IS value SEMICOL
    (65) vars2G -> . ID IS value SEMICOL
    (66) vars3G -> . vars3_1G ID SEMICOL
    (69) vars3G -> . ID SEMICOL
    (62) vars2_1G -> . vars2_1G ID IS value COMMA
    (63) vars2_1G -> . ID IS value COMMA
    (64) vars2_1G -> . empty
    (67) vars3_1G -> . vars3_1G ID COMMA
    (68) vars3_1G -> . ID COMMA
    (70) vars3_1G -> . empty
    (124) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 44

  ! ID              [ reduce using rule 124 (empty -> .) ]

    vars1G                         shift and go to state 41
    vars2G                         shift and go to state 42
    vars3G                         shift and go to state 43
    vars2_1G                       shift and go to state 45
    vars3_1G                       shift and go to state 46
    empty                          shift and go to state 47

state 28

    (52) varsG -> VAR LB . varsG RB
    (49) varsG -> . VAR tipo vars1G varsG
    (50) varsG -> . VAR tipo vars2G varsG
    (51) varsG -> . VAR tipo vars3G varsG
    (52) varsG -> . VAR LB varsG RB
    (53) varsG -> . var_rowG
    (54) varsG -> . var_rowG varsG
    (55) varsG -> . var_matrixG
    (56) varsG -> . var_matrixG varsG
    (57) varsG -> . declarar_func varsG
    (58) varsG -> . declarar_func
    (59) varsG -> . empty
    (111) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (118) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (93) declarar_func -> . FUNC tipo ID LP RP SEMICOL
    (94) declarar_func -> . FUNC VOID ID LP RP SEMICOL
    (95) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (96) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL
    (124) empty -> .

    VAR             shift and go to state 9
    FUNC            shift and go to state 17
    RB              reduce using rule 124 (empty -> .)

    varsG                          shift and go to state 48
    var_rowG                       shift and go to state 11
    var_matrixG                    shift and go to state 12
    declarar_func                  shift and go to state 13
    empty                          shift and go to state 32

state 29

    (11) main -> tipo MAIN . quad_main LP RP LB statement func_return_main RB end_main
    (13) quad_main -> .

    LP              reduce using rule 13 (quad_main -> .)

    quad_main                      shift and go to state 49

state 30

    (83) funcion -> tipo ID . LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (84) funcion -> tipo ID . LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func

    LP              shift and go to state 50


state 31

    (54) varsG -> var_rowG varsG .

    VOID            reduce using rule 54 (varsG -> var_rowG varsG .)
    INT             reduce using rule 54 (varsG -> var_rowG varsG .)
    FLOAT           reduce using rule 54 (varsG -> var_rowG varsG .)
    CHAR            reduce using rule 54 (varsG -> var_rowG varsG .)
    $end            reduce using rule 54 (varsG -> var_rowG varsG .)
    RB              reduce using rule 54 (varsG -> var_rowG varsG .)


state 32

    (59) varsG -> empty .

    VOID            reduce using rule 59 (varsG -> empty .)
    INT             reduce using rule 59 (varsG -> empty .)
    FLOAT           reduce using rule 59 (varsG -> empty .)
    CHAR            reduce using rule 59 (varsG -> empty .)
    $end            reduce using rule 59 (varsG -> empty .)
    RB              reduce using rule 59 (varsG -> empty .)


state 33

    (56) varsG -> var_matrixG varsG .

    VOID            reduce using rule 56 (varsG -> var_matrixG varsG .)
    INT             reduce using rule 56 (varsG -> var_matrixG varsG .)
    FLOAT           reduce using rule 56 (varsG -> var_matrixG varsG .)
    CHAR            reduce using rule 56 (varsG -> var_matrixG varsG .)
    $end            reduce using rule 56 (varsG -> var_matrixG varsG .)
    RB              reduce using rule 56 (varsG -> var_matrixG varsG .)


state 34

    (57) varsG -> declarar_func varsG .

    VOID            reduce using rule 57 (varsG -> declarar_func varsG .)
    INT             reduce using rule 57 (varsG -> declarar_func varsG .)
    FLOAT           reduce using rule 57 (varsG -> declarar_func varsG .)
    CHAR            reduce using rule 57 (varsG -> declarar_func varsG .)
    $end            reduce using rule 57 (varsG -> declarar_func varsG .)
    RB              reduce using rule 57 (varsG -> declarar_func varsG .)


state 35

    (12) main -> VOID MAIN . quad_main LP RP LB statement RB
    (13) quad_main -> .

    LP              reduce using rule 13 (quad_main -> .)

    quad_main                      shift and go to state 51

state 36

    (81) funcion -> VOID ID . LP param RP verificar LB var_func statement RB end_func
    (82) funcion -> VOID ID . LP RP verificar2 LB var_func statement RB end_func

    LP              shift and go to state 52


state 37

    (93) declarar_func -> FUNC tipo . ID LP RP SEMICOL
    (95) declarar_func -> FUNC tipo . ID LP declarar_param RP SEMICOL

    ID              shift and go to state 53


state 38

    (94) declarar_func -> FUNC VOID . ID LP RP SEMICOL
    (96) declarar_func -> FUNC VOID . ID LP declarar_param RP SEMICOL

    ID              shift and go to state 54


state 39

    (3) programa1 -> varsG funciones main . funciones
    (8) funciones -> . funcion
    (9) funciones -> . funciones funcion
    (10) funciones -> . empty
    (81) funcion -> . VOID ID LP param RP verificar LB var_func statement RB end_func
    (82) funcion -> . VOID ID LP RP verificar2 LB var_func statement RB end_func
    (83) funcion -> . tipo ID LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (84) funcion -> . tipo ID LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (124) empty -> .
    (71) tipo -> . INT
    (72) tipo -> . FLOAT
    (73) tipo -> . CHAR

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    VOID            shift and go to state 25
    $end            reduce using rule 124 (empty -> .)
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

  ! VOID            [ reduce using rule 124 (empty -> .) ]
  ! INT             [ reduce using rule 124 (empty -> .) ]
  ! FLOAT           [ reduce using rule 124 (empty -> .) ]
  ! CHAR            [ reduce using rule 124 (empty -> .) ]

    funciones                      shift and go to state 55
    funcion                        shift and go to state 16
    empty                          shift and go to state 23
    tipo                           shift and go to state 26

state 40

    (4) programa1 -> varsG main funciones .
    (9) funciones -> funciones . funcion
    (81) funcion -> . VOID ID LP param RP verificar LB var_func statement RB end_func
    (82) funcion -> . VOID ID LP RP verificar2 LB var_func statement RB end_func
    (83) funcion -> . tipo ID LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (84) funcion -> . tipo ID LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (71) tipo -> . INT
    (72) tipo -> . FLOAT
    (73) tipo -> . CHAR

    $end            reduce using rule 4 (programa1 -> varsG main funciones .)
    VOID            shift and go to state 25
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    funcion                        shift and go to state 24
    tipo                           shift and go to state 26

state 41

    (49) varsG -> VAR tipo vars1G . varsG
    (49) varsG -> . VAR tipo vars1G varsG
    (50) varsG -> . VAR tipo vars2G varsG
    (51) varsG -> . VAR tipo vars3G varsG
    (52) varsG -> . VAR LB varsG RB
    (53) varsG -> . var_rowG
    (54) varsG -> . var_rowG varsG
    (55) varsG -> . var_matrixG
    (56) varsG -> . var_matrixG varsG
    (57) varsG -> . declarar_func varsG
    (58) varsG -> . declarar_func
    (59) varsG -> . empty
    (111) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (118) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (93) declarar_func -> . FUNC tipo ID LP RP SEMICOL
    (94) declarar_func -> . FUNC VOID ID LP RP SEMICOL
    (95) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (96) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL
    (124) empty -> .

    VAR             shift and go to state 9
    FUNC            shift and go to state 17
    VOID            reduce using rule 124 (empty -> .)
    INT             reduce using rule 124 (empty -> .)
    FLOAT           reduce using rule 124 (empty -> .)
    CHAR            reduce using rule 124 (empty -> .)
    $end            reduce using rule 124 (empty -> .)
    RB              reduce using rule 124 (empty -> .)

    varsG                          shift and go to state 56
    var_rowG                       shift and go to state 11
    var_matrixG                    shift and go to state 12
    declarar_func                  shift and go to state 13
    empty                          shift and go to state 32

state 42

    (50) varsG -> VAR tipo vars2G . varsG
    (49) varsG -> . VAR tipo vars1G varsG
    (50) varsG -> . VAR tipo vars2G varsG
    (51) varsG -> . VAR tipo vars3G varsG
    (52) varsG -> . VAR LB varsG RB
    (53) varsG -> . var_rowG
    (54) varsG -> . var_rowG varsG
    (55) varsG -> . var_matrixG
    (56) varsG -> . var_matrixG varsG
    (57) varsG -> . declarar_func varsG
    (58) varsG -> . declarar_func
    (59) varsG -> . empty
    (111) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (118) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (93) declarar_func -> . FUNC tipo ID LP RP SEMICOL
    (94) declarar_func -> . FUNC VOID ID LP RP SEMICOL
    (95) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (96) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL
    (124) empty -> .

    VAR             shift and go to state 9
    FUNC            shift and go to state 17
    VOID            reduce using rule 124 (empty -> .)
    INT             reduce using rule 124 (empty -> .)
    FLOAT           reduce using rule 124 (empty -> .)
    CHAR            reduce using rule 124 (empty -> .)
    $end            reduce using rule 124 (empty -> .)
    RB              reduce using rule 124 (empty -> .)

    varsG                          shift and go to state 57
    var_rowG                       shift and go to state 11
    var_matrixG                    shift and go to state 12
    declarar_func                  shift and go to state 13
    empty                          shift and go to state 32

state 43

    (51) varsG -> VAR tipo vars3G . varsG
    (49) varsG -> . VAR tipo vars1G varsG
    (50) varsG -> . VAR tipo vars2G varsG
    (51) varsG -> . VAR tipo vars3G varsG
    (52) varsG -> . VAR LB varsG RB
    (53) varsG -> . var_rowG
    (54) varsG -> . var_rowG varsG
    (55) varsG -> . var_matrixG
    (56) varsG -> . var_matrixG varsG
    (57) varsG -> . declarar_func varsG
    (58) varsG -> . declarar_func
    (59) varsG -> . empty
    (111) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (118) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (93) declarar_func -> . FUNC tipo ID LP RP SEMICOL
    (94) declarar_func -> . FUNC VOID ID LP RP SEMICOL
    (95) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (96) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL
    (124) empty -> .

    VAR             shift and go to state 9
    FUNC            shift and go to state 17
    VOID            reduce using rule 124 (empty -> .)
    INT             reduce using rule 124 (empty -> .)
    FLOAT           reduce using rule 124 (empty -> .)
    CHAR            reduce using rule 124 (empty -> .)
    $end            reduce using rule 124 (empty -> .)
    RB              reduce using rule 124 (empty -> .)

    varsG                          shift and go to state 58
    var_rowG                       shift and go to state 11
    var_matrixG                    shift and go to state 12
    declarar_func                  shift and go to state 13
    empty                          shift and go to state 32

state 44

    (111) var_rowG -> VAR tipo ID . row IS LP lista2 RP SEMICOL
    (118) var_matrixG -> VAR tipo ID . matrix IS matrix2 SEMICOL
    (60) vars1G -> ID . SEMICOL
    (65) vars2G -> ID . IS value SEMICOL
    (69) vars3G -> ID . SEMICOL
    (63) vars2_1G -> ID . IS value COMMA
    (68) vars3_1G -> ID . COMMA
    (116) row -> . LC CTE_I RC
    (123) matrix -> . row row

    SEMICOL         shift and go to state 61
    IS              shift and go to state 60
    COMMA           shift and go to state 63
    LC              shift and go to state 64

    row                            shift and go to state 59
    matrix                         shift and go to state 62

state 45

    (61) vars2G -> vars2_1G . ID IS value SEMICOL
    (62) vars2_1G -> vars2_1G . ID IS value COMMA

    ID              shift and go to state 65


state 46

    (66) vars3G -> vars3_1G . ID SEMICOL
    (67) vars3_1G -> vars3_1G . ID COMMA

    ID              shift and go to state 66


state 47

    (64) vars2_1G -> empty .
    (70) vars3_1G -> empty .

  ! reduce/reduce conflict for ID resolved using rule 64 (vars2_1G -> empty .)
    ID              reduce using rule 64 (vars2_1G -> empty .)

  ! ID              [ reduce using rule 70 (vars3_1G -> empty .) ]


state 48

    (52) varsG -> VAR LB varsG . RB

    RB              shift and go to state 67


state 49

    (11) main -> tipo MAIN quad_main . LP RP LB statement func_return_main RB end_main

    LP              shift and go to state 68


state 50

    (83) funcion -> tipo ID LP . RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (84) funcion -> tipo ID LP . param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (90) param -> . tipo ID
    (91) param -> . param COMMA tipo ID
    (92) param -> . empty
    (71) tipo -> . INT
    (72) tipo -> . FLOAT
    (73) tipo -> . CHAR
    (124) empty -> .

  ! shift/reduce conflict for RP resolved as shift
    RP              shift and go to state 70
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20
    COMMA           reduce using rule 124 (empty -> .)

  ! RP              [ reduce using rule 124 (empty -> .) ]

    tipo                           shift and go to state 69
    param                          shift and go to state 71
    empty                          shift and go to state 72

state 51

    (12) main -> VOID MAIN quad_main . LP RP LB statement RB

    LP              shift and go to state 73


state 52

    (81) funcion -> VOID ID LP . param RP verificar LB var_func statement RB end_func
    (82) funcion -> VOID ID LP . RP verificar2 LB var_func statement RB end_func
    (90) param -> . tipo ID
    (91) param -> . param COMMA tipo ID
    (92) param -> . empty
    (71) tipo -> . INT
    (72) tipo -> . FLOAT
    (73) tipo -> . CHAR
    (124) empty -> .

  ! shift/reduce conflict for RP resolved as shift
    RP              shift and go to state 75
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20
    COMMA           reduce using rule 124 (empty -> .)

  ! RP              [ reduce using rule 124 (empty -> .) ]

    param                          shift and go to state 74
    tipo                           shift and go to state 69
    empty                          shift and go to state 72

state 53

    (93) declarar_func -> FUNC tipo ID . LP RP SEMICOL
    (95) declarar_func -> FUNC tipo ID . LP declarar_param RP SEMICOL

    LP              shift and go to state 76


state 54

    (94) declarar_func -> FUNC VOID ID . LP RP SEMICOL
    (96) declarar_func -> FUNC VOID ID . LP declarar_param RP SEMICOL

    LP              shift and go to state 77


state 55

    (3) programa1 -> varsG funciones main funciones .
    (9) funciones -> funciones . funcion
    (81) funcion -> . VOID ID LP param RP verificar LB var_func statement RB end_func
    (82) funcion -> . VOID ID LP RP verificar2 LB var_func statement RB end_func
    (83) funcion -> . tipo ID LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (84) funcion -> . tipo ID LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (71) tipo -> . INT
    (72) tipo -> . FLOAT
    (73) tipo -> . CHAR

    $end            reduce using rule 3 (programa1 -> varsG funciones main funciones .)
    VOID            shift and go to state 25
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    funcion                        shift and go to state 24
    tipo                           shift and go to state 26

state 56

    (49) varsG -> VAR tipo vars1G varsG .

    VOID            reduce using rule 49 (varsG -> VAR tipo vars1G varsG .)
    INT             reduce using rule 49 (varsG -> VAR tipo vars1G varsG .)
    FLOAT           reduce using rule 49 (varsG -> VAR tipo vars1G varsG .)
    CHAR            reduce using rule 49 (varsG -> VAR tipo vars1G varsG .)
    $end            reduce using rule 49 (varsG -> VAR tipo vars1G varsG .)
    RB              reduce using rule 49 (varsG -> VAR tipo vars1G varsG .)


state 57

    (50) varsG -> VAR tipo vars2G varsG .

    VOID            reduce using rule 50 (varsG -> VAR tipo vars2G varsG .)
    INT             reduce using rule 50 (varsG -> VAR tipo vars2G varsG .)
    FLOAT           reduce using rule 50 (varsG -> VAR tipo vars2G varsG .)
    CHAR            reduce using rule 50 (varsG -> VAR tipo vars2G varsG .)
    $end            reduce using rule 50 (varsG -> VAR tipo vars2G varsG .)
    RB              reduce using rule 50 (varsG -> VAR tipo vars2G varsG .)


state 58

    (51) varsG -> VAR tipo vars3G varsG .

    VOID            reduce using rule 51 (varsG -> VAR tipo vars3G varsG .)
    INT             reduce using rule 51 (varsG -> VAR tipo vars3G varsG .)
    FLOAT           reduce using rule 51 (varsG -> VAR tipo vars3G varsG .)
    CHAR            reduce using rule 51 (varsG -> VAR tipo vars3G varsG .)
    $end            reduce using rule 51 (varsG -> VAR tipo vars3G varsG .)
    RB              reduce using rule 51 (varsG -> VAR tipo vars3G varsG .)


state 59

    (111) var_rowG -> VAR tipo ID row . IS LP lista2 RP SEMICOL
    (123) matrix -> row . row
    (116) row -> . LC CTE_I RC

    IS              shift and go to state 79
    LC              shift and go to state 64

    row                            shift and go to state 78

state 60

    (65) vars2G -> ID IS . value SEMICOL
    (63) vars2_1G -> ID IS . value COMMA
    (74) value -> . CTE_F
    (75) value -> . CTE_I
    (76) value -> . ID
    (77) value -> . CTE_C
    (78) value -> . COMILLA ID COMILLA
    (79) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 82
    CTE_I           shift and go to state 83
    ID              shift and go to state 80
    CTE_C           shift and go to state 84
    COMILLA         shift and go to state 85
    COMILLAS        shift and go to state 86

    value                          shift and go to state 81

state 61

    (60) vars1G -> ID SEMICOL .
    (69) vars3G -> ID SEMICOL .

  ! reduce/reduce conflict for VAR resolved using rule 60 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for FUNC resolved using rule 60 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for VOID resolved using rule 60 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for INT resolved using rule 60 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for FLOAT resolved using rule 60 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for CHAR resolved using rule 60 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for $end resolved using rule 60 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for RB resolved using rule 60 (vars1G -> ID SEMICOL .)
    VAR             reduce using rule 60 (vars1G -> ID SEMICOL .)
    FUNC            reduce using rule 60 (vars1G -> ID SEMICOL .)
    VOID            reduce using rule 60 (vars1G -> ID SEMICOL .)
    INT             reduce using rule 60 (vars1G -> ID SEMICOL .)
    FLOAT           reduce using rule 60 (vars1G -> ID SEMICOL .)
    CHAR            reduce using rule 60 (vars1G -> ID SEMICOL .)
    $end            reduce using rule 60 (vars1G -> ID SEMICOL .)
    RB              reduce using rule 60 (vars1G -> ID SEMICOL .)

  ! VAR             [ reduce using rule 69 (vars3G -> ID SEMICOL .) ]
  ! FUNC            [ reduce using rule 69 (vars3G -> ID SEMICOL .) ]
  ! VOID            [ reduce using rule 69 (vars3G -> ID SEMICOL .) ]
  ! INT             [ reduce using rule 69 (vars3G -> ID SEMICOL .) ]
  ! FLOAT           [ reduce using rule 69 (vars3G -> ID SEMICOL .) ]
  ! CHAR            [ reduce using rule 69 (vars3G -> ID SEMICOL .) ]
  ! $end            [ reduce using rule 69 (vars3G -> ID SEMICOL .) ]
  ! RB              [ reduce using rule 69 (vars3G -> ID SEMICOL .) ]


state 62

    (118) var_matrixG -> VAR tipo ID matrix . IS matrix2 SEMICOL

    IS              shift and go to state 87


state 63

    (68) vars3_1G -> ID COMMA .

    ID              reduce using rule 68 (vars3_1G -> ID COMMA .)


state 64

    (116) row -> LC . CTE_I RC

    CTE_I           shift and go to state 88


state 65

    (61) vars2G -> vars2_1G ID . IS value SEMICOL
    (62) vars2_1G -> vars2_1G ID . IS value COMMA

    IS              shift and go to state 89


state 66

    (66) vars3G -> vars3_1G ID . SEMICOL
    (67) vars3_1G -> vars3_1G ID . COMMA

    SEMICOL         shift and go to state 90
    COMMA           shift and go to state 91


state 67

    (52) varsG -> VAR LB varsG RB .

    VOID            reduce using rule 52 (varsG -> VAR LB varsG RB .)
    INT             reduce using rule 52 (varsG -> VAR LB varsG RB .)
    FLOAT           reduce using rule 52 (varsG -> VAR LB varsG RB .)
    CHAR            reduce using rule 52 (varsG -> VAR LB varsG RB .)
    $end            reduce using rule 52 (varsG -> VAR LB varsG RB .)
    RB              reduce using rule 52 (varsG -> VAR LB varsG RB .)


state 68

    (11) main -> tipo MAIN quad_main LP . RP LB statement func_return_main RB end_main

    RP              shift and go to state 92


state 69

    (90) param -> tipo . ID

    ID              shift and go to state 93


state 70

    (83) funcion -> tipo ID LP RP . verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (86) verificar2 -> .

    LB              reduce using rule 86 (verificar2 -> .)

    verificar2                     shift and go to state 94

state 71

    (84) funcion -> tipo ID LP param . RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (91) param -> param . COMMA tipo ID

    RP              shift and go to state 95
    COMMA           shift and go to state 96


state 72

    (92) param -> empty .

    RP              reduce using rule 92 (param -> empty .)
    COMMA           reduce using rule 92 (param -> empty .)


state 73

    (12) main -> VOID MAIN quad_main LP . RP LB statement RB

    RP              shift and go to state 97


state 74

    (81) funcion -> VOID ID LP param . RP verificar LB var_func statement RB end_func
    (91) param -> param . COMMA tipo ID

    RP              shift and go to state 98
    COMMA           shift and go to state 96


state 75

    (82) funcion -> VOID ID LP RP . verificar2 LB var_func statement RB end_func
    (86) verificar2 -> .

    LB              reduce using rule 86 (verificar2 -> .)

    verificar2                     shift and go to state 99

state 76

    (93) declarar_func -> FUNC tipo ID LP . RP SEMICOL
    (95) declarar_func -> FUNC tipo ID LP . declarar_param RP SEMICOL
    (97) declarar_param -> . tipo COMMA declarar_param
    (98) declarar_param -> . tipo declarar_param
    (99) declarar_param -> . empty
    (71) tipo -> . INT
    (72) tipo -> . FLOAT
    (73) tipo -> . CHAR
    (124) empty -> .

  ! shift/reduce conflict for RP resolved as shift
    RP              shift and go to state 101
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

  ! RP              [ reduce using rule 124 (empty -> .) ]

    tipo                           shift and go to state 100
    declarar_param                 shift and go to state 102
    empty                          shift and go to state 103

state 77

    (94) declarar_func -> FUNC VOID ID LP . RP SEMICOL
    (96) declarar_func -> FUNC VOID ID LP . declarar_param RP SEMICOL
    (97) declarar_param -> . tipo COMMA declarar_param
    (98) declarar_param -> . tipo declarar_param
    (99) declarar_param -> . empty
    (71) tipo -> . INT
    (72) tipo -> . FLOAT
    (73) tipo -> . CHAR
    (124) empty -> .

  ! shift/reduce conflict for RP resolved as shift
    RP              shift and go to state 104
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

  ! RP              [ reduce using rule 124 (empty -> .) ]

    declarar_param                 shift and go to state 105
    tipo                           shift and go to state 100
    empty                          shift and go to state 103

state 78

    (123) matrix -> row row .

    IS              reduce using rule 123 (matrix -> row row .)
    SEMICOL         reduce using rule 123 (matrix -> row row .)


state 79

    (111) var_rowG -> VAR tipo ID row IS . LP lista2 RP SEMICOL

    LP              shift and go to state 106


state 80

    (76) value -> ID .

    SEMICOL         reduce using rule 76 (value -> ID .)
    COMMA           reduce using rule 76 (value -> ID .)
    RP              reduce using rule 76 (value -> ID .)


state 81

    (65) vars2G -> ID IS value . SEMICOL
    (63) vars2_1G -> ID IS value . COMMA

    SEMICOL         shift and go to state 107
    COMMA           shift and go to state 108


state 82

    (74) value -> CTE_F .

    SEMICOL         reduce using rule 74 (value -> CTE_F .)
    COMMA           reduce using rule 74 (value -> CTE_F .)
    RP              reduce using rule 74 (value -> CTE_F .)


state 83

    (75) value -> CTE_I .

    SEMICOL         reduce using rule 75 (value -> CTE_I .)
    COMMA           reduce using rule 75 (value -> CTE_I .)
    RP              reduce using rule 75 (value -> CTE_I .)


state 84

    (77) value -> CTE_C .

    SEMICOL         reduce using rule 77 (value -> CTE_C .)
    COMMA           reduce using rule 77 (value -> CTE_C .)
    RP              reduce using rule 77 (value -> CTE_C .)


state 85

    (78) value -> COMILLA . ID COMILLA

    ID              shift and go to state 109


state 86

    (79) value -> COMILLAS . ID COMILLAS

    ID              shift and go to state 110


state 87

    (118) var_matrixG -> VAR tipo ID matrix IS . matrix2 SEMICOL
    (119) matrix2 -> . LP lista2 RP COMMA matrix2
    (120) matrix2 -> . LP lista2 RP COMMA LP lista2 RP

    LP              shift and go to state 112

    matrix2                        shift and go to state 111

state 88

    (116) row -> LC CTE_I . RC

    RC              shift and go to state 113


state 89

    (61) vars2G -> vars2_1G ID IS . value SEMICOL
    (62) vars2_1G -> vars2_1G ID IS . value COMMA
    (74) value -> . CTE_F
    (75) value -> . CTE_I
    (76) value -> . ID
    (77) value -> . CTE_C
    (78) value -> . COMILLA ID COMILLA
    (79) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 82
    CTE_I           shift and go to state 83
    ID              shift and go to state 80
    CTE_C           shift and go to state 84
    COMILLA         shift and go to state 85
    COMILLAS        shift and go to state 86

    value                          shift and go to state 114

state 90

    (66) vars3G -> vars3_1G ID SEMICOL .

    VAR             reduce using rule 66 (vars3G -> vars3_1G ID SEMICOL .)
    FUNC            reduce using rule 66 (vars3G -> vars3_1G ID SEMICOL .)
    VOID            reduce using rule 66 (vars3G -> vars3_1G ID SEMICOL .)
    INT             reduce using rule 66 (vars3G -> vars3_1G ID SEMICOL .)
    FLOAT           reduce using rule 66 (vars3G -> vars3_1G ID SEMICOL .)
    CHAR            reduce using rule 66 (vars3G -> vars3_1G ID SEMICOL .)
    $end            reduce using rule 66 (vars3G -> vars3_1G ID SEMICOL .)
    RB              reduce using rule 66 (vars3G -> vars3_1G ID SEMICOL .)


state 91

    (67) vars3_1G -> vars3_1G ID COMMA .

    ID              reduce using rule 67 (vars3_1G -> vars3_1G ID COMMA .)


state 92

    (11) main -> tipo MAIN quad_main LP RP . LB statement func_return_main RB end_main

    LB              shift and go to state 115


state 93

    (90) param -> tipo ID .

    RP              reduce using rule 90 (param -> tipo ID .)
    COMMA           reduce using rule 90 (param -> tipo ID .)


state 94

    (83) funcion -> tipo ID LP RP verificar2 . LB var_func statement add_func_dir2 func_return RB end_func

    LB              shift and go to state 116


state 95

    (84) funcion -> tipo ID LP param RP . verificar LB var_func statement add_func_dir func_return_param RB end_func
    (85) verificar -> .

    LB              reduce using rule 85 (verificar -> .)

    verificar                      shift and go to state 117

state 96

    (91) param -> param COMMA . tipo ID
    (71) tipo -> . INT
    (72) tipo -> . FLOAT
    (73) tipo -> . CHAR

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    tipo                           shift and go to state 118

state 97

    (12) main -> VOID MAIN quad_main LP RP . LB statement RB

    LB              shift and go to state 119


state 98

    (81) funcion -> VOID ID LP param RP . verificar LB var_func statement RB end_func
    (85) verificar -> .

    LB              reduce using rule 85 (verificar -> .)

    verificar                      shift and go to state 120

state 99

    (82) funcion -> VOID ID LP RP verificar2 . LB var_func statement RB end_func

    LB              shift and go to state 121


state 100

    (97) declarar_param -> tipo . COMMA declarar_param
    (98) declarar_param -> tipo . declarar_param
    (97) declarar_param -> . tipo COMMA declarar_param
    (98) declarar_param -> . tipo declarar_param
    (99) declarar_param -> . empty
    (71) tipo -> . INT
    (72) tipo -> . FLOAT
    (73) tipo -> . CHAR
    (124) empty -> .

    COMMA           shift and go to state 122
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20
    RP              reduce using rule 124 (empty -> .)

    tipo                           shift and go to state 100
    declarar_param                 shift and go to state 123
    empty                          shift and go to state 103

state 101

    (93) declarar_func -> FUNC tipo ID LP RP . SEMICOL

    SEMICOL         shift and go to state 124


state 102

    (95) declarar_func -> FUNC tipo ID LP declarar_param . RP SEMICOL

    RP              shift and go to state 125


state 103

    (99) declarar_param -> empty .

    RP              reduce using rule 99 (declarar_param -> empty .)


state 104

    (94) declarar_func -> FUNC VOID ID LP RP . SEMICOL

    SEMICOL         shift and go to state 126


state 105

    (96) declarar_func -> FUNC VOID ID LP declarar_param . RP SEMICOL

    RP              shift and go to state 127


state 106

    (111) var_rowG -> VAR tipo ID row IS LP . lista2 RP SEMICOL
    (114) lista2 -> . elem_lista COMMA lista2
    (115) lista2 -> . elem_lista COMMA elem_lista
    (112) elem_lista -> . value
    (113) elem_lista -> . empty
    (74) value -> . CTE_F
    (75) value -> . CTE_I
    (76) value -> . ID
    (77) value -> . CTE_C
    (78) value -> . COMILLA ID COMILLA
    (79) value -> . COMILLAS ID COMILLAS
    (124) empty -> .

    CTE_F           shift and go to state 82
    CTE_I           shift and go to state 83
    ID              shift and go to state 80
    CTE_C           shift and go to state 84
    COMILLA         shift and go to state 85
    COMILLAS        shift and go to state 86
    COMMA           reduce using rule 124 (empty -> .)

    lista2                         shift and go to state 128
    elem_lista                     shift and go to state 129
    value                          shift and go to state 130
    empty                          shift and go to state 131

state 107

    (65) vars2G -> ID IS value SEMICOL .

    VAR             reduce using rule 65 (vars2G -> ID IS value SEMICOL .)
    FUNC            reduce using rule 65 (vars2G -> ID IS value SEMICOL .)
    VOID            reduce using rule 65 (vars2G -> ID IS value SEMICOL .)
    INT             reduce using rule 65 (vars2G -> ID IS value SEMICOL .)
    FLOAT           reduce using rule 65 (vars2G -> ID IS value SEMICOL .)
    CHAR            reduce using rule 65 (vars2G -> ID IS value SEMICOL .)
    $end            reduce using rule 65 (vars2G -> ID IS value SEMICOL .)
    RB              reduce using rule 65 (vars2G -> ID IS value SEMICOL .)


state 108

    (63) vars2_1G -> ID IS value COMMA .

    ID              reduce using rule 63 (vars2_1G -> ID IS value COMMA .)


state 109

    (78) value -> COMILLA ID . COMILLA

    COMILLA         shift and go to state 132


state 110

    (79) value -> COMILLAS ID . COMILLAS

    COMILLAS        shift and go to state 133


state 111

    (118) var_matrixG -> VAR tipo ID matrix IS matrix2 . SEMICOL

    SEMICOL         shift and go to state 134


state 112

    (119) matrix2 -> LP . lista2 RP COMMA matrix2
    (120) matrix2 -> LP . lista2 RP COMMA LP lista2 RP
    (114) lista2 -> . elem_lista COMMA lista2
    (115) lista2 -> . elem_lista COMMA elem_lista
    (112) elem_lista -> . value
    (113) elem_lista -> . empty
    (74) value -> . CTE_F
    (75) value -> . CTE_I
    (76) value -> . ID
    (77) value -> . CTE_C
    (78) value -> . COMILLA ID COMILLA
    (79) value -> . COMILLAS ID COMILLAS
    (124) empty -> .

    CTE_F           shift and go to state 82
    CTE_I           shift and go to state 83
    ID              shift and go to state 80
    CTE_C           shift and go to state 84
    COMILLA         shift and go to state 85
    COMILLAS        shift and go to state 86
    COMMA           reduce using rule 124 (empty -> .)

    lista2                         shift and go to state 135
    elem_lista                     shift and go to state 129
    value                          shift and go to state 130
    empty                          shift and go to state 131

state 113

    (116) row -> LC CTE_I RC .

    IS              reduce using rule 116 (row -> LC CTE_I RC .)
    LC              reduce using rule 116 (row -> LC CTE_I RC .)
    SEMICOL         reduce using rule 116 (row -> LC CTE_I RC .)


state 114

    (61) vars2G -> vars2_1G ID IS value . SEMICOL
    (62) vars2_1G -> vars2_1G ID IS value . COMMA

    SEMICOL         shift and go to state 136
    COMMA           shift and go to state 137


state 115

    (11) main -> tipo MAIN quad_main LP RP LB . statement func_return_main RB end_main
    (14) statement -> . asignacion SEMICOL statement
    (15) statement -> . if statement
    (16) statement -> . vars statement
    (17) statement -> . while statement
    (18) statement -> . for statement
    (19) statement -> . escritura statement
    (20) statement -> . escritura_var statement
    (21) statement -> . lectura statement
    (22) statement -> . func_call statement
    (23) statement -> . ID row SEMICOL
    (24) statement -> . ID matrix SEMICOL
    (25) statement -> . empty
    (26) asignacion -> . ID IS value
    (125) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (126) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (27) vars -> . VAR tipo vars1
    (28) vars -> . VAR tipo vars2
    (29) vars -> . VAR tipo vars3
    (30) vars -> . VAR tipo oper_aritmetica
    (31) vars -> . VAR tipo ID row SEMICOL
    (32) vars -> . VAR tipo ID matrix SEMICOL
    (33) vars -> . var_row
    (34) vars -> . var_row vars
    (35) vars -> . var_matrix
    (36) vars -> . var_matrix vars
    (37) vars -> . empty
    (135) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (136) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (145) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (146) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (147) escritura_var -> . PRINT LP any_var RP SEMICOL
    (152) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (153) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (101) func_call -> . ID LP RP SEMICOL
    (102) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (124) empty -> .
    (110) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (117) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 148
    IF              shift and go to state 150
    VAR             shift and go to state 151
    WHILE           shift and go to state 154
    FOR             shift and go to state 155
    PRINT           shift and go to state 156
    READ            shift and go to state 157
    RETURN          reduce using rule 124 (empty -> .)

  ! ID              [ reduce using rule 124 (empty -> .) ]
  ! IF              [ reduce using rule 124 (empty -> .) ]
  ! VAR             [ reduce using rule 124 (empty -> .) ]
  ! WHILE           [ reduce using rule 124 (empty -> .) ]
  ! FOR             [ reduce using rule 124 (empty -> .) ]
  ! PRINT           [ reduce using rule 124 (empty -> .) ]
  ! READ            [ reduce using rule 124 (empty -> .) ]

    statement                      shift and go to state 138
    asignacion                     shift and go to state 139
    if                             shift and go to state 140
    vars                           shift and go to state 141
    while                          shift and go to state 142
    for                            shift and go to state 143
    escritura                      shift and go to state 144
    escritura_var                  shift and go to state 145
    lectura                        shift and go to state 146
    func_call                      shift and go to state 147
    empty                          shift and go to state 149
    var_row                        shift and go to state 152
    var_matrix                     shift and go to state 153

state 116

    (83) funcion -> tipo ID LP RP verificar2 LB . var_func statement add_func_dir2 func_return RB end_func
    (89) var_func -> . vars
    (27) vars -> . VAR tipo vars1
    (28) vars -> . VAR tipo vars2
    (29) vars -> . VAR tipo vars3
    (30) vars -> . VAR tipo oper_aritmetica
    (31) vars -> . VAR tipo ID row SEMICOL
    (32) vars -> . VAR tipo ID matrix SEMICOL
    (33) vars -> . var_row
    (34) vars -> . var_row vars
    (35) vars -> . var_matrix
    (36) vars -> . var_matrix vars
    (37) vars -> . empty
    (110) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (117) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (124) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
    VAR             shift and go to state 151
    ID              reduce using rule 124 (empty -> .)
    IF              reduce using rule 124 (empty -> .)
    WHILE           reduce using rule 124 (empty -> .)
    FOR             reduce using rule 124 (empty -> .)
    PRINT           reduce using rule 124 (empty -> .)
    READ            reduce using rule 124 (empty -> .)
    RETURN          reduce using rule 124 (empty -> .)

  ! VAR             [ reduce using rule 124 (empty -> .) ]

    var_func                       shift and go to state 158
    vars                           shift and go to state 159
    var_row                        shift and go to state 152
    var_matrix                     shift and go to state 153
    empty                          shift and go to state 160

state 117

    (84) funcion -> tipo ID LP param RP verificar . LB var_func statement add_func_dir func_return_param RB end_func

    LB              shift and go to state 161


state 118

    (91) param -> param COMMA tipo . ID

    ID              shift and go to state 162


state 119

    (12) main -> VOID MAIN quad_main LP RP LB . statement RB
    (14) statement -> . asignacion SEMICOL statement
    (15) statement -> . if statement
    (16) statement -> . vars statement
    (17) statement -> . while statement
    (18) statement -> . for statement
    (19) statement -> . escritura statement
    (20) statement -> . escritura_var statement
    (21) statement -> . lectura statement
    (22) statement -> . func_call statement
    (23) statement -> . ID row SEMICOL
    (24) statement -> . ID matrix SEMICOL
    (25) statement -> . empty
    (26) asignacion -> . ID IS value
    (125) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (126) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (27) vars -> . VAR tipo vars1
    (28) vars -> . VAR tipo vars2
    (29) vars -> . VAR tipo vars3
    (30) vars -> . VAR tipo oper_aritmetica
    (31) vars -> . VAR tipo ID row SEMICOL
    (32) vars -> . VAR tipo ID matrix SEMICOL
    (33) vars -> . var_row
    (34) vars -> . var_row vars
    (35) vars -> . var_matrix
    (36) vars -> . var_matrix vars
    (37) vars -> . empty
    (135) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (136) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (145) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (146) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (147) escritura_var -> . PRINT LP any_var RP SEMICOL
    (152) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (153) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (101) func_call -> . ID LP RP SEMICOL
    (102) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (124) empty -> .
    (110) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (117) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 148
    IF              shift and go to state 150
    VAR             shift and go to state 151
    WHILE           shift and go to state 154
    FOR             shift and go to state 155
    PRINT           shift and go to state 156
    READ            shift and go to state 157
    RB              reduce using rule 124 (empty -> .)

  ! ID              [ reduce using rule 124 (empty -> .) ]
  ! IF              [ reduce using rule 124 (empty -> .) ]
  ! VAR             [ reduce using rule 124 (empty -> .) ]
  ! WHILE           [ reduce using rule 124 (empty -> .) ]
  ! FOR             [ reduce using rule 124 (empty -> .) ]
  ! PRINT           [ reduce using rule 124 (empty -> .) ]
  ! READ            [ reduce using rule 124 (empty -> .) ]

    statement                      shift and go to state 163
    asignacion                     shift and go to state 139
    if                             shift and go to state 140
    vars                           shift and go to state 141
    while                          shift and go to state 142
    for                            shift and go to state 143
    escritura                      shift and go to state 144
    escritura_var                  shift and go to state 145
    lectura                        shift and go to state 146
    func_call                      shift and go to state 147
    empty                          shift and go to state 149
    var_row                        shift and go to state 152
    var_matrix                     shift and go to state 153

state 120

    (81) funcion -> VOID ID LP param RP verificar . LB var_func statement RB end_func

    LB              shift and go to state 164


state 121

    (82) funcion -> VOID ID LP RP verificar2 LB . var_func statement RB end_func
    (89) var_func -> . vars
    (27) vars -> . VAR tipo vars1
    (28) vars -> . VAR tipo vars2
    (29) vars -> . VAR tipo vars3
    (30) vars -> . VAR tipo oper_aritmetica
    (31) vars -> . VAR tipo ID row SEMICOL
    (32) vars -> . VAR tipo ID matrix SEMICOL
    (33) vars -> . var_row
    (34) vars -> . var_row vars
    (35) vars -> . var_matrix
    (36) vars -> . var_matrix vars
    (37) vars -> . empty
    (110) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (117) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (124) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
    VAR             shift and go to state 151
    ID              reduce using rule 124 (empty -> .)
    IF              reduce using rule 124 (empty -> .)
    WHILE           reduce using rule 124 (empty -> .)
    FOR             reduce using rule 124 (empty -> .)
    PRINT           reduce using rule 124 (empty -> .)
    READ            reduce using rule 124 (empty -> .)
    RB              reduce using rule 124 (empty -> .)

  ! VAR             [ reduce using rule 124 (empty -> .) ]

    var_func                       shift and go to state 165
    vars                           shift and go to state 159
    var_row                        shift and go to state 152
    var_matrix                     shift and go to state 153
    empty                          shift and go to state 160

state 122

    (97) declarar_param -> tipo COMMA . declarar_param
    (97) declarar_param -> . tipo COMMA declarar_param
    (98) declarar_param -> . tipo declarar_param
    (99) declarar_param -> . empty
    (71) tipo -> . INT
    (72) tipo -> . FLOAT
    (73) tipo -> . CHAR
    (124) empty -> .

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20
    RP              reduce using rule 124 (empty -> .)

    tipo                           shift and go to state 100
    declarar_param                 shift and go to state 166
    empty                          shift and go to state 103

state 123

    (98) declarar_param -> tipo declarar_param .

    RP              reduce using rule 98 (declarar_param -> tipo declarar_param .)


state 124

    (93) declarar_func -> FUNC tipo ID LP RP SEMICOL .

    VAR             reduce using rule 93 (declarar_func -> FUNC tipo ID LP RP SEMICOL .)
    FUNC            reduce using rule 93 (declarar_func -> FUNC tipo ID LP RP SEMICOL .)
    VOID            reduce using rule 93 (declarar_func -> FUNC tipo ID LP RP SEMICOL .)
    INT             reduce using rule 93 (declarar_func -> FUNC tipo ID LP RP SEMICOL .)
    FLOAT           reduce using rule 93 (declarar_func -> FUNC tipo ID LP RP SEMICOL .)
    CHAR            reduce using rule 93 (declarar_func -> FUNC tipo ID LP RP SEMICOL .)
    $end            reduce using rule 93 (declarar_func -> FUNC tipo ID LP RP SEMICOL .)
    RB              reduce using rule 93 (declarar_func -> FUNC tipo ID LP RP SEMICOL .)


state 125

    (95) declarar_func -> FUNC tipo ID LP declarar_param RP . SEMICOL

    SEMICOL         shift and go to state 167


state 126

    (94) declarar_func -> FUNC VOID ID LP RP SEMICOL .

    VAR             reduce using rule 94 (declarar_func -> FUNC VOID ID LP RP SEMICOL .)
    FUNC            reduce using rule 94 (declarar_func -> FUNC VOID ID LP RP SEMICOL .)
    VOID            reduce using rule 94 (declarar_func -> FUNC VOID ID LP RP SEMICOL .)
    INT             reduce using rule 94 (declarar_func -> FUNC VOID ID LP RP SEMICOL .)
    FLOAT           reduce using rule 94 (declarar_func -> FUNC VOID ID LP RP SEMICOL .)
    CHAR            reduce using rule 94 (declarar_func -> FUNC VOID ID LP RP SEMICOL .)
    $end            reduce using rule 94 (declarar_func -> FUNC VOID ID LP RP SEMICOL .)
    RB              reduce using rule 94 (declarar_func -> FUNC VOID ID LP RP SEMICOL .)


state 127

    (96) declarar_func -> FUNC VOID ID LP declarar_param RP . SEMICOL

    SEMICOL         shift and go to state 168


state 128

    (111) var_rowG -> VAR tipo ID row IS LP lista2 . RP SEMICOL

    RP              shift and go to state 169


state 129

    (114) lista2 -> elem_lista . COMMA lista2
    (115) lista2 -> elem_lista . COMMA elem_lista

    COMMA           shift and go to state 170


state 130

    (112) elem_lista -> value .

    COMMA           reduce using rule 112 (elem_lista -> value .)
    RP              reduce using rule 112 (elem_lista -> value .)


state 131

    (113) elem_lista -> empty .

    COMMA           reduce using rule 113 (elem_lista -> empty .)
    RP              reduce using rule 113 (elem_lista -> empty .)


state 132

    (78) value -> COMILLA ID COMILLA .

    SEMICOL         reduce using rule 78 (value -> COMILLA ID COMILLA .)
    COMMA           reduce using rule 78 (value -> COMILLA ID COMILLA .)
    RP              reduce using rule 78 (value -> COMILLA ID COMILLA .)


state 133

    (79) value -> COMILLAS ID COMILLAS .

    SEMICOL         reduce using rule 79 (value -> COMILLAS ID COMILLAS .)
    COMMA           reduce using rule 79 (value -> COMILLAS ID COMILLAS .)
    RP              reduce using rule 79 (value -> COMILLAS ID COMILLAS .)


state 134

    (118) var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .

    VAR             reduce using rule 118 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    FUNC            reduce using rule 118 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    VOID            reduce using rule 118 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    INT             reduce using rule 118 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    FLOAT           reduce using rule 118 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    CHAR            reduce using rule 118 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    $end            reduce using rule 118 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    RB              reduce using rule 118 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)


state 135

    (119) matrix2 -> LP lista2 . RP COMMA matrix2
    (120) matrix2 -> LP lista2 . RP COMMA LP lista2 RP

    RP              shift and go to state 171


state 136

    (61) vars2G -> vars2_1G ID IS value SEMICOL .

    VAR             reduce using rule 61 (vars2G -> vars2_1G ID IS value SEMICOL .)
    FUNC            reduce using rule 61 (vars2G -> vars2_1G ID IS value SEMICOL .)
    VOID            reduce using rule 61 (vars2G -> vars2_1G ID IS value SEMICOL .)
    INT             reduce using rule 61 (vars2G -> vars2_1G ID IS value SEMICOL .)
    FLOAT           reduce using rule 61 (vars2G -> vars2_1G ID IS value SEMICOL .)
    CHAR            reduce using rule 61 (vars2G -> vars2_1G ID IS value SEMICOL .)
    $end            reduce using rule 61 (vars2G -> vars2_1G ID IS value SEMICOL .)
    RB              reduce using rule 61 (vars2G -> vars2_1G ID IS value SEMICOL .)


state 137

    (62) vars2_1G -> vars2_1G ID IS value COMMA .

    ID              reduce using rule 62 (vars2_1G -> vars2_1G ID IS value COMMA .)


state 138

    (11) main -> tipo MAIN quad_main LP RP LB statement . func_return_main RB end_main
    (108) func_return_main -> . RETURN expr SEMICOL

    RETURN          shift and go to state 173

    func_return_main               shift and go to state 172

state 139

    (14) statement -> asignacion . SEMICOL statement

    SEMICOL         shift and go to state 174


state 140

    (15) statement -> if . statement
    (14) statement -> . asignacion SEMICOL statement
    (15) statement -> . if statement
    (16) statement -> . vars statement
    (17) statement -> . while statement
    (18) statement -> . for statement
    (19) statement -> . escritura statement
    (20) statement -> . escritura_var statement
    (21) statement -> . lectura statement
    (22) statement -> . func_call statement
    (23) statement -> . ID row SEMICOL
    (24) statement -> . ID matrix SEMICOL
    (25) statement -> . empty
    (26) asignacion -> . ID IS value
    (125) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (126) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (27) vars -> . VAR tipo vars1
    (28) vars -> . VAR tipo vars2
    (29) vars -> . VAR tipo vars3
    (30) vars -> . VAR tipo oper_aritmetica
    (31) vars -> . VAR tipo ID row SEMICOL
    (32) vars -> . VAR tipo ID matrix SEMICOL
    (33) vars -> . var_row
    (34) vars -> . var_row vars
    (35) vars -> . var_matrix
    (36) vars -> . var_matrix vars
    (37) vars -> . empty
    (135) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (136) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (145) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (146) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (147) escritura_var -> . PRINT LP any_var RP SEMICOL
    (152) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (153) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (101) func_call -> . ID LP RP SEMICOL
    (102) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (124) empty -> .
    (110) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (117) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 148
    IF              shift and go to state 150
    VAR             shift and go to state 151
    WHILE           shift and go to state 154
    FOR             shift and go to state 155
    PRINT           shift and go to state 156
    READ            shift and go to state 157
    RETURN          reduce using rule 124 (empty -> .)
    RB              reduce using rule 124 (empty -> .)

  ! ID              [ reduce using rule 124 (empty -> .) ]
  ! IF              [ reduce using rule 124 (empty -> .) ]
  ! VAR             [ reduce using rule 124 (empty -> .) ]
  ! WHILE           [ reduce using rule 124 (empty -> .) ]
  ! FOR             [ reduce using rule 124 (empty -> .) ]
  ! PRINT           [ reduce using rule 124 (empty -> .) ]
  ! READ            [ reduce using rule 124 (empty -> .) ]

    if                             shift and go to state 140
    statement                      shift and go to state 175
    asignacion                     shift and go to state 139
    vars                           shift and go to state 141
    while                          shift and go to state 142
    for                            shift and go to state 143
    escritura                      shift and go to state 144
    escritura_var                  shift and go to state 145
    lectura                        shift and go to state 146
    func_call                      shift and go to state 147
    empty                          shift and go to state 149
    var_row                        shift and go to state 152
    var_matrix                     shift and go to state 153

state 141

    (16) statement -> vars . statement
    (14) statement -> . asignacion SEMICOL statement
    (15) statement -> . if statement
    (16) statement -> . vars statement
    (17) statement -> . while statement
    (18) statement -> . for statement
    (19) statement -> . escritura statement
    (20) statement -> . escritura_var statement
    (21) statement -> . lectura statement
    (22) statement -> . func_call statement
    (23) statement -> . ID row SEMICOL
    (24) statement -> . ID matrix SEMICOL
    (25) statement -> . empty
    (26) asignacion -> . ID IS value
    (125) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (126) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (27) vars -> . VAR tipo vars1
    (28) vars -> . VAR tipo vars2
    (29) vars -> . VAR tipo vars3
    (30) vars -> . VAR tipo oper_aritmetica
    (31) vars -> . VAR tipo ID row SEMICOL
    (32) vars -> . VAR tipo ID matrix SEMICOL
    (33) vars -> . var_row
    (34) vars -> . var_row vars
    (35) vars -> . var_matrix
    (36) vars -> . var_matrix vars
    (37) vars -> . empty
    (135) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (136) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (145) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (146) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (147) escritura_var -> . PRINT LP any_var RP SEMICOL
    (152) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (153) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (101) func_call -> . ID LP RP SEMICOL
    (102) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (124) empty -> .
    (110) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (117) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 148
    IF              shift and go to state 150
    VAR             shift and go to state 151
    WHILE           shift and go to state 154
    FOR             shift and go to state 155
    PRINT           shift and go to state 156
    READ            shift and go to state 157
    RETURN          reduce using rule 124 (empty -> .)
    RB              reduce using rule 124 (empty -> .)

  ! ID              [ reduce using rule 124 (empty -> .) ]
  ! IF              [ reduce using rule 124 (empty -> .) ]
  ! VAR             [ reduce using rule 124 (empty -> .) ]
  ! WHILE           [ reduce using rule 124 (empty -> .) ]
  ! FOR             [ reduce using rule 124 (empty -> .) ]
  ! PRINT           [ reduce using rule 124 (empty -> .) ]
  ! READ            [ reduce using rule 124 (empty -> .) ]

    vars                           shift and go to state 141
    statement                      shift and go to state 176
    asignacion                     shift and go to state 139
    if                             shift and go to state 140
    while                          shift and go to state 142
    for                            shift and go to state 143
    escritura                      shift and go to state 144
    escritura_var                  shift and go to state 145
    lectura                        shift and go to state 146
    func_call                      shift and go to state 147
    empty                          shift and go to state 149
    var_row                        shift and go to state 152
    var_matrix                     shift and go to state 153

state 142

    (17) statement -> while . statement
    (14) statement -> . asignacion SEMICOL statement
    (15) statement -> . if statement
    (16) statement -> . vars statement
    (17) statement -> . while statement
    (18) statement -> . for statement
    (19) statement -> . escritura statement
    (20) statement -> . escritura_var statement
    (21) statement -> . lectura statement
    (22) statement -> . func_call statement
    (23) statement -> . ID row SEMICOL
    (24) statement -> . ID matrix SEMICOL
    (25) statement -> . empty
    (26) asignacion -> . ID IS value
    (125) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (126) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (27) vars -> . VAR tipo vars1
    (28) vars -> . VAR tipo vars2
    (29) vars -> . VAR tipo vars3
    (30) vars -> . VAR tipo oper_aritmetica
    (31) vars -> . VAR tipo ID row SEMICOL
    (32) vars -> . VAR tipo ID matrix SEMICOL
    (33) vars -> . var_row
    (34) vars -> . var_row vars
    (35) vars -> . var_matrix
    (36) vars -> . var_matrix vars
    (37) vars -> . empty
    (135) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (136) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (145) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (146) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (147) escritura_var -> . PRINT LP any_var RP SEMICOL
    (152) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (153) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (101) func_call -> . ID LP RP SEMICOL
    (102) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (124) empty -> .
    (110) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (117) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 148
    IF              shift and go to state 150
    VAR             shift and go to state 151
    WHILE           shift and go to state 154
    FOR             shift and go to state 155
    PRINT           shift and go to state 156
    READ            shift and go to state 157
    RETURN          reduce using rule 124 (empty -> .)
    RB              reduce using rule 124 (empty -> .)

  ! ID              [ reduce using rule 124 (empty -> .) ]
  ! IF              [ reduce using rule 124 (empty -> .) ]
  ! VAR             [ reduce using rule 124 (empty -> .) ]
  ! WHILE           [ reduce using rule 124 (empty -> .) ]
  ! FOR             [ reduce using rule 124 (empty -> .) ]
  ! PRINT           [ reduce using rule 124 (empty -> .) ]
  ! READ            [ reduce using rule 124 (empty -> .) ]

    while                          shift and go to state 142
    statement                      shift and go to state 177
    asignacion                     shift and go to state 139
    if                             shift and go to state 140
    vars                           shift and go to state 141
    for                            shift and go to state 143
    escritura                      shift and go to state 144
    escritura_var                  shift and go to state 145
    lectura                        shift and go to state 146
    func_call                      shift and go to state 147
    empty                          shift and go to state 149
    var_row                        shift and go to state 152
    var_matrix                     shift and go to state 153

state 143

    (18) statement -> for . statement
    (14) statement -> . asignacion SEMICOL statement
    (15) statement -> . if statement
    (16) statement -> . vars statement
    (17) statement -> . while statement
    (18) statement -> . for statement
    (19) statement -> . escritura statement
    (20) statement -> . escritura_var statement
    (21) statement -> . lectura statement
    (22) statement -> . func_call statement
    (23) statement -> . ID row SEMICOL
    (24) statement -> . ID matrix SEMICOL
    (25) statement -> . empty
    (26) asignacion -> . ID IS value
    (125) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (126) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (27) vars -> . VAR tipo vars1
    (28) vars -> . VAR tipo vars2
    (29) vars -> . VAR tipo vars3
    (30) vars -> . VAR tipo oper_aritmetica
    (31) vars -> . VAR tipo ID row SEMICOL
    (32) vars -> . VAR tipo ID matrix SEMICOL
    (33) vars -> . var_row
    (34) vars -> . var_row vars
    (35) vars -> . var_matrix
    (36) vars -> . var_matrix vars
    (37) vars -> . empty
    (135) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (136) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (145) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (146) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (147) escritura_var -> . PRINT LP any_var RP SEMICOL
    (152) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (153) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (101) func_call -> . ID LP RP SEMICOL
    (102) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (124) empty -> .
    (110) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (117) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 148
    IF              shift and go to state 150
    VAR             shift and go to state 151
    WHILE           shift and go to state 154
    FOR             shift and go to state 155
    PRINT           shift and go to state 156
    READ            shift and go to state 157
    RETURN          reduce using rule 124 (empty -> .)
    RB              reduce using rule 124 (empty -> .)

  ! ID              [ reduce using rule 124 (empty -> .) ]
  ! IF              [ reduce using rule 124 (empty -> .) ]
  ! VAR             [ reduce using rule 124 (empty -> .) ]
  ! WHILE           [ reduce using rule 124 (empty -> .) ]
  ! FOR             [ reduce using rule 124 (empty -> .) ]
  ! PRINT           [ reduce using rule 124 (empty -> .) ]
  ! READ            [ reduce using rule 124 (empty -> .) ]

    for                            shift and go to state 143
    statement                      shift and go to state 178
    asignacion                     shift and go to state 139
    if                             shift and go to state 140
    vars                           shift and go to state 141
    while                          shift and go to state 142
    escritura                      shift and go to state 144
    escritura_var                  shift and go to state 145
    lectura                        shift and go to state 146
    func_call                      shift and go to state 147
    empty                          shift and go to state 149
    var_row                        shift and go to state 152
    var_matrix                     shift and go to state 153

state 144

    (19) statement -> escritura . statement
    (14) statement -> . asignacion SEMICOL statement
    (15) statement -> . if statement
    (16) statement -> . vars statement
    (17) statement -> . while statement
    (18) statement -> . for statement
    (19) statement -> . escritura statement
    (20) statement -> . escritura_var statement
    (21) statement -> . lectura statement
    (22) statement -> . func_call statement
    (23) statement -> . ID row SEMICOL
    (24) statement -> . ID matrix SEMICOL
    (25) statement -> . empty
    (26) asignacion -> . ID IS value
    (125) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (126) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (27) vars -> . VAR tipo vars1
    (28) vars -> . VAR tipo vars2
    (29) vars -> . VAR tipo vars3
    (30) vars -> . VAR tipo oper_aritmetica
    (31) vars -> . VAR tipo ID row SEMICOL
    (32) vars -> . VAR tipo ID matrix SEMICOL
    (33) vars -> . var_row
    (34) vars -> . var_row vars
    (35) vars -> . var_matrix
    (36) vars -> . var_matrix vars
    (37) vars -> . empty
    (135) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (136) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (145) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (146) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (147) escritura_var -> . PRINT LP any_var RP SEMICOL
    (152) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (153) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (101) func_call -> . ID LP RP SEMICOL
    (102) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (124) empty -> .
    (110) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (117) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 148
    IF              shift and go to state 150
    VAR             shift and go to state 151
    WHILE           shift and go to state 154
    FOR             shift and go to state 155
    PRINT           shift and go to state 156
    READ            shift and go to state 157
    RETURN          reduce using rule 124 (empty -> .)
    RB              reduce using rule 124 (empty -> .)

  ! ID              [ reduce using rule 124 (empty -> .) ]
  ! IF              [ reduce using rule 124 (empty -> .) ]
  ! VAR             [ reduce using rule 124 (empty -> .) ]
  ! WHILE           [ reduce using rule 124 (empty -> .) ]
  ! FOR             [ reduce using rule 124 (empty -> .) ]
  ! PRINT           [ reduce using rule 124 (empty -> .) ]
  ! READ            [ reduce using rule 124 (empty -> .) ]

    escritura                      shift and go to state 144
    statement                      shift and go to state 179
    asignacion                     shift and go to state 139
    if                             shift and go to state 140
    vars                           shift and go to state 141
    while                          shift and go to state 142
    for                            shift and go to state 143
    escritura_var                  shift and go to state 145
    lectura                        shift and go to state 146
    func_call                      shift and go to state 147
    empty                          shift and go to state 149
    var_row                        shift and go to state 152
    var_matrix                     shift and go to state 153

state 145

    (20) statement -> escritura_var . statement
    (14) statement -> . asignacion SEMICOL statement
    (15) statement -> . if statement
    (16) statement -> . vars statement
    (17) statement -> . while statement
    (18) statement -> . for statement
    (19) statement -> . escritura statement
    (20) statement -> . escritura_var statement
    (21) statement -> . lectura statement
    (22) statement -> . func_call statement
    (23) statement -> . ID row SEMICOL
    (24) statement -> . ID matrix SEMICOL
    (25) statement -> . empty
    (26) asignacion -> . ID IS value
    (125) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (126) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (27) vars -> . VAR tipo vars1
    (28) vars -> . VAR tipo vars2
    (29) vars -> . VAR tipo vars3
    (30) vars -> . VAR tipo oper_aritmetica
    (31) vars -> . VAR tipo ID row SEMICOL
    (32) vars -> . VAR tipo ID matrix SEMICOL
    (33) vars -> . var_row
    (34) vars -> . var_row vars
    (35) vars -> . var_matrix
    (36) vars -> . var_matrix vars
    (37) vars -> . empty
    (135) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (136) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (145) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (146) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (147) escritura_var -> . PRINT LP any_var RP SEMICOL
    (152) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (153) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (101) func_call -> . ID LP RP SEMICOL
    (102) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (124) empty -> .
    (110) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (117) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 148
    IF              shift and go to state 150
    VAR             shift and go to state 151
    WHILE           shift and go to state 154
    FOR             shift and go to state 155
    PRINT           shift and go to state 156
    READ            shift and go to state 157
    RETURN          reduce using rule 124 (empty -> .)
    RB              reduce using rule 124 (empty -> .)

  ! ID              [ reduce using rule 124 (empty -> .) ]
  ! IF              [ reduce using rule 124 (empty -> .) ]
  ! VAR             [ reduce using rule 124 (empty -> .) ]
  ! WHILE           [ reduce using rule 124 (empty -> .) ]
  ! FOR             [ reduce using rule 124 (empty -> .) ]
  ! PRINT           [ reduce using rule 124 (empty -> .) ]
  ! READ            [ reduce using rule 124 (empty -> .) ]

    escritura_var                  shift and go to state 145
    statement                      shift and go to state 180
    asignacion                     shift and go to state 139
    if                             shift and go to state 140
    vars                           shift and go to state 141
    while                          shift and go to state 142
    for                            shift and go to state 143
    escritura                      shift and go to state 144
    lectura                        shift and go to state 146
    func_call                      shift and go to state 147
    empty                          shift and go to state 149
    var_row                        shift and go to state 152
    var_matrix                     shift and go to state 153

state 146

    (21) statement -> lectura . statement
    (14) statement -> . asignacion SEMICOL statement
    (15) statement -> . if statement
    (16) statement -> . vars statement
    (17) statement -> . while statement
    (18) statement -> . for statement
    (19) statement -> . escritura statement
    (20) statement -> . escritura_var statement
    (21) statement -> . lectura statement
    (22) statement -> . func_call statement
    (23) statement -> . ID row SEMICOL
    (24) statement -> . ID matrix SEMICOL
    (25) statement -> . empty
    (26) asignacion -> . ID IS value
    (125) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (126) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (27) vars -> . VAR tipo vars1
    (28) vars -> . VAR tipo vars2
    (29) vars -> . VAR tipo vars3
    (30) vars -> . VAR tipo oper_aritmetica
    (31) vars -> . VAR tipo ID row SEMICOL
    (32) vars -> . VAR tipo ID matrix SEMICOL
    (33) vars -> . var_row
    (34) vars -> . var_row vars
    (35) vars -> . var_matrix
    (36) vars -> . var_matrix vars
    (37) vars -> . empty
    (135) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (136) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (145) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (146) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (147) escritura_var -> . PRINT LP any_var RP SEMICOL
    (152) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (153) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (101) func_call -> . ID LP RP SEMICOL
    (102) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (124) empty -> .
    (110) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (117) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 148
    IF              shift and go to state 150
    VAR             shift and go to state 151
    WHILE           shift and go to state 154
    FOR             shift and go to state 155
    PRINT           shift and go to state 156
    READ            shift and go to state 157
    RETURN          reduce using rule 124 (empty -> .)
    RB              reduce using rule 124 (empty -> .)

  ! ID              [ reduce using rule 124 (empty -> .) ]
  ! IF              [ reduce using rule 124 (empty -> .) ]
  ! VAR             [ reduce using rule 124 (empty -> .) ]
  ! WHILE           [ reduce using rule 124 (empty -> .) ]
  ! FOR             [ reduce using rule 124 (empty -> .) ]
  ! PRINT           [ reduce using rule 124 (empty -> .) ]
  ! READ            [ reduce using rule 124 (empty -> .) ]

    lectura                        shift and go to state 146
    statement                      shift and go to state 181
    asignacion                     shift and go to state 139
    if                             shift and go to state 140
    vars                           shift and go to state 141
    while                          shift and go to state 142
    for                            shift and go to state 143
    escritura                      shift and go to state 144
    escritura_var                  shift and go to state 145
    func_call                      shift and go to state 147
    empty                          shift and go to state 149
    var_row                        shift and go to state 152
    var_matrix                     shift and go to state 153

state 147

    (22) statement -> func_call . statement
    (14) statement -> . asignacion SEMICOL statement
    (15) statement -> . if statement
    (16) statement -> . vars statement
    (17) statement -> . while statement
    (18) statement -> . for statement
    (19) statement -> . escritura statement
    (20) statement -> . escritura_var statement
    (21) statement -> . lectura statement
    (22) statement -> . func_call statement
    (23) statement -> . ID row SEMICOL
    (24) statement -> . ID matrix SEMICOL
    (25) statement -> . empty
    (26) asignacion -> . ID IS value
    (125) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (126) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (27) vars -> . VAR tipo vars1
    (28) vars -> . VAR tipo vars2
    (29) vars -> . VAR tipo vars3
    (30) vars -> . VAR tipo oper_aritmetica
    (31) vars -> . VAR tipo ID row SEMICOL
    (32) vars -> . VAR tipo ID matrix SEMICOL
    (33) vars -> . var_row
    (34) vars -> . var_row vars
    (35) vars -> . var_matrix
    (36) vars -> . var_matrix vars
    (37) vars -> . empty
    (135) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (136) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (145) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (146) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (147) escritura_var -> . PRINT LP any_var RP SEMICOL
    (152) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (153) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (101) func_call -> . ID LP RP SEMICOL
    (102) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (124) empty -> .
    (110) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (117) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 148
    IF              shift and go to state 150
    VAR             shift and go to state 151
    WHILE           shift and go to state 154
    FOR             shift and go to state 155
    PRINT           shift and go to state 156
    READ            shift and go to state 157
    RETURN          reduce using rule 124 (empty -> .)
    RB              reduce using rule 124 (empty -> .)

  ! ID              [ reduce using rule 124 (empty -> .) ]
  ! IF              [ reduce using rule 124 (empty -> .) ]
  ! VAR             [ reduce using rule 124 (empty -> .) ]
  ! WHILE           [ reduce using rule 124 (empty -> .) ]
  ! FOR             [ reduce using rule 124 (empty -> .) ]
  ! PRINT           [ reduce using rule 124 (empty -> .) ]
  ! READ            [ reduce using rule 124 (empty -> .) ]

    func_call                      shift and go to state 147
    statement                      shift and go to state 182
    asignacion                     shift and go to state 139
    if                             shift and go to state 140
    vars                           shift and go to state 141
    while                          shift and go to state 142
    for                            shift and go to state 143
    escritura                      shift and go to state 144
    escritura_var                  shift and go to state 145
    lectura                        shift and go to state 146
    empty                          shift and go to state 149
    var_row                        shift and go to state 152
    var_matrix                     shift and go to state 153

state 148

    (23) statement -> ID . row SEMICOL
    (24) statement -> ID . matrix SEMICOL
    (26) asignacion -> ID . IS value
    (101) func_call -> ID . LP RP SEMICOL
    (102) func_call -> ID . LP func_era func_call_param RP SEMICOL
    (116) row -> . LC CTE_I RC
    (123) matrix -> . row row

    IS              shift and go to state 185
    LP              shift and go to state 186
    LC              shift and go to state 64

    row                            shift and go to state 183
    matrix                         shift and go to state 184

state 149

    (25) statement -> empty .
    (37) vars -> empty .

  ! reduce/reduce conflict for RETURN resolved using rule 25 (statement -> empty .)
  ! reduce/reduce conflict for RB resolved using rule 25 (statement -> empty .)
    RETURN          reduce using rule 25 (statement -> empty .)
    RB              reduce using rule 25 (statement -> empty .)
    ID              reduce using rule 37 (vars -> empty .)
    IF              reduce using rule 37 (vars -> empty .)
    VAR             reduce using rule 37 (vars -> empty .)
    WHILE           reduce using rule 37 (vars -> empty .)
    FOR             reduce using rule 37 (vars -> empty .)
    PRINT           reduce using rule 37 (vars -> empty .)
    READ            reduce using rule 37 (vars -> empty .)

  ! RETURN          [ reduce using rule 37 (vars -> empty .) ]
  ! RB              [ reduce using rule 37 (vars -> empty .) ]


state 150

    (125) if -> IF . LP expression RP check_bool gotof LB statement RB fill_if
    (126) if -> IF . LP expression RP check_bool gotof LB statement RB goto fill_gotof else

    LP              shift and go to state 187


state 151

    (27) vars -> VAR . tipo vars1
    (28) vars -> VAR . tipo vars2
    (29) vars -> VAR . tipo vars3
    (30) vars -> VAR . tipo oper_aritmetica
    (31) vars -> VAR . tipo ID row SEMICOL
    (32) vars -> VAR . tipo ID matrix SEMICOL
    (110) var_row -> VAR . tipo ID row IS LP lista2 RP SEMICOL
    (117) var_matrix -> VAR . tipo ID matrix IS matrix2 SEMICOL
    (71) tipo -> . INT
    (72) tipo -> . FLOAT
    (73) tipo -> . CHAR

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    tipo                           shift and go to state 188

state 152

    (33) vars -> var_row .
    (34) vars -> var_row . vars
    (27) vars -> . VAR tipo vars1
    (28) vars -> . VAR tipo vars2
    (29) vars -> . VAR tipo vars3
    (30) vars -> . VAR tipo oper_aritmetica
    (31) vars -> . VAR tipo ID row SEMICOL
    (32) vars -> . VAR tipo ID matrix SEMICOL
    (33) vars -> . var_row
    (34) vars -> . var_row vars
    (35) vars -> . var_matrix
    (36) vars -> . var_matrix vars
    (37) vars -> . empty
    (110) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (117) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (124) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for ID resolved using rule 33 (vars -> var_row .)
  ! reduce/reduce conflict for IF resolved using rule 33 (vars -> var_row .)
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for WHILE resolved using rule 33 (vars -> var_row .)
  ! reduce/reduce conflict for FOR resolved using rule 33 (vars -> var_row .)
  ! reduce/reduce conflict for PRINT resolved using rule 33 (vars -> var_row .)
  ! reduce/reduce conflict for READ resolved using rule 33 (vars -> var_row .)
  ! reduce/reduce conflict for RETURN resolved using rule 33 (vars -> var_row .)
  ! reduce/reduce conflict for RB resolved using rule 33 (vars -> var_row .)
    ID              reduce using rule 33 (vars -> var_row .)
    IF              reduce using rule 33 (vars -> var_row .)
    WHILE           reduce using rule 33 (vars -> var_row .)
    FOR             reduce using rule 33 (vars -> var_row .)
    PRINT           reduce using rule 33 (vars -> var_row .)
    READ            reduce using rule 33 (vars -> var_row .)
    RETURN          reduce using rule 33 (vars -> var_row .)
    RB              reduce using rule 33 (vars -> var_row .)
    VAR             shift and go to state 151

  ! VAR             [ reduce using rule 33 (vars -> var_row .) ]
  ! ID              [ reduce using rule 124 (empty -> .) ]
  ! IF              [ reduce using rule 124 (empty -> .) ]
  ! VAR             [ reduce using rule 124 (empty -> .) ]
  ! WHILE           [ reduce using rule 124 (empty -> .) ]
  ! FOR             [ reduce using rule 124 (empty -> .) ]
  ! PRINT           [ reduce using rule 124 (empty -> .) ]
  ! READ            [ reduce using rule 124 (empty -> .) ]
  ! RETURN          [ reduce using rule 124 (empty -> .) ]
  ! RB              [ reduce using rule 124 (empty -> .) ]

    var_row                        shift and go to state 152
    vars                           shift and go to state 189
    var_matrix                     shift and go to state 153
    empty                          shift and go to state 160

state 153

    (35) vars -> var_matrix .
    (36) vars -> var_matrix . vars
    (27) vars -> . VAR tipo vars1
    (28) vars -> . VAR tipo vars2
    (29) vars -> . VAR tipo vars3
    (30) vars -> . VAR tipo oper_aritmetica
    (31) vars -> . VAR tipo ID row SEMICOL
    (32) vars -> . VAR tipo ID matrix SEMICOL
    (33) vars -> . var_row
    (34) vars -> . var_row vars
    (35) vars -> . var_matrix
    (36) vars -> . var_matrix vars
    (37) vars -> . empty
    (110) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (117) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (124) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for ID resolved using rule 35 (vars -> var_matrix .)
  ! reduce/reduce conflict for IF resolved using rule 35 (vars -> var_matrix .)
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for WHILE resolved using rule 35 (vars -> var_matrix .)
  ! reduce/reduce conflict for FOR resolved using rule 35 (vars -> var_matrix .)
  ! reduce/reduce conflict for PRINT resolved using rule 35 (vars -> var_matrix .)
  ! reduce/reduce conflict for READ resolved using rule 35 (vars -> var_matrix .)
  ! reduce/reduce conflict for RETURN resolved using rule 35 (vars -> var_matrix .)
  ! reduce/reduce conflict for RB resolved using rule 35 (vars -> var_matrix .)
    ID              reduce using rule 35 (vars -> var_matrix .)
    IF              reduce using rule 35 (vars -> var_matrix .)
    WHILE           reduce using rule 35 (vars -> var_matrix .)
    FOR             reduce using rule 35 (vars -> var_matrix .)
    PRINT           reduce using rule 35 (vars -> var_matrix .)
    READ            reduce using rule 35 (vars -> var_matrix .)
    RETURN          reduce using rule 35 (vars -> var_matrix .)
    RB              reduce using rule 35 (vars -> var_matrix .)
    VAR             shift and go to state 151

  ! VAR             [ reduce using rule 35 (vars -> var_matrix .) ]
  ! ID              [ reduce using rule 124 (empty -> .) ]
  ! IF              [ reduce using rule 124 (empty -> .) ]
  ! VAR             [ reduce using rule 124 (empty -> .) ]
  ! WHILE           [ reduce using rule 124 (empty -> .) ]
  ! FOR             [ reduce using rule 124 (empty -> .) ]
  ! PRINT           [ reduce using rule 124 (empty -> .) ]
  ! READ            [ reduce using rule 124 (empty -> .) ]
  ! RETURN          [ reduce using rule 124 (empty -> .) ]
  ! RB              [ reduce using rule 124 (empty -> .) ]

    var_matrix                     shift and go to state 153
    vars                           shift and go to state 190
    var_row                        shift and go to state 152
    empty                          shift and go to state 160

state 154

    (135) while -> WHILE . guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (134) guarda_num_salto -> .

    LP              reduce using rule 134 (guarda_num_salto -> .)

    guarda_num_salto               shift and go to state 191

state 155

    (136) for -> FOR . LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto

    LP              shift and go to state 192


state 156

    (145) escritura -> PRINT . LP COMILLA any COMILLA RP SEMICOL
    (146) escritura -> PRINT . LP COMILLAS any COMILLAS RP SEMICOL
    (147) escritura_var -> PRINT . LP any_var RP SEMICOL

    LP              shift and go to state 193


state 157

    (152) lectura -> READ . LP COMILLA any_lectura COMILLA RP SEMICOL
    (153) lectura -> READ . LP COMILLAS any_lectura COMILLAS RP SEMICOL

    LP              shift and go to state 194


state 158

    (83) funcion -> tipo ID LP RP verificar2 LB var_func . statement add_func_dir2 func_return RB end_func
    (14) statement -> . asignacion SEMICOL statement
    (15) statement -> . if statement
    (16) statement -> . vars statement
    (17) statement -> . while statement
    (18) statement -> . for statement
    (19) statement -> . escritura statement
    (20) statement -> . escritura_var statement
    (21) statement -> . lectura statement
    (22) statement -> . func_call statement
    (23) statement -> . ID row SEMICOL
    (24) statement -> . ID matrix SEMICOL
    (25) statement -> . empty
    (26) asignacion -> . ID IS value
    (125) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (126) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (27) vars -> . VAR tipo vars1
    (28) vars -> . VAR tipo vars2
    (29) vars -> . VAR tipo vars3
    (30) vars -> . VAR tipo oper_aritmetica
    (31) vars -> . VAR tipo ID row SEMICOL
    (32) vars -> . VAR tipo ID matrix SEMICOL
    (33) vars -> . var_row
    (34) vars -> . var_row vars
    (35) vars -> . var_matrix
    (36) vars -> . var_matrix vars
    (37) vars -> . empty
    (135) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (136) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (145) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (146) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (147) escritura_var -> . PRINT LP any_var RP SEMICOL
    (152) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (153) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (101) func_call -> . ID LP RP SEMICOL
    (102) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (124) empty -> .
    (110) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (117) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 148
    IF              shift and go to state 150
    VAR             shift and go to state 151
    WHILE           shift and go to state 154
    FOR             shift and go to state 155
    PRINT           shift and go to state 156
    READ            shift and go to state 157
    RETURN          reduce using rule 124 (empty -> .)

  ! ID              [ reduce using rule 124 (empty -> .) ]
  ! IF              [ reduce using rule 124 (empty -> .) ]
  ! VAR             [ reduce using rule 124 (empty -> .) ]
  ! WHILE           [ reduce using rule 124 (empty -> .) ]
  ! FOR             [ reduce using rule 124 (empty -> .) ]
  ! PRINT           [ reduce using rule 124 (empty -> .) ]
  ! READ            [ reduce using rule 124 (empty -> .) ]

    statement                      shift and go to state 195
    asignacion                     shift and go to state 139
    if                             shift and go to state 140
    vars                           shift and go to state 141
    while                          shift and go to state 142
    for                            shift and go to state 143
    escritura                      shift and go to state 144
    escritura_var                  shift and go to state 145
    lectura                        shift and go to state 146
    func_call                      shift and go to state 147
    empty                          shift and go to state 149
    var_row                        shift and go to state 152
    var_matrix                     shift and go to state 153

state 159

    (89) var_func -> vars .

    ID              reduce using rule 89 (var_func -> vars .)
    IF              reduce using rule 89 (var_func -> vars .)
    VAR             reduce using rule 89 (var_func -> vars .)
    WHILE           reduce using rule 89 (var_func -> vars .)
    FOR             reduce using rule 89 (var_func -> vars .)
    PRINT           reduce using rule 89 (var_func -> vars .)
    READ            reduce using rule 89 (var_func -> vars .)
    RETURN          reduce using rule 89 (var_func -> vars .)
    RB              reduce using rule 89 (var_func -> vars .)


state 160

    (37) vars -> empty .

    ID              reduce using rule 37 (vars -> empty .)
    IF              reduce using rule 37 (vars -> empty .)
    VAR             reduce using rule 37 (vars -> empty .)
    WHILE           reduce using rule 37 (vars -> empty .)
    FOR             reduce using rule 37 (vars -> empty .)
    PRINT           reduce using rule 37 (vars -> empty .)
    READ            reduce using rule 37 (vars -> empty .)
    RETURN          reduce using rule 37 (vars -> empty .)
    RB              reduce using rule 37 (vars -> empty .)


state 161

    (84) funcion -> tipo ID LP param RP verificar LB . var_func statement add_func_dir func_return_param RB end_func
    (89) var_func -> . vars
    (27) vars -> . VAR tipo vars1
    (28) vars -> . VAR tipo vars2
    (29) vars -> . VAR tipo vars3
    (30) vars -> . VAR tipo oper_aritmetica
    (31) vars -> . VAR tipo ID row SEMICOL
    (32) vars -> . VAR tipo ID matrix SEMICOL
    (33) vars -> . var_row
    (34) vars -> . var_row vars
    (35) vars -> . var_matrix
    (36) vars -> . var_matrix vars
    (37) vars -> . empty
    (110) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (117) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (124) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
    VAR             shift and go to state 151
    ID              reduce using rule 124 (empty -> .)
    IF              reduce using rule 124 (empty -> .)
    WHILE           reduce using rule 124 (empty -> .)
    FOR             reduce using rule 124 (empty -> .)
    PRINT           reduce using rule 124 (empty -> .)
    READ            reduce using rule 124 (empty -> .)
    RETURN          reduce using rule 124 (empty -> .)

  ! VAR             [ reduce using rule 124 (empty -> .) ]

    var_func                       shift and go to state 196
    vars                           shift and go to state 159
    var_row                        shift and go to state 152
    var_matrix                     shift and go to state 153
    empty                          shift and go to state 160

state 162

    (91) param -> param COMMA tipo ID .

    RP              reduce using rule 91 (param -> param COMMA tipo ID .)
    COMMA           reduce using rule 91 (param -> param COMMA tipo ID .)


state 163

    (12) main -> VOID MAIN quad_main LP RP LB statement . RB

    RB              shift and go to state 197


state 164

    (81) funcion -> VOID ID LP param RP verificar LB . var_func statement RB end_func
    (89) var_func -> . vars
    (27) vars -> . VAR tipo vars1
    (28) vars -> . VAR tipo vars2
    (29) vars -> . VAR tipo vars3
    (30) vars -> . VAR tipo oper_aritmetica
    (31) vars -> . VAR tipo ID row SEMICOL
    (32) vars -> . VAR tipo ID matrix SEMICOL
    (33) vars -> . var_row
    (34) vars -> . var_row vars
    (35) vars -> . var_matrix
    (36) vars -> . var_matrix vars
    (37) vars -> . empty
    (110) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (117) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (124) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
    VAR             shift and go to state 151
    ID              reduce using rule 124 (empty -> .)
    IF              reduce using rule 124 (empty -> .)
    WHILE           reduce using rule 124 (empty -> .)
    FOR             reduce using rule 124 (empty -> .)
    PRINT           reduce using rule 124 (empty -> .)
    READ            reduce using rule 124 (empty -> .)
    RB              reduce using rule 124 (empty -> .)

  ! VAR             [ reduce using rule 124 (empty -> .) ]

    var_func                       shift and go to state 198
    vars                           shift and go to state 159
    var_row                        shift and go to state 152
    var_matrix                     shift and go to state 153
    empty                          shift and go to state 160

state 165

    (82) funcion -> VOID ID LP RP verificar2 LB var_func . statement RB end_func
    (14) statement -> . asignacion SEMICOL statement
    (15) statement -> . if statement
    (16) statement -> . vars statement
    (17) statement -> . while statement
    (18) statement -> . for statement
    (19) statement -> . escritura statement
    (20) statement -> . escritura_var statement
    (21) statement -> . lectura statement
    (22) statement -> . func_call statement
    (23) statement -> . ID row SEMICOL
    (24) statement -> . ID matrix SEMICOL
    (25) statement -> . empty
    (26) asignacion -> . ID IS value
    (125) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (126) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (27) vars -> . VAR tipo vars1
    (28) vars -> . VAR tipo vars2
    (29) vars -> . VAR tipo vars3
    (30) vars -> . VAR tipo oper_aritmetica
    (31) vars -> . VAR tipo ID row SEMICOL
    (32) vars -> . VAR tipo ID matrix SEMICOL
    (33) vars -> . var_row
    (34) vars -> . var_row vars
    (35) vars -> . var_matrix
    (36) vars -> . var_matrix vars
    (37) vars -> . empty
    (135) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (136) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (145) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (146) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (147) escritura_var -> . PRINT LP any_var RP SEMICOL
    (152) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (153) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (101) func_call -> . ID LP RP SEMICOL
    (102) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (124) empty -> .
    (110) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (117) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 148
    IF              shift and go to state 150
    VAR             shift and go to state 151
    WHILE           shift and go to state 154
    FOR             shift and go to state 155
    PRINT           shift and go to state 156
    READ            shift and go to state 157
    RB              reduce using rule 124 (empty -> .)

  ! ID              [ reduce using rule 124 (empty -> .) ]
  ! IF              [ reduce using rule 124 (empty -> .) ]
  ! VAR             [ reduce using rule 124 (empty -> .) ]
  ! WHILE           [ reduce using rule 124 (empty -> .) ]
  ! FOR             [ reduce using rule 124 (empty -> .) ]
  ! PRINT           [ reduce using rule 124 (empty -> .) ]
  ! READ            [ reduce using rule 124 (empty -> .) ]

    statement                      shift and go to state 199
    asignacion                     shift and go to state 139
    if                             shift and go to state 140
    vars                           shift and go to state 141
    while                          shift and go to state 142
    for                            shift and go to state 143
    escritura                      shift and go to state 144
    escritura_var                  shift and go to state 145
    lectura                        shift and go to state 146
    func_call                      shift and go to state 147
    empty                          shift and go to state 149
    var_row                        shift and go to state 152
    var_matrix                     shift and go to state 153

state 166

    (97) declarar_param -> tipo COMMA declarar_param .

    RP              reduce using rule 97 (declarar_param -> tipo COMMA declarar_param .)


state 167

    (95) declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .

    VAR             reduce using rule 95 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    FUNC            reduce using rule 95 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    VOID            reduce using rule 95 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    INT             reduce using rule 95 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    FLOAT           reduce using rule 95 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    CHAR            reduce using rule 95 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    $end            reduce using rule 95 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    RB              reduce using rule 95 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)


state 168

    (96) declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .

    VAR             reduce using rule 96 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    FUNC            reduce using rule 96 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    VOID            reduce using rule 96 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    INT             reduce using rule 96 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    FLOAT           reduce using rule 96 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    CHAR            reduce using rule 96 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    $end            reduce using rule 96 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    RB              reduce using rule 96 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)


state 169

    (111) var_rowG -> VAR tipo ID row IS LP lista2 RP . SEMICOL

    SEMICOL         shift and go to state 200


state 170

    (114) lista2 -> elem_lista COMMA . lista2
    (115) lista2 -> elem_lista COMMA . elem_lista
    (114) lista2 -> . elem_lista COMMA lista2
    (115) lista2 -> . elem_lista COMMA elem_lista
    (112) elem_lista -> . value
    (113) elem_lista -> . empty
    (74) value -> . CTE_F
    (75) value -> . CTE_I
    (76) value -> . ID
    (77) value -> . CTE_C
    (78) value -> . COMILLA ID COMILLA
    (79) value -> . COMILLAS ID COMILLAS
    (124) empty -> .

    CTE_F           shift and go to state 82
    CTE_I           shift and go to state 83
    ID              shift and go to state 80
    CTE_C           shift and go to state 84
    COMILLA         shift and go to state 85
    COMILLAS        shift and go to state 86
    COMMA           reduce using rule 124 (empty -> .)
    RP              reduce using rule 124 (empty -> .)

    elem_lista                     shift and go to state 201
    lista2                         shift and go to state 202
    value                          shift and go to state 130
    empty                          shift and go to state 131

state 171

    (119) matrix2 -> LP lista2 RP . COMMA matrix2
    (120) matrix2 -> LP lista2 RP . COMMA LP lista2 RP

    COMMA           shift and go to state 203


state 172

    (11) main -> tipo MAIN quad_main LP RP LB statement func_return_main . RB end_main

    RB              shift and go to state 204


state 173

    (108) func_return_main -> RETURN . expr SEMICOL
    (172) expr -> . expr MUL expr
    (173) expr -> . expr DIV expr
    (174) expr -> . expr PLUS expr
    (175) expr -> . expr MINUS expr
    (176) expr -> . CTE_I
    (177) expr -> . CTE_F
    (178) expr -> . ID

    CTE_I           shift and go to state 206
    CTE_F           shift and go to state 207
    ID              shift and go to state 208

    expr                           shift and go to state 205

state 174

    (14) statement -> asignacion SEMICOL . statement
    (14) statement -> . asignacion SEMICOL statement
    (15) statement -> . if statement
    (16) statement -> . vars statement
    (17) statement -> . while statement
    (18) statement -> . for statement
    (19) statement -> . escritura statement
    (20) statement -> . escritura_var statement
    (21) statement -> . lectura statement
    (22) statement -> . func_call statement
    (23) statement -> . ID row SEMICOL
    (24) statement -> . ID matrix SEMICOL
    (25) statement -> . empty
    (26) asignacion -> . ID IS value
    (125) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (126) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (27) vars -> . VAR tipo vars1
    (28) vars -> . VAR tipo vars2
    (29) vars -> . VAR tipo vars3
    (30) vars -> . VAR tipo oper_aritmetica
    (31) vars -> . VAR tipo ID row SEMICOL
    (32) vars -> . VAR tipo ID matrix SEMICOL
    (33) vars -> . var_row
    (34) vars -> . var_row vars
    (35) vars -> . var_matrix
    (36) vars -> . var_matrix vars
    (37) vars -> . empty
    (135) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (136) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (145) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (146) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (147) escritura_var -> . PRINT LP any_var RP SEMICOL
    (152) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (153) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (101) func_call -> . ID LP RP SEMICOL
    (102) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (124) empty -> .
    (110) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (117) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 148
    IF              shift and go to state 150
    VAR             shift and go to state 151
    WHILE           shift and go to state 154
    FOR             shift and go to state 155
    PRINT           shift and go to state 156
    READ            shift and go to state 157
    RETURN          reduce using rule 124 (empty -> .)
    RB              reduce using rule 124 (empty -> .)

  ! ID              [ reduce using rule 124 (empty -> .) ]
  ! IF              [ reduce using rule 124 (empty -> .) ]
  ! VAR             [ reduce using rule 124 (empty -> .) ]
  ! WHILE           [ reduce using rule 124 (empty -> .) ]
  ! FOR             [ reduce using rule 124 (empty -> .) ]
  ! PRINT           [ reduce using rule 124 (empty -> .) ]
  ! READ            [ reduce using rule 124 (empty -> .) ]

    asignacion                     shift and go to state 139
    statement                      shift and go to state 209
    if                             shift and go to state 140
    vars                           shift and go to state 141
    while                          shift and go to state 142
    for                            shift and go to state 143
    escritura                      shift and go to state 144
    escritura_var                  shift and go to state 145
    lectura                        shift and go to state 146
    func_call                      shift and go to state 147
    empty                          shift and go to state 149
    var_row                        shift and go to state 152
    var_matrix                     shift and go to state 153

state 175

    (15) statement -> if statement .

    RETURN          reduce using rule 15 (statement -> if statement .)
    RB              reduce using rule 15 (statement -> if statement .)


state 176

    (16) statement -> vars statement .

    RETURN          reduce using rule 16 (statement -> vars statement .)
    RB              reduce using rule 16 (statement -> vars statement .)


state 177

    (17) statement -> while statement .

    RETURN          reduce using rule 17 (statement -> while statement .)
    RB              reduce using rule 17 (statement -> while statement .)


state 178

    (18) statement -> for statement .

    RETURN          reduce using rule 18 (statement -> for statement .)
    RB              reduce using rule 18 (statement -> for statement .)


state 179

    (19) statement -> escritura statement .

    RETURN          reduce using rule 19 (statement -> escritura statement .)
    RB              reduce using rule 19 (statement -> escritura statement .)


state 180

    (20) statement -> escritura_var statement .

    RETURN          reduce using rule 20 (statement -> escritura_var statement .)
    RB              reduce using rule 20 (statement -> escritura_var statement .)


state 181

    (21) statement -> lectura statement .

    RETURN          reduce using rule 21 (statement -> lectura statement .)
    RB              reduce using rule 21 (statement -> lectura statement .)


state 182

    (22) statement -> func_call statement .

    RETURN          reduce using rule 22 (statement -> func_call statement .)
    RB              reduce using rule 22 (statement -> func_call statement .)


state 183

    (23) statement -> ID row . SEMICOL
    (123) matrix -> row . row
    (116) row -> . LC CTE_I RC

    SEMICOL         shift and go to state 210
    LC              shift and go to state 64

    row                            shift and go to state 78

state 184

    (24) statement -> ID matrix . SEMICOL

    SEMICOL         shift and go to state 211


state 185

    (26) asignacion -> ID IS . value
    (74) value -> . CTE_F
    (75) value -> . CTE_I
    (76) value -> . ID
    (77) value -> . CTE_C
    (78) value -> . COMILLA ID COMILLA
    (79) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 82
    CTE_I           shift and go to state 83
    ID              shift and go to state 80
    CTE_C           shift and go to state 84
    COMILLA         shift and go to state 85
    COMILLAS        shift and go to state 86

    value                          shift and go to state 212

state 186

    (101) func_call -> ID LP . RP SEMICOL
    (102) func_call -> ID LP . func_era func_call_param RP SEMICOL
    (103) func_era -> .

    RP              shift and go to state 213
    CTE_I           reduce using rule 103 (func_era -> .)
    CTE_F           reduce using rule 103 (func_era -> .)
    ID              reduce using rule 103 (func_era -> .)

    func_era                       shift and go to state 214

state 187

    (125) if -> IF LP . expression RP check_bool gotof LB statement RB fill_if
    (126) if -> IF LP . expression RP check_bool gotof LB statement RB goto fill_gotof else
    (155) expression -> . var_gt
    (156) expression -> . var_lt
    (157) expression -> . var_equal
    (158) expression -> . var_neq
    (159) expression -> . var_geq
    (160) expression -> . var_leq
    (161) expression -> . expr
    (162) expression -> . TRUE
    (163) expression -> . FALSE
    (164) expression -> . ID
    (166) var_gt -> . expr GT expr
    (165) var_lt -> . expr LT expr
    (169) var_equal -> . expr EQUAL expr
    (170) var_neq -> . expr NEQ expr
    (168) var_geq -> . expr GEQ expr
    (167) var_leq -> . expr LEQ expr
    (172) expr -> . expr MUL expr
    (173) expr -> . expr DIV expr
    (174) expr -> . expr PLUS expr
    (175) expr -> . expr MINUS expr
    (176) expr -> . CTE_I
    (177) expr -> . CTE_F
    (178) expr -> . ID

    TRUE            shift and go to state 223
    FALSE           shift and go to state 224
    ID              shift and go to state 225
    CTE_I           shift and go to state 206
    CTE_F           shift and go to state 207

    expression                     shift and go to state 215
    var_gt                         shift and go to state 216
    var_lt                         shift and go to state 217
    var_equal                      shift and go to state 218
    var_neq                        shift and go to state 219
    var_geq                        shift and go to state 220
    var_leq                        shift and go to state 221
    expr                           shift and go to state 222

state 188

    (27) vars -> VAR tipo . vars1
    (28) vars -> VAR tipo . vars2
    (29) vars -> VAR tipo . vars3
    (30) vars -> VAR tipo . oper_aritmetica
    (31) vars -> VAR tipo . ID row SEMICOL
    (32) vars -> VAR tipo . ID matrix SEMICOL
    (110) var_row -> VAR tipo . ID row IS LP lista2 RP SEMICOL
    (117) var_matrix -> VAR tipo . ID matrix IS matrix2 SEMICOL
    (38) vars1 -> . ID SEMICOL
    (39) vars2 -> . vars2_1 ID IS value SEMICOL
    (43) vars2 -> . ID IS value SEMICOL
    (44) vars3 -> . vars3_1 ID SEMICOL
    (47) vars3 -> . ID SEMICOL
    (171) oper_aritmetica -> . ID IS expr SEMICOL
    (40) vars2_1 -> . vars2_1 ID IS value COMMA
    (41) vars2_1 -> . ID IS value COMMA
    (42) vars2_1 -> . empty
    (45) vars3_1 -> . vars3_1 ID COMMA
    (46) vars3_1 -> . ID COMMA
    (48) vars3_1 -> . empty
    (124) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 230

  ! ID              [ reduce using rule 124 (empty -> .) ]

    vars1                          shift and go to state 226
    vars2                          shift and go to state 227
    vars3                          shift and go to state 228
    oper_aritmetica                shift and go to state 229
    vars2_1                        shift and go to state 231
    vars3_1                        shift and go to state 232
    empty                          shift and go to state 233

state 189

    (34) vars -> var_row vars .

    ID              reduce using rule 34 (vars -> var_row vars .)
    IF              reduce using rule 34 (vars -> var_row vars .)
    VAR             reduce using rule 34 (vars -> var_row vars .)
    WHILE           reduce using rule 34 (vars -> var_row vars .)
    FOR             reduce using rule 34 (vars -> var_row vars .)
    PRINT           reduce using rule 34 (vars -> var_row vars .)
    READ            reduce using rule 34 (vars -> var_row vars .)
    RETURN          reduce using rule 34 (vars -> var_row vars .)
    RB              reduce using rule 34 (vars -> var_row vars .)


state 190

    (36) vars -> var_matrix vars .

    ID              reduce using rule 36 (vars -> var_matrix vars .)
    IF              reduce using rule 36 (vars -> var_matrix vars .)
    VAR             reduce using rule 36 (vars -> var_matrix vars .)
    WHILE           reduce using rule 36 (vars -> var_matrix vars .)
    FOR             reduce using rule 36 (vars -> var_matrix vars .)
    PRINT           reduce using rule 36 (vars -> var_matrix vars .)
    READ            reduce using rule 36 (vars -> var_matrix vars .)
    RETURN          reduce using rule 36 (vars -> var_matrix vars .)
    RB              reduce using rule 36 (vars -> var_matrix vars .)


state 191

    (135) while -> WHILE guarda_num_salto . LP expression RP check_bool gotof LB statement RB goto

    LP              shift and go to state 234


state 192

    (136) for -> FOR LP . VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto

    VAR             shift and go to state 235


state 193

    (145) escritura -> PRINT LP . COMILLA any COMILLA RP SEMICOL
    (146) escritura -> PRINT LP . COMILLAS any COMILLAS RP SEMICOL
    (147) escritura_var -> PRINT LP . any_var RP SEMICOL
    (148) any_var -> . ID

    COMILLA         shift and go to state 236
    COMILLAS        shift and go to state 237
    ID              shift and go to state 239

    any_var                        shift and go to state 238

state 194

    (152) lectura -> READ LP . COMILLA any_lectura COMILLA RP SEMICOL
    (153) lectura -> READ LP . COMILLAS any_lectura COMILLAS RP SEMICOL

    COMILLA         shift and go to state 240
    COMILLAS        shift and go to state 241


state 195

    (83) funcion -> tipo ID LP RP verificar2 LB var_func statement . add_func_dir2 func_return RB end_func
    (88) add_func_dir2 -> .

    RETURN          reduce using rule 88 (add_func_dir2 -> .)

    add_func_dir2                  shift and go to state 242

state 196

    (84) funcion -> tipo ID LP param RP verificar LB var_func . statement add_func_dir func_return_param RB end_func
    (14) statement -> . asignacion SEMICOL statement
    (15) statement -> . if statement
    (16) statement -> . vars statement
    (17) statement -> . while statement
    (18) statement -> . for statement
    (19) statement -> . escritura statement
    (20) statement -> . escritura_var statement
    (21) statement -> . lectura statement
    (22) statement -> . func_call statement
    (23) statement -> . ID row SEMICOL
    (24) statement -> . ID matrix SEMICOL
    (25) statement -> . empty
    (26) asignacion -> . ID IS value
    (125) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (126) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (27) vars -> . VAR tipo vars1
    (28) vars -> . VAR tipo vars2
    (29) vars -> . VAR tipo vars3
    (30) vars -> . VAR tipo oper_aritmetica
    (31) vars -> . VAR tipo ID row SEMICOL
    (32) vars -> . VAR tipo ID matrix SEMICOL
    (33) vars -> . var_row
    (34) vars -> . var_row vars
    (35) vars -> . var_matrix
    (36) vars -> . var_matrix vars
    (37) vars -> . empty
    (135) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (136) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (145) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (146) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (147) escritura_var -> . PRINT LP any_var RP SEMICOL
    (152) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (153) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (101) func_call -> . ID LP RP SEMICOL
    (102) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (124) empty -> .
    (110) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (117) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 148
    IF              shift and go to state 150
    VAR             shift and go to state 151
    WHILE           shift and go to state 154
    FOR             shift and go to state 155
    PRINT           shift and go to state 156
    READ            shift and go to state 157
    RETURN          reduce using rule 124 (empty -> .)

  ! ID              [ reduce using rule 124 (empty -> .) ]
  ! IF              [ reduce using rule 124 (empty -> .) ]
  ! VAR             [ reduce using rule 124 (empty -> .) ]
  ! WHILE           [ reduce using rule 124 (empty -> .) ]
  ! FOR             [ reduce using rule 124 (empty -> .) ]
  ! PRINT           [ reduce using rule 124 (empty -> .) ]
  ! READ            [ reduce using rule 124 (empty -> .) ]

    statement                      shift and go to state 243
    asignacion                     shift and go to state 139
    if                             shift and go to state 140
    vars                           shift and go to state 141
    while                          shift and go to state 142
    for                            shift and go to state 143
    escritura                      shift and go to state 144
    escritura_var                  shift and go to state 145
    lectura                        shift and go to state 146
    func_call                      shift and go to state 147
    empty                          shift and go to state 149
    var_row                        shift and go to state 152
    var_matrix                     shift and go to state 153

state 197

    (12) main -> VOID MAIN quad_main LP RP LB statement RB .

    $end            reduce using rule 12 (main -> VOID MAIN quad_main LP RP LB statement RB .)
    VOID            reduce using rule 12 (main -> VOID MAIN quad_main LP RP LB statement RB .)
    INT             reduce using rule 12 (main -> VOID MAIN quad_main LP RP LB statement RB .)
    FLOAT           reduce using rule 12 (main -> VOID MAIN quad_main LP RP LB statement RB .)
    CHAR            reduce using rule 12 (main -> VOID MAIN quad_main LP RP LB statement RB .)


state 198

    (81) funcion -> VOID ID LP param RP verificar LB var_func . statement RB end_func
    (14) statement -> . asignacion SEMICOL statement
    (15) statement -> . if statement
    (16) statement -> . vars statement
    (17) statement -> . while statement
    (18) statement -> . for statement
    (19) statement -> . escritura statement
    (20) statement -> . escritura_var statement
    (21) statement -> . lectura statement
    (22) statement -> . func_call statement
    (23) statement -> . ID row SEMICOL
    (24) statement -> . ID matrix SEMICOL
    (25) statement -> . empty
    (26) asignacion -> . ID IS value
    (125) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (126) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (27) vars -> . VAR tipo vars1
    (28) vars -> . VAR tipo vars2
    (29) vars -> . VAR tipo vars3
    (30) vars -> . VAR tipo oper_aritmetica
    (31) vars -> . VAR tipo ID row SEMICOL
    (32) vars -> . VAR tipo ID matrix SEMICOL
    (33) vars -> . var_row
    (34) vars -> . var_row vars
    (35) vars -> . var_matrix
    (36) vars -> . var_matrix vars
    (37) vars -> . empty
    (135) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (136) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (145) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (146) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (147) escritura_var -> . PRINT LP any_var RP SEMICOL
    (152) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (153) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (101) func_call -> . ID LP RP SEMICOL
    (102) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (124) empty -> .
    (110) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (117) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 148
    IF              shift and go to state 150
    VAR             shift and go to state 151
    WHILE           shift and go to state 154
    FOR             shift and go to state 155
    PRINT           shift and go to state 156
    READ            shift and go to state 157
    RB              reduce using rule 124 (empty -> .)

  ! ID              [ reduce using rule 124 (empty -> .) ]
  ! IF              [ reduce using rule 124 (empty -> .) ]
  ! VAR             [ reduce using rule 124 (empty -> .) ]
  ! WHILE           [ reduce using rule 124 (empty -> .) ]
  ! FOR             [ reduce using rule 124 (empty -> .) ]
  ! PRINT           [ reduce using rule 124 (empty -> .) ]
  ! READ            [ reduce using rule 124 (empty -> .) ]

    statement                      shift and go to state 244
    asignacion                     shift and go to state 139
    if                             shift and go to state 140
    vars                           shift and go to state 141
    while                          shift and go to state 142
    for                            shift and go to state 143
    escritura                      shift and go to state 144
    escritura_var                  shift and go to state 145
    lectura                        shift and go to state 146
    func_call                      shift and go to state 147
    empty                          shift and go to state 149
    var_row                        shift and go to state 152
    var_matrix                     shift and go to state 153

state 199

    (82) funcion -> VOID ID LP RP verificar2 LB var_func statement . RB end_func

    RB              shift and go to state 245


state 200

    (111) var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .

    VAR             reduce using rule 111 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    FUNC            reduce using rule 111 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    VOID            reduce using rule 111 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    INT             reduce using rule 111 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    FLOAT           reduce using rule 111 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    CHAR            reduce using rule 111 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    $end            reduce using rule 111 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    RB              reduce using rule 111 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)


state 201

    (115) lista2 -> elem_lista COMMA elem_lista .
    (114) lista2 -> elem_lista . COMMA lista2
    (115) lista2 -> elem_lista . COMMA elem_lista

    RP              reduce using rule 115 (lista2 -> elem_lista COMMA elem_lista .)
    COMMA           shift and go to state 170


state 202

    (114) lista2 -> elem_lista COMMA lista2 .

    RP              reduce using rule 114 (lista2 -> elem_lista COMMA lista2 .)


state 203

    (119) matrix2 -> LP lista2 RP COMMA . matrix2
    (120) matrix2 -> LP lista2 RP COMMA . LP lista2 RP
    (119) matrix2 -> . LP lista2 RP COMMA matrix2
    (120) matrix2 -> . LP lista2 RP COMMA LP lista2 RP

    LP              shift and go to state 246

    matrix2                        shift and go to state 247

state 204

    (11) main -> tipo MAIN quad_main LP RP LB statement func_return_main RB . end_main
    (109) end_main -> .

    $end            reduce using rule 109 (end_main -> .)
    VOID            reduce using rule 109 (end_main -> .)
    INT             reduce using rule 109 (end_main -> .)
    FLOAT           reduce using rule 109 (end_main -> .)
    CHAR            reduce using rule 109 (end_main -> .)

    end_main                       shift and go to state 248

state 205

    (108) func_return_main -> RETURN expr . SEMICOL
    (172) expr -> expr . MUL expr
    (173) expr -> expr . DIV expr
    (174) expr -> expr . PLUS expr
    (175) expr -> expr . MINUS expr

    SEMICOL         shift and go to state 249
    MUL             shift and go to state 250
    DIV             shift and go to state 251
    PLUS            shift and go to state 252
    MINUS           shift and go to state 253


state 206

    (176) expr -> CTE_I .

    SEMICOL         reduce using rule 176 (expr -> CTE_I .)
    MUL             reduce using rule 176 (expr -> CTE_I .)
    DIV             reduce using rule 176 (expr -> CTE_I .)
    PLUS            reduce using rule 176 (expr -> CTE_I .)
    MINUS           reduce using rule 176 (expr -> CTE_I .)
    GT              reduce using rule 176 (expr -> CTE_I .)
    LT              reduce using rule 176 (expr -> CTE_I .)
    EQUAL           reduce using rule 176 (expr -> CTE_I .)
    NEQ             reduce using rule 176 (expr -> CTE_I .)
    GEQ             reduce using rule 176 (expr -> CTE_I .)
    LEQ             reduce using rule 176 (expr -> CTE_I .)
    RP              reduce using rule 176 (expr -> CTE_I .)
    COMMA           reduce using rule 176 (expr -> CTE_I .)
    CTE_I           reduce using rule 176 (expr -> CTE_I .)
    CTE_F           reduce using rule 176 (expr -> CTE_I .)
    ID              reduce using rule 176 (expr -> CTE_I .)
    TRUE            reduce using rule 176 (expr -> CTE_I .)
    FALSE           reduce using rule 176 (expr -> CTE_I .)
    COMILLA         reduce using rule 176 (expr -> CTE_I .)
    COMILLAS        reduce using rule 176 (expr -> CTE_I .)


state 207

    (177) expr -> CTE_F .

    SEMICOL         reduce using rule 177 (expr -> CTE_F .)
    MUL             reduce using rule 177 (expr -> CTE_F .)
    DIV             reduce using rule 177 (expr -> CTE_F .)
    PLUS            reduce using rule 177 (expr -> CTE_F .)
    MINUS           reduce using rule 177 (expr -> CTE_F .)
    GT              reduce using rule 177 (expr -> CTE_F .)
    LT              reduce using rule 177 (expr -> CTE_F .)
    EQUAL           reduce using rule 177 (expr -> CTE_F .)
    NEQ             reduce using rule 177 (expr -> CTE_F .)
    GEQ             reduce using rule 177 (expr -> CTE_F .)
    LEQ             reduce using rule 177 (expr -> CTE_F .)
    RP              reduce using rule 177 (expr -> CTE_F .)
    COMMA           reduce using rule 177 (expr -> CTE_F .)
    CTE_I           reduce using rule 177 (expr -> CTE_F .)
    CTE_F           reduce using rule 177 (expr -> CTE_F .)
    ID              reduce using rule 177 (expr -> CTE_F .)
    TRUE            reduce using rule 177 (expr -> CTE_F .)
    FALSE           reduce using rule 177 (expr -> CTE_F .)
    COMILLA         reduce using rule 177 (expr -> CTE_F .)
    COMILLAS        reduce using rule 177 (expr -> CTE_F .)


state 208

    (178) expr -> ID .

    SEMICOL         reduce using rule 178 (expr -> ID .)
    MUL             reduce using rule 178 (expr -> ID .)
    DIV             reduce using rule 178 (expr -> ID .)
    PLUS            reduce using rule 178 (expr -> ID .)
    MINUS           reduce using rule 178 (expr -> ID .)
    RP              reduce using rule 178 (expr -> ID .)
    COMMA           reduce using rule 178 (expr -> ID .)
    GT              reduce using rule 178 (expr -> ID .)
    LT              reduce using rule 178 (expr -> ID .)
    EQUAL           reduce using rule 178 (expr -> ID .)
    NEQ             reduce using rule 178 (expr -> ID .)
    GEQ             reduce using rule 178 (expr -> ID .)
    LEQ             reduce using rule 178 (expr -> ID .)
    CTE_I           reduce using rule 178 (expr -> ID .)
    CTE_F           reduce using rule 178 (expr -> ID .)
    ID              reduce using rule 178 (expr -> ID .)
    TRUE            reduce using rule 178 (expr -> ID .)
    FALSE           reduce using rule 178 (expr -> ID .)
    COMILLA         reduce using rule 178 (expr -> ID .)
    COMILLAS        reduce using rule 178 (expr -> ID .)


state 209

    (14) statement -> asignacion SEMICOL statement .

    RETURN          reduce using rule 14 (statement -> asignacion SEMICOL statement .)
    RB              reduce using rule 14 (statement -> asignacion SEMICOL statement .)


state 210

    (23) statement -> ID row SEMICOL .

    RETURN          reduce using rule 23 (statement -> ID row SEMICOL .)
    RB              reduce using rule 23 (statement -> ID row SEMICOL .)


state 211

    (24) statement -> ID matrix SEMICOL .

    RETURN          reduce using rule 24 (statement -> ID matrix SEMICOL .)
    RB              reduce using rule 24 (statement -> ID matrix SEMICOL .)


state 212

    (26) asignacion -> ID IS value .

    SEMICOL         reduce using rule 26 (asignacion -> ID IS value .)


state 213

    (101) func_call -> ID LP RP . SEMICOL

    SEMICOL         shift and go to state 254


state 214

    (102) func_call -> ID LP func_era . func_call_param RP SEMICOL
    (104) func_call_param -> . expr
    (105) func_call_param -> . func_call_param COMMA expr
    (172) expr -> . expr MUL expr
    (173) expr -> . expr DIV expr
    (174) expr -> . expr PLUS expr
    (175) expr -> . expr MINUS expr
    (176) expr -> . CTE_I
    (177) expr -> . CTE_F
    (178) expr -> . ID

    CTE_I           shift and go to state 206
    CTE_F           shift and go to state 207
    ID              shift and go to state 208

    func_call_param                shift and go to state 255
    expr                           shift and go to state 256

state 215

    (125) if -> IF LP expression . RP check_bool gotof LB statement RB fill_if
    (126) if -> IF LP expression . RP check_bool gotof LB statement RB goto fill_gotof else

    RP              shift and go to state 257


state 216

    (155) expression -> var_gt .

    RP              reduce using rule 155 (expression -> var_gt .)
    CTE_I           reduce using rule 155 (expression -> var_gt .)
    CTE_F           reduce using rule 155 (expression -> var_gt .)
    ID              reduce using rule 155 (expression -> var_gt .)
    TRUE            reduce using rule 155 (expression -> var_gt .)
    FALSE           reduce using rule 155 (expression -> var_gt .)
    COMILLA         reduce using rule 155 (expression -> var_gt .)
    COMILLAS        reduce using rule 155 (expression -> var_gt .)
    SEMICOL         reduce using rule 155 (expression -> var_gt .)


state 217

    (156) expression -> var_lt .

    RP              reduce using rule 156 (expression -> var_lt .)
    CTE_I           reduce using rule 156 (expression -> var_lt .)
    CTE_F           reduce using rule 156 (expression -> var_lt .)
    ID              reduce using rule 156 (expression -> var_lt .)
    TRUE            reduce using rule 156 (expression -> var_lt .)
    FALSE           reduce using rule 156 (expression -> var_lt .)
    COMILLA         reduce using rule 156 (expression -> var_lt .)
    COMILLAS        reduce using rule 156 (expression -> var_lt .)
    SEMICOL         reduce using rule 156 (expression -> var_lt .)


state 218

    (157) expression -> var_equal .

    RP              reduce using rule 157 (expression -> var_equal .)
    CTE_I           reduce using rule 157 (expression -> var_equal .)
    CTE_F           reduce using rule 157 (expression -> var_equal .)
    ID              reduce using rule 157 (expression -> var_equal .)
    TRUE            reduce using rule 157 (expression -> var_equal .)
    FALSE           reduce using rule 157 (expression -> var_equal .)
    COMILLA         reduce using rule 157 (expression -> var_equal .)
    COMILLAS        reduce using rule 157 (expression -> var_equal .)
    SEMICOL         reduce using rule 157 (expression -> var_equal .)


state 219

    (158) expression -> var_neq .

    RP              reduce using rule 158 (expression -> var_neq .)
    CTE_I           reduce using rule 158 (expression -> var_neq .)
    CTE_F           reduce using rule 158 (expression -> var_neq .)
    ID              reduce using rule 158 (expression -> var_neq .)
    TRUE            reduce using rule 158 (expression -> var_neq .)
    FALSE           reduce using rule 158 (expression -> var_neq .)
    COMILLA         reduce using rule 158 (expression -> var_neq .)
    COMILLAS        reduce using rule 158 (expression -> var_neq .)
    SEMICOL         reduce using rule 158 (expression -> var_neq .)


state 220

    (159) expression -> var_geq .

    RP              reduce using rule 159 (expression -> var_geq .)
    CTE_I           reduce using rule 159 (expression -> var_geq .)
    CTE_F           reduce using rule 159 (expression -> var_geq .)
    ID              reduce using rule 159 (expression -> var_geq .)
    TRUE            reduce using rule 159 (expression -> var_geq .)
    FALSE           reduce using rule 159 (expression -> var_geq .)
    COMILLA         reduce using rule 159 (expression -> var_geq .)
    COMILLAS        reduce using rule 159 (expression -> var_geq .)
    SEMICOL         reduce using rule 159 (expression -> var_geq .)


state 221

    (160) expression -> var_leq .

    RP              reduce using rule 160 (expression -> var_leq .)
    CTE_I           reduce using rule 160 (expression -> var_leq .)
    CTE_F           reduce using rule 160 (expression -> var_leq .)
    ID              reduce using rule 160 (expression -> var_leq .)
    TRUE            reduce using rule 160 (expression -> var_leq .)
    FALSE           reduce using rule 160 (expression -> var_leq .)
    COMILLA         reduce using rule 160 (expression -> var_leq .)
    COMILLAS        reduce using rule 160 (expression -> var_leq .)
    SEMICOL         reduce using rule 160 (expression -> var_leq .)


state 222

    (161) expression -> expr .
    (166) var_gt -> expr . GT expr
    (165) var_lt -> expr . LT expr
    (169) var_equal -> expr . EQUAL expr
    (170) var_neq -> expr . NEQ expr
    (168) var_geq -> expr . GEQ expr
    (167) var_leq -> expr . LEQ expr
    (172) expr -> expr . MUL expr
    (173) expr -> expr . DIV expr
    (174) expr -> expr . PLUS expr
    (175) expr -> expr . MINUS expr

    RP              reduce using rule 161 (expression -> expr .)
    SEMICOL         reduce using rule 161 (expression -> expr .)
    GT              shift and go to state 258
    LT              shift and go to state 259
    EQUAL           shift and go to state 260
    NEQ             shift and go to state 261
    GEQ             shift and go to state 262
    LEQ             shift and go to state 263
    MUL             shift and go to state 250
    DIV             shift and go to state 251
    PLUS            shift and go to state 252
    MINUS           shift and go to state 253


state 223

    (162) expression -> TRUE .

    RP              reduce using rule 162 (expression -> TRUE .)
    CTE_I           reduce using rule 162 (expression -> TRUE .)
    CTE_F           reduce using rule 162 (expression -> TRUE .)
    ID              reduce using rule 162 (expression -> TRUE .)
    TRUE            reduce using rule 162 (expression -> TRUE .)
    FALSE           reduce using rule 162 (expression -> TRUE .)
    COMILLA         reduce using rule 162 (expression -> TRUE .)
    COMILLAS        reduce using rule 162 (expression -> TRUE .)
    SEMICOL         reduce using rule 162 (expression -> TRUE .)


state 224

    (163) expression -> FALSE .

    RP              reduce using rule 163 (expression -> FALSE .)
    CTE_I           reduce using rule 163 (expression -> FALSE .)
    CTE_F           reduce using rule 163 (expression -> FALSE .)
    ID              reduce using rule 163 (expression -> FALSE .)
    TRUE            reduce using rule 163 (expression -> FALSE .)
    FALSE           reduce using rule 163 (expression -> FALSE .)
    COMILLA         reduce using rule 163 (expression -> FALSE .)
    COMILLAS        reduce using rule 163 (expression -> FALSE .)
    SEMICOL         reduce using rule 163 (expression -> FALSE .)


state 225

    (164) expression -> ID .
    (178) expr -> ID .

  ! reduce/reduce conflict for RP resolved using rule 164 (expression -> ID .)
  ! reduce/reduce conflict for SEMICOL resolved using rule 164 (expression -> ID .)
    RP              reduce using rule 164 (expression -> ID .)
    SEMICOL         reduce using rule 164 (expression -> ID .)
    GT              reduce using rule 178 (expr -> ID .)
    LT              reduce using rule 178 (expr -> ID .)
    EQUAL           reduce using rule 178 (expr -> ID .)
    NEQ             reduce using rule 178 (expr -> ID .)
    GEQ             reduce using rule 178 (expr -> ID .)
    LEQ             reduce using rule 178 (expr -> ID .)
    MUL             reduce using rule 178 (expr -> ID .)
    DIV             reduce using rule 178 (expr -> ID .)
    PLUS            reduce using rule 178 (expr -> ID .)
    MINUS           reduce using rule 178 (expr -> ID .)

  ! RP              [ reduce using rule 178 (expr -> ID .) ]
  ! SEMICOL         [ reduce using rule 178 (expr -> ID .) ]


state 226

    (27) vars -> VAR tipo vars1 .

    ID              reduce using rule 27 (vars -> VAR tipo vars1 .)
    IF              reduce using rule 27 (vars -> VAR tipo vars1 .)
    VAR             reduce using rule 27 (vars -> VAR tipo vars1 .)
    WHILE           reduce using rule 27 (vars -> VAR tipo vars1 .)
    FOR             reduce using rule 27 (vars -> VAR tipo vars1 .)
    PRINT           reduce using rule 27 (vars -> VAR tipo vars1 .)
    READ            reduce using rule 27 (vars -> VAR tipo vars1 .)
    RETURN          reduce using rule 27 (vars -> VAR tipo vars1 .)
    RB              reduce using rule 27 (vars -> VAR tipo vars1 .)


state 227

    (28) vars -> VAR tipo vars2 .

    ID              reduce using rule 28 (vars -> VAR tipo vars2 .)
    IF              reduce using rule 28 (vars -> VAR tipo vars2 .)
    VAR             reduce using rule 28 (vars -> VAR tipo vars2 .)
    WHILE           reduce using rule 28 (vars -> VAR tipo vars2 .)
    FOR             reduce using rule 28 (vars -> VAR tipo vars2 .)
    PRINT           reduce using rule 28 (vars -> VAR tipo vars2 .)
    READ            reduce using rule 28 (vars -> VAR tipo vars2 .)
    RETURN          reduce using rule 28 (vars -> VAR tipo vars2 .)
    RB              reduce using rule 28 (vars -> VAR tipo vars2 .)


state 228

    (29) vars -> VAR tipo vars3 .

    ID              reduce using rule 29 (vars -> VAR tipo vars3 .)
    IF              reduce using rule 29 (vars -> VAR tipo vars3 .)
    VAR             reduce using rule 29 (vars -> VAR tipo vars3 .)
    WHILE           reduce using rule 29 (vars -> VAR tipo vars3 .)
    FOR             reduce using rule 29 (vars -> VAR tipo vars3 .)
    PRINT           reduce using rule 29 (vars -> VAR tipo vars3 .)
    READ            reduce using rule 29 (vars -> VAR tipo vars3 .)
    RETURN          reduce using rule 29 (vars -> VAR tipo vars3 .)
    RB              reduce using rule 29 (vars -> VAR tipo vars3 .)


state 229

    (30) vars -> VAR tipo oper_aritmetica .

    ID              reduce using rule 30 (vars -> VAR tipo oper_aritmetica .)
    IF              reduce using rule 30 (vars -> VAR tipo oper_aritmetica .)
    VAR             reduce using rule 30 (vars -> VAR tipo oper_aritmetica .)
    WHILE           reduce using rule 30 (vars -> VAR tipo oper_aritmetica .)
    FOR             reduce using rule 30 (vars -> VAR tipo oper_aritmetica .)
    PRINT           reduce using rule 30 (vars -> VAR tipo oper_aritmetica .)
    READ            reduce using rule 30 (vars -> VAR tipo oper_aritmetica .)
    RETURN          reduce using rule 30 (vars -> VAR tipo oper_aritmetica .)
    RB              reduce using rule 30 (vars -> VAR tipo oper_aritmetica .)


state 230

    (31) vars -> VAR tipo ID . row SEMICOL
    (32) vars -> VAR tipo ID . matrix SEMICOL
    (110) var_row -> VAR tipo ID . row IS LP lista2 RP SEMICOL
    (117) var_matrix -> VAR tipo ID . matrix IS matrix2 SEMICOL
    (38) vars1 -> ID . SEMICOL
    (43) vars2 -> ID . IS value SEMICOL
    (47) vars3 -> ID . SEMICOL
    (171) oper_aritmetica -> ID . IS expr SEMICOL
    (41) vars2_1 -> ID . IS value COMMA
    (46) vars3_1 -> ID . COMMA
    (116) row -> . LC CTE_I RC
    (123) matrix -> . row row

    SEMICOL         shift and go to state 265
    IS              shift and go to state 267
    COMMA           shift and go to state 268
    LC              shift and go to state 64

    row                            shift and go to state 264
    matrix                         shift and go to state 266

state 231

    (39) vars2 -> vars2_1 . ID IS value SEMICOL
    (40) vars2_1 -> vars2_1 . ID IS value COMMA

    ID              shift and go to state 269


state 232

    (44) vars3 -> vars3_1 . ID SEMICOL
    (45) vars3_1 -> vars3_1 . ID COMMA

    ID              shift and go to state 270


state 233

    (42) vars2_1 -> empty .
    (48) vars3_1 -> empty .

  ! reduce/reduce conflict for ID resolved using rule 42 (vars2_1 -> empty .)
    ID              reduce using rule 42 (vars2_1 -> empty .)

  ! ID              [ reduce using rule 48 (vars3_1 -> empty .) ]


state 234

    (135) while -> WHILE guarda_num_salto LP . expression RP check_bool gotof LB statement RB goto
    (155) expression -> . var_gt
    (156) expression -> . var_lt
    (157) expression -> . var_equal
    (158) expression -> . var_neq
    (159) expression -> . var_geq
    (160) expression -> . var_leq
    (161) expression -> . expr
    (162) expression -> . TRUE
    (163) expression -> . FALSE
    (164) expression -> . ID
    (166) var_gt -> . expr GT expr
    (165) var_lt -> . expr LT expr
    (169) var_equal -> . expr EQUAL expr
    (170) var_neq -> . expr NEQ expr
    (168) var_geq -> . expr GEQ expr
    (167) var_leq -> . expr LEQ expr
    (172) expr -> . expr MUL expr
    (173) expr -> . expr DIV expr
    (174) expr -> . expr PLUS expr
    (175) expr -> . expr MINUS expr
    (176) expr -> . CTE_I
    (177) expr -> . CTE_F
    (178) expr -> . ID

    TRUE            shift and go to state 223
    FALSE           shift and go to state 224
    ID              shift and go to state 225
    CTE_I           shift and go to state 206
    CTE_F           shift and go to state 207

    expression                     shift and go to state 271
    var_gt                         shift and go to state 216
    var_lt                         shift and go to state 217
    var_equal                      shift and go to state 218
    var_neq                        shift and go to state 219
    var_geq                        shift and go to state 220
    var_leq                        shift and go to state 221
    expr                           shift and go to state 222

state 235

    (136) for -> FOR LP VAR . tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (71) tipo -> . INT
    (72) tipo -> . FLOAT
    (73) tipo -> . CHAR

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    tipo                           shift and go to state 272

state 236

    (145) escritura -> PRINT LP COMILLA . any COMILLA RP SEMICOL
    (149) any -> . expr any
    (150) any -> . expression any
    (151) any -> . empty
    (172) expr -> . expr MUL expr
    (173) expr -> . expr DIV expr
    (174) expr -> . expr PLUS expr
    (175) expr -> . expr MINUS expr
    (176) expr -> . CTE_I
    (177) expr -> . CTE_F
    (178) expr -> . ID
    (155) expression -> . var_gt
    (156) expression -> . var_lt
    (157) expression -> . var_equal
    (158) expression -> . var_neq
    (159) expression -> . var_geq
    (160) expression -> . var_leq
    (161) expression -> . expr
    (162) expression -> . TRUE
    (163) expression -> . FALSE
    (164) expression -> . ID
    (124) empty -> .
    (166) var_gt -> . expr GT expr
    (165) var_lt -> . expr LT expr
    (169) var_equal -> . expr EQUAL expr
    (170) var_neq -> . expr NEQ expr
    (168) var_geq -> . expr GEQ expr
    (167) var_leq -> . expr LEQ expr

    CTE_I           shift and go to state 206
    CTE_F           shift and go to state 207
    ID              shift and go to state 277
    TRUE            shift and go to state 223
    FALSE           shift and go to state 224
    COMILLA         reduce using rule 124 (empty -> .)

    any                            shift and go to state 273
    expr                           shift and go to state 274
    expression                     shift and go to state 275
    empty                          shift and go to state 276
    var_gt                         shift and go to state 216
    var_lt                         shift and go to state 217
    var_equal                      shift and go to state 218
    var_neq                        shift and go to state 219
    var_geq                        shift and go to state 220
    var_leq                        shift and go to state 221

state 237

    (146) escritura -> PRINT LP COMILLAS . any COMILLAS RP SEMICOL
    (149) any -> . expr any
    (150) any -> . expression any
    (151) any -> . empty
    (172) expr -> . expr MUL expr
    (173) expr -> . expr DIV expr
    (174) expr -> . expr PLUS expr
    (175) expr -> . expr MINUS expr
    (176) expr -> . CTE_I
    (177) expr -> . CTE_F
    (178) expr -> . ID
    (155) expression -> . var_gt
    (156) expression -> . var_lt
    (157) expression -> . var_equal
    (158) expression -> . var_neq
    (159) expression -> . var_geq
    (160) expression -> . var_leq
    (161) expression -> . expr
    (162) expression -> . TRUE
    (163) expression -> . FALSE
    (164) expression -> . ID
    (124) empty -> .
    (166) var_gt -> . expr GT expr
    (165) var_lt -> . expr LT expr
    (169) var_equal -> . expr EQUAL expr
    (170) var_neq -> . expr NEQ expr
    (168) var_geq -> . expr GEQ expr
    (167) var_leq -> . expr LEQ expr

    CTE_I           shift and go to state 206
    CTE_F           shift and go to state 207
    ID              shift and go to state 277
    TRUE            shift and go to state 223
    FALSE           shift and go to state 224
    COMILLAS        reduce using rule 124 (empty -> .)

    any                            shift and go to state 278
    expr                           shift and go to state 274
    expression                     shift and go to state 275
    empty                          shift and go to state 276
    var_gt                         shift and go to state 216
    var_lt                         shift and go to state 217
    var_equal                      shift and go to state 218
    var_neq                        shift and go to state 219
    var_geq                        shift and go to state 220
    var_leq                        shift and go to state 221

state 238

    (147) escritura_var -> PRINT LP any_var . RP SEMICOL

    RP              shift and go to state 279


state 239

    (148) any_var -> ID .

    RP              reduce using rule 148 (any_var -> ID .)


state 240

    (152) lectura -> READ LP COMILLA . any_lectura COMILLA RP SEMICOL
    (154) any_lectura -> . ID

    ID              shift and go to state 281

    any_lectura                    shift and go to state 280

state 241

    (153) lectura -> READ LP COMILLAS . any_lectura COMILLAS RP SEMICOL
    (154) any_lectura -> . ID

    ID              shift and go to state 281

    any_lectura                    shift and go to state 282

state 242

    (83) funcion -> tipo ID LP RP verificar2 LB var_func statement add_func_dir2 . func_return RB end_func
    (106) func_return -> . RETURN expr SEMICOL

    RETURN          shift and go to state 284

    func_return                    shift and go to state 283

state 243

    (84) funcion -> tipo ID LP param RP verificar LB var_func statement . add_func_dir func_return_param RB end_func
    (87) add_func_dir -> .

    RETURN          reduce using rule 87 (add_func_dir -> .)

    add_func_dir                   shift and go to state 285

state 244

    (81) funcion -> VOID ID LP param RP verificar LB var_func statement . RB end_func

    RB              shift and go to state 286


state 245

    (82) funcion -> VOID ID LP RP verificar2 LB var_func statement RB . end_func
    (100) end_func -> .

    VOID            reduce using rule 100 (end_func -> .)
    INT             reduce using rule 100 (end_func -> .)
    FLOAT           reduce using rule 100 (end_func -> .)
    CHAR            reduce using rule 100 (end_func -> .)
    $end            reduce using rule 100 (end_func -> .)

    end_func                       shift and go to state 287

state 246

    (120) matrix2 -> LP lista2 RP COMMA LP . lista2 RP
    (119) matrix2 -> LP . lista2 RP COMMA matrix2
    (120) matrix2 -> LP . lista2 RP COMMA LP lista2 RP
    (114) lista2 -> . elem_lista COMMA lista2
    (115) lista2 -> . elem_lista COMMA elem_lista
    (112) elem_lista -> . value
    (113) elem_lista -> . empty
    (74) value -> . CTE_F
    (75) value -> . CTE_I
    (76) value -> . ID
    (77) value -> . CTE_C
    (78) value -> . COMILLA ID COMILLA
    (79) value -> . COMILLAS ID COMILLAS
    (124) empty -> .

    CTE_F           shift and go to state 82
    CTE_I           shift and go to state 83
    ID              shift and go to state 80
    CTE_C           shift and go to state 84
    COMILLA         shift and go to state 85
    COMILLAS        shift and go to state 86
    COMMA           reduce using rule 124 (empty -> .)

    lista2                         shift and go to state 288
    elem_lista                     shift and go to state 129
    value                          shift and go to state 130
    empty                          shift and go to state 131

state 247

    (119) matrix2 -> LP lista2 RP COMMA matrix2 .

    SEMICOL         reduce using rule 119 (matrix2 -> LP lista2 RP COMMA matrix2 .)


state 248

    (11) main -> tipo MAIN quad_main LP RP LB statement func_return_main RB end_main .

    $end            reduce using rule 11 (main -> tipo MAIN quad_main LP RP LB statement func_return_main RB end_main .)
    VOID            reduce using rule 11 (main -> tipo MAIN quad_main LP RP LB statement func_return_main RB end_main .)
    INT             reduce using rule 11 (main -> tipo MAIN quad_main LP RP LB statement func_return_main RB end_main .)
    FLOAT           reduce using rule 11 (main -> tipo MAIN quad_main LP RP LB statement func_return_main RB end_main .)
    CHAR            reduce using rule 11 (main -> tipo MAIN quad_main LP RP LB statement func_return_main RB end_main .)


state 249

    (108) func_return_main -> RETURN expr SEMICOL .

    RB              reduce using rule 108 (func_return_main -> RETURN expr SEMICOL .)


state 250

    (172) expr -> expr MUL . expr
    (172) expr -> . expr MUL expr
    (173) expr -> . expr DIV expr
    (174) expr -> . expr PLUS expr
    (175) expr -> . expr MINUS expr
    (176) expr -> . CTE_I
    (177) expr -> . CTE_F
    (178) expr -> . ID

    CTE_I           shift and go to state 206
    CTE_F           shift and go to state 207
    ID              shift and go to state 208

    expr                           shift and go to state 289

state 251

    (173) expr -> expr DIV . expr
    (172) expr -> . expr MUL expr
    (173) expr -> . expr DIV expr
    (174) expr -> . expr PLUS expr
    (175) expr -> . expr MINUS expr
    (176) expr -> . CTE_I
    (177) expr -> . CTE_F
    (178) expr -> . ID

    CTE_I           shift and go to state 206
    CTE_F           shift and go to state 207
    ID              shift and go to state 208

    expr                           shift and go to state 290

state 252

    (174) expr -> expr PLUS . expr
    (172) expr -> . expr MUL expr
    (173) expr -> . expr DIV expr
    (174) expr -> . expr PLUS expr
    (175) expr -> . expr MINUS expr
    (176) expr -> . CTE_I
    (177) expr -> . CTE_F
    (178) expr -> . ID

    CTE_I           shift and go to state 206
    CTE_F           shift and go to state 207
    ID              shift and go to state 208

    expr                           shift and go to state 291

state 253

    (175) expr -> expr MINUS . expr
    (172) expr -> . expr MUL expr
    (173) expr -> . expr DIV expr
    (174) expr -> . expr PLUS expr
    (175) expr -> . expr MINUS expr
    (176) expr -> . CTE_I
    (177) expr -> . CTE_F
    (178) expr -> . ID

    CTE_I           shift and go to state 206
    CTE_F           shift and go to state 207
    ID              shift and go to state 208

    expr                           shift and go to state 292

state 254

    (101) func_call -> ID LP RP SEMICOL .

    ID              reduce using rule 101 (func_call -> ID LP RP SEMICOL .)
    IF              reduce using rule 101 (func_call -> ID LP RP SEMICOL .)
    VAR             reduce using rule 101 (func_call -> ID LP RP SEMICOL .)
    WHILE           reduce using rule 101 (func_call -> ID LP RP SEMICOL .)
    FOR             reduce using rule 101 (func_call -> ID LP RP SEMICOL .)
    PRINT           reduce using rule 101 (func_call -> ID LP RP SEMICOL .)
    READ            reduce using rule 101 (func_call -> ID LP RP SEMICOL .)
    RETURN          reduce using rule 101 (func_call -> ID LP RP SEMICOL .)
    RB              reduce using rule 101 (func_call -> ID LP RP SEMICOL .)


state 255

    (102) func_call -> ID LP func_era func_call_param . RP SEMICOL
    (105) func_call_param -> func_call_param . COMMA expr

    RP              shift and go to state 293
    COMMA           shift and go to state 294


state 256

    (104) func_call_param -> expr .
    (172) expr -> expr . MUL expr
    (173) expr -> expr . DIV expr
    (174) expr -> expr . PLUS expr
    (175) expr -> expr . MINUS expr

    RP              reduce using rule 104 (func_call_param -> expr .)
    COMMA           reduce using rule 104 (func_call_param -> expr .)
    MUL             shift and go to state 250
    DIV             shift and go to state 251
    PLUS            shift and go to state 252
    MINUS           shift and go to state 253


state 257

    (125) if -> IF LP expression RP . check_bool gotof LB statement RB fill_if
    (126) if -> IF LP expression RP . check_bool gotof LB statement RB goto fill_gotof else
    (179) check_bool -> .

    LB              reduce using rule 179 (check_bool -> .)

    check_bool                     shift and go to state 295

state 258

    (166) var_gt -> expr GT . expr
    (172) expr -> . expr MUL expr
    (173) expr -> . expr DIV expr
    (174) expr -> . expr PLUS expr
    (175) expr -> . expr MINUS expr
    (176) expr -> . CTE_I
    (177) expr -> . CTE_F
    (178) expr -> . ID

    CTE_I           shift and go to state 206
    CTE_F           shift and go to state 207
    ID              shift and go to state 208

    expr                           shift and go to state 296

state 259

    (165) var_lt -> expr LT . expr
    (172) expr -> . expr MUL expr
    (173) expr -> . expr DIV expr
    (174) expr -> . expr PLUS expr
    (175) expr -> . expr MINUS expr
    (176) expr -> . CTE_I
    (177) expr -> . CTE_F
    (178) expr -> . ID

    CTE_I           shift and go to state 206
    CTE_F           shift and go to state 207
    ID              shift and go to state 208

    expr                           shift and go to state 297

state 260

    (169) var_equal -> expr EQUAL . expr
    (172) expr -> . expr MUL expr
    (173) expr -> . expr DIV expr
    (174) expr -> . expr PLUS expr
    (175) expr -> . expr MINUS expr
    (176) expr -> . CTE_I
    (177) expr -> . CTE_F
    (178) expr -> . ID

    CTE_I           shift and go to state 206
    CTE_F           shift and go to state 207
    ID              shift and go to state 208

    expr                           shift and go to state 298

state 261

    (170) var_neq -> expr NEQ . expr
    (172) expr -> . expr MUL expr
    (173) expr -> . expr DIV expr
    (174) expr -> . expr PLUS expr
    (175) expr -> . expr MINUS expr
    (176) expr -> . CTE_I
    (177) expr -> . CTE_F
    (178) expr -> . ID

    CTE_I           shift and go to state 206
    CTE_F           shift and go to state 207
    ID              shift and go to state 208

    expr                           shift and go to state 299

state 262

    (168) var_geq -> expr GEQ . expr
    (172) expr -> . expr MUL expr
    (173) expr -> . expr DIV expr
    (174) expr -> . expr PLUS expr
    (175) expr -> . expr MINUS expr
    (176) expr -> . CTE_I
    (177) expr -> . CTE_F
    (178) expr -> . ID

    CTE_I           shift and go to state 206
    CTE_F           shift and go to state 207
    ID              shift and go to state 208

    expr                           shift and go to state 300

state 263

    (167) var_leq -> expr LEQ . expr
    (172) expr -> . expr MUL expr
    (173) expr -> . expr DIV expr
    (174) expr -> . expr PLUS expr
    (175) expr -> . expr MINUS expr
    (176) expr -> . CTE_I
    (177) expr -> . CTE_F
    (178) expr -> . ID

    CTE_I           shift and go to state 206
    CTE_F           shift and go to state 207
    ID              shift and go to state 208

    expr                           shift and go to state 301

state 264

    (31) vars -> VAR tipo ID row . SEMICOL
    (110) var_row -> VAR tipo ID row . IS LP lista2 RP SEMICOL
    (123) matrix -> row . row
    (116) row -> . LC CTE_I RC

    SEMICOL         shift and go to state 302
    IS              shift and go to state 303
    LC              shift and go to state 64

    row                            shift and go to state 78

state 265

    (38) vars1 -> ID SEMICOL .
    (47) vars3 -> ID SEMICOL .

  ! reduce/reduce conflict for ID resolved using rule 38 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for IF resolved using rule 38 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for VAR resolved using rule 38 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for WHILE resolved using rule 38 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for FOR resolved using rule 38 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for PRINT resolved using rule 38 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for READ resolved using rule 38 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for RETURN resolved using rule 38 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for RB resolved using rule 38 (vars1 -> ID SEMICOL .)
    ID              reduce using rule 38 (vars1 -> ID SEMICOL .)
    IF              reduce using rule 38 (vars1 -> ID SEMICOL .)
    VAR             reduce using rule 38 (vars1 -> ID SEMICOL .)
    WHILE           reduce using rule 38 (vars1 -> ID SEMICOL .)
    FOR             reduce using rule 38 (vars1 -> ID SEMICOL .)
    PRINT           reduce using rule 38 (vars1 -> ID SEMICOL .)
    READ            reduce using rule 38 (vars1 -> ID SEMICOL .)
    RETURN          reduce using rule 38 (vars1 -> ID SEMICOL .)
    RB              reduce using rule 38 (vars1 -> ID SEMICOL .)

  ! ID              [ reduce using rule 47 (vars3 -> ID SEMICOL .) ]
  ! IF              [ reduce using rule 47 (vars3 -> ID SEMICOL .) ]
  ! VAR             [ reduce using rule 47 (vars3 -> ID SEMICOL .) ]
  ! WHILE           [ reduce using rule 47 (vars3 -> ID SEMICOL .) ]
  ! FOR             [ reduce using rule 47 (vars3 -> ID SEMICOL .) ]
  ! PRINT           [ reduce using rule 47 (vars3 -> ID SEMICOL .) ]
  ! READ            [ reduce using rule 47 (vars3 -> ID SEMICOL .) ]
  ! RETURN          [ reduce using rule 47 (vars3 -> ID SEMICOL .) ]
  ! RB              [ reduce using rule 47 (vars3 -> ID SEMICOL .) ]


state 266

    (32) vars -> VAR tipo ID matrix . SEMICOL
    (117) var_matrix -> VAR tipo ID matrix . IS matrix2 SEMICOL

    SEMICOL         shift and go to state 304
    IS              shift and go to state 305


state 267

    (43) vars2 -> ID IS . value SEMICOL
    (171) oper_aritmetica -> ID IS . expr SEMICOL
    (41) vars2_1 -> ID IS . value COMMA
    (74) value -> . CTE_F
    (75) value -> . CTE_I
    (76) value -> . ID
    (77) value -> . CTE_C
    (78) value -> . COMILLA ID COMILLA
    (79) value -> . COMILLAS ID COMILLAS
    (172) expr -> . expr MUL expr
    (173) expr -> . expr DIV expr
    (174) expr -> . expr PLUS expr
    (175) expr -> . expr MINUS expr
    (176) expr -> . CTE_I
    (177) expr -> . CTE_F
    (178) expr -> . ID

    CTE_F           shift and go to state 309
    CTE_I           shift and go to state 310
    ID              shift and go to state 306
    CTE_C           shift and go to state 84
    COMILLA         shift and go to state 85
    COMILLAS        shift and go to state 86

    value                          shift and go to state 307
    expr                           shift and go to state 308

state 268

    (46) vars3_1 -> ID COMMA .

    ID              reduce using rule 46 (vars3_1 -> ID COMMA .)


state 269

    (39) vars2 -> vars2_1 ID . IS value SEMICOL
    (40) vars2_1 -> vars2_1 ID . IS value COMMA

    IS              shift and go to state 311


state 270

    (44) vars3 -> vars3_1 ID . SEMICOL
    (45) vars3_1 -> vars3_1 ID . COMMA

    SEMICOL         shift and go to state 312
    COMMA           shift and go to state 313


state 271

    (135) while -> WHILE guarda_num_salto LP expression . RP check_bool gotof LB statement RB goto

    RP              shift and go to state 314


state 272

    (136) for -> FOR LP VAR tipo . ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto

    ID              shift and go to state 315


state 273

    (145) escritura -> PRINT LP COMILLA any . COMILLA RP SEMICOL

    COMILLA         shift and go to state 316


state 274

    (149) any -> expr . any
    (172) expr -> expr . MUL expr
    (173) expr -> expr . DIV expr
    (174) expr -> expr . PLUS expr
    (175) expr -> expr . MINUS expr
    (161) expression -> expr .
    (166) var_gt -> expr . GT expr
    (165) var_lt -> expr . LT expr
    (169) var_equal -> expr . EQUAL expr
    (170) var_neq -> expr . NEQ expr
    (168) var_geq -> expr . GEQ expr
    (167) var_leq -> expr . LEQ expr
    (149) any -> . expr any
    (150) any -> . expression any
    (151) any -> . empty
    (172) expr -> . expr MUL expr
    (173) expr -> . expr DIV expr
    (174) expr -> . expr PLUS expr
    (175) expr -> . expr MINUS expr
    (176) expr -> . CTE_I
    (177) expr -> . CTE_F
    (178) expr -> . ID
    (155) expression -> . var_gt
    (156) expression -> . var_lt
    (157) expression -> . var_equal
    (158) expression -> . var_neq
    (159) expression -> . var_geq
    (160) expression -> . var_leq
    (161) expression -> . expr
    (162) expression -> . TRUE
    (163) expression -> . FALSE
    (164) expression -> . ID
    (124) empty -> .
    (166) var_gt -> . expr GT expr
    (165) var_lt -> . expr LT expr
    (169) var_equal -> . expr EQUAL expr
    (170) var_neq -> . expr NEQ expr
    (168) var_geq -> . expr GEQ expr
    (167) var_leq -> . expr LEQ expr

  ! shift/reduce conflict for CTE_I resolved as shift
  ! shift/reduce conflict for CTE_F resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! reduce/reduce conflict for COMILLA resolved using rule 124 (empty -> .)
  ! reduce/reduce conflict for COMILLAS resolved using rule 124 (empty -> .)
    MUL             shift and go to state 250
    DIV             shift and go to state 251
    PLUS            shift and go to state 252
    MINUS           shift and go to state 253
    GT              shift and go to state 258
    LT              shift and go to state 259
    EQUAL           shift and go to state 260
    NEQ             shift and go to state 261
    GEQ             shift and go to state 262
    LEQ             shift and go to state 263
    CTE_I           shift and go to state 206
    CTE_F           shift and go to state 207
    ID              shift and go to state 277
    TRUE            shift and go to state 223
    FALSE           shift and go to state 224
    COMILLA         reduce using rule 124 (empty -> .)
    COMILLAS        reduce using rule 124 (empty -> .)

  ! CTE_I           [ reduce using rule 161 (expression -> expr .) ]
  ! CTE_F           [ reduce using rule 161 (expression -> expr .) ]
  ! ID              [ reduce using rule 161 (expression -> expr .) ]
  ! TRUE            [ reduce using rule 161 (expression -> expr .) ]
  ! FALSE           [ reduce using rule 161 (expression -> expr .) ]
  ! COMILLA         [ reduce using rule 161 (expression -> expr .) ]
  ! COMILLAS        [ reduce using rule 161 (expression -> expr .) ]

    expr                           shift and go to state 274
    any                            shift and go to state 317
    expression                     shift and go to state 275
    empty                          shift and go to state 276
    var_gt                         shift and go to state 216
    var_lt                         shift and go to state 217
    var_equal                      shift and go to state 218
    var_neq                        shift and go to state 219
    var_geq                        shift and go to state 220
    var_leq                        shift and go to state 221

state 275

    (150) any -> expression . any
    (149) any -> . expr any
    (150) any -> . expression any
    (151) any -> . empty
    (172) expr -> . expr MUL expr
    (173) expr -> . expr DIV expr
    (174) expr -> . expr PLUS expr
    (175) expr -> . expr MINUS expr
    (176) expr -> . CTE_I
    (177) expr -> . CTE_F
    (178) expr -> . ID
    (155) expression -> . var_gt
    (156) expression -> . var_lt
    (157) expression -> . var_equal
    (158) expression -> . var_neq
    (159) expression -> . var_geq
    (160) expression -> . var_leq
    (161) expression -> . expr
    (162) expression -> . TRUE
    (163) expression -> . FALSE
    (164) expression -> . ID
    (124) empty -> .
    (166) var_gt -> . expr GT expr
    (165) var_lt -> . expr LT expr
    (169) var_equal -> . expr EQUAL expr
    (170) var_neq -> . expr NEQ expr
    (168) var_geq -> . expr GEQ expr
    (167) var_leq -> . expr LEQ expr

    CTE_I           shift and go to state 206
    CTE_F           shift and go to state 207
    ID              shift and go to state 277
    TRUE            shift and go to state 223
    FALSE           shift and go to state 224
    COMILLA         reduce using rule 124 (empty -> .)
    COMILLAS        reduce using rule 124 (empty -> .)

    expression                     shift and go to state 275
    any                            shift and go to state 318
    expr                           shift and go to state 274
    empty                          shift and go to state 276
    var_gt                         shift and go to state 216
    var_lt                         shift and go to state 217
    var_equal                      shift and go to state 218
    var_neq                        shift and go to state 219
    var_geq                        shift and go to state 220
    var_leq                        shift and go to state 221

state 276

    (151) any -> empty .

    COMILLA         reduce using rule 151 (any -> empty .)
    COMILLAS        reduce using rule 151 (any -> empty .)


state 277

    (178) expr -> ID .
    (164) expression -> ID .

  ! reduce/reduce conflict for CTE_I resolved using rule 164 (expression -> ID .)
  ! reduce/reduce conflict for CTE_F resolved using rule 164 (expression -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 164 (expression -> ID .)
  ! reduce/reduce conflict for TRUE resolved using rule 164 (expression -> ID .)
  ! reduce/reduce conflict for FALSE resolved using rule 164 (expression -> ID .)
  ! reduce/reduce conflict for COMILLA resolved using rule 164 (expression -> ID .)
  ! reduce/reduce conflict for COMILLAS resolved using rule 164 (expression -> ID .)
    MUL             reduce using rule 178 (expr -> ID .)
    DIV             reduce using rule 178 (expr -> ID .)
    PLUS            reduce using rule 178 (expr -> ID .)
    MINUS           reduce using rule 178 (expr -> ID .)
    GT              reduce using rule 178 (expr -> ID .)
    LT              reduce using rule 178 (expr -> ID .)
    EQUAL           reduce using rule 178 (expr -> ID .)
    NEQ             reduce using rule 178 (expr -> ID .)
    GEQ             reduce using rule 178 (expr -> ID .)
    LEQ             reduce using rule 178 (expr -> ID .)
    CTE_I           reduce using rule 164 (expression -> ID .)
    CTE_F           reduce using rule 164 (expression -> ID .)
    ID              reduce using rule 164 (expression -> ID .)
    TRUE            reduce using rule 164 (expression -> ID .)
    FALSE           reduce using rule 164 (expression -> ID .)
    COMILLA         reduce using rule 164 (expression -> ID .)
    COMILLAS        reduce using rule 164 (expression -> ID .)

  ! CTE_I           [ reduce using rule 178 (expr -> ID .) ]
  ! CTE_F           [ reduce using rule 178 (expr -> ID .) ]
  ! ID              [ reduce using rule 178 (expr -> ID .) ]
  ! TRUE            [ reduce using rule 178 (expr -> ID .) ]
  ! FALSE           [ reduce using rule 178 (expr -> ID .) ]
  ! COMILLA         [ reduce using rule 178 (expr -> ID .) ]
  ! COMILLAS        [ reduce using rule 178 (expr -> ID .) ]


state 278

    (146) escritura -> PRINT LP COMILLAS any . COMILLAS RP SEMICOL

    COMILLAS        shift and go to state 319


state 279

    (147) escritura_var -> PRINT LP any_var RP . SEMICOL

    SEMICOL         shift and go to state 320


state 280

    (152) lectura -> READ LP COMILLA any_lectura . COMILLA RP SEMICOL

    COMILLA         shift and go to state 321


state 281

    (154) any_lectura -> ID .

    COMILLA         reduce using rule 154 (any_lectura -> ID .)
    COMILLAS        reduce using rule 154 (any_lectura -> ID .)


state 282

    (153) lectura -> READ LP COMILLAS any_lectura . COMILLAS RP SEMICOL

    COMILLAS        shift and go to state 322


state 283

    (83) funcion -> tipo ID LP RP verificar2 LB var_func statement add_func_dir2 func_return . RB end_func

    RB              shift and go to state 323


state 284

    (106) func_return -> RETURN . expr SEMICOL
    (172) expr -> . expr MUL expr
    (173) expr -> . expr DIV expr
    (174) expr -> . expr PLUS expr
    (175) expr -> . expr MINUS expr
    (176) expr -> . CTE_I
    (177) expr -> . CTE_F
    (178) expr -> . ID

    CTE_I           shift and go to state 206
    CTE_F           shift and go to state 207
    ID              shift and go to state 208

    expr                           shift and go to state 324

state 285

    (84) funcion -> tipo ID LP param RP verificar LB var_func statement add_func_dir . func_return_param RB end_func
    (107) func_return_param -> . RETURN expr SEMICOL

    RETURN          shift and go to state 326

    func_return_param              shift and go to state 325

state 286

    (81) funcion -> VOID ID LP param RP verificar LB var_func statement RB . end_func
    (100) end_func -> .

    VOID            reduce using rule 100 (end_func -> .)
    INT             reduce using rule 100 (end_func -> .)
    FLOAT           reduce using rule 100 (end_func -> .)
    CHAR            reduce using rule 100 (end_func -> .)
    $end            reduce using rule 100 (end_func -> .)

    end_func                       shift and go to state 327

state 287

    (82) funcion -> VOID ID LP RP verificar2 LB var_func statement RB end_func .

    VOID            reduce using rule 82 (funcion -> VOID ID LP RP verificar2 LB var_func statement RB end_func .)
    INT             reduce using rule 82 (funcion -> VOID ID LP RP verificar2 LB var_func statement RB end_func .)
    FLOAT           reduce using rule 82 (funcion -> VOID ID LP RP verificar2 LB var_func statement RB end_func .)
    CHAR            reduce using rule 82 (funcion -> VOID ID LP RP verificar2 LB var_func statement RB end_func .)
    $end            reduce using rule 82 (funcion -> VOID ID LP RP verificar2 LB var_func statement RB end_func .)


state 288

    (120) matrix2 -> LP lista2 RP COMMA LP lista2 . RP
    (119) matrix2 -> LP lista2 . RP COMMA matrix2
    (120) matrix2 -> LP lista2 . RP COMMA LP lista2 RP

    RP              shift and go to state 328


state 289

    (172) expr -> expr MUL expr .
    (172) expr -> expr . MUL expr
    (173) expr -> expr . DIV expr
    (174) expr -> expr . PLUS expr
    (175) expr -> expr . MINUS expr

    SEMICOL         reduce using rule 172 (expr -> expr MUL expr .)
    MUL             reduce using rule 172 (expr -> expr MUL expr .)
    DIV             reduce using rule 172 (expr -> expr MUL expr .)
    PLUS            reduce using rule 172 (expr -> expr MUL expr .)
    MINUS           reduce using rule 172 (expr -> expr MUL expr .)
    GT              reduce using rule 172 (expr -> expr MUL expr .)
    LT              reduce using rule 172 (expr -> expr MUL expr .)
    EQUAL           reduce using rule 172 (expr -> expr MUL expr .)
    NEQ             reduce using rule 172 (expr -> expr MUL expr .)
    GEQ             reduce using rule 172 (expr -> expr MUL expr .)
    LEQ             reduce using rule 172 (expr -> expr MUL expr .)
    RP              reduce using rule 172 (expr -> expr MUL expr .)
    COMMA           reduce using rule 172 (expr -> expr MUL expr .)
    CTE_I           reduce using rule 172 (expr -> expr MUL expr .)
    CTE_F           reduce using rule 172 (expr -> expr MUL expr .)
    ID              reduce using rule 172 (expr -> expr MUL expr .)
    TRUE            reduce using rule 172 (expr -> expr MUL expr .)
    FALSE           reduce using rule 172 (expr -> expr MUL expr .)
    COMILLA         reduce using rule 172 (expr -> expr MUL expr .)
    COMILLAS        reduce using rule 172 (expr -> expr MUL expr .)

  ! MUL             [ shift and go to state 250 ]
  ! DIV             [ shift and go to state 251 ]
  ! PLUS            [ shift and go to state 252 ]
  ! MINUS           [ shift and go to state 253 ]


state 290

    (173) expr -> expr DIV expr .
    (172) expr -> expr . MUL expr
    (173) expr -> expr . DIV expr
    (174) expr -> expr . PLUS expr
    (175) expr -> expr . MINUS expr

    SEMICOL         reduce using rule 173 (expr -> expr DIV expr .)
    MUL             reduce using rule 173 (expr -> expr DIV expr .)
    DIV             reduce using rule 173 (expr -> expr DIV expr .)
    PLUS            reduce using rule 173 (expr -> expr DIV expr .)
    MINUS           reduce using rule 173 (expr -> expr DIV expr .)
    GT              reduce using rule 173 (expr -> expr DIV expr .)
    LT              reduce using rule 173 (expr -> expr DIV expr .)
    EQUAL           reduce using rule 173 (expr -> expr DIV expr .)
    NEQ             reduce using rule 173 (expr -> expr DIV expr .)
    GEQ             reduce using rule 173 (expr -> expr DIV expr .)
    LEQ             reduce using rule 173 (expr -> expr DIV expr .)
    RP              reduce using rule 173 (expr -> expr DIV expr .)
    COMMA           reduce using rule 173 (expr -> expr DIV expr .)
    CTE_I           reduce using rule 173 (expr -> expr DIV expr .)
    CTE_F           reduce using rule 173 (expr -> expr DIV expr .)
    ID              reduce using rule 173 (expr -> expr DIV expr .)
    TRUE            reduce using rule 173 (expr -> expr DIV expr .)
    FALSE           reduce using rule 173 (expr -> expr DIV expr .)
    COMILLA         reduce using rule 173 (expr -> expr DIV expr .)
    COMILLAS        reduce using rule 173 (expr -> expr DIV expr .)

  ! MUL             [ shift and go to state 250 ]
  ! DIV             [ shift and go to state 251 ]
  ! PLUS            [ shift and go to state 252 ]
  ! MINUS           [ shift and go to state 253 ]


state 291

    (174) expr -> expr PLUS expr .
    (172) expr -> expr . MUL expr
    (173) expr -> expr . DIV expr
    (174) expr -> expr . PLUS expr
    (175) expr -> expr . MINUS expr

    SEMICOL         reduce using rule 174 (expr -> expr PLUS expr .)
    PLUS            reduce using rule 174 (expr -> expr PLUS expr .)
    MINUS           reduce using rule 174 (expr -> expr PLUS expr .)
    GT              reduce using rule 174 (expr -> expr PLUS expr .)
    LT              reduce using rule 174 (expr -> expr PLUS expr .)
    EQUAL           reduce using rule 174 (expr -> expr PLUS expr .)
    NEQ             reduce using rule 174 (expr -> expr PLUS expr .)
    GEQ             reduce using rule 174 (expr -> expr PLUS expr .)
    LEQ             reduce using rule 174 (expr -> expr PLUS expr .)
    RP              reduce using rule 174 (expr -> expr PLUS expr .)
    COMMA           reduce using rule 174 (expr -> expr PLUS expr .)
    CTE_I           reduce using rule 174 (expr -> expr PLUS expr .)
    CTE_F           reduce using rule 174 (expr -> expr PLUS expr .)
    ID              reduce using rule 174 (expr -> expr PLUS expr .)
    TRUE            reduce using rule 174 (expr -> expr PLUS expr .)
    FALSE           reduce using rule 174 (expr -> expr PLUS expr .)
    COMILLA         reduce using rule 174 (expr -> expr PLUS expr .)
    COMILLAS        reduce using rule 174 (expr -> expr PLUS expr .)
    MUL             shift and go to state 250
    DIV             shift and go to state 251

  ! MUL             [ reduce using rule 174 (expr -> expr PLUS expr .) ]
  ! DIV             [ reduce using rule 174 (expr -> expr PLUS expr .) ]
  ! PLUS            [ shift and go to state 252 ]
  ! MINUS           [ shift and go to state 253 ]


state 292

    (175) expr -> expr MINUS expr .
    (172) expr -> expr . MUL expr
    (173) expr -> expr . DIV expr
    (174) expr -> expr . PLUS expr
    (175) expr -> expr . MINUS expr

    SEMICOL         reduce using rule 175 (expr -> expr MINUS expr .)
    PLUS            reduce using rule 175 (expr -> expr MINUS expr .)
    MINUS           reduce using rule 175 (expr -> expr MINUS expr .)
    GT              reduce using rule 175 (expr -> expr MINUS expr .)
    LT              reduce using rule 175 (expr -> expr MINUS expr .)
    EQUAL           reduce using rule 175 (expr -> expr MINUS expr .)
    NEQ             reduce using rule 175 (expr -> expr MINUS expr .)
    GEQ             reduce using rule 175 (expr -> expr MINUS expr .)
    LEQ             reduce using rule 175 (expr -> expr MINUS expr .)
    RP              reduce using rule 175 (expr -> expr MINUS expr .)
    COMMA           reduce using rule 175 (expr -> expr MINUS expr .)
    CTE_I           reduce using rule 175 (expr -> expr MINUS expr .)
    CTE_F           reduce using rule 175 (expr -> expr MINUS expr .)
    ID              reduce using rule 175 (expr -> expr MINUS expr .)
    TRUE            reduce using rule 175 (expr -> expr MINUS expr .)
    FALSE           reduce using rule 175 (expr -> expr MINUS expr .)
    COMILLA         reduce using rule 175 (expr -> expr MINUS expr .)
    COMILLAS        reduce using rule 175 (expr -> expr MINUS expr .)
    MUL             shift and go to state 250
    DIV             shift and go to state 251

  ! MUL             [ reduce using rule 175 (expr -> expr MINUS expr .) ]
  ! DIV             [ reduce using rule 175 (expr -> expr MINUS expr .) ]
  ! PLUS            [ shift and go to state 252 ]
  ! MINUS           [ shift and go to state 253 ]


state 293

    (102) func_call -> ID LP func_era func_call_param RP . SEMICOL

    SEMICOL         shift and go to state 329


state 294

    (105) func_call_param -> func_call_param COMMA . expr
    (172) expr -> . expr MUL expr
    (173) expr -> . expr DIV expr
    (174) expr -> . expr PLUS expr
    (175) expr -> . expr MINUS expr
    (176) expr -> . CTE_I
    (177) expr -> . CTE_F
    (178) expr -> . ID

    CTE_I           shift and go to state 206
    CTE_F           shift and go to state 207
    ID              shift and go to state 208

    expr                           shift and go to state 330

state 295

    (125) if -> IF LP expression RP check_bool . gotof LB statement RB fill_if
    (126) if -> IF LP expression RP check_bool . gotof LB statement RB goto fill_gotof else
    (129) gotof -> .

    LB              reduce using rule 129 (gotof -> .)

    gotof                          shift and go to state 331

state 296

    (166) var_gt -> expr GT expr .
    (172) expr -> expr . MUL expr
    (173) expr -> expr . DIV expr
    (174) expr -> expr . PLUS expr
    (175) expr -> expr . MINUS expr

    RP              reduce using rule 166 (var_gt -> expr GT expr .)
    CTE_I           reduce using rule 166 (var_gt -> expr GT expr .)
    CTE_F           reduce using rule 166 (var_gt -> expr GT expr .)
    ID              reduce using rule 166 (var_gt -> expr GT expr .)
    TRUE            reduce using rule 166 (var_gt -> expr GT expr .)
    FALSE           reduce using rule 166 (var_gt -> expr GT expr .)
    COMILLA         reduce using rule 166 (var_gt -> expr GT expr .)
    COMILLAS        reduce using rule 166 (var_gt -> expr GT expr .)
    SEMICOL         reduce using rule 166 (var_gt -> expr GT expr .)
    MUL             shift and go to state 250
    DIV             shift and go to state 251
    PLUS            shift and go to state 252
    MINUS           shift and go to state 253


state 297

    (165) var_lt -> expr LT expr .
    (172) expr -> expr . MUL expr
    (173) expr -> expr . DIV expr
    (174) expr -> expr . PLUS expr
    (175) expr -> expr . MINUS expr

    RP              reduce using rule 165 (var_lt -> expr LT expr .)
    CTE_I           reduce using rule 165 (var_lt -> expr LT expr .)
    CTE_F           reduce using rule 165 (var_lt -> expr LT expr .)
    ID              reduce using rule 165 (var_lt -> expr LT expr .)
    TRUE            reduce using rule 165 (var_lt -> expr LT expr .)
    FALSE           reduce using rule 165 (var_lt -> expr LT expr .)
    COMILLA         reduce using rule 165 (var_lt -> expr LT expr .)
    COMILLAS        reduce using rule 165 (var_lt -> expr LT expr .)
    SEMICOL         reduce using rule 165 (var_lt -> expr LT expr .)
    MUL             shift and go to state 250
    DIV             shift and go to state 251
    PLUS            shift and go to state 252
    MINUS           shift and go to state 253


state 298

    (169) var_equal -> expr EQUAL expr .
    (172) expr -> expr . MUL expr
    (173) expr -> expr . DIV expr
    (174) expr -> expr . PLUS expr
    (175) expr -> expr . MINUS expr

    RP              reduce using rule 169 (var_equal -> expr EQUAL expr .)
    CTE_I           reduce using rule 169 (var_equal -> expr EQUAL expr .)
    CTE_F           reduce using rule 169 (var_equal -> expr EQUAL expr .)
    ID              reduce using rule 169 (var_equal -> expr EQUAL expr .)
    TRUE            reduce using rule 169 (var_equal -> expr EQUAL expr .)
    FALSE           reduce using rule 169 (var_equal -> expr EQUAL expr .)
    COMILLA         reduce using rule 169 (var_equal -> expr EQUAL expr .)
    COMILLAS        reduce using rule 169 (var_equal -> expr EQUAL expr .)
    SEMICOL         reduce using rule 169 (var_equal -> expr EQUAL expr .)
    MUL             shift and go to state 250
    DIV             shift and go to state 251
    PLUS            shift and go to state 252
    MINUS           shift and go to state 253


state 299

    (170) var_neq -> expr NEQ expr .
    (172) expr -> expr . MUL expr
    (173) expr -> expr . DIV expr
    (174) expr -> expr . PLUS expr
    (175) expr -> expr . MINUS expr

    RP              reduce using rule 170 (var_neq -> expr NEQ expr .)
    CTE_I           reduce using rule 170 (var_neq -> expr NEQ expr .)
    CTE_F           reduce using rule 170 (var_neq -> expr NEQ expr .)
    ID              reduce using rule 170 (var_neq -> expr NEQ expr .)
    TRUE            reduce using rule 170 (var_neq -> expr NEQ expr .)
    FALSE           reduce using rule 170 (var_neq -> expr NEQ expr .)
    COMILLA         reduce using rule 170 (var_neq -> expr NEQ expr .)
    COMILLAS        reduce using rule 170 (var_neq -> expr NEQ expr .)
    SEMICOL         reduce using rule 170 (var_neq -> expr NEQ expr .)
    MUL             shift and go to state 250
    DIV             shift and go to state 251
    PLUS            shift and go to state 252
    MINUS           shift and go to state 253


state 300

    (168) var_geq -> expr GEQ expr .
    (172) expr -> expr . MUL expr
    (173) expr -> expr . DIV expr
    (174) expr -> expr . PLUS expr
    (175) expr -> expr . MINUS expr

    RP              reduce using rule 168 (var_geq -> expr GEQ expr .)
    CTE_I           reduce using rule 168 (var_geq -> expr GEQ expr .)
    CTE_F           reduce using rule 168 (var_geq -> expr GEQ expr .)
    ID              reduce using rule 168 (var_geq -> expr GEQ expr .)
    TRUE            reduce using rule 168 (var_geq -> expr GEQ expr .)
    FALSE           reduce using rule 168 (var_geq -> expr GEQ expr .)
    COMILLA         reduce using rule 168 (var_geq -> expr GEQ expr .)
    COMILLAS        reduce using rule 168 (var_geq -> expr GEQ expr .)
    SEMICOL         reduce using rule 168 (var_geq -> expr GEQ expr .)
    MUL             shift and go to state 250
    DIV             shift and go to state 251
    PLUS            shift and go to state 252
    MINUS           shift and go to state 253


state 301

    (167) var_leq -> expr LEQ expr .
    (172) expr -> expr . MUL expr
    (173) expr -> expr . DIV expr
    (174) expr -> expr . PLUS expr
    (175) expr -> expr . MINUS expr

    RP              reduce using rule 167 (var_leq -> expr LEQ expr .)
    CTE_I           reduce using rule 167 (var_leq -> expr LEQ expr .)
    CTE_F           reduce using rule 167 (var_leq -> expr LEQ expr .)
    ID              reduce using rule 167 (var_leq -> expr LEQ expr .)
    TRUE            reduce using rule 167 (var_leq -> expr LEQ expr .)
    FALSE           reduce using rule 167 (var_leq -> expr LEQ expr .)
    COMILLA         reduce using rule 167 (var_leq -> expr LEQ expr .)
    COMILLAS        reduce using rule 167 (var_leq -> expr LEQ expr .)
    SEMICOL         reduce using rule 167 (var_leq -> expr LEQ expr .)
    MUL             shift and go to state 250
    DIV             shift and go to state 251
    PLUS            shift and go to state 252
    MINUS           shift and go to state 253


state 302

    (31) vars -> VAR tipo ID row SEMICOL .

    ID              reduce using rule 31 (vars -> VAR tipo ID row SEMICOL .)
    IF              reduce using rule 31 (vars -> VAR tipo ID row SEMICOL .)
    VAR             reduce using rule 31 (vars -> VAR tipo ID row SEMICOL .)
    WHILE           reduce using rule 31 (vars -> VAR tipo ID row SEMICOL .)
    FOR             reduce using rule 31 (vars -> VAR tipo ID row SEMICOL .)
    PRINT           reduce using rule 31 (vars -> VAR tipo ID row SEMICOL .)
    READ            reduce using rule 31 (vars -> VAR tipo ID row SEMICOL .)
    RETURN          reduce using rule 31 (vars -> VAR tipo ID row SEMICOL .)
    RB              reduce using rule 31 (vars -> VAR tipo ID row SEMICOL .)


state 303

    (110) var_row -> VAR tipo ID row IS . LP lista2 RP SEMICOL

    LP              shift and go to state 332


state 304

    (32) vars -> VAR tipo ID matrix SEMICOL .

    ID              reduce using rule 32 (vars -> VAR tipo ID matrix SEMICOL .)
    IF              reduce using rule 32 (vars -> VAR tipo ID matrix SEMICOL .)
    VAR             reduce using rule 32 (vars -> VAR tipo ID matrix SEMICOL .)
    WHILE           reduce using rule 32 (vars -> VAR tipo ID matrix SEMICOL .)
    FOR             reduce using rule 32 (vars -> VAR tipo ID matrix SEMICOL .)
    PRINT           reduce using rule 32 (vars -> VAR tipo ID matrix SEMICOL .)
    READ            reduce using rule 32 (vars -> VAR tipo ID matrix SEMICOL .)
    RETURN          reduce using rule 32 (vars -> VAR tipo ID matrix SEMICOL .)
    RB              reduce using rule 32 (vars -> VAR tipo ID matrix SEMICOL .)


state 305

    (117) var_matrix -> VAR tipo ID matrix IS . matrix2 SEMICOL
    (119) matrix2 -> . LP lista2 RP COMMA matrix2
    (120) matrix2 -> . LP lista2 RP COMMA LP lista2 RP

    LP              shift and go to state 112

    matrix2                        shift and go to state 333

state 306

    (76) value -> ID .
    (178) expr -> ID .

  ! reduce/reduce conflict for SEMICOL resolved using rule 76 (value -> ID .)
    SEMICOL         reduce using rule 76 (value -> ID .)
    COMMA           reduce using rule 76 (value -> ID .)
    MUL             reduce using rule 178 (expr -> ID .)
    DIV             reduce using rule 178 (expr -> ID .)
    PLUS            reduce using rule 178 (expr -> ID .)
    MINUS           reduce using rule 178 (expr -> ID .)

  ! SEMICOL         [ reduce using rule 178 (expr -> ID .) ]


state 307

    (43) vars2 -> ID IS value . SEMICOL
    (41) vars2_1 -> ID IS value . COMMA

    SEMICOL         shift and go to state 334
    COMMA           shift and go to state 335


state 308

    (171) oper_aritmetica -> ID IS expr . SEMICOL
    (172) expr -> expr . MUL expr
    (173) expr -> expr . DIV expr
    (174) expr -> expr . PLUS expr
    (175) expr -> expr . MINUS expr

    SEMICOL         shift and go to state 336
    MUL             shift and go to state 250
    DIV             shift and go to state 251
    PLUS            shift and go to state 252
    MINUS           shift and go to state 253


state 309

    (74) value -> CTE_F .
    (177) expr -> CTE_F .

  ! reduce/reduce conflict for SEMICOL resolved using rule 74 (value -> CTE_F .)
    SEMICOL         reduce using rule 74 (value -> CTE_F .)
    COMMA           reduce using rule 74 (value -> CTE_F .)
    MUL             reduce using rule 177 (expr -> CTE_F .)
    DIV             reduce using rule 177 (expr -> CTE_F .)
    PLUS            reduce using rule 177 (expr -> CTE_F .)
    MINUS           reduce using rule 177 (expr -> CTE_F .)

  ! SEMICOL         [ reduce using rule 177 (expr -> CTE_F .) ]


state 310

    (75) value -> CTE_I .
    (176) expr -> CTE_I .

  ! reduce/reduce conflict for SEMICOL resolved using rule 75 (value -> CTE_I .)
    SEMICOL         reduce using rule 75 (value -> CTE_I .)
    COMMA           reduce using rule 75 (value -> CTE_I .)
    MUL             reduce using rule 176 (expr -> CTE_I .)
    DIV             reduce using rule 176 (expr -> CTE_I .)
    PLUS            reduce using rule 176 (expr -> CTE_I .)
    MINUS           reduce using rule 176 (expr -> CTE_I .)

  ! SEMICOL         [ reduce using rule 176 (expr -> CTE_I .) ]


state 311

    (39) vars2 -> vars2_1 ID IS . value SEMICOL
    (40) vars2_1 -> vars2_1 ID IS . value COMMA
    (74) value -> . CTE_F
    (75) value -> . CTE_I
    (76) value -> . ID
    (77) value -> . CTE_C
    (78) value -> . COMILLA ID COMILLA
    (79) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 82
    CTE_I           shift and go to state 83
    ID              shift and go to state 80
    CTE_C           shift and go to state 84
    COMILLA         shift and go to state 85
    COMILLAS        shift and go to state 86

    value                          shift and go to state 337

state 312

    (44) vars3 -> vars3_1 ID SEMICOL .

    ID              reduce using rule 44 (vars3 -> vars3_1 ID SEMICOL .)
    IF              reduce using rule 44 (vars3 -> vars3_1 ID SEMICOL .)
    VAR             reduce using rule 44 (vars3 -> vars3_1 ID SEMICOL .)
    WHILE           reduce using rule 44 (vars3 -> vars3_1 ID SEMICOL .)
    FOR             reduce using rule 44 (vars3 -> vars3_1 ID SEMICOL .)
    PRINT           reduce using rule 44 (vars3 -> vars3_1 ID SEMICOL .)
    READ            reduce using rule 44 (vars3 -> vars3_1 ID SEMICOL .)
    RETURN          reduce using rule 44 (vars3 -> vars3_1 ID SEMICOL .)
    RB              reduce using rule 44 (vars3 -> vars3_1 ID SEMICOL .)


state 313

    (45) vars3_1 -> vars3_1 ID COMMA .

    ID              reduce using rule 45 (vars3_1 -> vars3_1 ID COMMA .)


state 314

    (135) while -> WHILE guarda_num_salto LP expression RP . check_bool gotof LB statement RB goto
    (179) check_bool -> .

    LB              reduce using rule 179 (check_bool -> .)

    check_bool                     shift and go to state 338

state 315

    (136) for -> FOR LP VAR tipo ID . IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto

    IS              shift and go to state 339


state 316

    (145) escritura -> PRINT LP COMILLA any COMILLA . RP SEMICOL

    RP              shift and go to state 340


state 317

    (149) any -> expr any .

    COMILLA         reduce using rule 149 (any -> expr any .)
    COMILLAS        reduce using rule 149 (any -> expr any .)


state 318

    (150) any -> expression any .

    COMILLA         reduce using rule 150 (any -> expression any .)
    COMILLAS        reduce using rule 150 (any -> expression any .)


state 319

    (146) escritura -> PRINT LP COMILLAS any COMILLAS . RP SEMICOL

    RP              shift and go to state 341


state 320

    (147) escritura_var -> PRINT LP any_var RP SEMICOL .

    ID              reduce using rule 147 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    IF              reduce using rule 147 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    VAR             reduce using rule 147 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    WHILE           reduce using rule 147 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    FOR             reduce using rule 147 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    PRINT           reduce using rule 147 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    READ            reduce using rule 147 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    RETURN          reduce using rule 147 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    RB              reduce using rule 147 (escritura_var -> PRINT LP any_var RP SEMICOL .)


state 321

    (152) lectura -> READ LP COMILLA any_lectura COMILLA . RP SEMICOL

    RP              shift and go to state 342


state 322

    (153) lectura -> READ LP COMILLAS any_lectura COMILLAS . RP SEMICOL

    RP              shift and go to state 343


state 323

    (83) funcion -> tipo ID LP RP verificar2 LB var_func statement add_func_dir2 func_return RB . end_func
    (100) end_func -> .

    VOID            reduce using rule 100 (end_func -> .)
    INT             reduce using rule 100 (end_func -> .)
    FLOAT           reduce using rule 100 (end_func -> .)
    CHAR            reduce using rule 100 (end_func -> .)
    $end            reduce using rule 100 (end_func -> .)

    end_func                       shift and go to state 344

state 324

    (106) func_return -> RETURN expr . SEMICOL
    (172) expr -> expr . MUL expr
    (173) expr -> expr . DIV expr
    (174) expr -> expr . PLUS expr
    (175) expr -> expr . MINUS expr

    SEMICOL         shift and go to state 345
    MUL             shift and go to state 250
    DIV             shift and go to state 251
    PLUS            shift and go to state 252
    MINUS           shift and go to state 253


state 325

    (84) funcion -> tipo ID LP param RP verificar LB var_func statement add_func_dir func_return_param . RB end_func

    RB              shift and go to state 346


state 326

    (107) func_return_param -> RETURN . expr SEMICOL
    (172) expr -> . expr MUL expr
    (173) expr -> . expr DIV expr
    (174) expr -> . expr PLUS expr
    (175) expr -> . expr MINUS expr
    (176) expr -> . CTE_I
    (177) expr -> . CTE_F
    (178) expr -> . ID

    CTE_I           shift and go to state 206
    CTE_F           shift and go to state 207
    ID              shift and go to state 208

    expr                           shift and go to state 347

state 327

    (81) funcion -> VOID ID LP param RP verificar LB var_func statement RB end_func .

    VOID            reduce using rule 81 (funcion -> VOID ID LP param RP verificar LB var_func statement RB end_func .)
    INT             reduce using rule 81 (funcion -> VOID ID LP param RP verificar LB var_func statement RB end_func .)
    FLOAT           reduce using rule 81 (funcion -> VOID ID LP param RP verificar LB var_func statement RB end_func .)
    CHAR            reduce using rule 81 (funcion -> VOID ID LP param RP verificar LB var_func statement RB end_func .)
    $end            reduce using rule 81 (funcion -> VOID ID LP param RP verificar LB var_func statement RB end_func .)


state 328

    (120) matrix2 -> LP lista2 RP COMMA LP lista2 RP .
    (119) matrix2 -> LP lista2 RP . COMMA matrix2
    (120) matrix2 -> LP lista2 RP . COMMA LP lista2 RP

    SEMICOL         reduce using rule 120 (matrix2 -> LP lista2 RP COMMA LP lista2 RP .)
    COMMA           shift and go to state 203


state 329

    (102) func_call -> ID LP func_era func_call_param RP SEMICOL .

    ID              reduce using rule 102 (func_call -> ID LP func_era func_call_param RP SEMICOL .)
    IF              reduce using rule 102 (func_call -> ID LP func_era func_call_param RP SEMICOL .)
    VAR             reduce using rule 102 (func_call -> ID LP func_era func_call_param RP SEMICOL .)
    WHILE           reduce using rule 102 (func_call -> ID LP func_era func_call_param RP SEMICOL .)
    FOR             reduce using rule 102 (func_call -> ID LP func_era func_call_param RP SEMICOL .)
    PRINT           reduce using rule 102 (func_call -> ID LP func_era func_call_param RP SEMICOL .)
    READ            reduce using rule 102 (func_call -> ID LP func_era func_call_param RP SEMICOL .)
    RETURN          reduce using rule 102 (func_call -> ID LP func_era func_call_param RP SEMICOL .)
    RB              reduce using rule 102 (func_call -> ID LP func_era func_call_param RP SEMICOL .)


state 330

    (105) func_call_param -> func_call_param COMMA expr .
    (172) expr -> expr . MUL expr
    (173) expr -> expr . DIV expr
    (174) expr -> expr . PLUS expr
    (175) expr -> expr . MINUS expr

    RP              reduce using rule 105 (func_call_param -> func_call_param COMMA expr .)
    COMMA           reduce using rule 105 (func_call_param -> func_call_param COMMA expr .)
    MUL             shift and go to state 250
    DIV             shift and go to state 251
    PLUS            shift and go to state 252
    MINUS           shift and go to state 253


state 331

    (125) if -> IF LP expression RP check_bool gotof . LB statement RB fill_if
    (126) if -> IF LP expression RP check_bool gotof . LB statement RB goto fill_gotof else

    LB              shift and go to state 348


state 332

    (110) var_row -> VAR tipo ID row IS LP . lista2 RP SEMICOL
    (114) lista2 -> . elem_lista COMMA lista2
    (115) lista2 -> . elem_lista COMMA elem_lista
    (112) elem_lista -> . value
    (113) elem_lista -> . empty
    (74) value -> . CTE_F
    (75) value -> . CTE_I
    (76) value -> . ID
    (77) value -> . CTE_C
    (78) value -> . COMILLA ID COMILLA
    (79) value -> . COMILLAS ID COMILLAS
    (124) empty -> .

    CTE_F           shift and go to state 82
    CTE_I           shift and go to state 83
    ID              shift and go to state 80
    CTE_C           shift and go to state 84
    COMILLA         shift and go to state 85
    COMILLAS        shift and go to state 86
    COMMA           reduce using rule 124 (empty -> .)

    lista2                         shift and go to state 349
    elem_lista                     shift and go to state 129
    value                          shift and go to state 130
    empty                          shift and go to state 131

state 333

    (117) var_matrix -> VAR tipo ID matrix IS matrix2 . SEMICOL

    SEMICOL         shift and go to state 350


state 334

    (43) vars2 -> ID IS value SEMICOL .

    ID              reduce using rule 43 (vars2 -> ID IS value SEMICOL .)
    IF              reduce using rule 43 (vars2 -> ID IS value SEMICOL .)
    VAR             reduce using rule 43 (vars2 -> ID IS value SEMICOL .)
    WHILE           reduce using rule 43 (vars2 -> ID IS value SEMICOL .)
    FOR             reduce using rule 43 (vars2 -> ID IS value SEMICOL .)
    PRINT           reduce using rule 43 (vars2 -> ID IS value SEMICOL .)
    READ            reduce using rule 43 (vars2 -> ID IS value SEMICOL .)
    RETURN          reduce using rule 43 (vars2 -> ID IS value SEMICOL .)
    RB              reduce using rule 43 (vars2 -> ID IS value SEMICOL .)


state 335

    (41) vars2_1 -> ID IS value COMMA .

    ID              reduce using rule 41 (vars2_1 -> ID IS value COMMA .)


state 336

    (171) oper_aritmetica -> ID IS expr SEMICOL .

    ID              reduce using rule 171 (oper_aritmetica -> ID IS expr SEMICOL .)
    IF              reduce using rule 171 (oper_aritmetica -> ID IS expr SEMICOL .)
    VAR             reduce using rule 171 (oper_aritmetica -> ID IS expr SEMICOL .)
    WHILE           reduce using rule 171 (oper_aritmetica -> ID IS expr SEMICOL .)
    FOR             reduce using rule 171 (oper_aritmetica -> ID IS expr SEMICOL .)
    PRINT           reduce using rule 171 (oper_aritmetica -> ID IS expr SEMICOL .)
    READ            reduce using rule 171 (oper_aritmetica -> ID IS expr SEMICOL .)
    RETURN          reduce using rule 171 (oper_aritmetica -> ID IS expr SEMICOL .)
    RB              reduce using rule 171 (oper_aritmetica -> ID IS expr SEMICOL .)


state 337

    (39) vars2 -> vars2_1 ID IS value . SEMICOL
    (40) vars2_1 -> vars2_1 ID IS value . COMMA

    SEMICOL         shift and go to state 351
    COMMA           shift and go to state 352


state 338

    (135) while -> WHILE guarda_num_salto LP expression RP check_bool . gotof LB statement RB goto
    (129) gotof -> .

    LB              reduce using rule 129 (gotof -> .)

    gotof                          shift and go to state 353

state 339

    (136) for -> FOR LP VAR tipo ID IS . value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (74) value -> . CTE_F
    (75) value -> . CTE_I
    (76) value -> . ID
    (77) value -> . CTE_C
    (78) value -> . COMILLA ID COMILLA
    (79) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 82
    CTE_I           shift and go to state 83
    ID              shift and go to state 80
    CTE_C           shift and go to state 84
    COMILLA         shift and go to state 85
    COMILLAS        shift and go to state 86

    value                          shift and go to state 354

state 340

    (145) escritura -> PRINT LP COMILLA any COMILLA RP . SEMICOL

    SEMICOL         shift and go to state 355


state 341

    (146) escritura -> PRINT LP COMILLAS any COMILLAS RP . SEMICOL

    SEMICOL         shift and go to state 356


state 342

    (152) lectura -> READ LP COMILLA any_lectura COMILLA RP . SEMICOL

    SEMICOL         shift and go to state 357


state 343

    (153) lectura -> READ LP COMILLAS any_lectura COMILLAS RP . SEMICOL

    SEMICOL         shift and go to state 358


state 344

    (83) funcion -> tipo ID LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func .

    VOID            reduce using rule 83 (funcion -> tipo ID LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func .)
    INT             reduce using rule 83 (funcion -> tipo ID LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func .)
    FLOAT           reduce using rule 83 (funcion -> tipo ID LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func .)
    CHAR            reduce using rule 83 (funcion -> tipo ID LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func .)
    $end            reduce using rule 83 (funcion -> tipo ID LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func .)


state 345

    (106) func_return -> RETURN expr SEMICOL .

    RB              reduce using rule 106 (func_return -> RETURN expr SEMICOL .)


state 346

    (84) funcion -> tipo ID LP param RP verificar LB var_func statement add_func_dir func_return_param RB . end_func
    (100) end_func -> .

    VOID            reduce using rule 100 (end_func -> .)
    INT             reduce using rule 100 (end_func -> .)
    FLOAT           reduce using rule 100 (end_func -> .)
    CHAR            reduce using rule 100 (end_func -> .)
    $end            reduce using rule 100 (end_func -> .)

    end_func                       shift and go to state 359

state 347

    (107) func_return_param -> RETURN expr . SEMICOL
    (172) expr -> expr . MUL expr
    (173) expr -> expr . DIV expr
    (174) expr -> expr . PLUS expr
    (175) expr -> expr . MINUS expr

    SEMICOL         shift and go to state 360
    MUL             shift and go to state 250
    DIV             shift and go to state 251
    PLUS            shift and go to state 252
    MINUS           shift and go to state 253


state 348

    (125) if -> IF LP expression RP check_bool gotof LB . statement RB fill_if
    (126) if -> IF LP expression RP check_bool gotof LB . statement RB goto fill_gotof else
    (14) statement -> . asignacion SEMICOL statement
    (15) statement -> . if statement
    (16) statement -> . vars statement
    (17) statement -> . while statement
    (18) statement -> . for statement
    (19) statement -> . escritura statement
    (20) statement -> . escritura_var statement
    (21) statement -> . lectura statement
    (22) statement -> . func_call statement
    (23) statement -> . ID row SEMICOL
    (24) statement -> . ID matrix SEMICOL
    (25) statement -> . empty
    (26) asignacion -> . ID IS value
    (125) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (126) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (27) vars -> . VAR tipo vars1
    (28) vars -> . VAR tipo vars2
    (29) vars -> . VAR tipo vars3
    (30) vars -> . VAR tipo oper_aritmetica
    (31) vars -> . VAR tipo ID row SEMICOL
    (32) vars -> . VAR tipo ID matrix SEMICOL
    (33) vars -> . var_row
    (34) vars -> . var_row vars
    (35) vars -> . var_matrix
    (36) vars -> . var_matrix vars
    (37) vars -> . empty
    (135) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (136) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (145) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (146) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (147) escritura_var -> . PRINT LP any_var RP SEMICOL
    (152) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (153) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (101) func_call -> . ID LP RP SEMICOL
    (102) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (124) empty -> .
    (110) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (117) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 148
    IF              shift and go to state 150
    VAR             shift and go to state 151
    WHILE           shift and go to state 154
    FOR             shift and go to state 155
    PRINT           shift and go to state 156
    READ            shift and go to state 157
    RB              reduce using rule 124 (empty -> .)

  ! ID              [ reduce using rule 124 (empty -> .) ]
  ! IF              [ reduce using rule 124 (empty -> .) ]
  ! VAR             [ reduce using rule 124 (empty -> .) ]
  ! WHILE           [ reduce using rule 124 (empty -> .) ]
  ! FOR             [ reduce using rule 124 (empty -> .) ]
  ! PRINT           [ reduce using rule 124 (empty -> .) ]
  ! READ            [ reduce using rule 124 (empty -> .) ]

    statement                      shift and go to state 361
    asignacion                     shift and go to state 139
    if                             shift and go to state 140
    vars                           shift and go to state 141
    while                          shift and go to state 142
    for                            shift and go to state 143
    escritura                      shift and go to state 144
    escritura_var                  shift and go to state 145
    lectura                        shift and go to state 146
    func_call                      shift and go to state 147
    empty                          shift and go to state 149
    var_row                        shift and go to state 152
    var_matrix                     shift and go to state 153

state 349

    (110) var_row -> VAR tipo ID row IS LP lista2 . RP SEMICOL

    RP              shift and go to state 362


state 350

    (117) var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .

    VAR             reduce using rule 117 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    ID              reduce using rule 117 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    IF              reduce using rule 117 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    WHILE           reduce using rule 117 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    FOR             reduce using rule 117 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    PRINT           reduce using rule 117 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    READ            reduce using rule 117 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    RETURN          reduce using rule 117 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    RB              reduce using rule 117 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)


state 351

    (39) vars2 -> vars2_1 ID IS value SEMICOL .

    ID              reduce using rule 39 (vars2 -> vars2_1 ID IS value SEMICOL .)
    IF              reduce using rule 39 (vars2 -> vars2_1 ID IS value SEMICOL .)
    VAR             reduce using rule 39 (vars2 -> vars2_1 ID IS value SEMICOL .)
    WHILE           reduce using rule 39 (vars2 -> vars2_1 ID IS value SEMICOL .)
    FOR             reduce using rule 39 (vars2 -> vars2_1 ID IS value SEMICOL .)
    PRINT           reduce using rule 39 (vars2 -> vars2_1 ID IS value SEMICOL .)
    READ            reduce using rule 39 (vars2 -> vars2_1 ID IS value SEMICOL .)
    RETURN          reduce using rule 39 (vars2 -> vars2_1 ID IS value SEMICOL .)
    RB              reduce using rule 39 (vars2 -> vars2_1 ID IS value SEMICOL .)


state 352

    (40) vars2_1 -> vars2_1 ID IS value COMMA .

    ID              reduce using rule 40 (vars2_1 -> vars2_1 ID IS value COMMA .)


state 353

    (135) while -> WHILE guarda_num_salto LP expression RP check_bool gotof . LB statement RB goto

    LB              shift and go to state 363


state 354

    (136) for -> FOR LP VAR tipo ID IS value . SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto

    SEMICOL         shift and go to state 364


state 355

    (145) escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .

    ID              reduce using rule 145 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    IF              reduce using rule 145 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    VAR             reduce using rule 145 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    WHILE           reduce using rule 145 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    FOR             reduce using rule 145 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    PRINT           reduce using rule 145 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    READ            reduce using rule 145 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    RETURN          reduce using rule 145 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    RB              reduce using rule 145 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)


state 356

    (146) escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .

    ID              reduce using rule 146 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    IF              reduce using rule 146 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    VAR             reduce using rule 146 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    WHILE           reduce using rule 146 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    FOR             reduce using rule 146 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    PRINT           reduce using rule 146 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    READ            reduce using rule 146 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    RETURN          reduce using rule 146 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    RB              reduce using rule 146 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)


state 357

    (152) lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .

    ID              reduce using rule 152 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    IF              reduce using rule 152 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    VAR             reduce using rule 152 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    WHILE           reduce using rule 152 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    FOR             reduce using rule 152 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    PRINT           reduce using rule 152 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    READ            reduce using rule 152 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    RETURN          reduce using rule 152 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    RB              reduce using rule 152 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)


state 358

    (153) lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .

    ID              reduce using rule 153 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    IF              reduce using rule 153 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    VAR             reduce using rule 153 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    WHILE           reduce using rule 153 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    FOR             reduce using rule 153 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    PRINT           reduce using rule 153 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    READ            reduce using rule 153 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    RETURN          reduce using rule 153 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    RB              reduce using rule 153 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)


state 359

    (84) funcion -> tipo ID LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func .

    VOID            reduce using rule 84 (funcion -> tipo ID LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func .)
    INT             reduce using rule 84 (funcion -> tipo ID LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func .)
    FLOAT           reduce using rule 84 (funcion -> tipo ID LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func .)
    CHAR            reduce using rule 84 (funcion -> tipo ID LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func .)
    $end            reduce using rule 84 (funcion -> tipo ID LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func .)


state 360

    (107) func_return_param -> RETURN expr SEMICOL .

    RB              reduce using rule 107 (func_return_param -> RETURN expr SEMICOL .)


state 361

    (125) if -> IF LP expression RP check_bool gotof LB statement . RB fill_if
    (126) if -> IF LP expression RP check_bool gotof LB statement . RB goto fill_gotof else

    RB              shift and go to state 365


state 362

    (110) var_row -> VAR tipo ID row IS LP lista2 RP . SEMICOL

    SEMICOL         shift and go to state 366


state 363

    (135) while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB . statement RB goto
    (14) statement -> . asignacion SEMICOL statement
    (15) statement -> . if statement
    (16) statement -> . vars statement
    (17) statement -> . while statement
    (18) statement -> . for statement
    (19) statement -> . escritura statement
    (20) statement -> . escritura_var statement
    (21) statement -> . lectura statement
    (22) statement -> . func_call statement
    (23) statement -> . ID row SEMICOL
    (24) statement -> . ID matrix SEMICOL
    (25) statement -> . empty
    (26) asignacion -> . ID IS value
    (125) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (126) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (27) vars -> . VAR tipo vars1
    (28) vars -> . VAR tipo vars2
    (29) vars -> . VAR tipo vars3
    (30) vars -> . VAR tipo oper_aritmetica
    (31) vars -> . VAR tipo ID row SEMICOL
    (32) vars -> . VAR tipo ID matrix SEMICOL
    (33) vars -> . var_row
    (34) vars -> . var_row vars
    (35) vars -> . var_matrix
    (36) vars -> . var_matrix vars
    (37) vars -> . empty
    (135) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (136) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (145) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (146) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (147) escritura_var -> . PRINT LP any_var RP SEMICOL
    (152) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (153) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (101) func_call -> . ID LP RP SEMICOL
    (102) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (124) empty -> .
    (110) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (117) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 148
    IF              shift and go to state 150
    VAR             shift and go to state 151
    WHILE           shift and go to state 154
    FOR             shift and go to state 155
    PRINT           shift and go to state 156
    READ            shift and go to state 157
    RB              reduce using rule 124 (empty -> .)

  ! ID              [ reduce using rule 124 (empty -> .) ]
  ! IF              [ reduce using rule 124 (empty -> .) ]
  ! VAR             [ reduce using rule 124 (empty -> .) ]
  ! WHILE           [ reduce using rule 124 (empty -> .) ]
  ! FOR             [ reduce using rule 124 (empty -> .) ]
  ! PRINT           [ reduce using rule 124 (empty -> .) ]
  ! READ            [ reduce using rule 124 (empty -> .) ]

    statement                      shift and go to state 367
    asignacion                     shift and go to state 139
    if                             shift and go to state 140
    vars                           shift and go to state 141
    while                          shift and go to state 142
    for                            shift and go to state 143
    escritura                      shift and go to state 144
    escritura_var                  shift and go to state 145
    lectura                        shift and go to state 146
    func_call                      shift and go to state 147
    empty                          shift and go to state 149
    var_row                        shift and go to state 152
    var_matrix                     shift and go to state 153

state 364

    (136) for -> FOR LP VAR tipo ID IS value SEMICOL . expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (155) expression -> . var_gt
    (156) expression -> . var_lt
    (157) expression -> . var_equal
    (158) expression -> . var_neq
    (159) expression -> . var_geq
    (160) expression -> . var_leq
    (161) expression -> . expr
    (162) expression -> . TRUE
    (163) expression -> . FALSE
    (164) expression -> . ID
    (166) var_gt -> . expr GT expr
    (165) var_lt -> . expr LT expr
    (169) var_equal -> . expr EQUAL expr
    (170) var_neq -> . expr NEQ expr
    (168) var_geq -> . expr GEQ expr
    (167) var_leq -> . expr LEQ expr
    (172) expr -> . expr MUL expr
    (173) expr -> . expr DIV expr
    (174) expr -> . expr PLUS expr
    (175) expr -> . expr MINUS expr
    (176) expr -> . CTE_I
    (177) expr -> . CTE_F
    (178) expr -> . ID

    TRUE            shift and go to state 223
    FALSE           shift and go to state 224
    ID              shift and go to state 225
    CTE_I           shift and go to state 206
    CTE_F           shift and go to state 207

    expression                     shift and go to state 368
    var_gt                         shift and go to state 216
    var_lt                         shift and go to state 217
    var_equal                      shift and go to state 218
    var_neq                        shift and go to state 219
    var_geq                        shift and go to state 220
    var_leq                        shift and go to state 221
    expr                           shift and go to state 222

state 365

    (125) if -> IF LP expression RP check_bool gotof LB statement RB . fill_if
    (126) if -> IF LP expression RP check_bool gotof LB statement RB . goto fill_gotof else
    (133) fill_if -> .
    (128) goto -> .

    ID              reduce using rule 133 (fill_if -> .)
    IF              reduce using rule 133 (fill_if -> .)
    VAR             reduce using rule 133 (fill_if -> .)
    WHILE           reduce using rule 133 (fill_if -> .)
    FOR             reduce using rule 133 (fill_if -> .)
    PRINT           reduce using rule 133 (fill_if -> .)
    READ            reduce using rule 133 (fill_if -> .)
    RETURN          reduce using rule 133 (fill_if -> .)
    RB              reduce using rule 133 (fill_if -> .)
    ELSE            reduce using rule 128 (goto -> .)

    fill_if                        shift and go to state 369
    goto                           shift and go to state 370

state 366

    (110) var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .

    VAR             reduce using rule 110 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    ID              reduce using rule 110 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    IF              reduce using rule 110 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    WHILE           reduce using rule 110 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    FOR             reduce using rule 110 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    PRINT           reduce using rule 110 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    READ            reduce using rule 110 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    RETURN          reduce using rule 110 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    RB              reduce using rule 110 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)


state 367

    (135) while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB statement . RB goto

    RB              shift and go to state 371


state 368

    (136) for -> FOR LP VAR tipo ID IS value SEMICOL expression . check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (179) check_bool -> .

    SEMICOL         reduce using rule 179 (check_bool -> .)

    check_bool                     shift and go to state 372

state 369

    (125) if -> IF LP expression RP check_bool gotof LB statement RB fill_if .

    ID              reduce using rule 125 (if -> IF LP expression RP check_bool gotof LB statement RB fill_if .)
    IF              reduce using rule 125 (if -> IF LP expression RP check_bool gotof LB statement RB fill_if .)
    VAR             reduce using rule 125 (if -> IF LP expression RP check_bool gotof LB statement RB fill_if .)
    WHILE           reduce using rule 125 (if -> IF LP expression RP check_bool gotof LB statement RB fill_if .)
    FOR             reduce using rule 125 (if -> IF LP expression RP check_bool gotof LB statement RB fill_if .)
    PRINT           reduce using rule 125 (if -> IF LP expression RP check_bool gotof LB statement RB fill_if .)
    READ            reduce using rule 125 (if -> IF LP expression RP check_bool gotof LB statement RB fill_if .)
    RETURN          reduce using rule 125 (if -> IF LP expression RP check_bool gotof LB statement RB fill_if .)
    RB              reduce using rule 125 (if -> IF LP expression RP check_bool gotof LB statement RB fill_if .)


state 370

    (126) if -> IF LP expression RP check_bool gotof LB statement RB goto . fill_gotof else
    (131) fill_gotof -> .

    ELSE            reduce using rule 131 (fill_gotof -> .)

    fill_gotof                     shift and go to state 373

state 371

    (135) while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB . goto
    (128) goto -> .

    ID              reduce using rule 128 (goto -> .)
    IF              reduce using rule 128 (goto -> .)
    VAR             reduce using rule 128 (goto -> .)
    WHILE           reduce using rule 128 (goto -> .)
    FOR             reduce using rule 128 (goto -> .)
    PRINT           reduce using rule 128 (goto -> .)
    READ            reduce using rule 128 (goto -> .)
    RETURN          reduce using rule 128 (goto -> .)
    RB              reduce using rule 128 (goto -> .)

    goto                           shift and go to state 374

state 372

    (136) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool . gotof_for SEMICOL ID opers RP LB statement RB goto
    (137) gotof_for -> .

    SEMICOL         reduce using rule 137 (gotof_for -> .)

    gotof_for                      shift and go to state 375

state 373

    (126) if -> IF LP expression RP check_bool gotof LB statement RB goto fill_gotof . else
    (127) else -> . ELSE guarda_num_salto LB statement RB fill_goto_else

    ELSE            shift and go to state 377

    else                           shift and go to state 376

state 374

    (135) while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .

    ID              reduce using rule 135 (while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    IF              reduce using rule 135 (while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    VAR             reduce using rule 135 (while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    WHILE           reduce using rule 135 (while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    FOR             reduce using rule 135 (while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    PRINT           reduce using rule 135 (while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    READ            reduce using rule 135 (while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    RETURN          reduce using rule 135 (while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    RB              reduce using rule 135 (while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)


state 375

    (136) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for . SEMICOL ID opers RP LB statement RB goto

    SEMICOL         shift and go to state 378


state 376

    (126) if -> IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else .

    ID              reduce using rule 126 (if -> IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else .)
    IF              reduce using rule 126 (if -> IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else .)
    VAR             reduce using rule 126 (if -> IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else .)
    WHILE           reduce using rule 126 (if -> IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else .)
    FOR             reduce using rule 126 (if -> IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else .)
    PRINT           reduce using rule 126 (if -> IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else .)
    READ            reduce using rule 126 (if -> IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else .)
    RETURN          reduce using rule 126 (if -> IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else .)
    RB              reduce using rule 126 (if -> IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else .)


state 377

    (127) else -> ELSE . guarda_num_salto LB statement RB fill_goto_else
    (134) guarda_num_salto -> .

    LB              reduce using rule 134 (guarda_num_salto -> .)

    guarda_num_salto               shift and go to state 379

state 378

    (136) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL . ID opers RP LB statement RB goto

    ID              shift and go to state 380


state 379

    (127) else -> ELSE guarda_num_salto . LB statement RB fill_goto_else

    LB              shift and go to state 381


state 380

    (136) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID . opers RP LB statement RB goto
    (138) opers -> . IS value
    (139) opers -> . PLUS IS value
    (140) opers -> . MINUS IS value
    (141) opers -> . DIV IS value
    (142) opers -> . MUL IS value
    (143) opers -> . PLUS PLUS
    (144) opers -> . MINUS MINUS

    IS              shift and go to state 382
    PLUS            shift and go to state 384
    MINUS           shift and go to state 385
    DIV             shift and go to state 386
    MUL             shift and go to state 387

    opers                          shift and go to state 383

state 381

    (127) else -> ELSE guarda_num_salto LB . statement RB fill_goto_else
    (14) statement -> . asignacion SEMICOL statement
    (15) statement -> . if statement
    (16) statement -> . vars statement
    (17) statement -> . while statement
    (18) statement -> . for statement
    (19) statement -> . escritura statement
    (20) statement -> . escritura_var statement
    (21) statement -> . lectura statement
    (22) statement -> . func_call statement
    (23) statement -> . ID row SEMICOL
    (24) statement -> . ID matrix SEMICOL
    (25) statement -> . empty
    (26) asignacion -> . ID IS value
    (125) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (126) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (27) vars -> . VAR tipo vars1
    (28) vars -> . VAR tipo vars2
    (29) vars -> . VAR tipo vars3
    (30) vars -> . VAR tipo oper_aritmetica
    (31) vars -> . VAR tipo ID row SEMICOL
    (32) vars -> . VAR tipo ID matrix SEMICOL
    (33) vars -> . var_row
    (34) vars -> . var_row vars
    (35) vars -> . var_matrix
    (36) vars -> . var_matrix vars
    (37) vars -> . empty
    (135) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (136) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (145) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (146) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (147) escritura_var -> . PRINT LP any_var RP SEMICOL
    (152) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (153) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (101) func_call -> . ID LP RP SEMICOL
    (102) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (124) empty -> .
    (110) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (117) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 148
    IF              shift and go to state 150
    VAR             shift and go to state 151
    WHILE           shift and go to state 154
    FOR             shift and go to state 155
    PRINT           shift and go to state 156
    READ            shift and go to state 157
    RB              reduce using rule 124 (empty -> .)

  ! ID              [ reduce using rule 124 (empty -> .) ]
  ! IF              [ reduce using rule 124 (empty -> .) ]
  ! VAR             [ reduce using rule 124 (empty -> .) ]
  ! WHILE           [ reduce using rule 124 (empty -> .) ]
  ! FOR             [ reduce using rule 124 (empty -> .) ]
  ! PRINT           [ reduce using rule 124 (empty -> .) ]
  ! READ            [ reduce using rule 124 (empty -> .) ]

    statement                      shift and go to state 388
    asignacion                     shift and go to state 139
    if                             shift and go to state 140
    vars                           shift and go to state 141
    while                          shift and go to state 142
    for                            shift and go to state 143
    escritura                      shift and go to state 144
    escritura_var                  shift and go to state 145
    lectura                        shift and go to state 146
    func_call                      shift and go to state 147
    empty                          shift and go to state 149
    var_row                        shift and go to state 152
    var_matrix                     shift and go to state 153

state 382

    (138) opers -> IS . value
    (74) value -> . CTE_F
    (75) value -> . CTE_I
    (76) value -> . ID
    (77) value -> . CTE_C
    (78) value -> . COMILLA ID COMILLA
    (79) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 82
    CTE_I           shift and go to state 83
    ID              shift and go to state 80
    CTE_C           shift and go to state 84
    COMILLA         shift and go to state 85
    COMILLAS        shift and go to state 86

    value                          shift and go to state 389

state 383

    (136) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers . RP LB statement RB goto

    RP              shift and go to state 390


state 384

    (139) opers -> PLUS . IS value
    (143) opers -> PLUS . PLUS

    IS              shift and go to state 392
    PLUS            shift and go to state 391


state 385

    (140) opers -> MINUS . IS value
    (144) opers -> MINUS . MINUS

    IS              shift and go to state 394
    MINUS           shift and go to state 393


state 386

    (141) opers -> DIV . IS value

    IS              shift and go to state 395


state 387

    (142) opers -> MUL . IS value

    IS              shift and go to state 396


state 388

    (127) else -> ELSE guarda_num_salto LB statement . RB fill_goto_else

    RB              shift and go to state 397


state 389

    (138) opers -> IS value .

    RP              reduce using rule 138 (opers -> IS value .)


state 390

    (136) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP . LB statement RB goto

    LB              shift and go to state 398


state 391

    (143) opers -> PLUS PLUS .

    RP              reduce using rule 143 (opers -> PLUS PLUS .)


state 392

    (139) opers -> PLUS IS . value
    (74) value -> . CTE_F
    (75) value -> . CTE_I
    (76) value -> . ID
    (77) value -> . CTE_C
    (78) value -> . COMILLA ID COMILLA
    (79) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 82
    CTE_I           shift and go to state 83
    ID              shift and go to state 80
    CTE_C           shift and go to state 84
    COMILLA         shift and go to state 85
    COMILLAS        shift and go to state 86

    value                          shift and go to state 399

state 393

    (144) opers -> MINUS MINUS .

    RP              reduce using rule 144 (opers -> MINUS MINUS .)


state 394

    (140) opers -> MINUS IS . value
    (74) value -> . CTE_F
    (75) value -> . CTE_I
    (76) value -> . ID
    (77) value -> . CTE_C
    (78) value -> . COMILLA ID COMILLA
    (79) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 82
    CTE_I           shift and go to state 83
    ID              shift and go to state 80
    CTE_C           shift and go to state 84
    COMILLA         shift and go to state 85
    COMILLAS        shift and go to state 86

    value                          shift and go to state 400

state 395

    (141) opers -> DIV IS . value
    (74) value -> . CTE_F
    (75) value -> . CTE_I
    (76) value -> . ID
    (77) value -> . CTE_C
    (78) value -> . COMILLA ID COMILLA
    (79) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 82
    CTE_I           shift and go to state 83
    ID              shift and go to state 80
    CTE_C           shift and go to state 84
    COMILLA         shift and go to state 85
    COMILLAS        shift and go to state 86

    value                          shift and go to state 401

state 396

    (142) opers -> MUL IS . value
    (74) value -> . CTE_F
    (75) value -> . CTE_I
    (76) value -> . ID
    (77) value -> . CTE_C
    (78) value -> . COMILLA ID COMILLA
    (79) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 82
    CTE_I           shift and go to state 83
    ID              shift and go to state 80
    CTE_C           shift and go to state 84
    COMILLA         shift and go to state 85
    COMILLAS        shift and go to state 86

    value                          shift and go to state 402

state 397

    (127) else -> ELSE guarda_num_salto LB statement RB . fill_goto_else
    (130) fill_goto_else -> .

    ID              reduce using rule 130 (fill_goto_else -> .)
    IF              reduce using rule 130 (fill_goto_else -> .)
    VAR             reduce using rule 130 (fill_goto_else -> .)
    WHILE           reduce using rule 130 (fill_goto_else -> .)
    FOR             reduce using rule 130 (fill_goto_else -> .)
    PRINT           reduce using rule 130 (fill_goto_else -> .)
    READ            reduce using rule 130 (fill_goto_else -> .)
    RETURN          reduce using rule 130 (fill_goto_else -> .)
    RB              reduce using rule 130 (fill_goto_else -> .)

    fill_goto_else                 shift and go to state 403

state 398

    (136) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB . statement RB goto
    (14) statement -> . asignacion SEMICOL statement
    (15) statement -> . if statement
    (16) statement -> . vars statement
    (17) statement -> . while statement
    (18) statement -> . for statement
    (19) statement -> . escritura statement
    (20) statement -> . escritura_var statement
    (21) statement -> . lectura statement
    (22) statement -> . func_call statement
    (23) statement -> . ID row SEMICOL
    (24) statement -> . ID matrix SEMICOL
    (25) statement -> . empty
    (26) asignacion -> . ID IS value
    (125) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (126) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (27) vars -> . VAR tipo vars1
    (28) vars -> . VAR tipo vars2
    (29) vars -> . VAR tipo vars3
    (30) vars -> . VAR tipo oper_aritmetica
    (31) vars -> . VAR tipo ID row SEMICOL
    (32) vars -> . VAR tipo ID matrix SEMICOL
    (33) vars -> . var_row
    (34) vars -> . var_row vars
    (35) vars -> . var_matrix
    (36) vars -> . var_matrix vars
    (37) vars -> . empty
    (135) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (136) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (145) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (146) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (147) escritura_var -> . PRINT LP any_var RP SEMICOL
    (152) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (153) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (101) func_call -> . ID LP RP SEMICOL
    (102) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (124) empty -> .
    (110) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (117) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 148
    IF              shift and go to state 150
    VAR             shift and go to state 151
    WHILE           shift and go to state 154
    FOR             shift and go to state 155
    PRINT           shift and go to state 156
    READ            shift and go to state 157
    RB              reduce using rule 124 (empty -> .)

  ! ID              [ reduce using rule 124 (empty -> .) ]
  ! IF              [ reduce using rule 124 (empty -> .) ]
  ! VAR             [ reduce using rule 124 (empty -> .) ]
  ! WHILE           [ reduce using rule 124 (empty -> .) ]
  ! FOR             [ reduce using rule 124 (empty -> .) ]
  ! PRINT           [ reduce using rule 124 (empty -> .) ]
  ! READ            [ reduce using rule 124 (empty -> .) ]

    statement                      shift and go to state 404
    asignacion                     shift and go to state 139
    if                             shift and go to state 140
    vars                           shift and go to state 141
    while                          shift and go to state 142
    for                            shift and go to state 143
    escritura                      shift and go to state 144
    escritura_var                  shift and go to state 145
    lectura                        shift and go to state 146
    func_call                      shift and go to state 147
    empty                          shift and go to state 149
    var_row                        shift and go to state 152
    var_matrix                     shift and go to state 153

state 399

    (139) opers -> PLUS IS value .

    RP              reduce using rule 139 (opers -> PLUS IS value .)


state 400

    (140) opers -> MINUS IS value .

    RP              reduce using rule 140 (opers -> MINUS IS value .)


state 401

    (141) opers -> DIV IS value .

    RP              reduce using rule 141 (opers -> DIV IS value .)


state 402

    (142) opers -> MUL IS value .

    RP              reduce using rule 142 (opers -> MUL IS value .)


state 403

    (127) else -> ELSE guarda_num_salto LB statement RB fill_goto_else .

    ID              reduce using rule 127 (else -> ELSE guarda_num_salto LB statement RB fill_goto_else .)
    IF              reduce using rule 127 (else -> ELSE guarda_num_salto LB statement RB fill_goto_else .)
    VAR             reduce using rule 127 (else -> ELSE guarda_num_salto LB statement RB fill_goto_else .)
    WHILE           reduce using rule 127 (else -> ELSE guarda_num_salto LB statement RB fill_goto_else .)
    FOR             reduce using rule 127 (else -> ELSE guarda_num_salto LB statement RB fill_goto_else .)
    PRINT           reduce using rule 127 (else -> ELSE guarda_num_salto LB statement RB fill_goto_else .)
    READ            reduce using rule 127 (else -> ELSE guarda_num_salto LB statement RB fill_goto_else .)
    RETURN          reduce using rule 127 (else -> ELSE guarda_num_salto LB statement RB fill_goto_else .)
    RB              reduce using rule 127 (else -> ELSE guarda_num_salto LB statement RB fill_goto_else .)


state 404

    (136) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement . RB goto

    RB              shift and go to state 405


state 405

    (136) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB . goto
    (128) goto -> .

    ID              reduce using rule 128 (goto -> .)
    IF              reduce using rule 128 (goto -> .)
    VAR             reduce using rule 128 (goto -> .)
    WHILE           reduce using rule 128 (goto -> .)
    FOR             reduce using rule 128 (goto -> .)
    PRINT           reduce using rule 128 (goto -> .)
    READ            reduce using rule 128 (goto -> .)
    RETURN          reduce using rule 128 (goto -> .)
    RB              reduce using rule 128 (goto -> .)

    goto                           shift and go to state 406

state 406

    (136) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .

    ID              reduce using rule 136 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    IF              reduce using rule 136 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    VAR             reduce using rule 136 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    WHILE           reduce using rule 136 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    FOR             reduce using rule 136 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    PRINT           reduce using rule 136 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    READ            reduce using rule 136 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    RETURN          reduce using rule 136 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    RB              reduce using rule 136 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VOID in state 4 resolved as shift
WARNING: shift/reduce conflict for INT in state 4 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 4 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 4 resolved as shift
WARNING: shift/reduce conflict for VOID in state 6 resolved as shift
WARNING: shift/reduce conflict for INT in state 6 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 6 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 6 resolved as shift
WARNING: shift/reduce conflict for VOID in state 22 resolved as shift
WARNING: shift/reduce conflict for INT in state 22 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 22 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 22 resolved as shift
WARNING: shift/reduce conflict for ID in state 27 resolved as shift
WARNING: shift/reduce conflict for VOID in state 39 resolved as shift
WARNING: shift/reduce conflict for INT in state 39 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 39 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 39 resolved as shift
WARNING: shift/reduce conflict for RP in state 50 resolved as shift
WARNING: shift/reduce conflict for RP in state 52 resolved as shift
WARNING: shift/reduce conflict for RP in state 76 resolved as shift
WARNING: shift/reduce conflict for RP in state 77 resolved as shift
WARNING: shift/reduce conflict for ID in state 115 resolved as shift
WARNING: shift/reduce conflict for IF in state 115 resolved as shift
WARNING: shift/reduce conflict for VAR in state 115 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 115 resolved as shift
WARNING: shift/reduce conflict for FOR in state 115 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 115 resolved as shift
WARNING: shift/reduce conflict for READ in state 115 resolved as shift
WARNING: shift/reduce conflict for VAR in state 116 resolved as shift
WARNING: shift/reduce conflict for ID in state 119 resolved as shift
WARNING: shift/reduce conflict for IF in state 119 resolved as shift
WARNING: shift/reduce conflict for VAR in state 119 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 119 resolved as shift
WARNING: shift/reduce conflict for FOR in state 119 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 119 resolved as shift
WARNING: shift/reduce conflict for READ in state 119 resolved as shift
WARNING: shift/reduce conflict for VAR in state 121 resolved as shift
WARNING: shift/reduce conflict for ID in state 140 resolved as shift
WARNING: shift/reduce conflict for IF in state 140 resolved as shift
WARNING: shift/reduce conflict for VAR in state 140 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 140 resolved as shift
WARNING: shift/reduce conflict for FOR in state 140 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 140 resolved as shift
WARNING: shift/reduce conflict for READ in state 140 resolved as shift
WARNING: shift/reduce conflict for ID in state 141 resolved as shift
WARNING: shift/reduce conflict for IF in state 141 resolved as shift
WARNING: shift/reduce conflict for VAR in state 141 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 141 resolved as shift
WARNING: shift/reduce conflict for FOR in state 141 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 141 resolved as shift
WARNING: shift/reduce conflict for READ in state 141 resolved as shift
WARNING: shift/reduce conflict for ID in state 142 resolved as shift
WARNING: shift/reduce conflict for IF in state 142 resolved as shift
WARNING: shift/reduce conflict for VAR in state 142 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 142 resolved as shift
WARNING: shift/reduce conflict for FOR in state 142 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 142 resolved as shift
WARNING: shift/reduce conflict for READ in state 142 resolved as shift
WARNING: shift/reduce conflict for ID in state 143 resolved as shift
WARNING: shift/reduce conflict for IF in state 143 resolved as shift
WARNING: shift/reduce conflict for VAR in state 143 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 143 resolved as shift
WARNING: shift/reduce conflict for FOR in state 143 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 143 resolved as shift
WARNING: shift/reduce conflict for READ in state 143 resolved as shift
WARNING: shift/reduce conflict for ID in state 144 resolved as shift
WARNING: shift/reduce conflict for IF in state 144 resolved as shift
WARNING: shift/reduce conflict for VAR in state 144 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 144 resolved as shift
WARNING: shift/reduce conflict for FOR in state 144 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 144 resolved as shift
WARNING: shift/reduce conflict for READ in state 144 resolved as shift
WARNING: shift/reduce conflict for ID in state 145 resolved as shift
WARNING: shift/reduce conflict for IF in state 145 resolved as shift
WARNING: shift/reduce conflict for VAR in state 145 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 145 resolved as shift
WARNING: shift/reduce conflict for FOR in state 145 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 145 resolved as shift
WARNING: shift/reduce conflict for READ in state 145 resolved as shift
WARNING: shift/reduce conflict for ID in state 146 resolved as shift
WARNING: shift/reduce conflict for IF in state 146 resolved as shift
WARNING: shift/reduce conflict for VAR in state 146 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 146 resolved as shift
WARNING: shift/reduce conflict for FOR in state 146 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 146 resolved as shift
WARNING: shift/reduce conflict for READ in state 146 resolved as shift
WARNING: shift/reduce conflict for ID in state 147 resolved as shift
WARNING: shift/reduce conflict for IF in state 147 resolved as shift
WARNING: shift/reduce conflict for VAR in state 147 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 147 resolved as shift
WARNING: shift/reduce conflict for FOR in state 147 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 147 resolved as shift
WARNING: shift/reduce conflict for READ in state 147 resolved as shift
WARNING: shift/reduce conflict for VAR in state 152 resolved as shift
WARNING: shift/reduce conflict for VAR in state 152 resolved as shift
WARNING: shift/reduce conflict for VAR in state 153 resolved as shift
WARNING: shift/reduce conflict for VAR in state 153 resolved as shift
WARNING: shift/reduce conflict for ID in state 158 resolved as shift
WARNING: shift/reduce conflict for IF in state 158 resolved as shift
WARNING: shift/reduce conflict for VAR in state 158 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 158 resolved as shift
WARNING: shift/reduce conflict for FOR in state 158 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 158 resolved as shift
WARNING: shift/reduce conflict for READ in state 158 resolved as shift
WARNING: shift/reduce conflict for VAR in state 161 resolved as shift
WARNING: shift/reduce conflict for VAR in state 164 resolved as shift
WARNING: shift/reduce conflict for ID in state 165 resolved as shift
WARNING: shift/reduce conflict for IF in state 165 resolved as shift
WARNING: shift/reduce conflict for VAR in state 165 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 165 resolved as shift
WARNING: shift/reduce conflict for FOR in state 165 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 165 resolved as shift
WARNING: shift/reduce conflict for READ in state 165 resolved as shift
WARNING: shift/reduce conflict for ID in state 174 resolved as shift
WARNING: shift/reduce conflict for IF in state 174 resolved as shift
WARNING: shift/reduce conflict for VAR in state 174 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 174 resolved as shift
WARNING: shift/reduce conflict for FOR in state 174 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 174 resolved as shift
WARNING: shift/reduce conflict for READ in state 174 resolved as shift
WARNING: shift/reduce conflict for ID in state 188 resolved as shift
WARNING: shift/reduce conflict for ID in state 196 resolved as shift
WARNING: shift/reduce conflict for IF in state 196 resolved as shift
WARNING: shift/reduce conflict for VAR in state 196 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 196 resolved as shift
WARNING: shift/reduce conflict for FOR in state 196 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 196 resolved as shift
WARNING: shift/reduce conflict for READ in state 196 resolved as shift
WARNING: shift/reduce conflict for ID in state 198 resolved as shift
WARNING: shift/reduce conflict for IF in state 198 resolved as shift
WARNING: shift/reduce conflict for VAR in state 198 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 198 resolved as shift
WARNING: shift/reduce conflict for FOR in state 198 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 198 resolved as shift
WARNING: shift/reduce conflict for READ in state 198 resolved as shift
WARNING: shift/reduce conflict for CTE_I in state 274 resolved as shift
WARNING: shift/reduce conflict for CTE_F in state 274 resolved as shift
WARNING: shift/reduce conflict for ID in state 274 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 274 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 274 resolved as shift
WARNING: shift/reduce conflict for ID in state 348 resolved as shift
WARNING: shift/reduce conflict for IF in state 348 resolved as shift
WARNING: shift/reduce conflict for VAR in state 348 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 348 resolved as shift
WARNING: shift/reduce conflict for FOR in state 348 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 348 resolved as shift
WARNING: shift/reduce conflict for READ in state 348 resolved as shift
WARNING: shift/reduce conflict for ID in state 363 resolved as shift
WARNING: shift/reduce conflict for IF in state 363 resolved as shift
WARNING: shift/reduce conflict for VAR in state 363 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 363 resolved as shift
WARNING: shift/reduce conflict for FOR in state 363 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 363 resolved as shift
WARNING: shift/reduce conflict for READ in state 363 resolved as shift
WARNING: shift/reduce conflict for ID in state 381 resolved as shift
WARNING: shift/reduce conflict for IF in state 381 resolved as shift
WARNING: shift/reduce conflict for VAR in state 381 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 381 resolved as shift
WARNING: shift/reduce conflict for FOR in state 381 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 381 resolved as shift
WARNING: shift/reduce conflict for READ in state 381 resolved as shift
WARNING: shift/reduce conflict for ID in state 398 resolved as shift
WARNING: shift/reduce conflict for IF in state 398 resolved as shift
WARNING: shift/reduce conflict for VAR in state 398 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 398 resolved as shift
WARNING: shift/reduce conflict for FOR in state 398 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 398 resolved as shift
WARNING: shift/reduce conflict for READ in state 398 resolved as shift
WARNING: reduce/reduce conflict in state 6 resolved using rule (programa1 -> varsG)
WARNING: rejected rule (empty -> <empty>) in state 6
WARNING: reduce/reduce conflict in state 11 resolved using rule (varsG -> var_rowG)
WARNING: rejected rule (empty -> <empty>) in state 11
WARNING: reduce/reduce conflict in state 12 resolved using rule (varsG -> var_matrixG)
WARNING: rejected rule (empty -> <empty>) in state 12
WARNING: reduce/reduce conflict in state 13 resolved using rule (varsG -> declarar_func)
WARNING: rejected rule (empty -> <empty>) in state 13
WARNING: reduce/reduce conflict in state 14 resolved using rule (funciones -> empty)
WARNING: rejected rule (varsG -> empty) in state 14
WARNING: reduce/reduce conflict in state 47 resolved using rule (vars2_1G -> empty)
WARNING: rejected rule (vars3_1G -> empty) in state 47
WARNING: reduce/reduce conflict in state 61 resolved using rule (vars1G -> ID SEMICOL)
WARNING: rejected rule (vars3G -> ID SEMICOL) in state 61
WARNING: reduce/reduce conflict in state 149 resolved using rule (statement -> empty)
WARNING: rejected rule (vars -> empty) in state 149
WARNING: reduce/reduce conflict in state 152 resolved using rule (vars -> var_row)
WARNING: rejected rule (empty -> <empty>) in state 152
WARNING: reduce/reduce conflict in state 153 resolved using rule (vars -> var_matrix)
WARNING: rejected rule (empty -> <empty>) in state 153
WARNING: reduce/reduce conflict in state 225 resolved using rule (expression -> ID)
WARNING: rejected rule (expr -> ID) in state 225
WARNING: reduce/reduce conflict in state 233 resolved using rule (vars2_1 -> empty)
WARNING: rejected rule (vars3_1 -> empty) in state 233
WARNING: reduce/reduce conflict in state 265 resolved using rule (vars1 -> ID SEMICOL)
WARNING: rejected rule (vars3 -> ID SEMICOL) in state 265
WARNING: reduce/reduce conflict in state 274 resolved using rule (empty -> <empty>)
WARNING: rejected rule (expression -> expr) in state 274
WARNING: reduce/reduce conflict in state 277 resolved using rule (expression -> ID)
WARNING: rejected rule (expr -> ID) in state 277
WARNING: reduce/reduce conflict in state 306 resolved using rule (value -> ID)
WARNING: rejected rule (expr -> ID) in state 306
WARNING: reduce/reduce conflict in state 309 resolved using rule (value -> CTE_F)
WARNING: rejected rule (expr -> CTE_F) in state 309
WARNING: reduce/reduce conflict in state 310 resolved using rule (value -> CTE_I)
WARNING: rejected rule (expr -> CTE_I) in state 310
WARNING: Rule (vars3_1G -> empty) is never reduced
WARNING: Rule (vars3G -> ID SEMICOL) is never reduced
WARNING: Rule (vars3_1 -> empty) is never reduced
WARNING: Rule (vars3 -> ID SEMICOL) is never reduced
