Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BEGIN
    BOOL
    COL
    CONST
    CTE_B
    CTE_S
    DETERMATRIZ
    DO
    DOT
    ELIF
    ELSEIF
    END
    EOF
    GLOBAL
    INPUT
    INVERMATRIZ
    LET
    LOCAL
    NOT
    OR
    SELECT
    SWITCH
    THEN
    TRANSMATRIZ

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SEMICOL programa1
Rule 2     programa1 -> varsG quad_main funciones end
Rule 3     programa1 -> varsG quad_main funciones main funciones end
Rule 4     programa1 -> varsG quad_main main funciones end
Rule 5     programa1 -> varsG end
Rule 6     programa1 -> quad_main main end
Rule 7     programa1 -> funciones end
Rule 8     funciones -> funcion
Rule 9     funciones -> funciones funcion
Rule 10    funciones -> empty
Rule 11    main -> tipo MAIN quad_main2 LP RP LB statement add_func_main func_return_main RB
Rule 12    main -> VOID MAIN quad_main2 LP RP LB statement add_func_main RB
Rule 13    quad_main -> <empty>
Rule 14    quad_main2 -> <empty>
Rule 15    statement -> asignacion SEMICOL statement
Rule 16    statement -> if statement
Rule 17    statement -> vars statement
Rule 18    statement -> while statement
Rule 19    statement -> for statement
Rule 20    statement -> escritura statement
Rule 21    statement -> escritura_var statement
Rule 22    statement -> lectura statement
Rule 23    statement -> func_call statement
Rule 24    statement -> ID row SEMICOL
Rule 25    statement -> ID matrix SEMICOL
Rule 26    statement -> empty
Rule 27    asignacion -> ID IS value
Rule 28    vars -> VAR tipo vars1
Rule 29    vars -> VAR tipo vars2
Rule 30    vars -> VAR tipo vars3
Rule 31    vars -> VAR tipo oper_aritmetica
Rule 32    vars -> VAR tipo ID row SEMICOL
Rule 33    vars -> VAR tipo ID matrix SEMICOL
Rule 34    vars -> var_row
Rule 35    vars -> var_row vars
Rule 36    vars -> var_matrix
Rule 37    vars -> var_matrix vars
Rule 38    vars -> empty
Rule 39    vars1 -> ID SEMICOL
Rule 40    vars2 -> vars2_1 ID IS value SEMICOL
Rule 41    vars2_1 -> vars2_1 ID IS value COMMA
Rule 42    vars2_1 -> ID IS value COMMA
Rule 43    vars2_1 -> empty
Rule 44    vars2 -> ID IS value SEMICOL
Rule 45    vars3 -> vars3_1 ID SEMICOL
Rule 46    vars3_1 -> vars3_1 ID COMMA
Rule 47    vars3_1 -> ID COMMA
Rule 48    vars3 -> ID SEMICOL
Rule 49    vars3_1 -> empty
Rule 50    varsG -> VAR tipo vars1G varsG
Rule 51    varsG -> VAR tipo vars2G varsG
Rule 52    varsG -> VAR tipo vars3G varsG
Rule 53    varsG -> VAR LB varsG RB
Rule 54    varsG -> var_rowG
Rule 55    varsG -> var_rowG varsG
Rule 56    varsG -> var_matrixG
Rule 57    varsG -> var_matrixG varsG
Rule 58    varsG -> declarar_func varsG
Rule 59    varsG -> declarar_func
Rule 60    varsG -> empty
Rule 61    vars1G -> ID SEMICOL
Rule 62    vars2G -> vars2_1G ID IS value SEMICOL
Rule 63    vars2_1G -> vars2_1G ID IS value COMMA
Rule 64    vars2_1G -> ID IS value COMMA
Rule 65    vars2_1G -> empty
Rule 66    vars2G -> ID IS value SEMICOL
Rule 67    vars3G -> vars3_1G ID SEMICOL
Rule 68    vars3_1G -> vars3_1G ID COMMA
Rule 69    vars3_1G -> ID COMMA
Rule 70    vars3G -> ID SEMICOL
Rule 71    vars3_1G -> empty
Rule 72    tipo -> INT
Rule 73    tipo -> FLOAT
Rule 74    tipo -> CHAR
Rule 75    value -> CTE_F
Rule 76    value -> CTE_I
Rule 77    value -> ID
Rule 78    value -> CTE_C
Rule 79    value -> COMILLA ID COMILLA
Rule 80    value -> COMILLAS ID COMILLAS
Rule 81    check_type -> <empty>
Rule 82    add_fun -> <empty>
Rule 83    funcion -> VOID ID add_fun LP param RP verificar LB var_func statement RB end_func
Rule 84    funcion -> VOID ID add_fun LP RP verificar2 LB var_func statement RB end_func
Rule 85    funcion -> tipo ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
Rule 86    funcion -> tipo ID add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
Rule 87    verificar -> <empty>
Rule 88    verificar2 -> <empty>
Rule 89    add_func_dir -> <empty>
Rule 90    add_func_dir2 -> <empty>
Rule 91    add_func_main -> <empty>
Rule 92    var_func -> vars
Rule 93    param -> tipo ID
Rule 94    param -> param COMMA tipo ID
Rule 95    param -> empty
Rule 96    declarar_func -> FUNC tipo ID LP RP SEMICOL
Rule 97    declarar_func -> FUNC VOID ID LP RP SEMICOL
Rule 98    declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL
Rule 99    declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL
Rule 100   declarar_param -> tipo COMMA declarar_param
Rule 101   declarar_param -> tipo declarar_param
Rule 102   declarar_param -> empty
Rule 103   end_func -> <empty>
Rule 104   func_call -> ID LP RP SEMICOL
Rule 105   func_call -> ID LP func_era func_call_param RP SEMICOL
Rule 106   func_era -> <empty>
Rule 107   func_call_param -> expr
Rule 108   func_call_param -> func_call_param COMMA expr
Rule 109   func_return -> RETURN expr SEMICOL
Rule 110   func_return_param -> RETURN expr SEMICOL
Rule 111   func_return_main -> RETURN expr SEMICOL
Rule 112   end -> <empty>
Rule 113   var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL
Rule 114   var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL
Rule 115   elem_lista -> value
Rule 116   elem_lista -> empty
Rule 117   lista2 -> elem_lista COMMA lista2
Rule 118   lista2 -> elem_lista COMMA elem_lista
Rule 119   row -> LC CTE_I RC
Rule 120   var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL
Rule 121   var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL
Rule 122   matrix2 -> LP lista2 RP COMMA matrix2
Rule 123   matrix2 -> LP lista2 RP COMMA LP lista2 RP
Rule 124   row_list -> row COMMA row_list
Rule 125   row_list -> row COMMA row
Rule 126   matrix -> row row
Rule 127   empty -> <empty>
Rule 128   if -> IF LP expression RP check_bool gotof LB statement RB fill_if
Rule 129   if -> IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
Rule 130   else -> ELSE guarda_num_salto LB statement RB fill_goto_else
Rule 131   goto -> <empty>
Rule 132   gotof -> <empty>
Rule 133   fill_goto_else -> <empty>
Rule 134   fill_gotof -> <empty>
Rule 135   fill_gotof2 -> <empty>
Rule 136   fill_if -> <empty>
Rule 137   guarda_num_salto -> <empty>
Rule 138   while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
Rule 139   for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
Rule 140   gotof_for -> <empty>
Rule 141   opers -> IS value
Rule 142   opers -> PLUS IS value
Rule 143   opers -> MINUS IS value
Rule 144   opers -> DIV IS value
Rule 145   opers -> MUL IS value
Rule 146   opers -> PLUS PLUS
Rule 147   opers -> MINUS MINUS
Rule 148   escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL
Rule 149   escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL
Rule 150   escritura_var -> PRINT LP any_var RP SEMICOL
Rule 151   any_var -> ID
Rule 152   any -> expr any
Rule 153   any -> expression any
Rule 154   any -> empty
Rule 155   lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL
Rule 156   lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
Rule 157   any_lectura -> ID
Rule 158   expression -> var_gt
Rule 159   expression -> var_lt
Rule 160   expression -> var_equal
Rule 161   expression -> var_neq
Rule 162   expression -> var_geq
Rule 163   expression -> var_leq
Rule 164   expression -> expr
Rule 165   expression -> TRUE
Rule 166   expression -> FALSE
Rule 167   expression -> ID
Rule 168   var_lt -> expr LT expr
Rule 169   var_gt -> expr GT expr
Rule 170   var_leq -> expr LEQ expr
Rule 171   var_geq -> expr GEQ expr
Rule 172   var_equal -> expr EQUAL expr
Rule 173   var_neq -> expr NEQ expr
Rule 174   oper_aritmetica -> ID IS expr SEMICOL
Rule 175   expr -> expr MUL expr
Rule 176   expr -> expr DIV expr
Rule 177   expr -> expr PLUS expr
Rule 178   expr -> expr MINUS expr
Rule 179   expr -> CTE_I
Rule 180   expr -> CTE_F
Rule 181   expr -> ID
Rule 182   check_bool -> <empty>

Terminals, with rules where they appear

AND                  : 
BEGIN                : 
BOOL                 : 
CHAR                 : 74
COL                  : 
COMILLA              : 79 79 148 148 155 155
COMILLAS             : 80 80 149 149 156 156
COMMA                : 41 42 46 47 63 64 68 69 94 100 108 117 118 122 123 124 125
CONST                : 
CTE_B                : 
CTE_C                : 78
CTE_F                : 75 180
CTE_I                : 76 119 179
CTE_S                : 
DETERMATRIZ          : 
DIV                  : 144 176
DO                   : 
DOT                  : 
ELIF                 : 
ELSE                 : 130
ELSEIF               : 
END                  : 
EOF                  : 
EQUAL                : 172
FALSE                : 166
FLOAT                : 73
FOR                  : 139
FUNC                 : 96 97 98 99
GEQ                  : 171
GLOBAL               : 
GT                   : 169
ID                   : 1 24 25 27 32 33 39 40 41 42 44 45 46 47 48 61 62 63 64 66 67 68 69 70 77 79 80 83 84 85 86 93 94 96 97 98 99 104 105 113 114 120 121 139 139 151 157 167 174 181
IF                   : 128 129
INPUT                : 
INT                  : 72
INVERMATRIZ          : 
IS                   : 27 40 41 42 44 62 63 64 66 113 114 120 121 139 141 142 143 144 145 174
LB                   : 11 12 53 83 84 85 86 128 129 130 138 139
LC                   : 119
LEQ                  : 170
LET                  : 
LOCAL                : 
LP                   : 11 12 83 84 85 86 96 97 98 99 104 105 113 114 122 123 123 128 129 138 139 148 149 150 155 156
LT                   : 168
MAIN                 : 11 12
MINUS                : 143 147 147 178
MUL                  : 145 175
NEQ                  : 173
NOT                  : 
OR                   : 
PLUS                 : 142 146 146 177
PRINT                : 148 149 150
PROGRAM              : 1
RB                   : 11 12 53 83 84 85 86 128 129 130 138 139
RC                   : 119
READ                 : 155 156
RETURN               : 109 110 111
RP                   : 11 12 83 84 85 86 96 97 98 99 104 105 113 114 122 123 123 128 129 138 139 148 149 150 155 156
SELECT               : 
SEMICOL              : 1 15 24 25 32 33 39 40 44 45 48 61 62 66 67 70 96 97 98 99 104 105 109 110 111 113 114 120 121 139 139 148 149 150 155 156 174
SWITCH               : 
THEN                 : 
TRANSMATRIZ          : 
TRUE                 : 165
VAR                  : 28 29 30 31 32 33 50 51 52 53 113 114 120 121 139
VOID                 : 12 83 84 97 99
WHILE                : 138
error                : 

Nonterminals, with rules where they appear

add_fun              : 83 84 85 86
add_func_dir         : 86
add_func_dir2        : 85
add_func_main        : 11 12
any                  : 148 149 152 153
any_lectura          : 155 156
any_var              : 150
asignacion           : 15
check_bool           : 128 129 138 139
check_type           : 
declarar_func        : 58 59
declarar_param       : 98 99 100 101
elem_lista           : 117 118 118
else                 : 129
empty                : 10 26 38 43 49 60 65 71 95 102 116 154
end                  : 2 3 4 5 6 7
end_func             : 83 84 85 86
escritura            : 20
escritura_var        : 21
expr                 : 107 108 109 110 111 152 164 168 168 169 169 170 170 171 171 172 172 173 173 174 175 175 176 176 177 177 178 178
expression           : 128 129 138 139 153
fill_goto_else       : 130
fill_gotof           : 129
fill_gotof2          : 
fill_if              : 128
for                  : 19
func_call            : 23
func_call_param      : 105 108
func_era             : 105
func_return          : 85
func_return_main     : 11
func_return_param    : 86
funcion              : 8 9
funciones            : 2 3 3 4 7 9
goto                 : 129 138 139
gotof                : 128 129 138
gotof_for            : 139
guarda_num_salto     : 130 138
if                   : 16
lectura              : 22
lista2               : 113 114 117 122 123 123
main                 : 3 4 6
matrix               : 25 33 120 121
matrix2              : 120 121 122
oper_aritmetica      : 31
opers                : 139
param                : 83 86 94
programa             : 0
programa1            : 1
quad_main            : 2 3 4 6
quad_main2           : 11 12
row                  : 24 32 113 114 124 125 125 126 126
row_list             : 124
statement            : 11 12 15 16 17 18 19 20 21 22 23 83 84 85 86 128 129 130 138 139
tipo                 : 11 28 29 30 31 32 33 50 51 52 85 86 93 94 96 98 100 101 113 114 120 121 139
value                : 27 40 41 42 44 62 63 64 66 115 139 141 142 143 144 145
var_equal            : 160
var_func             : 83 84 85 86
var_geq              : 162
var_gt               : 158
var_leq              : 163
var_lt               : 159
var_matrix           : 36 37
var_matrixG          : 56 57
var_neq              : 161
var_row              : 34 35
var_rowG             : 54 55
vars                 : 17 35 37 92
vars1                : 28
vars1G               : 50
vars2                : 29
vars2G               : 51
vars2_1              : 40 41
vars2_1G             : 62 63
vars3                : 30
vars3G               : 52
vars3_1              : 45 46
vars3_1G             : 67 68
varsG                : 2 3 4 5 50 51 52 53 55 57 58
verificar            : 83 86
verificar2           : 84 85
while                : 18

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SEMICOL programa1

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID SEMICOL programa1

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . SEMICOL programa1

    SEMICOL         shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SEMICOL . programa1
    (2) programa1 -> . varsG quad_main funciones end
    (3) programa1 -> . varsG quad_main funciones main funciones end
    (4) programa1 -> . varsG quad_main main funciones end
    (5) programa1 -> . varsG end
    (6) programa1 -> . quad_main main end
    (7) programa1 -> . funciones end
    (50) varsG -> . VAR tipo vars1G varsG
    (51) varsG -> . VAR tipo vars2G varsG
    (52) varsG -> . VAR tipo vars3G varsG
    (53) varsG -> . VAR LB varsG RB
    (54) varsG -> . var_rowG
    (55) varsG -> . var_rowG varsG
    (56) varsG -> . var_matrixG
    (57) varsG -> . var_matrixG varsG
    (58) varsG -> . declarar_func varsG
    (59) varsG -> . declarar_func
    (60) varsG -> . empty
    (13) quad_main -> .
    (8) funciones -> . funcion
    (9) funciones -> . funciones funcion
    (10) funciones -> . empty
    (114) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (121) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (96) declarar_func -> . FUNC tipo ID LP RP SEMICOL
    (97) declarar_func -> . FUNC VOID ID LP RP SEMICOL
    (98) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (99) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL
    (127) empty -> .
    (83) funcion -> . VOID ID add_fun LP param RP verificar LB var_func statement RB end_func
    (84) funcion -> . VOID ID add_fun LP RP verificar2 LB var_func statement RB end_func
    (85) funcion -> . tipo ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (86) funcion -> . tipo ID add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR

  ! reduce/reduce conflict for VOID resolved using rule 13 (quad_main -> .)
  ! reduce/reduce conflict for INT resolved using rule 13 (quad_main -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 13 (quad_main -> .)
  ! reduce/reduce conflict for CHAR resolved using rule 13 (quad_main -> .)
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    VAR             shift and go to state 9
    FUNC            shift and go to state 16
    $end            reduce using rule 127 (empty -> .)
    VOID            shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

  ! VOID            [ reduce using rule 13 (quad_main -> .) ]
  ! INT             [ reduce using rule 13 (quad_main -> .) ]
  ! FLOAT           [ reduce using rule 13 (quad_main -> .) ]
  ! CHAR            [ reduce using rule 13 (quad_main -> .) ]
  ! VOID            [ reduce using rule 127 (empty -> .) ]
  ! INT             [ reduce using rule 127 (empty -> .) ]
  ! FLOAT           [ reduce using rule 127 (empty -> .) ]
  ! CHAR            [ reduce using rule 127 (empty -> .) ]

    programa1                      shift and go to state 5
    varsG                          shift and go to state 6
    quad_main                      shift and go to state 7
    funciones                      shift and go to state 8
    tipo                           shift and go to state 10
    var_rowG                       shift and go to state 11
    var_matrixG                    shift and go to state 12
    declarar_func                  shift and go to state 13
    empty                          shift and go to state 14
    funcion                        shift and go to state 15

state 5

    (1) programa -> PROGRAM ID SEMICOL programa1 .

    $end            reduce using rule 1 (programa -> PROGRAM ID SEMICOL programa1 .)


state 6

    (2) programa1 -> varsG . quad_main funciones end
    (3) programa1 -> varsG . quad_main funciones main funciones end
    (4) programa1 -> varsG . quad_main main funciones end
    (5) programa1 -> varsG . end
    (13) quad_main -> .
    (112) end -> .

  ! reduce/reduce conflict for $end resolved using rule 13 (quad_main -> .)
    VOID            reduce using rule 13 (quad_main -> .)
    INT             reduce using rule 13 (quad_main -> .)
    FLOAT           reduce using rule 13 (quad_main -> .)
    CHAR            reduce using rule 13 (quad_main -> .)
    $end            reduce using rule 13 (quad_main -> .)

  ! $end            [ reduce using rule 112 (end -> .) ]

    quad_main                      shift and go to state 21
    end                            shift and go to state 22

state 7

    (6) programa1 -> quad_main . main end
    (11) main -> . tipo MAIN quad_main2 LP RP LB statement add_func_main func_return_main RB
    (12) main -> . VOID MAIN quad_main2 LP RP LB statement add_func_main RB
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR

    VOID            shift and go to state 25
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    main                           shift and go to state 23
    tipo                           shift and go to state 24

state 8

    (7) programa1 -> funciones . end
    (9) funciones -> funciones . funcion
    (112) end -> .
    (83) funcion -> . VOID ID add_fun LP param RP verificar LB var_func statement RB end_func
    (84) funcion -> . VOID ID add_fun LP RP verificar2 LB var_func statement RB end_func
    (85) funcion -> . tipo ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (86) funcion -> . tipo ID add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR

    $end            reduce using rule 112 (end -> .)
    VOID            shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    end                            shift and go to state 26
    funcion                        shift and go to state 27
    tipo                           shift and go to state 10

state 9

    (50) varsG -> VAR . tipo vars1G varsG
    (51) varsG -> VAR . tipo vars2G varsG
    (52) varsG -> VAR . tipo vars3G varsG
    (53) varsG -> VAR . LB varsG RB
    (114) var_rowG -> VAR . tipo ID row IS LP lista2 RP SEMICOL
    (121) var_matrixG -> VAR . tipo ID matrix IS matrix2 SEMICOL
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR

    LB              shift and go to state 29
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    tipo                           shift and go to state 28

state 10

    (85) funcion -> tipo . ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (86) funcion -> tipo . ID add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func

    ID              shift and go to state 30


state 11

    (54) varsG -> var_rowG .
    (55) varsG -> var_rowG . varsG
    (50) varsG -> . VAR tipo vars1G varsG
    (51) varsG -> . VAR tipo vars2G varsG
    (52) varsG -> . VAR tipo vars3G varsG
    (53) varsG -> . VAR LB varsG RB
    (54) varsG -> . var_rowG
    (55) varsG -> . var_rowG varsG
    (56) varsG -> . var_matrixG
    (57) varsG -> . var_matrixG varsG
    (58) varsG -> . declarar_func varsG
    (59) varsG -> . declarar_func
    (60) varsG -> . empty
    (114) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (121) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (96) declarar_func -> . FUNC tipo ID LP RP SEMICOL
    (97) declarar_func -> . FUNC VOID ID LP RP SEMICOL
    (98) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (99) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL
    (127) empty -> .

  ! reduce/reduce conflict for VOID resolved using rule 54 (varsG -> var_rowG .)
  ! reduce/reduce conflict for INT resolved using rule 54 (varsG -> var_rowG .)
  ! reduce/reduce conflict for FLOAT resolved using rule 54 (varsG -> var_rowG .)
  ! reduce/reduce conflict for CHAR resolved using rule 54 (varsG -> var_rowG .)
  ! reduce/reduce conflict for $end resolved using rule 54 (varsG -> var_rowG .)
  ! reduce/reduce conflict for RB resolved using rule 54 (varsG -> var_rowG .)
    VOID            reduce using rule 54 (varsG -> var_rowG .)
    INT             reduce using rule 54 (varsG -> var_rowG .)
    FLOAT           reduce using rule 54 (varsG -> var_rowG .)
    CHAR            reduce using rule 54 (varsG -> var_rowG .)
    $end            reduce using rule 54 (varsG -> var_rowG .)
    RB              reduce using rule 54 (varsG -> var_rowG .)
    VAR             shift and go to state 9
    FUNC            shift and go to state 16

  ! VOID            [ reduce using rule 127 (empty -> .) ]
  ! INT             [ reduce using rule 127 (empty -> .) ]
  ! FLOAT           [ reduce using rule 127 (empty -> .) ]
  ! CHAR            [ reduce using rule 127 (empty -> .) ]
  ! $end            [ reduce using rule 127 (empty -> .) ]
  ! RB              [ reduce using rule 127 (empty -> .) ]

    var_rowG                       shift and go to state 11
    varsG                          shift and go to state 31
    var_matrixG                    shift and go to state 12
    declarar_func                  shift and go to state 13
    empty                          shift and go to state 32

state 12

    (56) varsG -> var_matrixG .
    (57) varsG -> var_matrixG . varsG
    (50) varsG -> . VAR tipo vars1G varsG
    (51) varsG -> . VAR tipo vars2G varsG
    (52) varsG -> . VAR tipo vars3G varsG
    (53) varsG -> . VAR LB varsG RB
    (54) varsG -> . var_rowG
    (55) varsG -> . var_rowG varsG
    (56) varsG -> . var_matrixG
    (57) varsG -> . var_matrixG varsG
    (58) varsG -> . declarar_func varsG
    (59) varsG -> . declarar_func
    (60) varsG -> . empty
    (114) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (121) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (96) declarar_func -> . FUNC tipo ID LP RP SEMICOL
    (97) declarar_func -> . FUNC VOID ID LP RP SEMICOL
    (98) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (99) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL
    (127) empty -> .

  ! reduce/reduce conflict for VOID resolved using rule 56 (varsG -> var_matrixG .)
  ! reduce/reduce conflict for INT resolved using rule 56 (varsG -> var_matrixG .)
  ! reduce/reduce conflict for FLOAT resolved using rule 56 (varsG -> var_matrixG .)
  ! reduce/reduce conflict for CHAR resolved using rule 56 (varsG -> var_matrixG .)
  ! reduce/reduce conflict for $end resolved using rule 56 (varsG -> var_matrixG .)
  ! reduce/reduce conflict for RB resolved using rule 56 (varsG -> var_matrixG .)
    VOID            reduce using rule 56 (varsG -> var_matrixG .)
    INT             reduce using rule 56 (varsG -> var_matrixG .)
    FLOAT           reduce using rule 56 (varsG -> var_matrixG .)
    CHAR            reduce using rule 56 (varsG -> var_matrixG .)
    $end            reduce using rule 56 (varsG -> var_matrixG .)
    RB              reduce using rule 56 (varsG -> var_matrixG .)
    VAR             shift and go to state 9
    FUNC            shift and go to state 16

  ! VOID            [ reduce using rule 127 (empty -> .) ]
  ! INT             [ reduce using rule 127 (empty -> .) ]
  ! FLOAT           [ reduce using rule 127 (empty -> .) ]
  ! CHAR            [ reduce using rule 127 (empty -> .) ]
  ! $end            [ reduce using rule 127 (empty -> .) ]
  ! RB              [ reduce using rule 127 (empty -> .) ]

    var_matrixG                    shift and go to state 12
    varsG                          shift and go to state 33
    var_rowG                       shift and go to state 11
    declarar_func                  shift and go to state 13
    empty                          shift and go to state 32

state 13

    (58) varsG -> declarar_func . varsG
    (59) varsG -> declarar_func .
    (50) varsG -> . VAR tipo vars1G varsG
    (51) varsG -> . VAR tipo vars2G varsG
    (52) varsG -> . VAR tipo vars3G varsG
    (53) varsG -> . VAR LB varsG RB
    (54) varsG -> . var_rowG
    (55) varsG -> . var_rowG varsG
    (56) varsG -> . var_matrixG
    (57) varsG -> . var_matrixG varsG
    (58) varsG -> . declarar_func varsG
    (59) varsG -> . declarar_func
    (60) varsG -> . empty
    (114) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (121) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (96) declarar_func -> . FUNC tipo ID LP RP SEMICOL
    (97) declarar_func -> . FUNC VOID ID LP RP SEMICOL
    (98) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (99) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL
    (127) empty -> .

  ! reduce/reduce conflict for VOID resolved using rule 59 (varsG -> declarar_func .)
  ! reduce/reduce conflict for INT resolved using rule 59 (varsG -> declarar_func .)
  ! reduce/reduce conflict for FLOAT resolved using rule 59 (varsG -> declarar_func .)
  ! reduce/reduce conflict for CHAR resolved using rule 59 (varsG -> declarar_func .)
  ! reduce/reduce conflict for $end resolved using rule 59 (varsG -> declarar_func .)
  ! reduce/reduce conflict for RB resolved using rule 59 (varsG -> declarar_func .)
    VOID            reduce using rule 59 (varsG -> declarar_func .)
    INT             reduce using rule 59 (varsG -> declarar_func .)
    FLOAT           reduce using rule 59 (varsG -> declarar_func .)
    CHAR            reduce using rule 59 (varsG -> declarar_func .)
    $end            reduce using rule 59 (varsG -> declarar_func .)
    RB              reduce using rule 59 (varsG -> declarar_func .)
    VAR             shift and go to state 9
    FUNC            shift and go to state 16

  ! VOID            [ reduce using rule 127 (empty -> .) ]
  ! INT             [ reduce using rule 127 (empty -> .) ]
  ! FLOAT           [ reduce using rule 127 (empty -> .) ]
  ! CHAR            [ reduce using rule 127 (empty -> .) ]
  ! $end            [ reduce using rule 127 (empty -> .) ]
  ! RB              [ reduce using rule 127 (empty -> .) ]

    declarar_func                  shift and go to state 13
    varsG                          shift and go to state 34
    var_rowG                       shift and go to state 11
    var_matrixG                    shift and go to state 12
    empty                          shift and go to state 32

state 14

    (60) varsG -> empty .
    (10) funciones -> empty .

  ! reduce/reduce conflict for VOID resolved using rule 10 (funciones -> empty .)
  ! reduce/reduce conflict for INT resolved using rule 10 (funciones -> empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 10 (funciones -> empty .)
  ! reduce/reduce conflict for CHAR resolved using rule 10 (funciones -> empty .)
  ! reduce/reduce conflict for $end resolved using rule 10 (funciones -> empty .)
    VOID            reduce using rule 10 (funciones -> empty .)
    INT             reduce using rule 10 (funciones -> empty .)
    FLOAT           reduce using rule 10 (funciones -> empty .)
    CHAR            reduce using rule 10 (funciones -> empty .)
    $end            reduce using rule 10 (funciones -> empty .)

  ! VOID            [ reduce using rule 60 (varsG -> empty .) ]
  ! INT             [ reduce using rule 60 (varsG -> empty .) ]
  ! FLOAT           [ reduce using rule 60 (varsG -> empty .) ]
  ! CHAR            [ reduce using rule 60 (varsG -> empty .) ]
  ! $end            [ reduce using rule 60 (varsG -> empty .) ]


state 15

    (8) funciones -> funcion .

    VOID            reduce using rule 8 (funciones -> funcion .)
    INT             reduce using rule 8 (funciones -> funcion .)
    FLOAT           reduce using rule 8 (funciones -> funcion .)
    CHAR            reduce using rule 8 (funciones -> funcion .)
    $end            reduce using rule 8 (funciones -> funcion .)


state 16

    (96) declarar_func -> FUNC . tipo ID LP RP SEMICOL
    (97) declarar_func -> FUNC . VOID ID LP RP SEMICOL
    (98) declarar_func -> FUNC . tipo ID LP declarar_param RP SEMICOL
    (99) declarar_func -> FUNC . VOID ID LP declarar_param RP SEMICOL
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR

    VOID            shift and go to state 36
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    tipo                           shift and go to state 35

state 17

    (83) funcion -> VOID . ID add_fun LP param RP verificar LB var_func statement RB end_func
    (84) funcion -> VOID . ID add_fun LP RP verificar2 LB var_func statement RB end_func

    ID              shift and go to state 37


state 18

    (72) tipo -> INT .

    ID              reduce using rule 72 (tipo -> INT .)
    MAIN            reduce using rule 72 (tipo -> INT .)
    COMMA           reduce using rule 72 (tipo -> INT .)
    INT             reduce using rule 72 (tipo -> INT .)
    FLOAT           reduce using rule 72 (tipo -> INT .)
    CHAR            reduce using rule 72 (tipo -> INT .)
    RP              reduce using rule 72 (tipo -> INT .)


state 19

    (73) tipo -> FLOAT .

    ID              reduce using rule 73 (tipo -> FLOAT .)
    MAIN            reduce using rule 73 (tipo -> FLOAT .)
    COMMA           reduce using rule 73 (tipo -> FLOAT .)
    INT             reduce using rule 73 (tipo -> FLOAT .)
    FLOAT           reduce using rule 73 (tipo -> FLOAT .)
    CHAR            reduce using rule 73 (tipo -> FLOAT .)
    RP              reduce using rule 73 (tipo -> FLOAT .)


state 20

    (74) tipo -> CHAR .

    ID              reduce using rule 74 (tipo -> CHAR .)
    MAIN            reduce using rule 74 (tipo -> CHAR .)
    COMMA           reduce using rule 74 (tipo -> CHAR .)
    INT             reduce using rule 74 (tipo -> CHAR .)
    FLOAT           reduce using rule 74 (tipo -> CHAR .)
    CHAR            reduce using rule 74 (tipo -> CHAR .)
    RP              reduce using rule 74 (tipo -> CHAR .)


state 21

    (2) programa1 -> varsG quad_main . funciones end
    (3) programa1 -> varsG quad_main . funciones main funciones end
    (4) programa1 -> varsG quad_main . main funciones end
    (8) funciones -> . funcion
    (9) funciones -> . funciones funcion
    (10) funciones -> . empty
    (11) main -> . tipo MAIN quad_main2 LP RP LB statement add_func_main func_return_main RB
    (12) main -> . VOID MAIN quad_main2 LP RP LB statement add_func_main RB
    (83) funcion -> . VOID ID add_fun LP param RP verificar LB var_func statement RB end_func
    (84) funcion -> . VOID ID add_fun LP RP verificar2 LB var_func statement RB end_func
    (85) funcion -> . tipo ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (86) funcion -> . tipo ID add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (127) empty -> .
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    VOID            shift and go to state 42
    $end            reduce using rule 127 (empty -> .)
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

  ! VOID            [ reduce using rule 127 (empty -> .) ]
  ! INT             [ reduce using rule 127 (empty -> .) ]
  ! FLOAT           [ reduce using rule 127 (empty -> .) ]
  ! CHAR            [ reduce using rule 127 (empty -> .) ]

    funciones                      shift and go to state 38
    main                           shift and go to state 39
    funcion                        shift and go to state 15
    empty                          shift and go to state 40
    tipo                           shift and go to state 41

state 22

    (5) programa1 -> varsG end .

    $end            reduce using rule 5 (programa1 -> varsG end .)


state 23

    (6) programa1 -> quad_main main . end
    (112) end -> .

    $end            reduce using rule 112 (end -> .)

    end                            shift and go to state 43

state 24

    (11) main -> tipo . MAIN quad_main2 LP RP LB statement add_func_main func_return_main RB

    MAIN            shift and go to state 44


state 25

    (12) main -> VOID . MAIN quad_main2 LP RP LB statement add_func_main RB

    MAIN            shift and go to state 45


state 26

    (7) programa1 -> funciones end .

    $end            reduce using rule 7 (programa1 -> funciones end .)


state 27

    (9) funciones -> funciones funcion .

    VOID            reduce using rule 9 (funciones -> funciones funcion .)
    INT             reduce using rule 9 (funciones -> funciones funcion .)
    FLOAT           reduce using rule 9 (funciones -> funciones funcion .)
    CHAR            reduce using rule 9 (funciones -> funciones funcion .)
    $end            reduce using rule 9 (funciones -> funciones funcion .)


state 28

    (50) varsG -> VAR tipo . vars1G varsG
    (51) varsG -> VAR tipo . vars2G varsG
    (52) varsG -> VAR tipo . vars3G varsG
    (114) var_rowG -> VAR tipo . ID row IS LP lista2 RP SEMICOL
    (121) var_matrixG -> VAR tipo . ID matrix IS matrix2 SEMICOL
    (61) vars1G -> . ID SEMICOL
    (62) vars2G -> . vars2_1G ID IS value SEMICOL
    (66) vars2G -> . ID IS value SEMICOL
    (67) vars3G -> . vars3_1G ID SEMICOL
    (70) vars3G -> . ID SEMICOL
    (63) vars2_1G -> . vars2_1G ID IS value COMMA
    (64) vars2_1G -> . ID IS value COMMA
    (65) vars2_1G -> . empty
    (68) vars3_1G -> . vars3_1G ID COMMA
    (69) vars3_1G -> . ID COMMA
    (71) vars3_1G -> . empty
    (127) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 49

  ! ID              [ reduce using rule 127 (empty -> .) ]

    vars1G                         shift and go to state 46
    vars2G                         shift and go to state 47
    vars3G                         shift and go to state 48
    vars2_1G                       shift and go to state 50
    vars3_1G                       shift and go to state 51
    empty                          shift and go to state 52

state 29

    (53) varsG -> VAR LB . varsG RB
    (50) varsG -> . VAR tipo vars1G varsG
    (51) varsG -> . VAR tipo vars2G varsG
    (52) varsG -> . VAR tipo vars3G varsG
    (53) varsG -> . VAR LB varsG RB
    (54) varsG -> . var_rowG
    (55) varsG -> . var_rowG varsG
    (56) varsG -> . var_matrixG
    (57) varsG -> . var_matrixG varsG
    (58) varsG -> . declarar_func varsG
    (59) varsG -> . declarar_func
    (60) varsG -> . empty
    (114) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (121) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (96) declarar_func -> . FUNC tipo ID LP RP SEMICOL
    (97) declarar_func -> . FUNC VOID ID LP RP SEMICOL
    (98) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (99) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL
    (127) empty -> .

    VAR             shift and go to state 9
    FUNC            shift and go to state 16
    RB              reduce using rule 127 (empty -> .)

    varsG                          shift and go to state 53
    var_rowG                       shift and go to state 11
    var_matrixG                    shift and go to state 12
    declarar_func                  shift and go to state 13
    empty                          shift and go to state 32

state 30

    (85) funcion -> tipo ID . add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (86) funcion -> tipo ID . add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (82) add_fun -> .

    LP              reduce using rule 82 (add_fun -> .)

    add_fun                        shift and go to state 54

state 31

    (55) varsG -> var_rowG varsG .

    VOID            reduce using rule 55 (varsG -> var_rowG varsG .)
    INT             reduce using rule 55 (varsG -> var_rowG varsG .)
    FLOAT           reduce using rule 55 (varsG -> var_rowG varsG .)
    CHAR            reduce using rule 55 (varsG -> var_rowG varsG .)
    $end            reduce using rule 55 (varsG -> var_rowG varsG .)
    RB              reduce using rule 55 (varsG -> var_rowG varsG .)


state 32

    (60) varsG -> empty .

    VOID            reduce using rule 60 (varsG -> empty .)
    INT             reduce using rule 60 (varsG -> empty .)
    FLOAT           reduce using rule 60 (varsG -> empty .)
    CHAR            reduce using rule 60 (varsG -> empty .)
    $end            reduce using rule 60 (varsG -> empty .)
    RB              reduce using rule 60 (varsG -> empty .)


state 33

    (57) varsG -> var_matrixG varsG .

    VOID            reduce using rule 57 (varsG -> var_matrixG varsG .)
    INT             reduce using rule 57 (varsG -> var_matrixG varsG .)
    FLOAT           reduce using rule 57 (varsG -> var_matrixG varsG .)
    CHAR            reduce using rule 57 (varsG -> var_matrixG varsG .)
    $end            reduce using rule 57 (varsG -> var_matrixG varsG .)
    RB              reduce using rule 57 (varsG -> var_matrixG varsG .)


state 34

    (58) varsG -> declarar_func varsG .

    VOID            reduce using rule 58 (varsG -> declarar_func varsG .)
    INT             reduce using rule 58 (varsG -> declarar_func varsG .)
    FLOAT           reduce using rule 58 (varsG -> declarar_func varsG .)
    CHAR            reduce using rule 58 (varsG -> declarar_func varsG .)
    $end            reduce using rule 58 (varsG -> declarar_func varsG .)
    RB              reduce using rule 58 (varsG -> declarar_func varsG .)


state 35

    (96) declarar_func -> FUNC tipo . ID LP RP SEMICOL
    (98) declarar_func -> FUNC tipo . ID LP declarar_param RP SEMICOL

    ID              shift and go to state 55


state 36

    (97) declarar_func -> FUNC VOID . ID LP RP SEMICOL
    (99) declarar_func -> FUNC VOID . ID LP declarar_param RP SEMICOL

    ID              shift and go to state 56


state 37

    (83) funcion -> VOID ID . add_fun LP param RP verificar LB var_func statement RB end_func
    (84) funcion -> VOID ID . add_fun LP RP verificar2 LB var_func statement RB end_func
    (82) add_fun -> .

    LP              reduce using rule 82 (add_fun -> .)

    add_fun                        shift and go to state 57

state 38

    (2) programa1 -> varsG quad_main funciones . end
    (3) programa1 -> varsG quad_main funciones . main funciones end
    (9) funciones -> funciones . funcion
    (112) end -> .
    (11) main -> . tipo MAIN quad_main2 LP RP LB statement add_func_main func_return_main RB
    (12) main -> . VOID MAIN quad_main2 LP RP LB statement add_func_main RB
    (83) funcion -> . VOID ID add_fun LP param RP verificar LB var_func statement RB end_func
    (84) funcion -> . VOID ID add_fun LP RP verificar2 LB var_func statement RB end_func
    (85) funcion -> . tipo ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (86) funcion -> . tipo ID add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR

    $end            reduce using rule 112 (end -> .)
    VOID            shift and go to state 42
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    end                            shift and go to state 58
    main                           shift and go to state 59
    funcion                        shift and go to state 27
    tipo                           shift and go to state 41

state 39

    (4) programa1 -> varsG quad_main main . funciones end
    (8) funciones -> . funcion
    (9) funciones -> . funciones funcion
    (10) funciones -> . empty
    (83) funcion -> . VOID ID add_fun LP param RP verificar LB var_func statement RB end_func
    (84) funcion -> . VOID ID add_fun LP RP verificar2 LB var_func statement RB end_func
    (85) funcion -> . tipo ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (86) funcion -> . tipo ID add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (127) empty -> .
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    VOID            shift and go to state 17
    $end            reduce using rule 127 (empty -> .)
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

  ! VOID            [ reduce using rule 127 (empty -> .) ]
  ! INT             [ reduce using rule 127 (empty -> .) ]
  ! FLOAT           [ reduce using rule 127 (empty -> .) ]
  ! CHAR            [ reduce using rule 127 (empty -> .) ]

    funciones                      shift and go to state 60
    funcion                        shift and go to state 15
    empty                          shift and go to state 40
    tipo                           shift and go to state 10

state 40

    (10) funciones -> empty .

    VOID            reduce using rule 10 (funciones -> empty .)
    INT             reduce using rule 10 (funciones -> empty .)
    FLOAT           reduce using rule 10 (funciones -> empty .)
    CHAR            reduce using rule 10 (funciones -> empty .)
    $end            reduce using rule 10 (funciones -> empty .)


state 41

    (11) main -> tipo . MAIN quad_main2 LP RP LB statement add_func_main func_return_main RB
    (85) funcion -> tipo . ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (86) funcion -> tipo . ID add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func

    MAIN            shift and go to state 44
    ID              shift and go to state 30


state 42

    (12) main -> VOID . MAIN quad_main2 LP RP LB statement add_func_main RB
    (83) funcion -> VOID . ID add_fun LP param RP verificar LB var_func statement RB end_func
    (84) funcion -> VOID . ID add_fun LP RP verificar2 LB var_func statement RB end_func

    MAIN            shift and go to state 45
    ID              shift and go to state 37


state 43

    (6) programa1 -> quad_main main end .

    $end            reduce using rule 6 (programa1 -> quad_main main end .)


state 44

    (11) main -> tipo MAIN . quad_main2 LP RP LB statement add_func_main func_return_main RB
    (14) quad_main2 -> .

    LP              reduce using rule 14 (quad_main2 -> .)

    quad_main2                     shift and go to state 61

state 45

    (12) main -> VOID MAIN . quad_main2 LP RP LB statement add_func_main RB
    (14) quad_main2 -> .

    LP              reduce using rule 14 (quad_main2 -> .)

    quad_main2                     shift and go to state 62

state 46

    (50) varsG -> VAR tipo vars1G . varsG
    (50) varsG -> . VAR tipo vars1G varsG
    (51) varsG -> . VAR tipo vars2G varsG
    (52) varsG -> . VAR tipo vars3G varsG
    (53) varsG -> . VAR LB varsG RB
    (54) varsG -> . var_rowG
    (55) varsG -> . var_rowG varsG
    (56) varsG -> . var_matrixG
    (57) varsG -> . var_matrixG varsG
    (58) varsG -> . declarar_func varsG
    (59) varsG -> . declarar_func
    (60) varsG -> . empty
    (114) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (121) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (96) declarar_func -> . FUNC tipo ID LP RP SEMICOL
    (97) declarar_func -> . FUNC VOID ID LP RP SEMICOL
    (98) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (99) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL
    (127) empty -> .

    VAR             shift and go to state 9
    FUNC            shift and go to state 16
    VOID            reduce using rule 127 (empty -> .)
    INT             reduce using rule 127 (empty -> .)
    FLOAT           reduce using rule 127 (empty -> .)
    CHAR            reduce using rule 127 (empty -> .)
    $end            reduce using rule 127 (empty -> .)
    RB              reduce using rule 127 (empty -> .)

    varsG                          shift and go to state 63
    var_rowG                       shift and go to state 11
    var_matrixG                    shift and go to state 12
    declarar_func                  shift and go to state 13
    empty                          shift and go to state 32

state 47

    (51) varsG -> VAR tipo vars2G . varsG
    (50) varsG -> . VAR tipo vars1G varsG
    (51) varsG -> . VAR tipo vars2G varsG
    (52) varsG -> . VAR tipo vars3G varsG
    (53) varsG -> . VAR LB varsG RB
    (54) varsG -> . var_rowG
    (55) varsG -> . var_rowG varsG
    (56) varsG -> . var_matrixG
    (57) varsG -> . var_matrixG varsG
    (58) varsG -> . declarar_func varsG
    (59) varsG -> . declarar_func
    (60) varsG -> . empty
    (114) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (121) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (96) declarar_func -> . FUNC tipo ID LP RP SEMICOL
    (97) declarar_func -> . FUNC VOID ID LP RP SEMICOL
    (98) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (99) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL
    (127) empty -> .

    VAR             shift and go to state 9
    FUNC            shift and go to state 16
    VOID            reduce using rule 127 (empty -> .)
    INT             reduce using rule 127 (empty -> .)
    FLOAT           reduce using rule 127 (empty -> .)
    CHAR            reduce using rule 127 (empty -> .)
    $end            reduce using rule 127 (empty -> .)
    RB              reduce using rule 127 (empty -> .)

    varsG                          shift and go to state 64
    var_rowG                       shift and go to state 11
    var_matrixG                    shift and go to state 12
    declarar_func                  shift and go to state 13
    empty                          shift and go to state 32

state 48

    (52) varsG -> VAR tipo vars3G . varsG
    (50) varsG -> . VAR tipo vars1G varsG
    (51) varsG -> . VAR tipo vars2G varsG
    (52) varsG -> . VAR tipo vars3G varsG
    (53) varsG -> . VAR LB varsG RB
    (54) varsG -> . var_rowG
    (55) varsG -> . var_rowG varsG
    (56) varsG -> . var_matrixG
    (57) varsG -> . var_matrixG varsG
    (58) varsG -> . declarar_func varsG
    (59) varsG -> . declarar_func
    (60) varsG -> . empty
    (114) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (121) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (96) declarar_func -> . FUNC tipo ID LP RP SEMICOL
    (97) declarar_func -> . FUNC VOID ID LP RP SEMICOL
    (98) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (99) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL
    (127) empty -> .

    VAR             shift and go to state 9
    FUNC            shift and go to state 16
    VOID            reduce using rule 127 (empty -> .)
    INT             reduce using rule 127 (empty -> .)
    FLOAT           reduce using rule 127 (empty -> .)
    CHAR            reduce using rule 127 (empty -> .)
    $end            reduce using rule 127 (empty -> .)
    RB              reduce using rule 127 (empty -> .)

    varsG                          shift and go to state 65
    var_rowG                       shift and go to state 11
    var_matrixG                    shift and go to state 12
    declarar_func                  shift and go to state 13
    empty                          shift and go to state 32

state 49

    (114) var_rowG -> VAR tipo ID . row IS LP lista2 RP SEMICOL
    (121) var_matrixG -> VAR tipo ID . matrix IS matrix2 SEMICOL
    (61) vars1G -> ID . SEMICOL
    (66) vars2G -> ID . IS value SEMICOL
    (70) vars3G -> ID . SEMICOL
    (64) vars2_1G -> ID . IS value COMMA
    (69) vars3_1G -> ID . COMMA
    (119) row -> . LC CTE_I RC
    (126) matrix -> . row row

    SEMICOL         shift and go to state 68
    IS              shift and go to state 67
    COMMA           shift and go to state 70
    LC              shift and go to state 71

    row                            shift and go to state 66
    matrix                         shift and go to state 69

state 50

    (62) vars2G -> vars2_1G . ID IS value SEMICOL
    (63) vars2_1G -> vars2_1G . ID IS value COMMA

    ID              shift and go to state 72


state 51

    (67) vars3G -> vars3_1G . ID SEMICOL
    (68) vars3_1G -> vars3_1G . ID COMMA

    ID              shift and go to state 73


state 52

    (65) vars2_1G -> empty .
    (71) vars3_1G -> empty .

  ! reduce/reduce conflict for ID resolved using rule 65 (vars2_1G -> empty .)
    ID              reduce using rule 65 (vars2_1G -> empty .)

  ! ID              [ reduce using rule 71 (vars3_1G -> empty .) ]


state 53

    (53) varsG -> VAR LB varsG . RB

    RB              shift and go to state 74


state 54

    (85) funcion -> tipo ID add_fun . LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (86) funcion -> tipo ID add_fun . LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func

    LP              shift and go to state 75


state 55

    (96) declarar_func -> FUNC tipo ID . LP RP SEMICOL
    (98) declarar_func -> FUNC tipo ID . LP declarar_param RP SEMICOL

    LP              shift and go to state 76


state 56

    (97) declarar_func -> FUNC VOID ID . LP RP SEMICOL
    (99) declarar_func -> FUNC VOID ID . LP declarar_param RP SEMICOL

    LP              shift and go to state 77


state 57

    (83) funcion -> VOID ID add_fun . LP param RP verificar LB var_func statement RB end_func
    (84) funcion -> VOID ID add_fun . LP RP verificar2 LB var_func statement RB end_func

    LP              shift and go to state 78


state 58

    (2) programa1 -> varsG quad_main funciones end .

    $end            reduce using rule 2 (programa1 -> varsG quad_main funciones end .)


state 59

    (3) programa1 -> varsG quad_main funciones main . funciones end
    (8) funciones -> . funcion
    (9) funciones -> . funciones funcion
    (10) funciones -> . empty
    (83) funcion -> . VOID ID add_fun LP param RP verificar LB var_func statement RB end_func
    (84) funcion -> . VOID ID add_fun LP RP verificar2 LB var_func statement RB end_func
    (85) funcion -> . tipo ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (86) funcion -> . tipo ID add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (127) empty -> .
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    VOID            shift and go to state 17
    $end            reduce using rule 127 (empty -> .)
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

  ! VOID            [ reduce using rule 127 (empty -> .) ]
  ! INT             [ reduce using rule 127 (empty -> .) ]
  ! FLOAT           [ reduce using rule 127 (empty -> .) ]
  ! CHAR            [ reduce using rule 127 (empty -> .) ]

    funciones                      shift and go to state 79
    funcion                        shift and go to state 15
    empty                          shift and go to state 40
    tipo                           shift and go to state 10

state 60

    (4) programa1 -> varsG quad_main main funciones . end
    (9) funciones -> funciones . funcion
    (112) end -> .
    (83) funcion -> . VOID ID add_fun LP param RP verificar LB var_func statement RB end_func
    (84) funcion -> . VOID ID add_fun LP RP verificar2 LB var_func statement RB end_func
    (85) funcion -> . tipo ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (86) funcion -> . tipo ID add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR

    $end            reduce using rule 112 (end -> .)
    VOID            shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    end                            shift and go to state 80
    funcion                        shift and go to state 27
    tipo                           shift and go to state 10

state 61

    (11) main -> tipo MAIN quad_main2 . LP RP LB statement add_func_main func_return_main RB

    LP              shift and go to state 81


state 62

    (12) main -> VOID MAIN quad_main2 . LP RP LB statement add_func_main RB

    LP              shift and go to state 82


state 63

    (50) varsG -> VAR tipo vars1G varsG .

    VOID            reduce using rule 50 (varsG -> VAR tipo vars1G varsG .)
    INT             reduce using rule 50 (varsG -> VAR tipo vars1G varsG .)
    FLOAT           reduce using rule 50 (varsG -> VAR tipo vars1G varsG .)
    CHAR            reduce using rule 50 (varsG -> VAR tipo vars1G varsG .)
    $end            reduce using rule 50 (varsG -> VAR tipo vars1G varsG .)
    RB              reduce using rule 50 (varsG -> VAR tipo vars1G varsG .)


state 64

    (51) varsG -> VAR tipo vars2G varsG .

    VOID            reduce using rule 51 (varsG -> VAR tipo vars2G varsG .)
    INT             reduce using rule 51 (varsG -> VAR tipo vars2G varsG .)
    FLOAT           reduce using rule 51 (varsG -> VAR tipo vars2G varsG .)
    CHAR            reduce using rule 51 (varsG -> VAR tipo vars2G varsG .)
    $end            reduce using rule 51 (varsG -> VAR tipo vars2G varsG .)
    RB              reduce using rule 51 (varsG -> VAR tipo vars2G varsG .)


state 65

    (52) varsG -> VAR tipo vars3G varsG .

    VOID            reduce using rule 52 (varsG -> VAR tipo vars3G varsG .)
    INT             reduce using rule 52 (varsG -> VAR tipo vars3G varsG .)
    FLOAT           reduce using rule 52 (varsG -> VAR tipo vars3G varsG .)
    CHAR            reduce using rule 52 (varsG -> VAR tipo vars3G varsG .)
    $end            reduce using rule 52 (varsG -> VAR tipo vars3G varsG .)
    RB              reduce using rule 52 (varsG -> VAR tipo vars3G varsG .)


state 66

    (114) var_rowG -> VAR tipo ID row . IS LP lista2 RP SEMICOL
    (126) matrix -> row . row
    (119) row -> . LC CTE_I RC

    IS              shift and go to state 84
    LC              shift and go to state 71

    row                            shift and go to state 83

state 67

    (66) vars2G -> ID IS . value SEMICOL
    (64) vars2_1G -> ID IS . value COMMA
    (75) value -> . CTE_F
    (76) value -> . CTE_I
    (77) value -> . ID
    (78) value -> . CTE_C
    (79) value -> . COMILLA ID COMILLA
    (80) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88
    ID              shift and go to state 85
    CTE_C           shift and go to state 89
    COMILLA         shift and go to state 90
    COMILLAS        shift and go to state 91

    value                          shift and go to state 86

state 68

    (61) vars1G -> ID SEMICOL .
    (70) vars3G -> ID SEMICOL .

  ! reduce/reduce conflict for VAR resolved using rule 61 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for FUNC resolved using rule 61 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for VOID resolved using rule 61 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for INT resolved using rule 61 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for FLOAT resolved using rule 61 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for CHAR resolved using rule 61 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for $end resolved using rule 61 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for RB resolved using rule 61 (vars1G -> ID SEMICOL .)
    VAR             reduce using rule 61 (vars1G -> ID SEMICOL .)
    FUNC            reduce using rule 61 (vars1G -> ID SEMICOL .)
    VOID            reduce using rule 61 (vars1G -> ID SEMICOL .)
    INT             reduce using rule 61 (vars1G -> ID SEMICOL .)
    FLOAT           reduce using rule 61 (vars1G -> ID SEMICOL .)
    CHAR            reduce using rule 61 (vars1G -> ID SEMICOL .)
    $end            reduce using rule 61 (vars1G -> ID SEMICOL .)
    RB              reduce using rule 61 (vars1G -> ID SEMICOL .)

  ! VAR             [ reduce using rule 70 (vars3G -> ID SEMICOL .) ]
  ! FUNC            [ reduce using rule 70 (vars3G -> ID SEMICOL .) ]
  ! VOID            [ reduce using rule 70 (vars3G -> ID SEMICOL .) ]
  ! INT             [ reduce using rule 70 (vars3G -> ID SEMICOL .) ]
  ! FLOAT           [ reduce using rule 70 (vars3G -> ID SEMICOL .) ]
  ! CHAR            [ reduce using rule 70 (vars3G -> ID SEMICOL .) ]
  ! $end            [ reduce using rule 70 (vars3G -> ID SEMICOL .) ]
  ! RB              [ reduce using rule 70 (vars3G -> ID SEMICOL .) ]


state 69

    (121) var_matrixG -> VAR tipo ID matrix . IS matrix2 SEMICOL

    IS              shift and go to state 92


state 70

    (69) vars3_1G -> ID COMMA .

    ID              reduce using rule 69 (vars3_1G -> ID COMMA .)


state 71

    (119) row -> LC . CTE_I RC

    CTE_I           shift and go to state 93


state 72

    (62) vars2G -> vars2_1G ID . IS value SEMICOL
    (63) vars2_1G -> vars2_1G ID . IS value COMMA

    IS              shift and go to state 94


state 73

    (67) vars3G -> vars3_1G ID . SEMICOL
    (68) vars3_1G -> vars3_1G ID . COMMA

    SEMICOL         shift and go to state 95
    COMMA           shift and go to state 96


state 74

    (53) varsG -> VAR LB varsG RB .

    VOID            reduce using rule 53 (varsG -> VAR LB varsG RB .)
    INT             reduce using rule 53 (varsG -> VAR LB varsG RB .)
    FLOAT           reduce using rule 53 (varsG -> VAR LB varsG RB .)
    CHAR            reduce using rule 53 (varsG -> VAR LB varsG RB .)
    $end            reduce using rule 53 (varsG -> VAR LB varsG RB .)
    RB              reduce using rule 53 (varsG -> VAR LB varsG RB .)


state 75

    (85) funcion -> tipo ID add_fun LP . RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (86) funcion -> tipo ID add_fun LP . param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (93) param -> . tipo ID
    (94) param -> . param COMMA tipo ID
    (95) param -> . empty
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR
    (127) empty -> .

  ! shift/reduce conflict for RP resolved as shift
    RP              shift and go to state 98
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20
    COMMA           reduce using rule 127 (empty -> .)

  ! RP              [ reduce using rule 127 (empty -> .) ]

    tipo                           shift and go to state 97
    param                          shift and go to state 99
    empty                          shift and go to state 100

state 76

    (96) declarar_func -> FUNC tipo ID LP . RP SEMICOL
    (98) declarar_func -> FUNC tipo ID LP . declarar_param RP SEMICOL
    (100) declarar_param -> . tipo COMMA declarar_param
    (101) declarar_param -> . tipo declarar_param
    (102) declarar_param -> . empty
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR
    (127) empty -> .

  ! shift/reduce conflict for RP resolved as shift
    RP              shift and go to state 102
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

  ! RP              [ reduce using rule 127 (empty -> .) ]

    tipo                           shift and go to state 101
    declarar_param                 shift and go to state 103
    empty                          shift and go to state 104

state 77

    (97) declarar_func -> FUNC VOID ID LP . RP SEMICOL
    (99) declarar_func -> FUNC VOID ID LP . declarar_param RP SEMICOL
    (100) declarar_param -> . tipo COMMA declarar_param
    (101) declarar_param -> . tipo declarar_param
    (102) declarar_param -> . empty
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR
    (127) empty -> .

  ! shift/reduce conflict for RP resolved as shift
    RP              shift and go to state 105
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

  ! RP              [ reduce using rule 127 (empty -> .) ]

    declarar_param                 shift and go to state 106
    tipo                           shift and go to state 101
    empty                          shift and go to state 104

state 78

    (83) funcion -> VOID ID add_fun LP . param RP verificar LB var_func statement RB end_func
    (84) funcion -> VOID ID add_fun LP . RP verificar2 LB var_func statement RB end_func
    (93) param -> . tipo ID
    (94) param -> . param COMMA tipo ID
    (95) param -> . empty
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR
    (127) empty -> .

  ! shift/reduce conflict for RP resolved as shift
    RP              shift and go to state 108
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20
    COMMA           reduce using rule 127 (empty -> .)

  ! RP              [ reduce using rule 127 (empty -> .) ]

    param                          shift and go to state 107
    tipo                           shift and go to state 97
    empty                          shift and go to state 100

state 79

    (3) programa1 -> varsG quad_main funciones main funciones . end
    (9) funciones -> funciones . funcion
    (112) end -> .
    (83) funcion -> . VOID ID add_fun LP param RP verificar LB var_func statement RB end_func
    (84) funcion -> . VOID ID add_fun LP RP verificar2 LB var_func statement RB end_func
    (85) funcion -> . tipo ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (86) funcion -> . tipo ID add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR

    $end            reduce using rule 112 (end -> .)
    VOID            shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    end                            shift and go to state 109
    funcion                        shift and go to state 27
    tipo                           shift and go to state 10

state 80

    (4) programa1 -> varsG quad_main main funciones end .

    $end            reduce using rule 4 (programa1 -> varsG quad_main main funciones end .)


state 81

    (11) main -> tipo MAIN quad_main2 LP . RP LB statement add_func_main func_return_main RB

    RP              shift and go to state 110


state 82

    (12) main -> VOID MAIN quad_main2 LP . RP LB statement add_func_main RB

    RP              shift and go to state 111


state 83

    (126) matrix -> row row .

    IS              reduce using rule 126 (matrix -> row row .)
    SEMICOL         reduce using rule 126 (matrix -> row row .)


state 84

    (114) var_rowG -> VAR tipo ID row IS . LP lista2 RP SEMICOL

    LP              shift and go to state 112


state 85

    (77) value -> ID .

    SEMICOL         reduce using rule 77 (value -> ID .)
    COMMA           reduce using rule 77 (value -> ID .)
    RP              reduce using rule 77 (value -> ID .)


state 86

    (66) vars2G -> ID IS value . SEMICOL
    (64) vars2_1G -> ID IS value . COMMA

    SEMICOL         shift and go to state 113
    COMMA           shift and go to state 114


state 87

    (75) value -> CTE_F .

    SEMICOL         reduce using rule 75 (value -> CTE_F .)
    COMMA           reduce using rule 75 (value -> CTE_F .)
    RP              reduce using rule 75 (value -> CTE_F .)


state 88

    (76) value -> CTE_I .

    SEMICOL         reduce using rule 76 (value -> CTE_I .)
    COMMA           reduce using rule 76 (value -> CTE_I .)
    RP              reduce using rule 76 (value -> CTE_I .)


state 89

    (78) value -> CTE_C .

    SEMICOL         reduce using rule 78 (value -> CTE_C .)
    COMMA           reduce using rule 78 (value -> CTE_C .)
    RP              reduce using rule 78 (value -> CTE_C .)


state 90

    (79) value -> COMILLA . ID COMILLA

    ID              shift and go to state 115


state 91

    (80) value -> COMILLAS . ID COMILLAS

    ID              shift and go to state 116


state 92

    (121) var_matrixG -> VAR tipo ID matrix IS . matrix2 SEMICOL
    (122) matrix2 -> . LP lista2 RP COMMA matrix2
    (123) matrix2 -> . LP lista2 RP COMMA LP lista2 RP

    LP              shift and go to state 118

    matrix2                        shift and go to state 117

state 93

    (119) row -> LC CTE_I . RC

    RC              shift and go to state 119


state 94

    (62) vars2G -> vars2_1G ID IS . value SEMICOL
    (63) vars2_1G -> vars2_1G ID IS . value COMMA
    (75) value -> . CTE_F
    (76) value -> . CTE_I
    (77) value -> . ID
    (78) value -> . CTE_C
    (79) value -> . COMILLA ID COMILLA
    (80) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88
    ID              shift and go to state 85
    CTE_C           shift and go to state 89
    COMILLA         shift and go to state 90
    COMILLAS        shift and go to state 91

    value                          shift and go to state 120

state 95

    (67) vars3G -> vars3_1G ID SEMICOL .

    VAR             reduce using rule 67 (vars3G -> vars3_1G ID SEMICOL .)
    FUNC            reduce using rule 67 (vars3G -> vars3_1G ID SEMICOL .)
    VOID            reduce using rule 67 (vars3G -> vars3_1G ID SEMICOL .)
    INT             reduce using rule 67 (vars3G -> vars3_1G ID SEMICOL .)
    FLOAT           reduce using rule 67 (vars3G -> vars3_1G ID SEMICOL .)
    CHAR            reduce using rule 67 (vars3G -> vars3_1G ID SEMICOL .)
    $end            reduce using rule 67 (vars3G -> vars3_1G ID SEMICOL .)
    RB              reduce using rule 67 (vars3G -> vars3_1G ID SEMICOL .)


state 96

    (68) vars3_1G -> vars3_1G ID COMMA .

    ID              reduce using rule 68 (vars3_1G -> vars3_1G ID COMMA .)


state 97

    (93) param -> tipo . ID

    ID              shift and go to state 121


state 98

    (85) funcion -> tipo ID add_fun LP RP . verificar2 LB var_func statement add_func_dir2 func_return RB end_func
    (88) verificar2 -> .

    LB              reduce using rule 88 (verificar2 -> .)

    verificar2                     shift and go to state 122

state 99

    (86) funcion -> tipo ID add_fun LP param . RP verificar LB var_func statement add_func_dir func_return_param RB end_func
    (94) param -> param . COMMA tipo ID

    RP              shift and go to state 123
    COMMA           shift and go to state 124


state 100

    (95) param -> empty .

    RP              reduce using rule 95 (param -> empty .)
    COMMA           reduce using rule 95 (param -> empty .)


state 101

    (100) declarar_param -> tipo . COMMA declarar_param
    (101) declarar_param -> tipo . declarar_param
    (100) declarar_param -> . tipo COMMA declarar_param
    (101) declarar_param -> . tipo declarar_param
    (102) declarar_param -> . empty
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR
    (127) empty -> .

    COMMA           shift and go to state 125
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20
    RP              reduce using rule 127 (empty -> .)

    tipo                           shift and go to state 101
    declarar_param                 shift and go to state 126
    empty                          shift and go to state 104

state 102

    (96) declarar_func -> FUNC tipo ID LP RP . SEMICOL

    SEMICOL         shift and go to state 127


state 103

    (98) declarar_func -> FUNC tipo ID LP declarar_param . RP SEMICOL

    RP              shift and go to state 128


state 104

    (102) declarar_param -> empty .

    RP              reduce using rule 102 (declarar_param -> empty .)


state 105

    (97) declarar_func -> FUNC VOID ID LP RP . SEMICOL

    SEMICOL         shift and go to state 129


state 106

    (99) declarar_func -> FUNC VOID ID LP declarar_param . RP SEMICOL

    RP              shift and go to state 130


state 107

    (83) funcion -> VOID ID add_fun LP param . RP verificar LB var_func statement RB end_func
    (94) param -> param . COMMA tipo ID

    RP              shift and go to state 131
    COMMA           shift and go to state 124


state 108

    (84) funcion -> VOID ID add_fun LP RP . verificar2 LB var_func statement RB end_func
    (88) verificar2 -> .

    LB              reduce using rule 88 (verificar2 -> .)

    verificar2                     shift and go to state 132

state 109

    (3) programa1 -> varsG quad_main funciones main funciones end .

    $end            reduce using rule 3 (programa1 -> varsG quad_main funciones main funciones end .)


state 110

    (11) main -> tipo MAIN quad_main2 LP RP . LB statement add_func_main func_return_main RB

    LB              shift and go to state 133


state 111

    (12) main -> VOID MAIN quad_main2 LP RP . LB statement add_func_main RB

    LB              shift and go to state 134


state 112

    (114) var_rowG -> VAR tipo ID row IS LP . lista2 RP SEMICOL
    (117) lista2 -> . elem_lista COMMA lista2
    (118) lista2 -> . elem_lista COMMA elem_lista
    (115) elem_lista -> . value
    (116) elem_lista -> . empty
    (75) value -> . CTE_F
    (76) value -> . CTE_I
    (77) value -> . ID
    (78) value -> . CTE_C
    (79) value -> . COMILLA ID COMILLA
    (80) value -> . COMILLAS ID COMILLAS
    (127) empty -> .

    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88
    ID              shift and go to state 85
    CTE_C           shift and go to state 89
    COMILLA         shift and go to state 90
    COMILLAS        shift and go to state 91
    COMMA           reduce using rule 127 (empty -> .)

    lista2                         shift and go to state 135
    elem_lista                     shift and go to state 136
    value                          shift and go to state 137
    empty                          shift and go to state 138

state 113

    (66) vars2G -> ID IS value SEMICOL .

    VAR             reduce using rule 66 (vars2G -> ID IS value SEMICOL .)
    FUNC            reduce using rule 66 (vars2G -> ID IS value SEMICOL .)
    VOID            reduce using rule 66 (vars2G -> ID IS value SEMICOL .)
    INT             reduce using rule 66 (vars2G -> ID IS value SEMICOL .)
    FLOAT           reduce using rule 66 (vars2G -> ID IS value SEMICOL .)
    CHAR            reduce using rule 66 (vars2G -> ID IS value SEMICOL .)
    $end            reduce using rule 66 (vars2G -> ID IS value SEMICOL .)
    RB              reduce using rule 66 (vars2G -> ID IS value SEMICOL .)


state 114

    (64) vars2_1G -> ID IS value COMMA .

    ID              reduce using rule 64 (vars2_1G -> ID IS value COMMA .)


state 115

    (79) value -> COMILLA ID . COMILLA

    COMILLA         shift and go to state 139


state 116

    (80) value -> COMILLAS ID . COMILLAS

    COMILLAS        shift and go to state 140


state 117

    (121) var_matrixG -> VAR tipo ID matrix IS matrix2 . SEMICOL

    SEMICOL         shift and go to state 141


state 118

    (122) matrix2 -> LP . lista2 RP COMMA matrix2
    (123) matrix2 -> LP . lista2 RP COMMA LP lista2 RP
    (117) lista2 -> . elem_lista COMMA lista2
    (118) lista2 -> . elem_lista COMMA elem_lista
    (115) elem_lista -> . value
    (116) elem_lista -> . empty
    (75) value -> . CTE_F
    (76) value -> . CTE_I
    (77) value -> . ID
    (78) value -> . CTE_C
    (79) value -> . COMILLA ID COMILLA
    (80) value -> . COMILLAS ID COMILLAS
    (127) empty -> .

    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88
    ID              shift and go to state 85
    CTE_C           shift and go to state 89
    COMILLA         shift and go to state 90
    COMILLAS        shift and go to state 91
    COMMA           reduce using rule 127 (empty -> .)

    lista2                         shift and go to state 142
    elem_lista                     shift and go to state 136
    value                          shift and go to state 137
    empty                          shift and go to state 138

state 119

    (119) row -> LC CTE_I RC .

    IS              reduce using rule 119 (row -> LC CTE_I RC .)
    LC              reduce using rule 119 (row -> LC CTE_I RC .)
    SEMICOL         reduce using rule 119 (row -> LC CTE_I RC .)


state 120

    (62) vars2G -> vars2_1G ID IS value . SEMICOL
    (63) vars2_1G -> vars2_1G ID IS value . COMMA

    SEMICOL         shift and go to state 143
    COMMA           shift and go to state 144


state 121

    (93) param -> tipo ID .

    RP              reduce using rule 93 (param -> tipo ID .)
    COMMA           reduce using rule 93 (param -> tipo ID .)


state 122

    (85) funcion -> tipo ID add_fun LP RP verificar2 . LB var_func statement add_func_dir2 func_return RB end_func

    LB              shift and go to state 145


state 123

    (86) funcion -> tipo ID add_fun LP param RP . verificar LB var_func statement add_func_dir func_return_param RB end_func
    (87) verificar -> .

    LB              reduce using rule 87 (verificar -> .)

    verificar                      shift and go to state 146

state 124

    (94) param -> param COMMA . tipo ID
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    tipo                           shift and go to state 147

state 125

    (100) declarar_param -> tipo COMMA . declarar_param
    (100) declarar_param -> . tipo COMMA declarar_param
    (101) declarar_param -> . tipo declarar_param
    (102) declarar_param -> . empty
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR
    (127) empty -> .

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20
    RP              reduce using rule 127 (empty -> .)

    tipo                           shift and go to state 101
    declarar_param                 shift and go to state 148
    empty                          shift and go to state 104

state 126

    (101) declarar_param -> tipo declarar_param .

    RP              reduce using rule 101 (declarar_param -> tipo declarar_param .)


state 127

    (96) declarar_func -> FUNC tipo ID LP RP SEMICOL .

    VAR             reduce using rule 96 (declarar_func -> FUNC tipo ID LP RP SEMICOL .)
    FUNC            reduce using rule 96 (declarar_func -> FUNC tipo ID LP RP SEMICOL .)
    VOID            reduce using rule 96 (declarar_func -> FUNC tipo ID LP RP SEMICOL .)
    INT             reduce using rule 96 (declarar_func -> FUNC tipo ID LP RP SEMICOL .)
    FLOAT           reduce using rule 96 (declarar_func -> FUNC tipo ID LP RP SEMICOL .)
    CHAR            reduce using rule 96 (declarar_func -> FUNC tipo ID LP RP SEMICOL .)
    $end            reduce using rule 96 (declarar_func -> FUNC tipo ID LP RP SEMICOL .)
    RB              reduce using rule 96 (declarar_func -> FUNC tipo ID LP RP SEMICOL .)


state 128

    (98) declarar_func -> FUNC tipo ID LP declarar_param RP . SEMICOL

    SEMICOL         shift and go to state 149


state 129

    (97) declarar_func -> FUNC VOID ID LP RP SEMICOL .

    VAR             reduce using rule 97 (declarar_func -> FUNC VOID ID LP RP SEMICOL .)
    FUNC            reduce using rule 97 (declarar_func -> FUNC VOID ID LP RP SEMICOL .)
    VOID            reduce using rule 97 (declarar_func -> FUNC VOID ID LP RP SEMICOL .)
    INT             reduce using rule 97 (declarar_func -> FUNC VOID ID LP RP SEMICOL .)
    FLOAT           reduce using rule 97 (declarar_func -> FUNC VOID ID LP RP SEMICOL .)
    CHAR            reduce using rule 97 (declarar_func -> FUNC VOID ID LP RP SEMICOL .)
    $end            reduce using rule 97 (declarar_func -> FUNC VOID ID LP RP SEMICOL .)
    RB              reduce using rule 97 (declarar_func -> FUNC VOID ID LP RP SEMICOL .)


state 130

    (99) declarar_func -> FUNC VOID ID LP declarar_param RP . SEMICOL

    SEMICOL         shift and go to state 150


state 131

    (83) funcion -> VOID ID add_fun LP param RP . verificar LB var_func statement RB end_func
    (87) verificar -> .

    LB              reduce using rule 87 (verificar -> .)

    verificar                      shift and go to state 151

state 132

    (84) funcion -> VOID ID add_fun LP RP verificar2 . LB var_func statement RB end_func

    LB              shift and go to state 152


state 133

    (11) main -> tipo MAIN quad_main2 LP RP LB . statement add_func_main func_return_main RB
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . while statement
    (19) statement -> . for statement
    (20) statement -> . escritura statement
    (21) statement -> . escritura_var statement
    (22) statement -> . lectura statement
    (23) statement -> . func_call statement
    (24) statement -> . ID row SEMICOL
    (25) statement -> . ID matrix SEMICOL
    (26) statement -> . empty
    (27) asignacion -> . ID IS value
    (128) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (129) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (138) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (139) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (148) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (149) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (150) escritura_var -> . PRINT LP any_var RP SEMICOL
    (155) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (156) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (104) func_call -> . ID LP RP SEMICOL
    (105) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (127) empty -> .
    (113) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (120) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 163
    IF              shift and go to state 165
    VAR             shift and go to state 166
    WHILE           shift and go to state 169
    FOR             shift and go to state 170
    PRINT           shift and go to state 171
    READ            shift and go to state 172
    RETURN          reduce using rule 127 (empty -> .)

  ! ID              [ reduce using rule 127 (empty -> .) ]
  ! IF              [ reduce using rule 127 (empty -> .) ]
  ! VAR             [ reduce using rule 127 (empty -> .) ]
  ! WHILE           [ reduce using rule 127 (empty -> .) ]
  ! FOR             [ reduce using rule 127 (empty -> .) ]
  ! PRINT           [ reduce using rule 127 (empty -> .) ]
  ! READ            [ reduce using rule 127 (empty -> .) ]

    statement                      shift and go to state 153
    asignacion                     shift and go to state 154
    if                             shift and go to state 155
    vars                           shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    escritura                      shift and go to state 159
    escritura_var                  shift and go to state 160
    lectura                        shift and go to state 161
    func_call                      shift and go to state 162
    empty                          shift and go to state 164
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168

state 134

    (12) main -> VOID MAIN quad_main2 LP RP LB . statement add_func_main RB
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . while statement
    (19) statement -> . for statement
    (20) statement -> . escritura statement
    (21) statement -> . escritura_var statement
    (22) statement -> . lectura statement
    (23) statement -> . func_call statement
    (24) statement -> . ID row SEMICOL
    (25) statement -> . ID matrix SEMICOL
    (26) statement -> . empty
    (27) asignacion -> . ID IS value
    (128) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (129) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (138) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (139) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (148) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (149) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (150) escritura_var -> . PRINT LP any_var RP SEMICOL
    (155) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (156) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (104) func_call -> . ID LP RP SEMICOL
    (105) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (127) empty -> .
    (113) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (120) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 163
    IF              shift and go to state 165
    VAR             shift and go to state 166
    WHILE           shift and go to state 169
    FOR             shift and go to state 170
    PRINT           shift and go to state 171
    READ            shift and go to state 172
    RB              reduce using rule 127 (empty -> .)

  ! ID              [ reduce using rule 127 (empty -> .) ]
  ! IF              [ reduce using rule 127 (empty -> .) ]
  ! VAR             [ reduce using rule 127 (empty -> .) ]
  ! WHILE           [ reduce using rule 127 (empty -> .) ]
  ! FOR             [ reduce using rule 127 (empty -> .) ]
  ! PRINT           [ reduce using rule 127 (empty -> .) ]
  ! READ            [ reduce using rule 127 (empty -> .) ]

    statement                      shift and go to state 173
    asignacion                     shift and go to state 154
    if                             shift and go to state 155
    vars                           shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    escritura                      shift and go to state 159
    escritura_var                  shift and go to state 160
    lectura                        shift and go to state 161
    func_call                      shift and go to state 162
    empty                          shift and go to state 164
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168

state 135

    (114) var_rowG -> VAR tipo ID row IS LP lista2 . RP SEMICOL

    RP              shift and go to state 174


state 136

    (117) lista2 -> elem_lista . COMMA lista2
    (118) lista2 -> elem_lista . COMMA elem_lista

    COMMA           shift and go to state 175


state 137

    (115) elem_lista -> value .

    COMMA           reduce using rule 115 (elem_lista -> value .)
    RP              reduce using rule 115 (elem_lista -> value .)


state 138

    (116) elem_lista -> empty .

    COMMA           reduce using rule 116 (elem_lista -> empty .)
    RP              reduce using rule 116 (elem_lista -> empty .)


state 139

    (79) value -> COMILLA ID COMILLA .

    SEMICOL         reduce using rule 79 (value -> COMILLA ID COMILLA .)
    COMMA           reduce using rule 79 (value -> COMILLA ID COMILLA .)
    RP              reduce using rule 79 (value -> COMILLA ID COMILLA .)


state 140

    (80) value -> COMILLAS ID COMILLAS .

    SEMICOL         reduce using rule 80 (value -> COMILLAS ID COMILLAS .)
    COMMA           reduce using rule 80 (value -> COMILLAS ID COMILLAS .)
    RP              reduce using rule 80 (value -> COMILLAS ID COMILLAS .)


state 141

    (121) var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .

    VAR             reduce using rule 121 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    FUNC            reduce using rule 121 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    VOID            reduce using rule 121 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    INT             reduce using rule 121 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    FLOAT           reduce using rule 121 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    CHAR            reduce using rule 121 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    $end            reduce using rule 121 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    RB              reduce using rule 121 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)


state 142

    (122) matrix2 -> LP lista2 . RP COMMA matrix2
    (123) matrix2 -> LP lista2 . RP COMMA LP lista2 RP

    RP              shift and go to state 176


state 143

    (62) vars2G -> vars2_1G ID IS value SEMICOL .

    VAR             reduce using rule 62 (vars2G -> vars2_1G ID IS value SEMICOL .)
    FUNC            reduce using rule 62 (vars2G -> vars2_1G ID IS value SEMICOL .)
    VOID            reduce using rule 62 (vars2G -> vars2_1G ID IS value SEMICOL .)
    INT             reduce using rule 62 (vars2G -> vars2_1G ID IS value SEMICOL .)
    FLOAT           reduce using rule 62 (vars2G -> vars2_1G ID IS value SEMICOL .)
    CHAR            reduce using rule 62 (vars2G -> vars2_1G ID IS value SEMICOL .)
    $end            reduce using rule 62 (vars2G -> vars2_1G ID IS value SEMICOL .)
    RB              reduce using rule 62 (vars2G -> vars2_1G ID IS value SEMICOL .)


state 144

    (63) vars2_1G -> vars2_1G ID IS value COMMA .

    ID              reduce using rule 63 (vars2_1G -> vars2_1G ID IS value COMMA .)


state 145

    (85) funcion -> tipo ID add_fun LP RP verificar2 LB . var_func statement add_func_dir2 func_return RB end_func
    (92) var_func -> . vars
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (113) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (120) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (127) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
    VAR             shift and go to state 166
    ID              reduce using rule 127 (empty -> .)
    IF              reduce using rule 127 (empty -> .)
    WHILE           reduce using rule 127 (empty -> .)
    FOR             reduce using rule 127 (empty -> .)
    PRINT           reduce using rule 127 (empty -> .)
    READ            reduce using rule 127 (empty -> .)
    RETURN          reduce using rule 127 (empty -> .)

  ! VAR             [ reduce using rule 127 (empty -> .) ]

    var_func                       shift and go to state 177
    vars                           shift and go to state 178
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168
    empty                          shift and go to state 179

state 146

    (86) funcion -> tipo ID add_fun LP param RP verificar . LB var_func statement add_func_dir func_return_param RB end_func

    LB              shift and go to state 180


state 147

    (94) param -> param COMMA tipo . ID

    ID              shift and go to state 181


state 148

    (100) declarar_param -> tipo COMMA declarar_param .

    RP              reduce using rule 100 (declarar_param -> tipo COMMA declarar_param .)


state 149

    (98) declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .

    VAR             reduce using rule 98 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    FUNC            reduce using rule 98 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    VOID            reduce using rule 98 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    INT             reduce using rule 98 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    FLOAT           reduce using rule 98 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    CHAR            reduce using rule 98 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    $end            reduce using rule 98 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    RB              reduce using rule 98 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)


state 150

    (99) declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .

    VAR             reduce using rule 99 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    FUNC            reduce using rule 99 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    VOID            reduce using rule 99 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    INT             reduce using rule 99 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    FLOAT           reduce using rule 99 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    CHAR            reduce using rule 99 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    $end            reduce using rule 99 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    RB              reduce using rule 99 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)


state 151

    (83) funcion -> VOID ID add_fun LP param RP verificar . LB var_func statement RB end_func

    LB              shift and go to state 182


state 152

    (84) funcion -> VOID ID add_fun LP RP verificar2 LB . var_func statement RB end_func
    (92) var_func -> . vars
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (113) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (120) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (127) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
    VAR             shift and go to state 166
    ID              reduce using rule 127 (empty -> .)
    IF              reduce using rule 127 (empty -> .)
    WHILE           reduce using rule 127 (empty -> .)
    FOR             reduce using rule 127 (empty -> .)
    PRINT           reduce using rule 127 (empty -> .)
    READ            reduce using rule 127 (empty -> .)
    RB              reduce using rule 127 (empty -> .)

  ! VAR             [ reduce using rule 127 (empty -> .) ]

    var_func                       shift and go to state 183
    vars                           shift and go to state 178
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168
    empty                          shift and go to state 179

state 153

    (11) main -> tipo MAIN quad_main2 LP RP LB statement . add_func_main func_return_main RB
    (91) add_func_main -> .

    RETURN          reduce using rule 91 (add_func_main -> .)

    add_func_main                  shift and go to state 184

state 154

    (15) statement -> asignacion . SEMICOL statement

    SEMICOL         shift and go to state 185


state 155

    (16) statement -> if . statement
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . while statement
    (19) statement -> . for statement
    (20) statement -> . escritura statement
    (21) statement -> . escritura_var statement
    (22) statement -> . lectura statement
    (23) statement -> . func_call statement
    (24) statement -> . ID row SEMICOL
    (25) statement -> . ID matrix SEMICOL
    (26) statement -> . empty
    (27) asignacion -> . ID IS value
    (128) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (129) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (138) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (139) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (148) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (149) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (150) escritura_var -> . PRINT LP any_var RP SEMICOL
    (155) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (156) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (104) func_call -> . ID LP RP SEMICOL
    (105) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (127) empty -> .
    (113) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (120) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 163
    IF              shift and go to state 165
    VAR             shift and go to state 166
    WHILE           shift and go to state 169
    FOR             shift and go to state 170
    PRINT           shift and go to state 171
    READ            shift and go to state 172
    RETURN          reduce using rule 127 (empty -> .)
    RB              reduce using rule 127 (empty -> .)

  ! ID              [ reduce using rule 127 (empty -> .) ]
  ! IF              [ reduce using rule 127 (empty -> .) ]
  ! VAR             [ reduce using rule 127 (empty -> .) ]
  ! WHILE           [ reduce using rule 127 (empty -> .) ]
  ! FOR             [ reduce using rule 127 (empty -> .) ]
  ! PRINT           [ reduce using rule 127 (empty -> .) ]
  ! READ            [ reduce using rule 127 (empty -> .) ]

    if                             shift and go to state 155
    statement                      shift and go to state 186
    asignacion                     shift and go to state 154
    vars                           shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    escritura                      shift and go to state 159
    escritura_var                  shift and go to state 160
    lectura                        shift and go to state 161
    func_call                      shift and go to state 162
    empty                          shift and go to state 164
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168

state 156

    (17) statement -> vars . statement
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . while statement
    (19) statement -> . for statement
    (20) statement -> . escritura statement
    (21) statement -> . escritura_var statement
    (22) statement -> . lectura statement
    (23) statement -> . func_call statement
    (24) statement -> . ID row SEMICOL
    (25) statement -> . ID matrix SEMICOL
    (26) statement -> . empty
    (27) asignacion -> . ID IS value
    (128) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (129) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (138) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (139) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (148) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (149) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (150) escritura_var -> . PRINT LP any_var RP SEMICOL
    (155) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (156) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (104) func_call -> . ID LP RP SEMICOL
    (105) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (127) empty -> .
    (113) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (120) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 163
    IF              shift and go to state 165
    VAR             shift and go to state 166
    WHILE           shift and go to state 169
    FOR             shift and go to state 170
    PRINT           shift and go to state 171
    READ            shift and go to state 172
    RETURN          reduce using rule 127 (empty -> .)
    RB              reduce using rule 127 (empty -> .)

  ! ID              [ reduce using rule 127 (empty -> .) ]
  ! IF              [ reduce using rule 127 (empty -> .) ]
  ! VAR             [ reduce using rule 127 (empty -> .) ]
  ! WHILE           [ reduce using rule 127 (empty -> .) ]
  ! FOR             [ reduce using rule 127 (empty -> .) ]
  ! PRINT           [ reduce using rule 127 (empty -> .) ]
  ! READ            [ reduce using rule 127 (empty -> .) ]

    vars                           shift and go to state 156
    statement                      shift and go to state 187
    asignacion                     shift and go to state 154
    if                             shift and go to state 155
    while                          shift and go to state 157
    for                            shift and go to state 158
    escritura                      shift and go to state 159
    escritura_var                  shift and go to state 160
    lectura                        shift and go to state 161
    func_call                      shift and go to state 162
    empty                          shift and go to state 164
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168

state 157

    (18) statement -> while . statement
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . while statement
    (19) statement -> . for statement
    (20) statement -> . escritura statement
    (21) statement -> . escritura_var statement
    (22) statement -> . lectura statement
    (23) statement -> . func_call statement
    (24) statement -> . ID row SEMICOL
    (25) statement -> . ID matrix SEMICOL
    (26) statement -> . empty
    (27) asignacion -> . ID IS value
    (128) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (129) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (138) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (139) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (148) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (149) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (150) escritura_var -> . PRINT LP any_var RP SEMICOL
    (155) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (156) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (104) func_call -> . ID LP RP SEMICOL
    (105) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (127) empty -> .
    (113) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (120) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 163
    IF              shift and go to state 165
    VAR             shift and go to state 166
    WHILE           shift and go to state 169
    FOR             shift and go to state 170
    PRINT           shift and go to state 171
    READ            shift and go to state 172
    RETURN          reduce using rule 127 (empty -> .)
    RB              reduce using rule 127 (empty -> .)

  ! ID              [ reduce using rule 127 (empty -> .) ]
  ! IF              [ reduce using rule 127 (empty -> .) ]
  ! VAR             [ reduce using rule 127 (empty -> .) ]
  ! WHILE           [ reduce using rule 127 (empty -> .) ]
  ! FOR             [ reduce using rule 127 (empty -> .) ]
  ! PRINT           [ reduce using rule 127 (empty -> .) ]
  ! READ            [ reduce using rule 127 (empty -> .) ]

    while                          shift and go to state 157
    statement                      shift and go to state 188
    asignacion                     shift and go to state 154
    if                             shift and go to state 155
    vars                           shift and go to state 156
    for                            shift and go to state 158
    escritura                      shift and go to state 159
    escritura_var                  shift and go to state 160
    lectura                        shift and go to state 161
    func_call                      shift and go to state 162
    empty                          shift and go to state 164
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168

state 158

    (19) statement -> for . statement
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . while statement
    (19) statement -> . for statement
    (20) statement -> . escritura statement
    (21) statement -> . escritura_var statement
    (22) statement -> . lectura statement
    (23) statement -> . func_call statement
    (24) statement -> . ID row SEMICOL
    (25) statement -> . ID matrix SEMICOL
    (26) statement -> . empty
    (27) asignacion -> . ID IS value
    (128) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (129) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (138) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (139) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (148) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (149) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (150) escritura_var -> . PRINT LP any_var RP SEMICOL
    (155) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (156) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (104) func_call -> . ID LP RP SEMICOL
    (105) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (127) empty -> .
    (113) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (120) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 163
    IF              shift and go to state 165
    VAR             shift and go to state 166
    WHILE           shift and go to state 169
    FOR             shift and go to state 170
    PRINT           shift and go to state 171
    READ            shift and go to state 172
    RETURN          reduce using rule 127 (empty -> .)
    RB              reduce using rule 127 (empty -> .)

  ! ID              [ reduce using rule 127 (empty -> .) ]
  ! IF              [ reduce using rule 127 (empty -> .) ]
  ! VAR             [ reduce using rule 127 (empty -> .) ]
  ! WHILE           [ reduce using rule 127 (empty -> .) ]
  ! FOR             [ reduce using rule 127 (empty -> .) ]
  ! PRINT           [ reduce using rule 127 (empty -> .) ]
  ! READ            [ reduce using rule 127 (empty -> .) ]

    for                            shift and go to state 158
    statement                      shift and go to state 189
    asignacion                     shift and go to state 154
    if                             shift and go to state 155
    vars                           shift and go to state 156
    while                          shift and go to state 157
    escritura                      shift and go to state 159
    escritura_var                  shift and go to state 160
    lectura                        shift and go to state 161
    func_call                      shift and go to state 162
    empty                          shift and go to state 164
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168

state 159

    (20) statement -> escritura . statement
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . while statement
    (19) statement -> . for statement
    (20) statement -> . escritura statement
    (21) statement -> . escritura_var statement
    (22) statement -> . lectura statement
    (23) statement -> . func_call statement
    (24) statement -> . ID row SEMICOL
    (25) statement -> . ID matrix SEMICOL
    (26) statement -> . empty
    (27) asignacion -> . ID IS value
    (128) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (129) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (138) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (139) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (148) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (149) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (150) escritura_var -> . PRINT LP any_var RP SEMICOL
    (155) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (156) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (104) func_call -> . ID LP RP SEMICOL
    (105) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (127) empty -> .
    (113) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (120) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 163
    IF              shift and go to state 165
    VAR             shift and go to state 166
    WHILE           shift and go to state 169
    FOR             shift and go to state 170
    PRINT           shift and go to state 171
    READ            shift and go to state 172
    RETURN          reduce using rule 127 (empty -> .)
    RB              reduce using rule 127 (empty -> .)

  ! ID              [ reduce using rule 127 (empty -> .) ]
  ! IF              [ reduce using rule 127 (empty -> .) ]
  ! VAR             [ reduce using rule 127 (empty -> .) ]
  ! WHILE           [ reduce using rule 127 (empty -> .) ]
  ! FOR             [ reduce using rule 127 (empty -> .) ]
  ! PRINT           [ reduce using rule 127 (empty -> .) ]
  ! READ            [ reduce using rule 127 (empty -> .) ]

    escritura                      shift and go to state 159
    statement                      shift and go to state 190
    asignacion                     shift and go to state 154
    if                             shift and go to state 155
    vars                           shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    escritura_var                  shift and go to state 160
    lectura                        shift and go to state 161
    func_call                      shift and go to state 162
    empty                          shift and go to state 164
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168

state 160

    (21) statement -> escritura_var . statement
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . while statement
    (19) statement -> . for statement
    (20) statement -> . escritura statement
    (21) statement -> . escritura_var statement
    (22) statement -> . lectura statement
    (23) statement -> . func_call statement
    (24) statement -> . ID row SEMICOL
    (25) statement -> . ID matrix SEMICOL
    (26) statement -> . empty
    (27) asignacion -> . ID IS value
    (128) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (129) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (138) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (139) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (148) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (149) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (150) escritura_var -> . PRINT LP any_var RP SEMICOL
    (155) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (156) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (104) func_call -> . ID LP RP SEMICOL
    (105) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (127) empty -> .
    (113) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (120) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 163
    IF              shift and go to state 165
    VAR             shift and go to state 166
    WHILE           shift and go to state 169
    FOR             shift and go to state 170
    PRINT           shift and go to state 171
    READ            shift and go to state 172
    RETURN          reduce using rule 127 (empty -> .)
    RB              reduce using rule 127 (empty -> .)

  ! ID              [ reduce using rule 127 (empty -> .) ]
  ! IF              [ reduce using rule 127 (empty -> .) ]
  ! VAR             [ reduce using rule 127 (empty -> .) ]
  ! WHILE           [ reduce using rule 127 (empty -> .) ]
  ! FOR             [ reduce using rule 127 (empty -> .) ]
  ! PRINT           [ reduce using rule 127 (empty -> .) ]
  ! READ            [ reduce using rule 127 (empty -> .) ]

    escritura_var                  shift and go to state 160
    statement                      shift and go to state 191
    asignacion                     shift and go to state 154
    if                             shift and go to state 155
    vars                           shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    escritura                      shift and go to state 159
    lectura                        shift and go to state 161
    func_call                      shift and go to state 162
    empty                          shift and go to state 164
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168

state 161

    (22) statement -> lectura . statement
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . while statement
    (19) statement -> . for statement
    (20) statement -> . escritura statement
    (21) statement -> . escritura_var statement
    (22) statement -> . lectura statement
    (23) statement -> . func_call statement
    (24) statement -> . ID row SEMICOL
    (25) statement -> . ID matrix SEMICOL
    (26) statement -> . empty
    (27) asignacion -> . ID IS value
    (128) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (129) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (138) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (139) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (148) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (149) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (150) escritura_var -> . PRINT LP any_var RP SEMICOL
    (155) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (156) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (104) func_call -> . ID LP RP SEMICOL
    (105) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (127) empty -> .
    (113) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (120) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 163
    IF              shift and go to state 165
    VAR             shift and go to state 166
    WHILE           shift and go to state 169
    FOR             shift and go to state 170
    PRINT           shift and go to state 171
    READ            shift and go to state 172
    RETURN          reduce using rule 127 (empty -> .)
    RB              reduce using rule 127 (empty -> .)

  ! ID              [ reduce using rule 127 (empty -> .) ]
  ! IF              [ reduce using rule 127 (empty -> .) ]
  ! VAR             [ reduce using rule 127 (empty -> .) ]
  ! WHILE           [ reduce using rule 127 (empty -> .) ]
  ! FOR             [ reduce using rule 127 (empty -> .) ]
  ! PRINT           [ reduce using rule 127 (empty -> .) ]
  ! READ            [ reduce using rule 127 (empty -> .) ]

    lectura                        shift and go to state 161
    statement                      shift and go to state 192
    asignacion                     shift and go to state 154
    if                             shift and go to state 155
    vars                           shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    escritura                      shift and go to state 159
    escritura_var                  shift and go to state 160
    func_call                      shift and go to state 162
    empty                          shift and go to state 164
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168

state 162

    (23) statement -> func_call . statement
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . while statement
    (19) statement -> . for statement
    (20) statement -> . escritura statement
    (21) statement -> . escritura_var statement
    (22) statement -> . lectura statement
    (23) statement -> . func_call statement
    (24) statement -> . ID row SEMICOL
    (25) statement -> . ID matrix SEMICOL
    (26) statement -> . empty
    (27) asignacion -> . ID IS value
    (128) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (129) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (138) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (139) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (148) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (149) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (150) escritura_var -> . PRINT LP any_var RP SEMICOL
    (155) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (156) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (104) func_call -> . ID LP RP SEMICOL
    (105) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (127) empty -> .
    (113) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (120) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 163
    IF              shift and go to state 165
    VAR             shift and go to state 166
    WHILE           shift and go to state 169
    FOR             shift and go to state 170
    PRINT           shift and go to state 171
    READ            shift and go to state 172
    RETURN          reduce using rule 127 (empty -> .)
    RB              reduce using rule 127 (empty -> .)

  ! ID              [ reduce using rule 127 (empty -> .) ]
  ! IF              [ reduce using rule 127 (empty -> .) ]
  ! VAR             [ reduce using rule 127 (empty -> .) ]
  ! WHILE           [ reduce using rule 127 (empty -> .) ]
  ! FOR             [ reduce using rule 127 (empty -> .) ]
  ! PRINT           [ reduce using rule 127 (empty -> .) ]
  ! READ            [ reduce using rule 127 (empty -> .) ]

    func_call                      shift and go to state 162
    statement                      shift and go to state 193
    asignacion                     shift and go to state 154
    if                             shift and go to state 155
    vars                           shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    escritura                      shift and go to state 159
    escritura_var                  shift and go to state 160
    lectura                        shift and go to state 161
    empty                          shift and go to state 164
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168

state 163

    (24) statement -> ID . row SEMICOL
    (25) statement -> ID . matrix SEMICOL
    (27) asignacion -> ID . IS value
    (104) func_call -> ID . LP RP SEMICOL
    (105) func_call -> ID . LP func_era func_call_param RP SEMICOL
    (119) row -> . LC CTE_I RC
    (126) matrix -> . row row

    IS              shift and go to state 196
    LP              shift and go to state 197
    LC              shift and go to state 71

    row                            shift and go to state 194
    matrix                         shift and go to state 195

state 164

    (26) statement -> empty .
    (38) vars -> empty .

  ! reduce/reduce conflict for RETURN resolved using rule 26 (statement -> empty .)
  ! reduce/reduce conflict for RB resolved using rule 26 (statement -> empty .)
    RETURN          reduce using rule 26 (statement -> empty .)
    RB              reduce using rule 26 (statement -> empty .)
    ID              reduce using rule 38 (vars -> empty .)
    IF              reduce using rule 38 (vars -> empty .)
    VAR             reduce using rule 38 (vars -> empty .)
    WHILE           reduce using rule 38 (vars -> empty .)
    FOR             reduce using rule 38 (vars -> empty .)
    PRINT           reduce using rule 38 (vars -> empty .)
    READ            reduce using rule 38 (vars -> empty .)

  ! RETURN          [ reduce using rule 38 (vars -> empty .) ]
  ! RB              [ reduce using rule 38 (vars -> empty .) ]


state 165

    (128) if -> IF . LP expression RP check_bool gotof LB statement RB fill_if
    (129) if -> IF . LP expression RP check_bool gotof LB statement RB goto fill_gotof else

    LP              shift and go to state 198


state 166

    (28) vars -> VAR . tipo vars1
    (29) vars -> VAR . tipo vars2
    (30) vars -> VAR . tipo vars3
    (31) vars -> VAR . tipo oper_aritmetica
    (32) vars -> VAR . tipo ID row SEMICOL
    (33) vars -> VAR . tipo ID matrix SEMICOL
    (113) var_row -> VAR . tipo ID row IS LP lista2 RP SEMICOL
    (120) var_matrix -> VAR . tipo ID matrix IS matrix2 SEMICOL
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    tipo                           shift and go to state 199

state 167

    (34) vars -> var_row .
    (35) vars -> var_row . vars
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (113) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (120) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (127) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for ID resolved using rule 34 (vars -> var_row .)
  ! reduce/reduce conflict for IF resolved using rule 34 (vars -> var_row .)
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for WHILE resolved using rule 34 (vars -> var_row .)
  ! reduce/reduce conflict for FOR resolved using rule 34 (vars -> var_row .)
  ! reduce/reduce conflict for PRINT resolved using rule 34 (vars -> var_row .)
  ! reduce/reduce conflict for READ resolved using rule 34 (vars -> var_row .)
  ! reduce/reduce conflict for RETURN resolved using rule 34 (vars -> var_row .)
  ! reduce/reduce conflict for RB resolved using rule 34 (vars -> var_row .)
    ID              reduce using rule 34 (vars -> var_row .)
    IF              reduce using rule 34 (vars -> var_row .)
    WHILE           reduce using rule 34 (vars -> var_row .)
    FOR             reduce using rule 34 (vars -> var_row .)
    PRINT           reduce using rule 34 (vars -> var_row .)
    READ            reduce using rule 34 (vars -> var_row .)
    RETURN          reduce using rule 34 (vars -> var_row .)
    RB              reduce using rule 34 (vars -> var_row .)
    VAR             shift and go to state 166

  ! VAR             [ reduce using rule 34 (vars -> var_row .) ]
  ! ID              [ reduce using rule 127 (empty -> .) ]
  ! IF              [ reduce using rule 127 (empty -> .) ]
  ! VAR             [ reduce using rule 127 (empty -> .) ]
  ! WHILE           [ reduce using rule 127 (empty -> .) ]
  ! FOR             [ reduce using rule 127 (empty -> .) ]
  ! PRINT           [ reduce using rule 127 (empty -> .) ]
  ! READ            [ reduce using rule 127 (empty -> .) ]
  ! RETURN          [ reduce using rule 127 (empty -> .) ]
  ! RB              [ reduce using rule 127 (empty -> .) ]

    var_row                        shift and go to state 167
    vars                           shift and go to state 200
    var_matrix                     shift and go to state 168
    empty                          shift and go to state 179

state 168

    (36) vars -> var_matrix .
    (37) vars -> var_matrix . vars
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (113) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (120) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (127) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for ID resolved using rule 36 (vars -> var_matrix .)
  ! reduce/reduce conflict for IF resolved using rule 36 (vars -> var_matrix .)
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for WHILE resolved using rule 36 (vars -> var_matrix .)
  ! reduce/reduce conflict for FOR resolved using rule 36 (vars -> var_matrix .)
  ! reduce/reduce conflict for PRINT resolved using rule 36 (vars -> var_matrix .)
  ! reduce/reduce conflict for READ resolved using rule 36 (vars -> var_matrix .)
  ! reduce/reduce conflict for RETURN resolved using rule 36 (vars -> var_matrix .)
  ! reduce/reduce conflict for RB resolved using rule 36 (vars -> var_matrix .)
    ID              reduce using rule 36 (vars -> var_matrix .)
    IF              reduce using rule 36 (vars -> var_matrix .)
    WHILE           reduce using rule 36 (vars -> var_matrix .)
    FOR             reduce using rule 36 (vars -> var_matrix .)
    PRINT           reduce using rule 36 (vars -> var_matrix .)
    READ            reduce using rule 36 (vars -> var_matrix .)
    RETURN          reduce using rule 36 (vars -> var_matrix .)
    RB              reduce using rule 36 (vars -> var_matrix .)
    VAR             shift and go to state 166

  ! VAR             [ reduce using rule 36 (vars -> var_matrix .) ]
  ! ID              [ reduce using rule 127 (empty -> .) ]
  ! IF              [ reduce using rule 127 (empty -> .) ]
  ! VAR             [ reduce using rule 127 (empty -> .) ]
  ! WHILE           [ reduce using rule 127 (empty -> .) ]
  ! FOR             [ reduce using rule 127 (empty -> .) ]
  ! PRINT           [ reduce using rule 127 (empty -> .) ]
  ! READ            [ reduce using rule 127 (empty -> .) ]
  ! RETURN          [ reduce using rule 127 (empty -> .) ]
  ! RB              [ reduce using rule 127 (empty -> .) ]

    var_matrix                     shift and go to state 168
    vars                           shift and go to state 201
    var_row                        shift and go to state 167
    empty                          shift and go to state 179

state 169

    (138) while -> WHILE . guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (137) guarda_num_salto -> .

    LP              reduce using rule 137 (guarda_num_salto -> .)

    guarda_num_salto               shift and go to state 202

state 170

    (139) for -> FOR . LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto

    LP              shift and go to state 203


state 171

    (148) escritura -> PRINT . LP COMILLA any COMILLA RP SEMICOL
    (149) escritura -> PRINT . LP COMILLAS any COMILLAS RP SEMICOL
    (150) escritura_var -> PRINT . LP any_var RP SEMICOL

    LP              shift and go to state 204


state 172

    (155) lectura -> READ . LP COMILLA any_lectura COMILLA RP SEMICOL
    (156) lectura -> READ . LP COMILLAS any_lectura COMILLAS RP SEMICOL

    LP              shift and go to state 205


state 173

    (12) main -> VOID MAIN quad_main2 LP RP LB statement . add_func_main RB
    (91) add_func_main -> .

    RB              reduce using rule 91 (add_func_main -> .)

    add_func_main                  shift and go to state 206

state 174

    (114) var_rowG -> VAR tipo ID row IS LP lista2 RP . SEMICOL

    SEMICOL         shift and go to state 207


state 175

    (117) lista2 -> elem_lista COMMA . lista2
    (118) lista2 -> elem_lista COMMA . elem_lista
    (117) lista2 -> . elem_lista COMMA lista2
    (118) lista2 -> . elem_lista COMMA elem_lista
    (115) elem_lista -> . value
    (116) elem_lista -> . empty
    (75) value -> . CTE_F
    (76) value -> . CTE_I
    (77) value -> . ID
    (78) value -> . CTE_C
    (79) value -> . COMILLA ID COMILLA
    (80) value -> . COMILLAS ID COMILLAS
    (127) empty -> .

    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88
    ID              shift and go to state 85
    CTE_C           shift and go to state 89
    COMILLA         shift and go to state 90
    COMILLAS        shift and go to state 91
    COMMA           reduce using rule 127 (empty -> .)
    RP              reduce using rule 127 (empty -> .)

    elem_lista                     shift and go to state 208
    lista2                         shift and go to state 209
    value                          shift and go to state 137
    empty                          shift and go to state 138

state 176

    (122) matrix2 -> LP lista2 RP . COMMA matrix2
    (123) matrix2 -> LP lista2 RP . COMMA LP lista2 RP

    COMMA           shift and go to state 210


state 177

    (85) funcion -> tipo ID add_fun LP RP verificar2 LB var_func . statement add_func_dir2 func_return RB end_func
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . while statement
    (19) statement -> . for statement
    (20) statement -> . escritura statement
    (21) statement -> . escritura_var statement
    (22) statement -> . lectura statement
    (23) statement -> . func_call statement
    (24) statement -> . ID row SEMICOL
    (25) statement -> . ID matrix SEMICOL
    (26) statement -> . empty
    (27) asignacion -> . ID IS value
    (128) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (129) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (138) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (139) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (148) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (149) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (150) escritura_var -> . PRINT LP any_var RP SEMICOL
    (155) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (156) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (104) func_call -> . ID LP RP SEMICOL
    (105) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (127) empty -> .
    (113) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (120) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 163
    IF              shift and go to state 165
    VAR             shift and go to state 166
    WHILE           shift and go to state 169
    FOR             shift and go to state 170
    PRINT           shift and go to state 171
    READ            shift and go to state 172
    RETURN          reduce using rule 127 (empty -> .)

  ! ID              [ reduce using rule 127 (empty -> .) ]
  ! IF              [ reduce using rule 127 (empty -> .) ]
  ! VAR             [ reduce using rule 127 (empty -> .) ]
  ! WHILE           [ reduce using rule 127 (empty -> .) ]
  ! FOR             [ reduce using rule 127 (empty -> .) ]
  ! PRINT           [ reduce using rule 127 (empty -> .) ]
  ! READ            [ reduce using rule 127 (empty -> .) ]

    statement                      shift and go to state 211
    asignacion                     shift and go to state 154
    if                             shift and go to state 155
    vars                           shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    escritura                      shift and go to state 159
    escritura_var                  shift and go to state 160
    lectura                        shift and go to state 161
    func_call                      shift and go to state 162
    empty                          shift and go to state 164
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168

state 178

    (92) var_func -> vars .

    ID              reduce using rule 92 (var_func -> vars .)
    IF              reduce using rule 92 (var_func -> vars .)
    VAR             reduce using rule 92 (var_func -> vars .)
    WHILE           reduce using rule 92 (var_func -> vars .)
    FOR             reduce using rule 92 (var_func -> vars .)
    PRINT           reduce using rule 92 (var_func -> vars .)
    READ            reduce using rule 92 (var_func -> vars .)
    RETURN          reduce using rule 92 (var_func -> vars .)
    RB              reduce using rule 92 (var_func -> vars .)


state 179

    (38) vars -> empty .

    ID              reduce using rule 38 (vars -> empty .)
    IF              reduce using rule 38 (vars -> empty .)
    VAR             reduce using rule 38 (vars -> empty .)
    WHILE           reduce using rule 38 (vars -> empty .)
    FOR             reduce using rule 38 (vars -> empty .)
    PRINT           reduce using rule 38 (vars -> empty .)
    READ            reduce using rule 38 (vars -> empty .)
    RETURN          reduce using rule 38 (vars -> empty .)
    RB              reduce using rule 38 (vars -> empty .)


state 180

    (86) funcion -> tipo ID add_fun LP param RP verificar LB . var_func statement add_func_dir func_return_param RB end_func
    (92) var_func -> . vars
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (113) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (120) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (127) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
    VAR             shift and go to state 166
    ID              reduce using rule 127 (empty -> .)
    IF              reduce using rule 127 (empty -> .)
    WHILE           reduce using rule 127 (empty -> .)
    FOR             reduce using rule 127 (empty -> .)
    PRINT           reduce using rule 127 (empty -> .)
    READ            reduce using rule 127 (empty -> .)
    RETURN          reduce using rule 127 (empty -> .)

  ! VAR             [ reduce using rule 127 (empty -> .) ]

    var_func                       shift and go to state 212
    vars                           shift and go to state 178
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168
    empty                          shift and go to state 179

state 181

    (94) param -> param COMMA tipo ID .

    RP              reduce using rule 94 (param -> param COMMA tipo ID .)
    COMMA           reduce using rule 94 (param -> param COMMA tipo ID .)


state 182

    (83) funcion -> VOID ID add_fun LP param RP verificar LB . var_func statement RB end_func
    (92) var_func -> . vars
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (113) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (120) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (127) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
    VAR             shift and go to state 166
    ID              reduce using rule 127 (empty -> .)
    IF              reduce using rule 127 (empty -> .)
    WHILE           reduce using rule 127 (empty -> .)
    FOR             reduce using rule 127 (empty -> .)
    PRINT           reduce using rule 127 (empty -> .)
    READ            reduce using rule 127 (empty -> .)
    RB              reduce using rule 127 (empty -> .)

  ! VAR             [ reduce using rule 127 (empty -> .) ]

    var_func                       shift and go to state 213
    vars                           shift and go to state 178
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168
    empty                          shift and go to state 179

state 183

    (84) funcion -> VOID ID add_fun LP RP verificar2 LB var_func . statement RB end_func
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . while statement
    (19) statement -> . for statement
    (20) statement -> . escritura statement
    (21) statement -> . escritura_var statement
    (22) statement -> . lectura statement
    (23) statement -> . func_call statement
    (24) statement -> . ID row SEMICOL
    (25) statement -> . ID matrix SEMICOL
    (26) statement -> . empty
    (27) asignacion -> . ID IS value
    (128) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (129) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (138) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (139) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (148) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (149) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (150) escritura_var -> . PRINT LP any_var RP SEMICOL
    (155) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (156) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (104) func_call -> . ID LP RP SEMICOL
    (105) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (127) empty -> .
    (113) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (120) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 163
    IF              shift and go to state 165
    VAR             shift and go to state 166
    WHILE           shift and go to state 169
    FOR             shift and go to state 170
    PRINT           shift and go to state 171
    READ            shift and go to state 172
    RB              reduce using rule 127 (empty -> .)

  ! ID              [ reduce using rule 127 (empty -> .) ]
  ! IF              [ reduce using rule 127 (empty -> .) ]
  ! VAR             [ reduce using rule 127 (empty -> .) ]
  ! WHILE           [ reduce using rule 127 (empty -> .) ]
  ! FOR             [ reduce using rule 127 (empty -> .) ]
  ! PRINT           [ reduce using rule 127 (empty -> .) ]
  ! READ            [ reduce using rule 127 (empty -> .) ]

    statement                      shift and go to state 214
    asignacion                     shift and go to state 154
    if                             shift and go to state 155
    vars                           shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    escritura                      shift and go to state 159
    escritura_var                  shift and go to state 160
    lectura                        shift and go to state 161
    func_call                      shift and go to state 162
    empty                          shift and go to state 164
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168

state 184

    (11) main -> tipo MAIN quad_main2 LP RP LB statement add_func_main . func_return_main RB
    (111) func_return_main -> . RETURN expr SEMICOL

    RETURN          shift and go to state 216

    func_return_main               shift and go to state 215

state 185

    (15) statement -> asignacion SEMICOL . statement
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . while statement
    (19) statement -> . for statement
    (20) statement -> . escritura statement
    (21) statement -> . escritura_var statement
    (22) statement -> . lectura statement
    (23) statement -> . func_call statement
    (24) statement -> . ID row SEMICOL
    (25) statement -> . ID matrix SEMICOL
    (26) statement -> . empty
    (27) asignacion -> . ID IS value
    (128) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (129) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (138) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (139) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (148) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (149) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (150) escritura_var -> . PRINT LP any_var RP SEMICOL
    (155) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (156) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (104) func_call -> . ID LP RP SEMICOL
    (105) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (127) empty -> .
    (113) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (120) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 163
    IF              shift and go to state 165
    VAR             shift and go to state 166
    WHILE           shift and go to state 169
    FOR             shift and go to state 170
    PRINT           shift and go to state 171
    READ            shift and go to state 172
    RETURN          reduce using rule 127 (empty -> .)
    RB              reduce using rule 127 (empty -> .)

  ! ID              [ reduce using rule 127 (empty -> .) ]
  ! IF              [ reduce using rule 127 (empty -> .) ]
  ! VAR             [ reduce using rule 127 (empty -> .) ]
  ! WHILE           [ reduce using rule 127 (empty -> .) ]
  ! FOR             [ reduce using rule 127 (empty -> .) ]
  ! PRINT           [ reduce using rule 127 (empty -> .) ]
  ! READ            [ reduce using rule 127 (empty -> .) ]

    asignacion                     shift and go to state 154
    statement                      shift and go to state 217
    if                             shift and go to state 155
    vars                           shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    escritura                      shift and go to state 159
    escritura_var                  shift and go to state 160
    lectura                        shift and go to state 161
    func_call                      shift and go to state 162
    empty                          shift and go to state 164
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168

state 186

    (16) statement -> if statement .

    RETURN          reduce using rule 16 (statement -> if statement .)
    RB              reduce using rule 16 (statement -> if statement .)


state 187

    (17) statement -> vars statement .

    RETURN          reduce using rule 17 (statement -> vars statement .)
    RB              reduce using rule 17 (statement -> vars statement .)


state 188

    (18) statement -> while statement .

    RETURN          reduce using rule 18 (statement -> while statement .)
    RB              reduce using rule 18 (statement -> while statement .)


state 189

    (19) statement -> for statement .

    RETURN          reduce using rule 19 (statement -> for statement .)
    RB              reduce using rule 19 (statement -> for statement .)


state 190

    (20) statement -> escritura statement .

    RETURN          reduce using rule 20 (statement -> escritura statement .)
    RB              reduce using rule 20 (statement -> escritura statement .)


state 191

    (21) statement -> escritura_var statement .

    RETURN          reduce using rule 21 (statement -> escritura_var statement .)
    RB              reduce using rule 21 (statement -> escritura_var statement .)


state 192

    (22) statement -> lectura statement .

    RETURN          reduce using rule 22 (statement -> lectura statement .)
    RB              reduce using rule 22 (statement -> lectura statement .)


state 193

    (23) statement -> func_call statement .

    RETURN          reduce using rule 23 (statement -> func_call statement .)
    RB              reduce using rule 23 (statement -> func_call statement .)


state 194

    (24) statement -> ID row . SEMICOL
    (126) matrix -> row . row
    (119) row -> . LC CTE_I RC

    SEMICOL         shift and go to state 218
    LC              shift and go to state 71

    row                            shift and go to state 83

state 195

    (25) statement -> ID matrix . SEMICOL

    SEMICOL         shift and go to state 219


state 196

    (27) asignacion -> ID IS . value
    (75) value -> . CTE_F
    (76) value -> . CTE_I
    (77) value -> . ID
    (78) value -> . CTE_C
    (79) value -> . COMILLA ID COMILLA
    (80) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88
    ID              shift and go to state 85
    CTE_C           shift and go to state 89
    COMILLA         shift and go to state 90
    COMILLAS        shift and go to state 91

    value                          shift and go to state 220

state 197

    (104) func_call -> ID LP . RP SEMICOL
    (105) func_call -> ID LP . func_era func_call_param RP SEMICOL
    (106) func_era -> .

    RP              shift and go to state 221
    CTE_I           reduce using rule 106 (func_era -> .)
    CTE_F           reduce using rule 106 (func_era -> .)
    ID              reduce using rule 106 (func_era -> .)

    func_era                       shift and go to state 222

state 198

    (128) if -> IF LP . expression RP check_bool gotof LB statement RB fill_if
    (129) if -> IF LP . expression RP check_bool gotof LB statement RB goto fill_gotof else
    (158) expression -> . var_gt
    (159) expression -> . var_lt
    (160) expression -> . var_equal
    (161) expression -> . var_neq
    (162) expression -> . var_geq
    (163) expression -> . var_leq
    (164) expression -> . expr
    (165) expression -> . TRUE
    (166) expression -> . FALSE
    (167) expression -> . ID
    (169) var_gt -> . expr GT expr
    (168) var_lt -> . expr LT expr
    (172) var_equal -> . expr EQUAL expr
    (173) var_neq -> . expr NEQ expr
    (171) var_geq -> . expr GEQ expr
    (170) var_leq -> . expr LEQ expr
    (175) expr -> . expr MUL expr
    (176) expr -> . expr DIV expr
    (177) expr -> . expr PLUS expr
    (178) expr -> . expr MINUS expr
    (179) expr -> . CTE_I
    (180) expr -> . CTE_F
    (181) expr -> . ID

    TRUE            shift and go to state 231
    FALSE           shift and go to state 232
    ID              shift and go to state 233
    CTE_I           shift and go to state 234
    CTE_F           shift and go to state 235

    expression                     shift and go to state 223
    var_gt                         shift and go to state 224
    var_lt                         shift and go to state 225
    var_equal                      shift and go to state 226
    var_neq                        shift and go to state 227
    var_geq                        shift and go to state 228
    var_leq                        shift and go to state 229
    expr                           shift and go to state 230

state 199

    (28) vars -> VAR tipo . vars1
    (29) vars -> VAR tipo . vars2
    (30) vars -> VAR tipo . vars3
    (31) vars -> VAR tipo . oper_aritmetica
    (32) vars -> VAR tipo . ID row SEMICOL
    (33) vars -> VAR tipo . ID matrix SEMICOL
    (113) var_row -> VAR tipo . ID row IS LP lista2 RP SEMICOL
    (120) var_matrix -> VAR tipo . ID matrix IS matrix2 SEMICOL
    (39) vars1 -> . ID SEMICOL
    (40) vars2 -> . vars2_1 ID IS value SEMICOL
    (44) vars2 -> . ID IS value SEMICOL
    (45) vars3 -> . vars3_1 ID SEMICOL
    (48) vars3 -> . ID SEMICOL
    (174) oper_aritmetica -> . ID IS expr SEMICOL
    (41) vars2_1 -> . vars2_1 ID IS value COMMA
    (42) vars2_1 -> . ID IS value COMMA
    (43) vars2_1 -> . empty
    (46) vars3_1 -> . vars3_1 ID COMMA
    (47) vars3_1 -> . ID COMMA
    (49) vars3_1 -> . empty
    (127) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 240

  ! ID              [ reduce using rule 127 (empty -> .) ]

    vars1                          shift and go to state 236
    vars2                          shift and go to state 237
    vars3                          shift and go to state 238
    oper_aritmetica                shift and go to state 239
    vars2_1                        shift and go to state 241
    vars3_1                        shift and go to state 242
    empty                          shift and go to state 243

state 200

    (35) vars -> var_row vars .

    ID              reduce using rule 35 (vars -> var_row vars .)
    IF              reduce using rule 35 (vars -> var_row vars .)
    VAR             reduce using rule 35 (vars -> var_row vars .)
    WHILE           reduce using rule 35 (vars -> var_row vars .)
    FOR             reduce using rule 35 (vars -> var_row vars .)
    PRINT           reduce using rule 35 (vars -> var_row vars .)
    READ            reduce using rule 35 (vars -> var_row vars .)
    RETURN          reduce using rule 35 (vars -> var_row vars .)
    RB              reduce using rule 35 (vars -> var_row vars .)


state 201

    (37) vars -> var_matrix vars .

    ID              reduce using rule 37 (vars -> var_matrix vars .)
    IF              reduce using rule 37 (vars -> var_matrix vars .)
    VAR             reduce using rule 37 (vars -> var_matrix vars .)
    WHILE           reduce using rule 37 (vars -> var_matrix vars .)
    FOR             reduce using rule 37 (vars -> var_matrix vars .)
    PRINT           reduce using rule 37 (vars -> var_matrix vars .)
    READ            reduce using rule 37 (vars -> var_matrix vars .)
    RETURN          reduce using rule 37 (vars -> var_matrix vars .)
    RB              reduce using rule 37 (vars -> var_matrix vars .)


state 202

    (138) while -> WHILE guarda_num_salto . LP expression RP check_bool gotof LB statement RB goto

    LP              shift and go to state 244


state 203

    (139) for -> FOR LP . VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto

    VAR             shift and go to state 245


state 204

    (148) escritura -> PRINT LP . COMILLA any COMILLA RP SEMICOL
    (149) escritura -> PRINT LP . COMILLAS any COMILLAS RP SEMICOL
    (150) escritura_var -> PRINT LP . any_var RP SEMICOL
    (151) any_var -> . ID

    COMILLA         shift and go to state 246
    COMILLAS        shift and go to state 247
    ID              shift and go to state 249

    any_var                        shift and go to state 248

state 205

    (155) lectura -> READ LP . COMILLA any_lectura COMILLA RP SEMICOL
    (156) lectura -> READ LP . COMILLAS any_lectura COMILLAS RP SEMICOL

    COMILLA         shift and go to state 250
    COMILLAS        shift and go to state 251


state 206

    (12) main -> VOID MAIN quad_main2 LP RP LB statement add_func_main . RB

    RB              shift and go to state 252


state 207

    (114) var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .

    VAR             reduce using rule 114 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    FUNC            reduce using rule 114 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    VOID            reduce using rule 114 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    INT             reduce using rule 114 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    FLOAT           reduce using rule 114 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    CHAR            reduce using rule 114 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    $end            reduce using rule 114 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    RB              reduce using rule 114 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)


state 208

    (118) lista2 -> elem_lista COMMA elem_lista .
    (117) lista2 -> elem_lista . COMMA lista2
    (118) lista2 -> elem_lista . COMMA elem_lista

    RP              reduce using rule 118 (lista2 -> elem_lista COMMA elem_lista .)
    COMMA           shift and go to state 175


state 209

    (117) lista2 -> elem_lista COMMA lista2 .

    RP              reduce using rule 117 (lista2 -> elem_lista COMMA lista2 .)


state 210

    (122) matrix2 -> LP lista2 RP COMMA . matrix2
    (123) matrix2 -> LP lista2 RP COMMA . LP lista2 RP
    (122) matrix2 -> . LP lista2 RP COMMA matrix2
    (123) matrix2 -> . LP lista2 RP COMMA LP lista2 RP

    LP              shift and go to state 253

    matrix2                        shift and go to state 254

state 211

    (85) funcion -> tipo ID add_fun LP RP verificar2 LB var_func statement . add_func_dir2 func_return RB end_func
    (90) add_func_dir2 -> .

    RETURN          reduce using rule 90 (add_func_dir2 -> .)

    add_func_dir2                  shift and go to state 255

state 212

    (86) funcion -> tipo ID add_fun LP param RP verificar LB var_func . statement add_func_dir func_return_param RB end_func
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . while statement
    (19) statement -> . for statement
    (20) statement -> . escritura statement
    (21) statement -> . escritura_var statement
    (22) statement -> . lectura statement
    (23) statement -> . func_call statement
    (24) statement -> . ID row SEMICOL
    (25) statement -> . ID matrix SEMICOL
    (26) statement -> . empty
    (27) asignacion -> . ID IS value
    (128) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (129) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (138) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (139) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (148) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (149) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (150) escritura_var -> . PRINT LP any_var RP SEMICOL
    (155) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (156) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (104) func_call -> . ID LP RP SEMICOL
    (105) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (127) empty -> .
    (113) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (120) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 163
    IF              shift and go to state 165
    VAR             shift and go to state 166
    WHILE           shift and go to state 169
    FOR             shift and go to state 170
    PRINT           shift and go to state 171
    READ            shift and go to state 172
    RETURN          reduce using rule 127 (empty -> .)

  ! ID              [ reduce using rule 127 (empty -> .) ]
  ! IF              [ reduce using rule 127 (empty -> .) ]
  ! VAR             [ reduce using rule 127 (empty -> .) ]
  ! WHILE           [ reduce using rule 127 (empty -> .) ]
  ! FOR             [ reduce using rule 127 (empty -> .) ]
  ! PRINT           [ reduce using rule 127 (empty -> .) ]
  ! READ            [ reduce using rule 127 (empty -> .) ]

    statement                      shift and go to state 256
    asignacion                     shift and go to state 154
    if                             shift and go to state 155
    vars                           shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    escritura                      shift and go to state 159
    escritura_var                  shift and go to state 160
    lectura                        shift and go to state 161
    func_call                      shift and go to state 162
    empty                          shift and go to state 164
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168

state 213

    (83) funcion -> VOID ID add_fun LP param RP verificar LB var_func . statement RB end_func
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . while statement
    (19) statement -> . for statement
    (20) statement -> . escritura statement
    (21) statement -> . escritura_var statement
    (22) statement -> . lectura statement
    (23) statement -> . func_call statement
    (24) statement -> . ID row SEMICOL
    (25) statement -> . ID matrix SEMICOL
    (26) statement -> . empty
    (27) asignacion -> . ID IS value
    (128) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (129) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (138) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (139) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (148) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (149) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (150) escritura_var -> . PRINT LP any_var RP SEMICOL
    (155) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (156) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (104) func_call -> . ID LP RP SEMICOL
    (105) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (127) empty -> .
    (113) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (120) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 163
    IF              shift and go to state 165
    VAR             shift and go to state 166
    WHILE           shift and go to state 169
    FOR             shift and go to state 170
    PRINT           shift and go to state 171
    READ            shift and go to state 172
    RB              reduce using rule 127 (empty -> .)

  ! ID              [ reduce using rule 127 (empty -> .) ]
  ! IF              [ reduce using rule 127 (empty -> .) ]
  ! VAR             [ reduce using rule 127 (empty -> .) ]
  ! WHILE           [ reduce using rule 127 (empty -> .) ]
  ! FOR             [ reduce using rule 127 (empty -> .) ]
  ! PRINT           [ reduce using rule 127 (empty -> .) ]
  ! READ            [ reduce using rule 127 (empty -> .) ]

    statement                      shift and go to state 257
    asignacion                     shift and go to state 154
    if                             shift and go to state 155
    vars                           shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    escritura                      shift and go to state 159
    escritura_var                  shift and go to state 160
    lectura                        shift and go to state 161
    func_call                      shift and go to state 162
    empty                          shift and go to state 164
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168

state 214

    (84) funcion -> VOID ID add_fun LP RP verificar2 LB var_func statement . RB end_func

    RB              shift and go to state 258


state 215

    (11) main -> tipo MAIN quad_main2 LP RP LB statement add_func_main func_return_main . RB

    RB              shift and go to state 259


state 216

    (111) func_return_main -> RETURN . expr SEMICOL
    (175) expr -> . expr MUL expr
    (176) expr -> . expr DIV expr
    (177) expr -> . expr PLUS expr
    (178) expr -> . expr MINUS expr
    (179) expr -> . CTE_I
    (180) expr -> . CTE_F
    (181) expr -> . ID

    CTE_I           shift and go to state 234
    CTE_F           shift and go to state 235
    ID              shift and go to state 261

    expr                           shift and go to state 260

state 217

    (15) statement -> asignacion SEMICOL statement .

    RETURN          reduce using rule 15 (statement -> asignacion SEMICOL statement .)
    RB              reduce using rule 15 (statement -> asignacion SEMICOL statement .)


state 218

    (24) statement -> ID row SEMICOL .

    RETURN          reduce using rule 24 (statement -> ID row SEMICOL .)
    RB              reduce using rule 24 (statement -> ID row SEMICOL .)


state 219

    (25) statement -> ID matrix SEMICOL .

    RETURN          reduce using rule 25 (statement -> ID matrix SEMICOL .)
    RB              reduce using rule 25 (statement -> ID matrix SEMICOL .)


state 220

    (27) asignacion -> ID IS value .

    SEMICOL         reduce using rule 27 (asignacion -> ID IS value .)


state 221

    (104) func_call -> ID LP RP . SEMICOL

    SEMICOL         shift and go to state 262


state 222

    (105) func_call -> ID LP func_era . func_call_param RP SEMICOL
    (107) func_call_param -> . expr
    (108) func_call_param -> . func_call_param COMMA expr
    (175) expr -> . expr MUL expr
    (176) expr -> . expr DIV expr
    (177) expr -> . expr PLUS expr
    (178) expr -> . expr MINUS expr
    (179) expr -> . CTE_I
    (180) expr -> . CTE_F
    (181) expr -> . ID

    CTE_I           shift and go to state 234
    CTE_F           shift and go to state 235
    ID              shift and go to state 261

    func_call_param                shift and go to state 263
    expr                           shift and go to state 264

state 223

    (128) if -> IF LP expression . RP check_bool gotof LB statement RB fill_if
    (129) if -> IF LP expression . RP check_bool gotof LB statement RB goto fill_gotof else

    RP              shift and go to state 265


state 224

    (158) expression -> var_gt .

    RP              reduce using rule 158 (expression -> var_gt .)
    CTE_I           reduce using rule 158 (expression -> var_gt .)
    CTE_F           reduce using rule 158 (expression -> var_gt .)
    ID              reduce using rule 158 (expression -> var_gt .)
    TRUE            reduce using rule 158 (expression -> var_gt .)
    FALSE           reduce using rule 158 (expression -> var_gt .)
    COMILLA         reduce using rule 158 (expression -> var_gt .)
    COMILLAS        reduce using rule 158 (expression -> var_gt .)
    SEMICOL         reduce using rule 158 (expression -> var_gt .)


state 225

    (159) expression -> var_lt .

    RP              reduce using rule 159 (expression -> var_lt .)
    CTE_I           reduce using rule 159 (expression -> var_lt .)
    CTE_F           reduce using rule 159 (expression -> var_lt .)
    ID              reduce using rule 159 (expression -> var_lt .)
    TRUE            reduce using rule 159 (expression -> var_lt .)
    FALSE           reduce using rule 159 (expression -> var_lt .)
    COMILLA         reduce using rule 159 (expression -> var_lt .)
    COMILLAS        reduce using rule 159 (expression -> var_lt .)
    SEMICOL         reduce using rule 159 (expression -> var_lt .)


state 226

    (160) expression -> var_equal .

    RP              reduce using rule 160 (expression -> var_equal .)
    CTE_I           reduce using rule 160 (expression -> var_equal .)
    CTE_F           reduce using rule 160 (expression -> var_equal .)
    ID              reduce using rule 160 (expression -> var_equal .)
    TRUE            reduce using rule 160 (expression -> var_equal .)
    FALSE           reduce using rule 160 (expression -> var_equal .)
    COMILLA         reduce using rule 160 (expression -> var_equal .)
    COMILLAS        reduce using rule 160 (expression -> var_equal .)
    SEMICOL         reduce using rule 160 (expression -> var_equal .)


state 227

    (161) expression -> var_neq .

    RP              reduce using rule 161 (expression -> var_neq .)
    CTE_I           reduce using rule 161 (expression -> var_neq .)
    CTE_F           reduce using rule 161 (expression -> var_neq .)
    ID              reduce using rule 161 (expression -> var_neq .)
    TRUE            reduce using rule 161 (expression -> var_neq .)
    FALSE           reduce using rule 161 (expression -> var_neq .)
    COMILLA         reduce using rule 161 (expression -> var_neq .)
    COMILLAS        reduce using rule 161 (expression -> var_neq .)
    SEMICOL         reduce using rule 161 (expression -> var_neq .)


state 228

    (162) expression -> var_geq .

    RP              reduce using rule 162 (expression -> var_geq .)
    CTE_I           reduce using rule 162 (expression -> var_geq .)
    CTE_F           reduce using rule 162 (expression -> var_geq .)
    ID              reduce using rule 162 (expression -> var_geq .)
    TRUE            reduce using rule 162 (expression -> var_geq .)
    FALSE           reduce using rule 162 (expression -> var_geq .)
    COMILLA         reduce using rule 162 (expression -> var_geq .)
    COMILLAS        reduce using rule 162 (expression -> var_geq .)
    SEMICOL         reduce using rule 162 (expression -> var_geq .)


state 229

    (163) expression -> var_leq .

    RP              reduce using rule 163 (expression -> var_leq .)
    CTE_I           reduce using rule 163 (expression -> var_leq .)
    CTE_F           reduce using rule 163 (expression -> var_leq .)
    ID              reduce using rule 163 (expression -> var_leq .)
    TRUE            reduce using rule 163 (expression -> var_leq .)
    FALSE           reduce using rule 163 (expression -> var_leq .)
    COMILLA         reduce using rule 163 (expression -> var_leq .)
    COMILLAS        reduce using rule 163 (expression -> var_leq .)
    SEMICOL         reduce using rule 163 (expression -> var_leq .)


state 230

    (164) expression -> expr .
    (169) var_gt -> expr . GT expr
    (168) var_lt -> expr . LT expr
    (172) var_equal -> expr . EQUAL expr
    (173) var_neq -> expr . NEQ expr
    (171) var_geq -> expr . GEQ expr
    (170) var_leq -> expr . LEQ expr
    (175) expr -> expr . MUL expr
    (176) expr -> expr . DIV expr
    (177) expr -> expr . PLUS expr
    (178) expr -> expr . MINUS expr

    RP              reduce using rule 164 (expression -> expr .)
    SEMICOL         reduce using rule 164 (expression -> expr .)
    GT              shift and go to state 266
    LT              shift and go to state 267
    EQUAL           shift and go to state 268
    NEQ             shift and go to state 269
    GEQ             shift and go to state 270
    LEQ             shift and go to state 271
    MUL             shift and go to state 272
    DIV             shift and go to state 273
    PLUS            shift and go to state 274
    MINUS           shift and go to state 275


state 231

    (165) expression -> TRUE .

    RP              reduce using rule 165 (expression -> TRUE .)
    CTE_I           reduce using rule 165 (expression -> TRUE .)
    CTE_F           reduce using rule 165 (expression -> TRUE .)
    ID              reduce using rule 165 (expression -> TRUE .)
    TRUE            reduce using rule 165 (expression -> TRUE .)
    FALSE           reduce using rule 165 (expression -> TRUE .)
    COMILLA         reduce using rule 165 (expression -> TRUE .)
    COMILLAS        reduce using rule 165 (expression -> TRUE .)
    SEMICOL         reduce using rule 165 (expression -> TRUE .)


state 232

    (166) expression -> FALSE .

    RP              reduce using rule 166 (expression -> FALSE .)
    CTE_I           reduce using rule 166 (expression -> FALSE .)
    CTE_F           reduce using rule 166 (expression -> FALSE .)
    ID              reduce using rule 166 (expression -> FALSE .)
    TRUE            reduce using rule 166 (expression -> FALSE .)
    FALSE           reduce using rule 166 (expression -> FALSE .)
    COMILLA         reduce using rule 166 (expression -> FALSE .)
    COMILLAS        reduce using rule 166 (expression -> FALSE .)
    SEMICOL         reduce using rule 166 (expression -> FALSE .)


state 233

    (167) expression -> ID .
    (181) expr -> ID .

  ! reduce/reduce conflict for RP resolved using rule 167 (expression -> ID .)
  ! reduce/reduce conflict for SEMICOL resolved using rule 167 (expression -> ID .)
    RP              reduce using rule 167 (expression -> ID .)
    SEMICOL         reduce using rule 167 (expression -> ID .)
    GT              reduce using rule 181 (expr -> ID .)
    LT              reduce using rule 181 (expr -> ID .)
    EQUAL           reduce using rule 181 (expr -> ID .)
    NEQ             reduce using rule 181 (expr -> ID .)
    GEQ             reduce using rule 181 (expr -> ID .)
    LEQ             reduce using rule 181 (expr -> ID .)
    MUL             reduce using rule 181 (expr -> ID .)
    DIV             reduce using rule 181 (expr -> ID .)
    PLUS            reduce using rule 181 (expr -> ID .)
    MINUS           reduce using rule 181 (expr -> ID .)

  ! RP              [ reduce using rule 181 (expr -> ID .) ]
  ! SEMICOL         [ reduce using rule 181 (expr -> ID .) ]


state 234

    (179) expr -> CTE_I .

    GT              reduce using rule 179 (expr -> CTE_I .)
    LT              reduce using rule 179 (expr -> CTE_I .)
    EQUAL           reduce using rule 179 (expr -> CTE_I .)
    NEQ             reduce using rule 179 (expr -> CTE_I .)
    GEQ             reduce using rule 179 (expr -> CTE_I .)
    LEQ             reduce using rule 179 (expr -> CTE_I .)
    MUL             reduce using rule 179 (expr -> CTE_I .)
    DIV             reduce using rule 179 (expr -> CTE_I .)
    PLUS            reduce using rule 179 (expr -> CTE_I .)
    MINUS           reduce using rule 179 (expr -> CTE_I .)
    RP              reduce using rule 179 (expr -> CTE_I .)
    SEMICOL         reduce using rule 179 (expr -> CTE_I .)
    COMMA           reduce using rule 179 (expr -> CTE_I .)
    CTE_I           reduce using rule 179 (expr -> CTE_I .)
    CTE_F           reduce using rule 179 (expr -> CTE_I .)
    ID              reduce using rule 179 (expr -> CTE_I .)
    TRUE            reduce using rule 179 (expr -> CTE_I .)
    FALSE           reduce using rule 179 (expr -> CTE_I .)
    COMILLA         reduce using rule 179 (expr -> CTE_I .)
    COMILLAS        reduce using rule 179 (expr -> CTE_I .)


state 235

    (180) expr -> CTE_F .

    GT              reduce using rule 180 (expr -> CTE_F .)
    LT              reduce using rule 180 (expr -> CTE_F .)
    EQUAL           reduce using rule 180 (expr -> CTE_F .)
    NEQ             reduce using rule 180 (expr -> CTE_F .)
    GEQ             reduce using rule 180 (expr -> CTE_F .)
    LEQ             reduce using rule 180 (expr -> CTE_F .)
    MUL             reduce using rule 180 (expr -> CTE_F .)
    DIV             reduce using rule 180 (expr -> CTE_F .)
    PLUS            reduce using rule 180 (expr -> CTE_F .)
    MINUS           reduce using rule 180 (expr -> CTE_F .)
    RP              reduce using rule 180 (expr -> CTE_F .)
    SEMICOL         reduce using rule 180 (expr -> CTE_F .)
    COMMA           reduce using rule 180 (expr -> CTE_F .)
    CTE_I           reduce using rule 180 (expr -> CTE_F .)
    CTE_F           reduce using rule 180 (expr -> CTE_F .)
    ID              reduce using rule 180 (expr -> CTE_F .)
    TRUE            reduce using rule 180 (expr -> CTE_F .)
    FALSE           reduce using rule 180 (expr -> CTE_F .)
    COMILLA         reduce using rule 180 (expr -> CTE_F .)
    COMILLAS        reduce using rule 180 (expr -> CTE_F .)


state 236

    (28) vars -> VAR tipo vars1 .

    ID              reduce using rule 28 (vars -> VAR tipo vars1 .)
    IF              reduce using rule 28 (vars -> VAR tipo vars1 .)
    VAR             reduce using rule 28 (vars -> VAR tipo vars1 .)
    WHILE           reduce using rule 28 (vars -> VAR tipo vars1 .)
    FOR             reduce using rule 28 (vars -> VAR tipo vars1 .)
    PRINT           reduce using rule 28 (vars -> VAR tipo vars1 .)
    READ            reduce using rule 28 (vars -> VAR tipo vars1 .)
    RETURN          reduce using rule 28 (vars -> VAR tipo vars1 .)
    RB              reduce using rule 28 (vars -> VAR tipo vars1 .)


state 237

    (29) vars -> VAR tipo vars2 .

    ID              reduce using rule 29 (vars -> VAR tipo vars2 .)
    IF              reduce using rule 29 (vars -> VAR tipo vars2 .)
    VAR             reduce using rule 29 (vars -> VAR tipo vars2 .)
    WHILE           reduce using rule 29 (vars -> VAR tipo vars2 .)
    FOR             reduce using rule 29 (vars -> VAR tipo vars2 .)
    PRINT           reduce using rule 29 (vars -> VAR tipo vars2 .)
    READ            reduce using rule 29 (vars -> VAR tipo vars2 .)
    RETURN          reduce using rule 29 (vars -> VAR tipo vars2 .)
    RB              reduce using rule 29 (vars -> VAR tipo vars2 .)


state 238

    (30) vars -> VAR tipo vars3 .

    ID              reduce using rule 30 (vars -> VAR tipo vars3 .)
    IF              reduce using rule 30 (vars -> VAR tipo vars3 .)
    VAR             reduce using rule 30 (vars -> VAR tipo vars3 .)
    WHILE           reduce using rule 30 (vars -> VAR tipo vars3 .)
    FOR             reduce using rule 30 (vars -> VAR tipo vars3 .)
    PRINT           reduce using rule 30 (vars -> VAR tipo vars3 .)
    READ            reduce using rule 30 (vars -> VAR tipo vars3 .)
    RETURN          reduce using rule 30 (vars -> VAR tipo vars3 .)
    RB              reduce using rule 30 (vars -> VAR tipo vars3 .)


state 239

    (31) vars -> VAR tipo oper_aritmetica .

    ID              reduce using rule 31 (vars -> VAR tipo oper_aritmetica .)
    IF              reduce using rule 31 (vars -> VAR tipo oper_aritmetica .)
    VAR             reduce using rule 31 (vars -> VAR tipo oper_aritmetica .)
    WHILE           reduce using rule 31 (vars -> VAR tipo oper_aritmetica .)
    FOR             reduce using rule 31 (vars -> VAR tipo oper_aritmetica .)
    PRINT           reduce using rule 31 (vars -> VAR tipo oper_aritmetica .)
    READ            reduce using rule 31 (vars -> VAR tipo oper_aritmetica .)
    RETURN          reduce using rule 31 (vars -> VAR tipo oper_aritmetica .)
    RB              reduce using rule 31 (vars -> VAR tipo oper_aritmetica .)


state 240

    (32) vars -> VAR tipo ID . row SEMICOL
    (33) vars -> VAR tipo ID . matrix SEMICOL
    (113) var_row -> VAR tipo ID . row IS LP lista2 RP SEMICOL
    (120) var_matrix -> VAR tipo ID . matrix IS matrix2 SEMICOL
    (39) vars1 -> ID . SEMICOL
    (44) vars2 -> ID . IS value SEMICOL
    (48) vars3 -> ID . SEMICOL
    (174) oper_aritmetica -> ID . IS expr SEMICOL
    (42) vars2_1 -> ID . IS value COMMA
    (47) vars3_1 -> ID . COMMA
    (119) row -> . LC CTE_I RC
    (126) matrix -> . row row

    SEMICOL         shift and go to state 277
    IS              shift and go to state 279
    COMMA           shift and go to state 280
    LC              shift and go to state 71

    row                            shift and go to state 276
    matrix                         shift and go to state 278

state 241

    (40) vars2 -> vars2_1 . ID IS value SEMICOL
    (41) vars2_1 -> vars2_1 . ID IS value COMMA

    ID              shift and go to state 281


state 242

    (45) vars3 -> vars3_1 . ID SEMICOL
    (46) vars3_1 -> vars3_1 . ID COMMA

    ID              shift and go to state 282


state 243

    (43) vars2_1 -> empty .
    (49) vars3_1 -> empty .

  ! reduce/reduce conflict for ID resolved using rule 43 (vars2_1 -> empty .)
    ID              reduce using rule 43 (vars2_1 -> empty .)

  ! ID              [ reduce using rule 49 (vars3_1 -> empty .) ]


state 244

    (138) while -> WHILE guarda_num_salto LP . expression RP check_bool gotof LB statement RB goto
    (158) expression -> . var_gt
    (159) expression -> . var_lt
    (160) expression -> . var_equal
    (161) expression -> . var_neq
    (162) expression -> . var_geq
    (163) expression -> . var_leq
    (164) expression -> . expr
    (165) expression -> . TRUE
    (166) expression -> . FALSE
    (167) expression -> . ID
    (169) var_gt -> . expr GT expr
    (168) var_lt -> . expr LT expr
    (172) var_equal -> . expr EQUAL expr
    (173) var_neq -> . expr NEQ expr
    (171) var_geq -> . expr GEQ expr
    (170) var_leq -> . expr LEQ expr
    (175) expr -> . expr MUL expr
    (176) expr -> . expr DIV expr
    (177) expr -> . expr PLUS expr
    (178) expr -> . expr MINUS expr
    (179) expr -> . CTE_I
    (180) expr -> . CTE_F
    (181) expr -> . ID

    TRUE            shift and go to state 231
    FALSE           shift and go to state 232
    ID              shift and go to state 233
    CTE_I           shift and go to state 234
    CTE_F           shift and go to state 235

    expression                     shift and go to state 283
    var_gt                         shift and go to state 224
    var_lt                         shift and go to state 225
    var_equal                      shift and go to state 226
    var_neq                        shift and go to state 227
    var_geq                        shift and go to state 228
    var_leq                        shift and go to state 229
    expr                           shift and go to state 230

state 245

    (139) for -> FOR LP VAR . tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    tipo                           shift and go to state 284

state 246

    (148) escritura -> PRINT LP COMILLA . any COMILLA RP SEMICOL
    (152) any -> . expr any
    (153) any -> . expression any
    (154) any -> . empty
    (175) expr -> . expr MUL expr
    (176) expr -> . expr DIV expr
    (177) expr -> . expr PLUS expr
    (178) expr -> . expr MINUS expr
    (179) expr -> . CTE_I
    (180) expr -> . CTE_F
    (181) expr -> . ID
    (158) expression -> . var_gt
    (159) expression -> . var_lt
    (160) expression -> . var_equal
    (161) expression -> . var_neq
    (162) expression -> . var_geq
    (163) expression -> . var_leq
    (164) expression -> . expr
    (165) expression -> . TRUE
    (166) expression -> . FALSE
    (167) expression -> . ID
    (127) empty -> .
    (169) var_gt -> . expr GT expr
    (168) var_lt -> . expr LT expr
    (172) var_equal -> . expr EQUAL expr
    (173) var_neq -> . expr NEQ expr
    (171) var_geq -> . expr GEQ expr
    (170) var_leq -> . expr LEQ expr

    CTE_I           shift and go to state 234
    CTE_F           shift and go to state 235
    ID              shift and go to state 289
    TRUE            shift and go to state 231
    FALSE           shift and go to state 232
    COMILLA         reduce using rule 127 (empty -> .)

    any                            shift and go to state 285
    expr                           shift and go to state 286
    expression                     shift and go to state 287
    empty                          shift and go to state 288
    var_gt                         shift and go to state 224
    var_lt                         shift and go to state 225
    var_equal                      shift and go to state 226
    var_neq                        shift and go to state 227
    var_geq                        shift and go to state 228
    var_leq                        shift and go to state 229

state 247

    (149) escritura -> PRINT LP COMILLAS . any COMILLAS RP SEMICOL
    (152) any -> . expr any
    (153) any -> . expression any
    (154) any -> . empty
    (175) expr -> . expr MUL expr
    (176) expr -> . expr DIV expr
    (177) expr -> . expr PLUS expr
    (178) expr -> . expr MINUS expr
    (179) expr -> . CTE_I
    (180) expr -> . CTE_F
    (181) expr -> . ID
    (158) expression -> . var_gt
    (159) expression -> . var_lt
    (160) expression -> . var_equal
    (161) expression -> . var_neq
    (162) expression -> . var_geq
    (163) expression -> . var_leq
    (164) expression -> . expr
    (165) expression -> . TRUE
    (166) expression -> . FALSE
    (167) expression -> . ID
    (127) empty -> .
    (169) var_gt -> . expr GT expr
    (168) var_lt -> . expr LT expr
    (172) var_equal -> . expr EQUAL expr
    (173) var_neq -> . expr NEQ expr
    (171) var_geq -> . expr GEQ expr
    (170) var_leq -> . expr LEQ expr

    CTE_I           shift and go to state 234
    CTE_F           shift and go to state 235
    ID              shift and go to state 289
    TRUE            shift and go to state 231
    FALSE           shift and go to state 232
    COMILLAS        reduce using rule 127 (empty -> .)

    any                            shift and go to state 290
    expr                           shift and go to state 286
    expression                     shift and go to state 287
    empty                          shift and go to state 288
    var_gt                         shift and go to state 224
    var_lt                         shift and go to state 225
    var_equal                      shift and go to state 226
    var_neq                        shift and go to state 227
    var_geq                        shift and go to state 228
    var_leq                        shift and go to state 229

state 248

    (150) escritura_var -> PRINT LP any_var . RP SEMICOL

    RP              shift and go to state 291


state 249

    (151) any_var -> ID .

    RP              reduce using rule 151 (any_var -> ID .)


state 250

    (155) lectura -> READ LP COMILLA . any_lectura COMILLA RP SEMICOL
    (157) any_lectura -> . ID

    ID              shift and go to state 293

    any_lectura                    shift and go to state 292

state 251

    (156) lectura -> READ LP COMILLAS . any_lectura COMILLAS RP SEMICOL
    (157) any_lectura -> . ID

    ID              shift and go to state 293

    any_lectura                    shift and go to state 294

state 252

    (12) main -> VOID MAIN quad_main2 LP RP LB statement add_func_main RB .

    $end            reduce using rule 12 (main -> VOID MAIN quad_main2 LP RP LB statement add_func_main RB .)
    VOID            reduce using rule 12 (main -> VOID MAIN quad_main2 LP RP LB statement add_func_main RB .)
    INT             reduce using rule 12 (main -> VOID MAIN quad_main2 LP RP LB statement add_func_main RB .)
    FLOAT           reduce using rule 12 (main -> VOID MAIN quad_main2 LP RP LB statement add_func_main RB .)
    CHAR            reduce using rule 12 (main -> VOID MAIN quad_main2 LP RP LB statement add_func_main RB .)


state 253

    (123) matrix2 -> LP lista2 RP COMMA LP . lista2 RP
    (122) matrix2 -> LP . lista2 RP COMMA matrix2
    (123) matrix2 -> LP . lista2 RP COMMA LP lista2 RP
    (117) lista2 -> . elem_lista COMMA lista2
    (118) lista2 -> . elem_lista COMMA elem_lista
    (115) elem_lista -> . value
    (116) elem_lista -> . empty
    (75) value -> . CTE_F
    (76) value -> . CTE_I
    (77) value -> . ID
    (78) value -> . CTE_C
    (79) value -> . COMILLA ID COMILLA
    (80) value -> . COMILLAS ID COMILLAS
    (127) empty -> .

    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88
    ID              shift and go to state 85
    CTE_C           shift and go to state 89
    COMILLA         shift and go to state 90
    COMILLAS        shift and go to state 91
    COMMA           reduce using rule 127 (empty -> .)

    lista2                         shift and go to state 295
    elem_lista                     shift and go to state 136
    value                          shift and go to state 137
    empty                          shift and go to state 138

state 254

    (122) matrix2 -> LP lista2 RP COMMA matrix2 .

    SEMICOL         reduce using rule 122 (matrix2 -> LP lista2 RP COMMA matrix2 .)


state 255

    (85) funcion -> tipo ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 . func_return RB end_func
    (109) func_return -> . RETURN expr SEMICOL

    RETURN          shift and go to state 297

    func_return                    shift and go to state 296

state 256

    (86) funcion -> tipo ID add_fun LP param RP verificar LB var_func statement . add_func_dir func_return_param RB end_func
    (89) add_func_dir -> .

    RETURN          reduce using rule 89 (add_func_dir -> .)

    add_func_dir                   shift and go to state 298

state 257

    (83) funcion -> VOID ID add_fun LP param RP verificar LB var_func statement . RB end_func

    RB              shift and go to state 299


state 258

    (84) funcion -> VOID ID add_fun LP RP verificar2 LB var_func statement RB . end_func
    (103) end_func -> .

    VOID            reduce using rule 103 (end_func -> .)
    INT             reduce using rule 103 (end_func -> .)
    FLOAT           reduce using rule 103 (end_func -> .)
    CHAR            reduce using rule 103 (end_func -> .)
    $end            reduce using rule 103 (end_func -> .)

    end_func                       shift and go to state 300

state 259

    (11) main -> tipo MAIN quad_main2 LP RP LB statement add_func_main func_return_main RB .

    $end            reduce using rule 11 (main -> tipo MAIN quad_main2 LP RP LB statement add_func_main func_return_main RB .)
    VOID            reduce using rule 11 (main -> tipo MAIN quad_main2 LP RP LB statement add_func_main func_return_main RB .)
    INT             reduce using rule 11 (main -> tipo MAIN quad_main2 LP RP LB statement add_func_main func_return_main RB .)
    FLOAT           reduce using rule 11 (main -> tipo MAIN quad_main2 LP RP LB statement add_func_main func_return_main RB .)
    CHAR            reduce using rule 11 (main -> tipo MAIN quad_main2 LP RP LB statement add_func_main func_return_main RB .)


state 260

    (111) func_return_main -> RETURN expr . SEMICOL
    (175) expr -> expr . MUL expr
    (176) expr -> expr . DIV expr
    (177) expr -> expr . PLUS expr
    (178) expr -> expr . MINUS expr

    SEMICOL         shift and go to state 301
    MUL             shift and go to state 272
    DIV             shift and go to state 273
    PLUS            shift and go to state 274
    MINUS           shift and go to state 275


state 261

    (181) expr -> ID .

    SEMICOL         reduce using rule 181 (expr -> ID .)
    MUL             reduce using rule 181 (expr -> ID .)
    DIV             reduce using rule 181 (expr -> ID .)
    PLUS            reduce using rule 181 (expr -> ID .)
    MINUS           reduce using rule 181 (expr -> ID .)
    RP              reduce using rule 181 (expr -> ID .)
    COMMA           reduce using rule 181 (expr -> ID .)
    CTE_I           reduce using rule 181 (expr -> ID .)
    CTE_F           reduce using rule 181 (expr -> ID .)
    ID              reduce using rule 181 (expr -> ID .)
    TRUE            reduce using rule 181 (expr -> ID .)
    FALSE           reduce using rule 181 (expr -> ID .)
    COMILLA         reduce using rule 181 (expr -> ID .)
    COMILLAS        reduce using rule 181 (expr -> ID .)
    GT              reduce using rule 181 (expr -> ID .)
    LT              reduce using rule 181 (expr -> ID .)
    EQUAL           reduce using rule 181 (expr -> ID .)
    NEQ             reduce using rule 181 (expr -> ID .)
    GEQ             reduce using rule 181 (expr -> ID .)
    LEQ             reduce using rule 181 (expr -> ID .)


state 262

    (104) func_call -> ID LP RP SEMICOL .

    ID              reduce using rule 104 (func_call -> ID LP RP SEMICOL .)
    IF              reduce using rule 104 (func_call -> ID LP RP SEMICOL .)
    VAR             reduce using rule 104 (func_call -> ID LP RP SEMICOL .)
    WHILE           reduce using rule 104 (func_call -> ID LP RP SEMICOL .)
    FOR             reduce using rule 104 (func_call -> ID LP RP SEMICOL .)
    PRINT           reduce using rule 104 (func_call -> ID LP RP SEMICOL .)
    READ            reduce using rule 104 (func_call -> ID LP RP SEMICOL .)
    RETURN          reduce using rule 104 (func_call -> ID LP RP SEMICOL .)
    RB              reduce using rule 104 (func_call -> ID LP RP SEMICOL .)


state 263

    (105) func_call -> ID LP func_era func_call_param . RP SEMICOL
    (108) func_call_param -> func_call_param . COMMA expr

    RP              shift and go to state 302
    COMMA           shift and go to state 303


state 264

    (107) func_call_param -> expr .
    (175) expr -> expr . MUL expr
    (176) expr -> expr . DIV expr
    (177) expr -> expr . PLUS expr
    (178) expr -> expr . MINUS expr

    RP              reduce using rule 107 (func_call_param -> expr .)
    COMMA           reduce using rule 107 (func_call_param -> expr .)
    MUL             shift and go to state 272
    DIV             shift and go to state 273
    PLUS            shift and go to state 274
    MINUS           shift and go to state 275


state 265

    (128) if -> IF LP expression RP . check_bool gotof LB statement RB fill_if
    (129) if -> IF LP expression RP . check_bool gotof LB statement RB goto fill_gotof else
    (182) check_bool -> .

    LB              reduce using rule 182 (check_bool -> .)

    check_bool                     shift and go to state 304

state 266

    (169) var_gt -> expr GT . expr
    (175) expr -> . expr MUL expr
    (176) expr -> . expr DIV expr
    (177) expr -> . expr PLUS expr
    (178) expr -> . expr MINUS expr
    (179) expr -> . CTE_I
    (180) expr -> . CTE_F
    (181) expr -> . ID

    CTE_I           shift and go to state 234
    CTE_F           shift and go to state 235
    ID              shift and go to state 261

    expr                           shift and go to state 305

state 267

    (168) var_lt -> expr LT . expr
    (175) expr -> . expr MUL expr
    (176) expr -> . expr DIV expr
    (177) expr -> . expr PLUS expr
    (178) expr -> . expr MINUS expr
    (179) expr -> . CTE_I
    (180) expr -> . CTE_F
    (181) expr -> . ID

    CTE_I           shift and go to state 234
    CTE_F           shift and go to state 235
    ID              shift and go to state 261

    expr                           shift and go to state 306

state 268

    (172) var_equal -> expr EQUAL . expr
    (175) expr -> . expr MUL expr
    (176) expr -> . expr DIV expr
    (177) expr -> . expr PLUS expr
    (178) expr -> . expr MINUS expr
    (179) expr -> . CTE_I
    (180) expr -> . CTE_F
    (181) expr -> . ID

    CTE_I           shift and go to state 234
    CTE_F           shift and go to state 235
    ID              shift and go to state 261

    expr                           shift and go to state 307

state 269

    (173) var_neq -> expr NEQ . expr
    (175) expr -> . expr MUL expr
    (176) expr -> . expr DIV expr
    (177) expr -> . expr PLUS expr
    (178) expr -> . expr MINUS expr
    (179) expr -> . CTE_I
    (180) expr -> . CTE_F
    (181) expr -> . ID

    CTE_I           shift and go to state 234
    CTE_F           shift and go to state 235
    ID              shift and go to state 261

    expr                           shift and go to state 308

state 270

    (171) var_geq -> expr GEQ . expr
    (175) expr -> . expr MUL expr
    (176) expr -> . expr DIV expr
    (177) expr -> . expr PLUS expr
    (178) expr -> . expr MINUS expr
    (179) expr -> . CTE_I
    (180) expr -> . CTE_F
    (181) expr -> . ID

    CTE_I           shift and go to state 234
    CTE_F           shift and go to state 235
    ID              shift and go to state 261

    expr                           shift and go to state 309

state 271

    (170) var_leq -> expr LEQ . expr
    (175) expr -> . expr MUL expr
    (176) expr -> . expr DIV expr
    (177) expr -> . expr PLUS expr
    (178) expr -> . expr MINUS expr
    (179) expr -> . CTE_I
    (180) expr -> . CTE_F
    (181) expr -> . ID

    CTE_I           shift and go to state 234
    CTE_F           shift and go to state 235
    ID              shift and go to state 261

    expr                           shift and go to state 310

state 272

    (175) expr -> expr MUL . expr
    (175) expr -> . expr MUL expr
    (176) expr -> . expr DIV expr
    (177) expr -> . expr PLUS expr
    (178) expr -> . expr MINUS expr
    (179) expr -> . CTE_I
    (180) expr -> . CTE_F
    (181) expr -> . ID

    CTE_I           shift and go to state 234
    CTE_F           shift and go to state 235
    ID              shift and go to state 261

    expr                           shift and go to state 311

state 273

    (176) expr -> expr DIV . expr
    (175) expr -> . expr MUL expr
    (176) expr -> . expr DIV expr
    (177) expr -> . expr PLUS expr
    (178) expr -> . expr MINUS expr
    (179) expr -> . CTE_I
    (180) expr -> . CTE_F
    (181) expr -> . ID

    CTE_I           shift and go to state 234
    CTE_F           shift and go to state 235
    ID              shift and go to state 261

    expr                           shift and go to state 312

state 274

    (177) expr -> expr PLUS . expr
    (175) expr -> . expr MUL expr
    (176) expr -> . expr DIV expr
    (177) expr -> . expr PLUS expr
    (178) expr -> . expr MINUS expr
    (179) expr -> . CTE_I
    (180) expr -> . CTE_F
    (181) expr -> . ID

    CTE_I           shift and go to state 234
    CTE_F           shift and go to state 235
    ID              shift and go to state 261

    expr                           shift and go to state 313

state 275

    (178) expr -> expr MINUS . expr
    (175) expr -> . expr MUL expr
    (176) expr -> . expr DIV expr
    (177) expr -> . expr PLUS expr
    (178) expr -> . expr MINUS expr
    (179) expr -> . CTE_I
    (180) expr -> . CTE_F
    (181) expr -> . ID

    CTE_I           shift and go to state 234
    CTE_F           shift and go to state 235
    ID              shift and go to state 261

    expr                           shift and go to state 314

state 276

    (32) vars -> VAR tipo ID row . SEMICOL
    (113) var_row -> VAR tipo ID row . IS LP lista2 RP SEMICOL
    (126) matrix -> row . row
    (119) row -> . LC CTE_I RC

    SEMICOL         shift and go to state 315
    IS              shift and go to state 316
    LC              shift and go to state 71

    row                            shift and go to state 83

state 277

    (39) vars1 -> ID SEMICOL .
    (48) vars3 -> ID SEMICOL .

  ! reduce/reduce conflict for ID resolved using rule 39 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for IF resolved using rule 39 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for VAR resolved using rule 39 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for WHILE resolved using rule 39 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for FOR resolved using rule 39 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for PRINT resolved using rule 39 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for READ resolved using rule 39 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for RETURN resolved using rule 39 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for RB resolved using rule 39 (vars1 -> ID SEMICOL .)
    ID              reduce using rule 39 (vars1 -> ID SEMICOL .)
    IF              reduce using rule 39 (vars1 -> ID SEMICOL .)
    VAR             reduce using rule 39 (vars1 -> ID SEMICOL .)
    WHILE           reduce using rule 39 (vars1 -> ID SEMICOL .)
    FOR             reduce using rule 39 (vars1 -> ID SEMICOL .)
    PRINT           reduce using rule 39 (vars1 -> ID SEMICOL .)
    READ            reduce using rule 39 (vars1 -> ID SEMICOL .)
    RETURN          reduce using rule 39 (vars1 -> ID SEMICOL .)
    RB              reduce using rule 39 (vars1 -> ID SEMICOL .)

  ! ID              [ reduce using rule 48 (vars3 -> ID SEMICOL .) ]
  ! IF              [ reduce using rule 48 (vars3 -> ID SEMICOL .) ]
  ! VAR             [ reduce using rule 48 (vars3 -> ID SEMICOL .) ]
  ! WHILE           [ reduce using rule 48 (vars3 -> ID SEMICOL .) ]
  ! FOR             [ reduce using rule 48 (vars3 -> ID SEMICOL .) ]
  ! PRINT           [ reduce using rule 48 (vars3 -> ID SEMICOL .) ]
  ! READ            [ reduce using rule 48 (vars3 -> ID SEMICOL .) ]
  ! RETURN          [ reduce using rule 48 (vars3 -> ID SEMICOL .) ]
  ! RB              [ reduce using rule 48 (vars3 -> ID SEMICOL .) ]


state 278

    (33) vars -> VAR tipo ID matrix . SEMICOL
    (120) var_matrix -> VAR tipo ID matrix . IS matrix2 SEMICOL

    SEMICOL         shift and go to state 317
    IS              shift and go to state 318


state 279

    (44) vars2 -> ID IS . value SEMICOL
    (174) oper_aritmetica -> ID IS . expr SEMICOL
    (42) vars2_1 -> ID IS . value COMMA
    (75) value -> . CTE_F
    (76) value -> . CTE_I
    (77) value -> . ID
    (78) value -> . CTE_C
    (79) value -> . COMILLA ID COMILLA
    (80) value -> . COMILLAS ID COMILLAS
    (175) expr -> . expr MUL expr
    (176) expr -> . expr DIV expr
    (177) expr -> . expr PLUS expr
    (178) expr -> . expr MINUS expr
    (179) expr -> . CTE_I
    (180) expr -> . CTE_F
    (181) expr -> . ID

    CTE_F           shift and go to state 322
    CTE_I           shift and go to state 323
    ID              shift and go to state 319
    CTE_C           shift and go to state 89
    COMILLA         shift and go to state 90
    COMILLAS        shift and go to state 91

    value                          shift and go to state 320
    expr                           shift and go to state 321

state 280

    (47) vars3_1 -> ID COMMA .

    ID              reduce using rule 47 (vars3_1 -> ID COMMA .)


state 281

    (40) vars2 -> vars2_1 ID . IS value SEMICOL
    (41) vars2_1 -> vars2_1 ID . IS value COMMA

    IS              shift and go to state 324


state 282

    (45) vars3 -> vars3_1 ID . SEMICOL
    (46) vars3_1 -> vars3_1 ID . COMMA

    SEMICOL         shift and go to state 325
    COMMA           shift and go to state 326


state 283

    (138) while -> WHILE guarda_num_salto LP expression . RP check_bool gotof LB statement RB goto

    RP              shift and go to state 327


state 284

    (139) for -> FOR LP VAR tipo . ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto

    ID              shift and go to state 328


state 285

    (148) escritura -> PRINT LP COMILLA any . COMILLA RP SEMICOL

    COMILLA         shift and go to state 329


state 286

    (152) any -> expr . any
    (175) expr -> expr . MUL expr
    (176) expr -> expr . DIV expr
    (177) expr -> expr . PLUS expr
    (178) expr -> expr . MINUS expr
    (164) expression -> expr .
    (169) var_gt -> expr . GT expr
    (168) var_lt -> expr . LT expr
    (172) var_equal -> expr . EQUAL expr
    (173) var_neq -> expr . NEQ expr
    (171) var_geq -> expr . GEQ expr
    (170) var_leq -> expr . LEQ expr
    (152) any -> . expr any
    (153) any -> . expression any
    (154) any -> . empty
    (175) expr -> . expr MUL expr
    (176) expr -> . expr DIV expr
    (177) expr -> . expr PLUS expr
    (178) expr -> . expr MINUS expr
    (179) expr -> . CTE_I
    (180) expr -> . CTE_F
    (181) expr -> . ID
    (158) expression -> . var_gt
    (159) expression -> . var_lt
    (160) expression -> . var_equal
    (161) expression -> . var_neq
    (162) expression -> . var_geq
    (163) expression -> . var_leq
    (164) expression -> . expr
    (165) expression -> . TRUE
    (166) expression -> . FALSE
    (167) expression -> . ID
    (127) empty -> .
    (169) var_gt -> . expr GT expr
    (168) var_lt -> . expr LT expr
    (172) var_equal -> . expr EQUAL expr
    (173) var_neq -> . expr NEQ expr
    (171) var_geq -> . expr GEQ expr
    (170) var_leq -> . expr LEQ expr

  ! shift/reduce conflict for CTE_I resolved as shift
  ! shift/reduce conflict for CTE_F resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! reduce/reduce conflict for COMILLA resolved using rule 127 (empty -> .)
  ! reduce/reduce conflict for COMILLAS resolved using rule 127 (empty -> .)
    MUL             shift and go to state 272
    DIV             shift and go to state 273
    PLUS            shift and go to state 274
    MINUS           shift and go to state 275
    GT              shift and go to state 266
    LT              shift and go to state 267
    EQUAL           shift and go to state 268
    NEQ             shift and go to state 269
    GEQ             shift and go to state 270
    LEQ             shift and go to state 271
    CTE_I           shift and go to state 234
    CTE_F           shift and go to state 235
    ID              shift and go to state 289
    TRUE            shift and go to state 231
    FALSE           shift and go to state 232
    COMILLA         reduce using rule 127 (empty -> .)
    COMILLAS        reduce using rule 127 (empty -> .)

  ! CTE_I           [ reduce using rule 164 (expression -> expr .) ]
  ! CTE_F           [ reduce using rule 164 (expression -> expr .) ]
  ! ID              [ reduce using rule 164 (expression -> expr .) ]
  ! TRUE            [ reduce using rule 164 (expression -> expr .) ]
  ! FALSE           [ reduce using rule 164 (expression -> expr .) ]
  ! COMILLA         [ reduce using rule 164 (expression -> expr .) ]
  ! COMILLAS        [ reduce using rule 164 (expression -> expr .) ]

    expr                           shift and go to state 286
    any                            shift and go to state 330
    expression                     shift and go to state 287
    empty                          shift and go to state 288
    var_gt                         shift and go to state 224
    var_lt                         shift and go to state 225
    var_equal                      shift and go to state 226
    var_neq                        shift and go to state 227
    var_geq                        shift and go to state 228
    var_leq                        shift and go to state 229

state 287

    (153) any -> expression . any
    (152) any -> . expr any
    (153) any -> . expression any
    (154) any -> . empty
    (175) expr -> . expr MUL expr
    (176) expr -> . expr DIV expr
    (177) expr -> . expr PLUS expr
    (178) expr -> . expr MINUS expr
    (179) expr -> . CTE_I
    (180) expr -> . CTE_F
    (181) expr -> . ID
    (158) expression -> . var_gt
    (159) expression -> . var_lt
    (160) expression -> . var_equal
    (161) expression -> . var_neq
    (162) expression -> . var_geq
    (163) expression -> . var_leq
    (164) expression -> . expr
    (165) expression -> . TRUE
    (166) expression -> . FALSE
    (167) expression -> . ID
    (127) empty -> .
    (169) var_gt -> . expr GT expr
    (168) var_lt -> . expr LT expr
    (172) var_equal -> . expr EQUAL expr
    (173) var_neq -> . expr NEQ expr
    (171) var_geq -> . expr GEQ expr
    (170) var_leq -> . expr LEQ expr

    CTE_I           shift and go to state 234
    CTE_F           shift and go to state 235
    ID              shift and go to state 289
    TRUE            shift and go to state 231
    FALSE           shift and go to state 232
    COMILLA         reduce using rule 127 (empty -> .)
    COMILLAS        reduce using rule 127 (empty -> .)

    expression                     shift and go to state 287
    any                            shift and go to state 331
    expr                           shift and go to state 286
    empty                          shift and go to state 288
    var_gt                         shift and go to state 224
    var_lt                         shift and go to state 225
    var_equal                      shift and go to state 226
    var_neq                        shift and go to state 227
    var_geq                        shift and go to state 228
    var_leq                        shift and go to state 229

state 288

    (154) any -> empty .

    COMILLA         reduce using rule 154 (any -> empty .)
    COMILLAS        reduce using rule 154 (any -> empty .)


state 289

    (181) expr -> ID .
    (167) expression -> ID .

  ! reduce/reduce conflict for CTE_I resolved using rule 167 (expression -> ID .)
  ! reduce/reduce conflict for CTE_F resolved using rule 167 (expression -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 167 (expression -> ID .)
  ! reduce/reduce conflict for TRUE resolved using rule 167 (expression -> ID .)
  ! reduce/reduce conflict for FALSE resolved using rule 167 (expression -> ID .)
  ! reduce/reduce conflict for COMILLA resolved using rule 167 (expression -> ID .)
  ! reduce/reduce conflict for COMILLAS resolved using rule 167 (expression -> ID .)
    MUL             reduce using rule 181 (expr -> ID .)
    DIV             reduce using rule 181 (expr -> ID .)
    PLUS            reduce using rule 181 (expr -> ID .)
    MINUS           reduce using rule 181 (expr -> ID .)
    GT              reduce using rule 181 (expr -> ID .)
    LT              reduce using rule 181 (expr -> ID .)
    EQUAL           reduce using rule 181 (expr -> ID .)
    NEQ             reduce using rule 181 (expr -> ID .)
    GEQ             reduce using rule 181 (expr -> ID .)
    LEQ             reduce using rule 181 (expr -> ID .)
    CTE_I           reduce using rule 167 (expression -> ID .)
    CTE_F           reduce using rule 167 (expression -> ID .)
    ID              reduce using rule 167 (expression -> ID .)
    TRUE            reduce using rule 167 (expression -> ID .)
    FALSE           reduce using rule 167 (expression -> ID .)
    COMILLA         reduce using rule 167 (expression -> ID .)
    COMILLAS        reduce using rule 167 (expression -> ID .)

  ! CTE_I           [ reduce using rule 181 (expr -> ID .) ]
  ! CTE_F           [ reduce using rule 181 (expr -> ID .) ]
  ! ID              [ reduce using rule 181 (expr -> ID .) ]
  ! TRUE            [ reduce using rule 181 (expr -> ID .) ]
  ! FALSE           [ reduce using rule 181 (expr -> ID .) ]
  ! COMILLA         [ reduce using rule 181 (expr -> ID .) ]
  ! COMILLAS        [ reduce using rule 181 (expr -> ID .) ]


state 290

    (149) escritura -> PRINT LP COMILLAS any . COMILLAS RP SEMICOL

    COMILLAS        shift and go to state 332


state 291

    (150) escritura_var -> PRINT LP any_var RP . SEMICOL

    SEMICOL         shift and go to state 333


state 292

    (155) lectura -> READ LP COMILLA any_lectura . COMILLA RP SEMICOL

    COMILLA         shift and go to state 334


state 293

    (157) any_lectura -> ID .

    COMILLA         reduce using rule 157 (any_lectura -> ID .)
    COMILLAS        reduce using rule 157 (any_lectura -> ID .)


state 294

    (156) lectura -> READ LP COMILLAS any_lectura . COMILLAS RP SEMICOL

    COMILLAS        shift and go to state 335


state 295

    (123) matrix2 -> LP lista2 RP COMMA LP lista2 . RP
    (122) matrix2 -> LP lista2 . RP COMMA matrix2
    (123) matrix2 -> LP lista2 . RP COMMA LP lista2 RP

    RP              shift and go to state 336


state 296

    (85) funcion -> tipo ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return . RB end_func

    RB              shift and go to state 337


state 297

    (109) func_return -> RETURN . expr SEMICOL
    (175) expr -> . expr MUL expr
    (176) expr -> . expr DIV expr
    (177) expr -> . expr PLUS expr
    (178) expr -> . expr MINUS expr
    (179) expr -> . CTE_I
    (180) expr -> . CTE_F
    (181) expr -> . ID

    CTE_I           shift and go to state 234
    CTE_F           shift and go to state 235
    ID              shift and go to state 261

    expr                           shift and go to state 338

state 298

    (86) funcion -> tipo ID add_fun LP param RP verificar LB var_func statement add_func_dir . func_return_param RB end_func
    (110) func_return_param -> . RETURN expr SEMICOL

    RETURN          shift and go to state 340

    func_return_param              shift and go to state 339

state 299

    (83) funcion -> VOID ID add_fun LP param RP verificar LB var_func statement RB . end_func
    (103) end_func -> .

    VOID            reduce using rule 103 (end_func -> .)
    INT             reduce using rule 103 (end_func -> .)
    FLOAT           reduce using rule 103 (end_func -> .)
    CHAR            reduce using rule 103 (end_func -> .)
    $end            reduce using rule 103 (end_func -> .)

    end_func                       shift and go to state 341

state 300

    (84) funcion -> VOID ID add_fun LP RP verificar2 LB var_func statement RB end_func .

    VOID            reduce using rule 84 (funcion -> VOID ID add_fun LP RP verificar2 LB var_func statement RB end_func .)
    INT             reduce using rule 84 (funcion -> VOID ID add_fun LP RP verificar2 LB var_func statement RB end_func .)
    FLOAT           reduce using rule 84 (funcion -> VOID ID add_fun LP RP verificar2 LB var_func statement RB end_func .)
    CHAR            reduce using rule 84 (funcion -> VOID ID add_fun LP RP verificar2 LB var_func statement RB end_func .)
    $end            reduce using rule 84 (funcion -> VOID ID add_fun LP RP verificar2 LB var_func statement RB end_func .)


state 301

    (111) func_return_main -> RETURN expr SEMICOL .

    RB              reduce using rule 111 (func_return_main -> RETURN expr SEMICOL .)


state 302

    (105) func_call -> ID LP func_era func_call_param RP . SEMICOL

    SEMICOL         shift and go to state 342


state 303

    (108) func_call_param -> func_call_param COMMA . expr
    (175) expr -> . expr MUL expr
    (176) expr -> . expr DIV expr
    (177) expr -> . expr PLUS expr
    (178) expr -> . expr MINUS expr
    (179) expr -> . CTE_I
    (180) expr -> . CTE_F
    (181) expr -> . ID

    CTE_I           shift and go to state 234
    CTE_F           shift and go to state 235
    ID              shift and go to state 261

    expr                           shift and go to state 343

state 304

    (128) if -> IF LP expression RP check_bool . gotof LB statement RB fill_if
    (129) if -> IF LP expression RP check_bool . gotof LB statement RB goto fill_gotof else
    (132) gotof -> .

    LB              reduce using rule 132 (gotof -> .)

    gotof                          shift and go to state 344

state 305

    (169) var_gt -> expr GT expr .
    (175) expr -> expr . MUL expr
    (176) expr -> expr . DIV expr
    (177) expr -> expr . PLUS expr
    (178) expr -> expr . MINUS expr

    RP              reduce using rule 169 (var_gt -> expr GT expr .)
    CTE_I           reduce using rule 169 (var_gt -> expr GT expr .)
    CTE_F           reduce using rule 169 (var_gt -> expr GT expr .)
    ID              reduce using rule 169 (var_gt -> expr GT expr .)
    TRUE            reduce using rule 169 (var_gt -> expr GT expr .)
    FALSE           reduce using rule 169 (var_gt -> expr GT expr .)
    COMILLA         reduce using rule 169 (var_gt -> expr GT expr .)
    COMILLAS        reduce using rule 169 (var_gt -> expr GT expr .)
    SEMICOL         reduce using rule 169 (var_gt -> expr GT expr .)
    MUL             shift and go to state 272
    DIV             shift and go to state 273
    PLUS            shift and go to state 274
    MINUS           shift and go to state 275


state 306

    (168) var_lt -> expr LT expr .
    (175) expr -> expr . MUL expr
    (176) expr -> expr . DIV expr
    (177) expr -> expr . PLUS expr
    (178) expr -> expr . MINUS expr

    RP              reduce using rule 168 (var_lt -> expr LT expr .)
    CTE_I           reduce using rule 168 (var_lt -> expr LT expr .)
    CTE_F           reduce using rule 168 (var_lt -> expr LT expr .)
    ID              reduce using rule 168 (var_lt -> expr LT expr .)
    TRUE            reduce using rule 168 (var_lt -> expr LT expr .)
    FALSE           reduce using rule 168 (var_lt -> expr LT expr .)
    COMILLA         reduce using rule 168 (var_lt -> expr LT expr .)
    COMILLAS        reduce using rule 168 (var_lt -> expr LT expr .)
    SEMICOL         reduce using rule 168 (var_lt -> expr LT expr .)
    MUL             shift and go to state 272
    DIV             shift and go to state 273
    PLUS            shift and go to state 274
    MINUS           shift and go to state 275


state 307

    (172) var_equal -> expr EQUAL expr .
    (175) expr -> expr . MUL expr
    (176) expr -> expr . DIV expr
    (177) expr -> expr . PLUS expr
    (178) expr -> expr . MINUS expr

    RP              reduce using rule 172 (var_equal -> expr EQUAL expr .)
    CTE_I           reduce using rule 172 (var_equal -> expr EQUAL expr .)
    CTE_F           reduce using rule 172 (var_equal -> expr EQUAL expr .)
    ID              reduce using rule 172 (var_equal -> expr EQUAL expr .)
    TRUE            reduce using rule 172 (var_equal -> expr EQUAL expr .)
    FALSE           reduce using rule 172 (var_equal -> expr EQUAL expr .)
    COMILLA         reduce using rule 172 (var_equal -> expr EQUAL expr .)
    COMILLAS        reduce using rule 172 (var_equal -> expr EQUAL expr .)
    SEMICOL         reduce using rule 172 (var_equal -> expr EQUAL expr .)
    MUL             shift and go to state 272
    DIV             shift and go to state 273
    PLUS            shift and go to state 274
    MINUS           shift and go to state 275


state 308

    (173) var_neq -> expr NEQ expr .
    (175) expr -> expr . MUL expr
    (176) expr -> expr . DIV expr
    (177) expr -> expr . PLUS expr
    (178) expr -> expr . MINUS expr

    RP              reduce using rule 173 (var_neq -> expr NEQ expr .)
    CTE_I           reduce using rule 173 (var_neq -> expr NEQ expr .)
    CTE_F           reduce using rule 173 (var_neq -> expr NEQ expr .)
    ID              reduce using rule 173 (var_neq -> expr NEQ expr .)
    TRUE            reduce using rule 173 (var_neq -> expr NEQ expr .)
    FALSE           reduce using rule 173 (var_neq -> expr NEQ expr .)
    COMILLA         reduce using rule 173 (var_neq -> expr NEQ expr .)
    COMILLAS        reduce using rule 173 (var_neq -> expr NEQ expr .)
    SEMICOL         reduce using rule 173 (var_neq -> expr NEQ expr .)
    MUL             shift and go to state 272
    DIV             shift and go to state 273
    PLUS            shift and go to state 274
    MINUS           shift and go to state 275


state 309

    (171) var_geq -> expr GEQ expr .
    (175) expr -> expr . MUL expr
    (176) expr -> expr . DIV expr
    (177) expr -> expr . PLUS expr
    (178) expr -> expr . MINUS expr

    RP              reduce using rule 171 (var_geq -> expr GEQ expr .)
    CTE_I           reduce using rule 171 (var_geq -> expr GEQ expr .)
    CTE_F           reduce using rule 171 (var_geq -> expr GEQ expr .)
    ID              reduce using rule 171 (var_geq -> expr GEQ expr .)
    TRUE            reduce using rule 171 (var_geq -> expr GEQ expr .)
    FALSE           reduce using rule 171 (var_geq -> expr GEQ expr .)
    COMILLA         reduce using rule 171 (var_geq -> expr GEQ expr .)
    COMILLAS        reduce using rule 171 (var_geq -> expr GEQ expr .)
    SEMICOL         reduce using rule 171 (var_geq -> expr GEQ expr .)
    MUL             shift and go to state 272
    DIV             shift and go to state 273
    PLUS            shift and go to state 274
    MINUS           shift and go to state 275


state 310

    (170) var_leq -> expr LEQ expr .
    (175) expr -> expr . MUL expr
    (176) expr -> expr . DIV expr
    (177) expr -> expr . PLUS expr
    (178) expr -> expr . MINUS expr

    RP              reduce using rule 170 (var_leq -> expr LEQ expr .)
    CTE_I           reduce using rule 170 (var_leq -> expr LEQ expr .)
    CTE_F           reduce using rule 170 (var_leq -> expr LEQ expr .)
    ID              reduce using rule 170 (var_leq -> expr LEQ expr .)
    TRUE            reduce using rule 170 (var_leq -> expr LEQ expr .)
    FALSE           reduce using rule 170 (var_leq -> expr LEQ expr .)
    COMILLA         reduce using rule 170 (var_leq -> expr LEQ expr .)
    COMILLAS        reduce using rule 170 (var_leq -> expr LEQ expr .)
    SEMICOL         reduce using rule 170 (var_leq -> expr LEQ expr .)
    MUL             shift and go to state 272
    DIV             shift and go to state 273
    PLUS            shift and go to state 274
    MINUS           shift and go to state 275


state 311

    (175) expr -> expr MUL expr .
    (175) expr -> expr . MUL expr
    (176) expr -> expr . DIV expr
    (177) expr -> expr . PLUS expr
    (178) expr -> expr . MINUS expr

    GT              reduce using rule 175 (expr -> expr MUL expr .)
    LT              reduce using rule 175 (expr -> expr MUL expr .)
    EQUAL           reduce using rule 175 (expr -> expr MUL expr .)
    NEQ             reduce using rule 175 (expr -> expr MUL expr .)
    GEQ             reduce using rule 175 (expr -> expr MUL expr .)
    LEQ             reduce using rule 175 (expr -> expr MUL expr .)
    MUL             reduce using rule 175 (expr -> expr MUL expr .)
    DIV             reduce using rule 175 (expr -> expr MUL expr .)
    PLUS            reduce using rule 175 (expr -> expr MUL expr .)
    MINUS           reduce using rule 175 (expr -> expr MUL expr .)
    RP              reduce using rule 175 (expr -> expr MUL expr .)
    SEMICOL         reduce using rule 175 (expr -> expr MUL expr .)
    COMMA           reduce using rule 175 (expr -> expr MUL expr .)
    CTE_I           reduce using rule 175 (expr -> expr MUL expr .)
    CTE_F           reduce using rule 175 (expr -> expr MUL expr .)
    ID              reduce using rule 175 (expr -> expr MUL expr .)
    TRUE            reduce using rule 175 (expr -> expr MUL expr .)
    FALSE           reduce using rule 175 (expr -> expr MUL expr .)
    COMILLA         reduce using rule 175 (expr -> expr MUL expr .)
    COMILLAS        reduce using rule 175 (expr -> expr MUL expr .)

  ! MUL             [ shift and go to state 272 ]
  ! DIV             [ shift and go to state 273 ]
  ! PLUS            [ shift and go to state 274 ]
  ! MINUS           [ shift and go to state 275 ]


state 312

    (176) expr -> expr DIV expr .
    (175) expr -> expr . MUL expr
    (176) expr -> expr . DIV expr
    (177) expr -> expr . PLUS expr
    (178) expr -> expr . MINUS expr

    GT              reduce using rule 176 (expr -> expr DIV expr .)
    LT              reduce using rule 176 (expr -> expr DIV expr .)
    EQUAL           reduce using rule 176 (expr -> expr DIV expr .)
    NEQ             reduce using rule 176 (expr -> expr DIV expr .)
    GEQ             reduce using rule 176 (expr -> expr DIV expr .)
    LEQ             reduce using rule 176 (expr -> expr DIV expr .)
    MUL             reduce using rule 176 (expr -> expr DIV expr .)
    DIV             reduce using rule 176 (expr -> expr DIV expr .)
    PLUS            reduce using rule 176 (expr -> expr DIV expr .)
    MINUS           reduce using rule 176 (expr -> expr DIV expr .)
    RP              reduce using rule 176 (expr -> expr DIV expr .)
    SEMICOL         reduce using rule 176 (expr -> expr DIV expr .)
    COMMA           reduce using rule 176 (expr -> expr DIV expr .)
    CTE_I           reduce using rule 176 (expr -> expr DIV expr .)
    CTE_F           reduce using rule 176 (expr -> expr DIV expr .)
    ID              reduce using rule 176 (expr -> expr DIV expr .)
    TRUE            reduce using rule 176 (expr -> expr DIV expr .)
    FALSE           reduce using rule 176 (expr -> expr DIV expr .)
    COMILLA         reduce using rule 176 (expr -> expr DIV expr .)
    COMILLAS        reduce using rule 176 (expr -> expr DIV expr .)

  ! MUL             [ shift and go to state 272 ]
  ! DIV             [ shift and go to state 273 ]
  ! PLUS            [ shift and go to state 274 ]
  ! MINUS           [ shift and go to state 275 ]


state 313

    (177) expr -> expr PLUS expr .
    (175) expr -> expr . MUL expr
    (176) expr -> expr . DIV expr
    (177) expr -> expr . PLUS expr
    (178) expr -> expr . MINUS expr

    GT              reduce using rule 177 (expr -> expr PLUS expr .)
    LT              reduce using rule 177 (expr -> expr PLUS expr .)
    EQUAL           reduce using rule 177 (expr -> expr PLUS expr .)
    NEQ             reduce using rule 177 (expr -> expr PLUS expr .)
    GEQ             reduce using rule 177 (expr -> expr PLUS expr .)
    LEQ             reduce using rule 177 (expr -> expr PLUS expr .)
    PLUS            reduce using rule 177 (expr -> expr PLUS expr .)
    MINUS           reduce using rule 177 (expr -> expr PLUS expr .)
    RP              reduce using rule 177 (expr -> expr PLUS expr .)
    SEMICOL         reduce using rule 177 (expr -> expr PLUS expr .)
    COMMA           reduce using rule 177 (expr -> expr PLUS expr .)
    CTE_I           reduce using rule 177 (expr -> expr PLUS expr .)
    CTE_F           reduce using rule 177 (expr -> expr PLUS expr .)
    ID              reduce using rule 177 (expr -> expr PLUS expr .)
    TRUE            reduce using rule 177 (expr -> expr PLUS expr .)
    FALSE           reduce using rule 177 (expr -> expr PLUS expr .)
    COMILLA         reduce using rule 177 (expr -> expr PLUS expr .)
    COMILLAS        reduce using rule 177 (expr -> expr PLUS expr .)
    MUL             shift and go to state 272
    DIV             shift and go to state 273

  ! MUL             [ reduce using rule 177 (expr -> expr PLUS expr .) ]
  ! DIV             [ reduce using rule 177 (expr -> expr PLUS expr .) ]
  ! PLUS            [ shift and go to state 274 ]
  ! MINUS           [ shift and go to state 275 ]


state 314

    (178) expr -> expr MINUS expr .
    (175) expr -> expr . MUL expr
    (176) expr -> expr . DIV expr
    (177) expr -> expr . PLUS expr
    (178) expr -> expr . MINUS expr

    GT              reduce using rule 178 (expr -> expr MINUS expr .)
    LT              reduce using rule 178 (expr -> expr MINUS expr .)
    EQUAL           reduce using rule 178 (expr -> expr MINUS expr .)
    NEQ             reduce using rule 178 (expr -> expr MINUS expr .)
    GEQ             reduce using rule 178 (expr -> expr MINUS expr .)
    LEQ             reduce using rule 178 (expr -> expr MINUS expr .)
    PLUS            reduce using rule 178 (expr -> expr MINUS expr .)
    MINUS           reduce using rule 178 (expr -> expr MINUS expr .)
    RP              reduce using rule 178 (expr -> expr MINUS expr .)
    SEMICOL         reduce using rule 178 (expr -> expr MINUS expr .)
    COMMA           reduce using rule 178 (expr -> expr MINUS expr .)
    CTE_I           reduce using rule 178 (expr -> expr MINUS expr .)
    CTE_F           reduce using rule 178 (expr -> expr MINUS expr .)
    ID              reduce using rule 178 (expr -> expr MINUS expr .)
    TRUE            reduce using rule 178 (expr -> expr MINUS expr .)
    FALSE           reduce using rule 178 (expr -> expr MINUS expr .)
    COMILLA         reduce using rule 178 (expr -> expr MINUS expr .)
    COMILLAS        reduce using rule 178 (expr -> expr MINUS expr .)
    MUL             shift and go to state 272
    DIV             shift and go to state 273

  ! MUL             [ reduce using rule 178 (expr -> expr MINUS expr .) ]
  ! DIV             [ reduce using rule 178 (expr -> expr MINUS expr .) ]
  ! PLUS            [ shift and go to state 274 ]
  ! MINUS           [ shift and go to state 275 ]


state 315

    (32) vars -> VAR tipo ID row SEMICOL .

    ID              reduce using rule 32 (vars -> VAR tipo ID row SEMICOL .)
    IF              reduce using rule 32 (vars -> VAR tipo ID row SEMICOL .)
    VAR             reduce using rule 32 (vars -> VAR tipo ID row SEMICOL .)
    WHILE           reduce using rule 32 (vars -> VAR tipo ID row SEMICOL .)
    FOR             reduce using rule 32 (vars -> VAR tipo ID row SEMICOL .)
    PRINT           reduce using rule 32 (vars -> VAR tipo ID row SEMICOL .)
    READ            reduce using rule 32 (vars -> VAR tipo ID row SEMICOL .)
    RETURN          reduce using rule 32 (vars -> VAR tipo ID row SEMICOL .)
    RB              reduce using rule 32 (vars -> VAR tipo ID row SEMICOL .)


state 316

    (113) var_row -> VAR tipo ID row IS . LP lista2 RP SEMICOL

    LP              shift and go to state 345


state 317

    (33) vars -> VAR tipo ID matrix SEMICOL .

    ID              reduce using rule 33 (vars -> VAR tipo ID matrix SEMICOL .)
    IF              reduce using rule 33 (vars -> VAR tipo ID matrix SEMICOL .)
    VAR             reduce using rule 33 (vars -> VAR tipo ID matrix SEMICOL .)
    WHILE           reduce using rule 33 (vars -> VAR tipo ID matrix SEMICOL .)
    FOR             reduce using rule 33 (vars -> VAR tipo ID matrix SEMICOL .)
    PRINT           reduce using rule 33 (vars -> VAR tipo ID matrix SEMICOL .)
    READ            reduce using rule 33 (vars -> VAR tipo ID matrix SEMICOL .)
    RETURN          reduce using rule 33 (vars -> VAR tipo ID matrix SEMICOL .)
    RB              reduce using rule 33 (vars -> VAR tipo ID matrix SEMICOL .)


state 318

    (120) var_matrix -> VAR tipo ID matrix IS . matrix2 SEMICOL
    (122) matrix2 -> . LP lista2 RP COMMA matrix2
    (123) matrix2 -> . LP lista2 RP COMMA LP lista2 RP

    LP              shift and go to state 118

    matrix2                        shift and go to state 346

state 319

    (77) value -> ID .
    (181) expr -> ID .

  ! reduce/reduce conflict for SEMICOL resolved using rule 77 (value -> ID .)
    SEMICOL         reduce using rule 77 (value -> ID .)
    COMMA           reduce using rule 77 (value -> ID .)
    MUL             reduce using rule 181 (expr -> ID .)
    DIV             reduce using rule 181 (expr -> ID .)
    PLUS            reduce using rule 181 (expr -> ID .)
    MINUS           reduce using rule 181 (expr -> ID .)

  ! SEMICOL         [ reduce using rule 181 (expr -> ID .) ]


state 320

    (44) vars2 -> ID IS value . SEMICOL
    (42) vars2_1 -> ID IS value . COMMA

    SEMICOL         shift and go to state 347
    COMMA           shift and go to state 348


state 321

    (174) oper_aritmetica -> ID IS expr . SEMICOL
    (175) expr -> expr . MUL expr
    (176) expr -> expr . DIV expr
    (177) expr -> expr . PLUS expr
    (178) expr -> expr . MINUS expr

    SEMICOL         shift and go to state 349
    MUL             shift and go to state 272
    DIV             shift and go to state 273
    PLUS            shift and go to state 274
    MINUS           shift and go to state 275


state 322

    (75) value -> CTE_F .
    (180) expr -> CTE_F .

  ! reduce/reduce conflict for SEMICOL resolved using rule 75 (value -> CTE_F .)
    SEMICOL         reduce using rule 75 (value -> CTE_F .)
    COMMA           reduce using rule 75 (value -> CTE_F .)
    MUL             reduce using rule 180 (expr -> CTE_F .)
    DIV             reduce using rule 180 (expr -> CTE_F .)
    PLUS            reduce using rule 180 (expr -> CTE_F .)
    MINUS           reduce using rule 180 (expr -> CTE_F .)

  ! SEMICOL         [ reduce using rule 180 (expr -> CTE_F .) ]


state 323

    (76) value -> CTE_I .
    (179) expr -> CTE_I .

  ! reduce/reduce conflict for SEMICOL resolved using rule 76 (value -> CTE_I .)
    SEMICOL         reduce using rule 76 (value -> CTE_I .)
    COMMA           reduce using rule 76 (value -> CTE_I .)
    MUL             reduce using rule 179 (expr -> CTE_I .)
    DIV             reduce using rule 179 (expr -> CTE_I .)
    PLUS            reduce using rule 179 (expr -> CTE_I .)
    MINUS           reduce using rule 179 (expr -> CTE_I .)

  ! SEMICOL         [ reduce using rule 179 (expr -> CTE_I .) ]


state 324

    (40) vars2 -> vars2_1 ID IS . value SEMICOL
    (41) vars2_1 -> vars2_1 ID IS . value COMMA
    (75) value -> . CTE_F
    (76) value -> . CTE_I
    (77) value -> . ID
    (78) value -> . CTE_C
    (79) value -> . COMILLA ID COMILLA
    (80) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88
    ID              shift and go to state 85
    CTE_C           shift and go to state 89
    COMILLA         shift and go to state 90
    COMILLAS        shift and go to state 91

    value                          shift and go to state 350

state 325

    (45) vars3 -> vars3_1 ID SEMICOL .

    ID              reduce using rule 45 (vars3 -> vars3_1 ID SEMICOL .)
    IF              reduce using rule 45 (vars3 -> vars3_1 ID SEMICOL .)
    VAR             reduce using rule 45 (vars3 -> vars3_1 ID SEMICOL .)
    WHILE           reduce using rule 45 (vars3 -> vars3_1 ID SEMICOL .)
    FOR             reduce using rule 45 (vars3 -> vars3_1 ID SEMICOL .)
    PRINT           reduce using rule 45 (vars3 -> vars3_1 ID SEMICOL .)
    READ            reduce using rule 45 (vars3 -> vars3_1 ID SEMICOL .)
    RETURN          reduce using rule 45 (vars3 -> vars3_1 ID SEMICOL .)
    RB              reduce using rule 45 (vars3 -> vars3_1 ID SEMICOL .)


state 326

    (46) vars3_1 -> vars3_1 ID COMMA .

    ID              reduce using rule 46 (vars3_1 -> vars3_1 ID COMMA .)


state 327

    (138) while -> WHILE guarda_num_salto LP expression RP . check_bool gotof LB statement RB goto
    (182) check_bool -> .

    LB              reduce using rule 182 (check_bool -> .)

    check_bool                     shift and go to state 351

state 328

    (139) for -> FOR LP VAR tipo ID . IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto

    IS              shift and go to state 352


state 329

    (148) escritura -> PRINT LP COMILLA any COMILLA . RP SEMICOL

    RP              shift and go to state 353


state 330

    (152) any -> expr any .

    COMILLA         reduce using rule 152 (any -> expr any .)
    COMILLAS        reduce using rule 152 (any -> expr any .)


state 331

    (153) any -> expression any .

    COMILLA         reduce using rule 153 (any -> expression any .)
    COMILLAS        reduce using rule 153 (any -> expression any .)


state 332

    (149) escritura -> PRINT LP COMILLAS any COMILLAS . RP SEMICOL

    RP              shift and go to state 354


state 333

    (150) escritura_var -> PRINT LP any_var RP SEMICOL .

    ID              reduce using rule 150 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    IF              reduce using rule 150 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    VAR             reduce using rule 150 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    WHILE           reduce using rule 150 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    FOR             reduce using rule 150 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    PRINT           reduce using rule 150 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    READ            reduce using rule 150 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    RETURN          reduce using rule 150 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    RB              reduce using rule 150 (escritura_var -> PRINT LP any_var RP SEMICOL .)


state 334

    (155) lectura -> READ LP COMILLA any_lectura COMILLA . RP SEMICOL

    RP              shift and go to state 355


state 335

    (156) lectura -> READ LP COMILLAS any_lectura COMILLAS . RP SEMICOL

    RP              shift and go to state 356


state 336

    (123) matrix2 -> LP lista2 RP COMMA LP lista2 RP .
    (122) matrix2 -> LP lista2 RP . COMMA matrix2
    (123) matrix2 -> LP lista2 RP . COMMA LP lista2 RP

    SEMICOL         reduce using rule 123 (matrix2 -> LP lista2 RP COMMA LP lista2 RP .)
    COMMA           shift and go to state 210


state 337

    (85) funcion -> tipo ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return RB . end_func
    (103) end_func -> .

    VOID            reduce using rule 103 (end_func -> .)
    INT             reduce using rule 103 (end_func -> .)
    FLOAT           reduce using rule 103 (end_func -> .)
    CHAR            reduce using rule 103 (end_func -> .)
    $end            reduce using rule 103 (end_func -> .)

    end_func                       shift and go to state 357

state 338

    (109) func_return -> RETURN expr . SEMICOL
    (175) expr -> expr . MUL expr
    (176) expr -> expr . DIV expr
    (177) expr -> expr . PLUS expr
    (178) expr -> expr . MINUS expr

    SEMICOL         shift and go to state 358
    MUL             shift and go to state 272
    DIV             shift and go to state 273
    PLUS            shift and go to state 274
    MINUS           shift and go to state 275


state 339

    (86) funcion -> tipo ID add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param . RB end_func

    RB              shift and go to state 359


state 340

    (110) func_return_param -> RETURN . expr SEMICOL
    (175) expr -> . expr MUL expr
    (176) expr -> . expr DIV expr
    (177) expr -> . expr PLUS expr
    (178) expr -> . expr MINUS expr
    (179) expr -> . CTE_I
    (180) expr -> . CTE_F
    (181) expr -> . ID

    CTE_I           shift and go to state 234
    CTE_F           shift and go to state 235
    ID              shift and go to state 261

    expr                           shift and go to state 360

state 341

    (83) funcion -> VOID ID add_fun LP param RP verificar LB var_func statement RB end_func .

    VOID            reduce using rule 83 (funcion -> VOID ID add_fun LP param RP verificar LB var_func statement RB end_func .)
    INT             reduce using rule 83 (funcion -> VOID ID add_fun LP param RP verificar LB var_func statement RB end_func .)
    FLOAT           reduce using rule 83 (funcion -> VOID ID add_fun LP param RP verificar LB var_func statement RB end_func .)
    CHAR            reduce using rule 83 (funcion -> VOID ID add_fun LP param RP verificar LB var_func statement RB end_func .)
    $end            reduce using rule 83 (funcion -> VOID ID add_fun LP param RP verificar LB var_func statement RB end_func .)


state 342

    (105) func_call -> ID LP func_era func_call_param RP SEMICOL .

    ID              reduce using rule 105 (func_call -> ID LP func_era func_call_param RP SEMICOL .)
    IF              reduce using rule 105 (func_call -> ID LP func_era func_call_param RP SEMICOL .)
    VAR             reduce using rule 105 (func_call -> ID LP func_era func_call_param RP SEMICOL .)
    WHILE           reduce using rule 105 (func_call -> ID LP func_era func_call_param RP SEMICOL .)
    FOR             reduce using rule 105 (func_call -> ID LP func_era func_call_param RP SEMICOL .)
    PRINT           reduce using rule 105 (func_call -> ID LP func_era func_call_param RP SEMICOL .)
    READ            reduce using rule 105 (func_call -> ID LP func_era func_call_param RP SEMICOL .)
    RETURN          reduce using rule 105 (func_call -> ID LP func_era func_call_param RP SEMICOL .)
    RB              reduce using rule 105 (func_call -> ID LP func_era func_call_param RP SEMICOL .)


state 343

    (108) func_call_param -> func_call_param COMMA expr .
    (175) expr -> expr . MUL expr
    (176) expr -> expr . DIV expr
    (177) expr -> expr . PLUS expr
    (178) expr -> expr . MINUS expr

    RP              reduce using rule 108 (func_call_param -> func_call_param COMMA expr .)
    COMMA           reduce using rule 108 (func_call_param -> func_call_param COMMA expr .)
    MUL             shift and go to state 272
    DIV             shift and go to state 273
    PLUS            shift and go to state 274
    MINUS           shift and go to state 275


state 344

    (128) if -> IF LP expression RP check_bool gotof . LB statement RB fill_if
    (129) if -> IF LP expression RP check_bool gotof . LB statement RB goto fill_gotof else

    LB              shift and go to state 361


state 345

    (113) var_row -> VAR tipo ID row IS LP . lista2 RP SEMICOL
    (117) lista2 -> . elem_lista COMMA lista2
    (118) lista2 -> . elem_lista COMMA elem_lista
    (115) elem_lista -> . value
    (116) elem_lista -> . empty
    (75) value -> . CTE_F
    (76) value -> . CTE_I
    (77) value -> . ID
    (78) value -> . CTE_C
    (79) value -> . COMILLA ID COMILLA
    (80) value -> . COMILLAS ID COMILLAS
    (127) empty -> .

    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88
    ID              shift and go to state 85
    CTE_C           shift and go to state 89
    COMILLA         shift and go to state 90
    COMILLAS        shift and go to state 91
    COMMA           reduce using rule 127 (empty -> .)

    lista2                         shift and go to state 362
    elem_lista                     shift and go to state 136
    value                          shift and go to state 137
    empty                          shift and go to state 138

state 346

    (120) var_matrix -> VAR tipo ID matrix IS matrix2 . SEMICOL

    SEMICOL         shift and go to state 363


state 347

    (44) vars2 -> ID IS value SEMICOL .

    ID              reduce using rule 44 (vars2 -> ID IS value SEMICOL .)
    IF              reduce using rule 44 (vars2 -> ID IS value SEMICOL .)
    VAR             reduce using rule 44 (vars2 -> ID IS value SEMICOL .)
    WHILE           reduce using rule 44 (vars2 -> ID IS value SEMICOL .)
    FOR             reduce using rule 44 (vars2 -> ID IS value SEMICOL .)
    PRINT           reduce using rule 44 (vars2 -> ID IS value SEMICOL .)
    READ            reduce using rule 44 (vars2 -> ID IS value SEMICOL .)
    RETURN          reduce using rule 44 (vars2 -> ID IS value SEMICOL .)
    RB              reduce using rule 44 (vars2 -> ID IS value SEMICOL .)


state 348

    (42) vars2_1 -> ID IS value COMMA .

    ID              reduce using rule 42 (vars2_1 -> ID IS value COMMA .)


state 349

    (174) oper_aritmetica -> ID IS expr SEMICOL .

    ID              reduce using rule 174 (oper_aritmetica -> ID IS expr SEMICOL .)
    IF              reduce using rule 174 (oper_aritmetica -> ID IS expr SEMICOL .)
    VAR             reduce using rule 174 (oper_aritmetica -> ID IS expr SEMICOL .)
    WHILE           reduce using rule 174 (oper_aritmetica -> ID IS expr SEMICOL .)
    FOR             reduce using rule 174 (oper_aritmetica -> ID IS expr SEMICOL .)
    PRINT           reduce using rule 174 (oper_aritmetica -> ID IS expr SEMICOL .)
    READ            reduce using rule 174 (oper_aritmetica -> ID IS expr SEMICOL .)
    RETURN          reduce using rule 174 (oper_aritmetica -> ID IS expr SEMICOL .)
    RB              reduce using rule 174 (oper_aritmetica -> ID IS expr SEMICOL .)


state 350

    (40) vars2 -> vars2_1 ID IS value . SEMICOL
    (41) vars2_1 -> vars2_1 ID IS value . COMMA

    SEMICOL         shift and go to state 364
    COMMA           shift and go to state 365


state 351

    (138) while -> WHILE guarda_num_salto LP expression RP check_bool . gotof LB statement RB goto
    (132) gotof -> .

    LB              reduce using rule 132 (gotof -> .)

    gotof                          shift and go to state 366

state 352

    (139) for -> FOR LP VAR tipo ID IS . value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (75) value -> . CTE_F
    (76) value -> . CTE_I
    (77) value -> . ID
    (78) value -> . CTE_C
    (79) value -> . COMILLA ID COMILLA
    (80) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88
    ID              shift and go to state 85
    CTE_C           shift and go to state 89
    COMILLA         shift and go to state 90
    COMILLAS        shift and go to state 91

    value                          shift and go to state 367

state 353

    (148) escritura -> PRINT LP COMILLA any COMILLA RP . SEMICOL

    SEMICOL         shift and go to state 368


state 354

    (149) escritura -> PRINT LP COMILLAS any COMILLAS RP . SEMICOL

    SEMICOL         shift and go to state 369


state 355

    (155) lectura -> READ LP COMILLA any_lectura COMILLA RP . SEMICOL

    SEMICOL         shift and go to state 370


state 356

    (156) lectura -> READ LP COMILLAS any_lectura COMILLAS RP . SEMICOL

    SEMICOL         shift and go to state 371


state 357

    (85) funcion -> tipo ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func .

    VOID            reduce using rule 85 (funcion -> tipo ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func .)
    INT             reduce using rule 85 (funcion -> tipo ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func .)
    FLOAT           reduce using rule 85 (funcion -> tipo ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func .)
    CHAR            reduce using rule 85 (funcion -> tipo ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func .)
    $end            reduce using rule 85 (funcion -> tipo ID add_fun LP RP verificar2 LB var_func statement add_func_dir2 func_return RB end_func .)


state 358

    (109) func_return -> RETURN expr SEMICOL .

    RB              reduce using rule 109 (func_return -> RETURN expr SEMICOL .)


state 359

    (86) funcion -> tipo ID add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param RB . end_func
    (103) end_func -> .

    VOID            reduce using rule 103 (end_func -> .)
    INT             reduce using rule 103 (end_func -> .)
    FLOAT           reduce using rule 103 (end_func -> .)
    CHAR            reduce using rule 103 (end_func -> .)
    $end            reduce using rule 103 (end_func -> .)

    end_func                       shift and go to state 372

state 360

    (110) func_return_param -> RETURN expr . SEMICOL
    (175) expr -> expr . MUL expr
    (176) expr -> expr . DIV expr
    (177) expr -> expr . PLUS expr
    (178) expr -> expr . MINUS expr

    SEMICOL         shift and go to state 373
    MUL             shift and go to state 272
    DIV             shift and go to state 273
    PLUS            shift and go to state 274
    MINUS           shift and go to state 275


state 361

    (128) if -> IF LP expression RP check_bool gotof LB . statement RB fill_if
    (129) if -> IF LP expression RP check_bool gotof LB . statement RB goto fill_gotof else
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . while statement
    (19) statement -> . for statement
    (20) statement -> . escritura statement
    (21) statement -> . escritura_var statement
    (22) statement -> . lectura statement
    (23) statement -> . func_call statement
    (24) statement -> . ID row SEMICOL
    (25) statement -> . ID matrix SEMICOL
    (26) statement -> . empty
    (27) asignacion -> . ID IS value
    (128) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (129) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (138) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (139) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (148) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (149) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (150) escritura_var -> . PRINT LP any_var RP SEMICOL
    (155) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (156) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (104) func_call -> . ID LP RP SEMICOL
    (105) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (127) empty -> .
    (113) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (120) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 163
    IF              shift and go to state 165
    VAR             shift and go to state 166
    WHILE           shift and go to state 169
    FOR             shift and go to state 170
    PRINT           shift and go to state 171
    READ            shift and go to state 172
    RB              reduce using rule 127 (empty -> .)

  ! ID              [ reduce using rule 127 (empty -> .) ]
  ! IF              [ reduce using rule 127 (empty -> .) ]
  ! VAR             [ reduce using rule 127 (empty -> .) ]
  ! WHILE           [ reduce using rule 127 (empty -> .) ]
  ! FOR             [ reduce using rule 127 (empty -> .) ]
  ! PRINT           [ reduce using rule 127 (empty -> .) ]
  ! READ            [ reduce using rule 127 (empty -> .) ]

    statement                      shift and go to state 374
    asignacion                     shift and go to state 154
    if                             shift and go to state 155
    vars                           shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    escritura                      shift and go to state 159
    escritura_var                  shift and go to state 160
    lectura                        shift and go to state 161
    func_call                      shift and go to state 162
    empty                          shift and go to state 164
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168

state 362

    (113) var_row -> VAR tipo ID row IS LP lista2 . RP SEMICOL

    RP              shift and go to state 375


state 363

    (120) var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .

    VAR             reduce using rule 120 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    ID              reduce using rule 120 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    IF              reduce using rule 120 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    WHILE           reduce using rule 120 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    FOR             reduce using rule 120 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    PRINT           reduce using rule 120 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    READ            reduce using rule 120 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    RETURN          reduce using rule 120 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    RB              reduce using rule 120 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)


state 364

    (40) vars2 -> vars2_1 ID IS value SEMICOL .

    ID              reduce using rule 40 (vars2 -> vars2_1 ID IS value SEMICOL .)
    IF              reduce using rule 40 (vars2 -> vars2_1 ID IS value SEMICOL .)
    VAR             reduce using rule 40 (vars2 -> vars2_1 ID IS value SEMICOL .)
    WHILE           reduce using rule 40 (vars2 -> vars2_1 ID IS value SEMICOL .)
    FOR             reduce using rule 40 (vars2 -> vars2_1 ID IS value SEMICOL .)
    PRINT           reduce using rule 40 (vars2 -> vars2_1 ID IS value SEMICOL .)
    READ            reduce using rule 40 (vars2 -> vars2_1 ID IS value SEMICOL .)
    RETURN          reduce using rule 40 (vars2 -> vars2_1 ID IS value SEMICOL .)
    RB              reduce using rule 40 (vars2 -> vars2_1 ID IS value SEMICOL .)


state 365

    (41) vars2_1 -> vars2_1 ID IS value COMMA .

    ID              reduce using rule 41 (vars2_1 -> vars2_1 ID IS value COMMA .)


state 366

    (138) while -> WHILE guarda_num_salto LP expression RP check_bool gotof . LB statement RB goto

    LB              shift and go to state 376


state 367

    (139) for -> FOR LP VAR tipo ID IS value . SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto

    SEMICOL         shift and go to state 377


state 368

    (148) escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .

    ID              reduce using rule 148 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    IF              reduce using rule 148 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    VAR             reduce using rule 148 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    WHILE           reduce using rule 148 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    FOR             reduce using rule 148 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    PRINT           reduce using rule 148 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    READ            reduce using rule 148 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    RETURN          reduce using rule 148 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    RB              reduce using rule 148 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)


state 369

    (149) escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .

    ID              reduce using rule 149 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    IF              reduce using rule 149 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    VAR             reduce using rule 149 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    WHILE           reduce using rule 149 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    FOR             reduce using rule 149 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    PRINT           reduce using rule 149 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    READ            reduce using rule 149 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    RETURN          reduce using rule 149 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    RB              reduce using rule 149 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)


state 370

    (155) lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .

    ID              reduce using rule 155 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    IF              reduce using rule 155 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    VAR             reduce using rule 155 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    WHILE           reduce using rule 155 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    FOR             reduce using rule 155 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    PRINT           reduce using rule 155 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    READ            reduce using rule 155 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    RETURN          reduce using rule 155 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    RB              reduce using rule 155 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)


state 371

    (156) lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .

    ID              reduce using rule 156 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    IF              reduce using rule 156 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    VAR             reduce using rule 156 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    WHILE           reduce using rule 156 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    FOR             reduce using rule 156 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    PRINT           reduce using rule 156 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    READ            reduce using rule 156 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    RETURN          reduce using rule 156 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    RB              reduce using rule 156 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)


state 372

    (86) funcion -> tipo ID add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func .

    VOID            reduce using rule 86 (funcion -> tipo ID add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func .)
    INT             reduce using rule 86 (funcion -> tipo ID add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func .)
    FLOAT           reduce using rule 86 (funcion -> tipo ID add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func .)
    CHAR            reduce using rule 86 (funcion -> tipo ID add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func .)
    $end            reduce using rule 86 (funcion -> tipo ID add_fun LP param RP verificar LB var_func statement add_func_dir func_return_param RB end_func .)


state 373

    (110) func_return_param -> RETURN expr SEMICOL .

    RB              reduce using rule 110 (func_return_param -> RETURN expr SEMICOL .)


state 374

    (128) if -> IF LP expression RP check_bool gotof LB statement . RB fill_if
    (129) if -> IF LP expression RP check_bool gotof LB statement . RB goto fill_gotof else

    RB              shift and go to state 378


state 375

    (113) var_row -> VAR tipo ID row IS LP lista2 RP . SEMICOL

    SEMICOL         shift and go to state 379


state 376

    (138) while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB . statement RB goto
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . while statement
    (19) statement -> . for statement
    (20) statement -> . escritura statement
    (21) statement -> . escritura_var statement
    (22) statement -> . lectura statement
    (23) statement -> . func_call statement
    (24) statement -> . ID row SEMICOL
    (25) statement -> . ID matrix SEMICOL
    (26) statement -> . empty
    (27) asignacion -> . ID IS value
    (128) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (129) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (138) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (139) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (148) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (149) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (150) escritura_var -> . PRINT LP any_var RP SEMICOL
    (155) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (156) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (104) func_call -> . ID LP RP SEMICOL
    (105) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (127) empty -> .
    (113) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (120) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 163
    IF              shift and go to state 165
    VAR             shift and go to state 166
    WHILE           shift and go to state 169
    FOR             shift and go to state 170
    PRINT           shift and go to state 171
    READ            shift and go to state 172
    RB              reduce using rule 127 (empty -> .)

  ! ID              [ reduce using rule 127 (empty -> .) ]
  ! IF              [ reduce using rule 127 (empty -> .) ]
  ! VAR             [ reduce using rule 127 (empty -> .) ]
  ! WHILE           [ reduce using rule 127 (empty -> .) ]
  ! FOR             [ reduce using rule 127 (empty -> .) ]
  ! PRINT           [ reduce using rule 127 (empty -> .) ]
  ! READ            [ reduce using rule 127 (empty -> .) ]

    statement                      shift and go to state 380
    asignacion                     shift and go to state 154
    if                             shift and go to state 155
    vars                           shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    escritura                      shift and go to state 159
    escritura_var                  shift and go to state 160
    lectura                        shift and go to state 161
    func_call                      shift and go to state 162
    empty                          shift and go to state 164
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168

state 377

    (139) for -> FOR LP VAR tipo ID IS value SEMICOL . expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (158) expression -> . var_gt
    (159) expression -> . var_lt
    (160) expression -> . var_equal
    (161) expression -> . var_neq
    (162) expression -> . var_geq
    (163) expression -> . var_leq
    (164) expression -> . expr
    (165) expression -> . TRUE
    (166) expression -> . FALSE
    (167) expression -> . ID
    (169) var_gt -> . expr GT expr
    (168) var_lt -> . expr LT expr
    (172) var_equal -> . expr EQUAL expr
    (173) var_neq -> . expr NEQ expr
    (171) var_geq -> . expr GEQ expr
    (170) var_leq -> . expr LEQ expr
    (175) expr -> . expr MUL expr
    (176) expr -> . expr DIV expr
    (177) expr -> . expr PLUS expr
    (178) expr -> . expr MINUS expr
    (179) expr -> . CTE_I
    (180) expr -> . CTE_F
    (181) expr -> . ID

    TRUE            shift and go to state 231
    FALSE           shift and go to state 232
    ID              shift and go to state 233
    CTE_I           shift and go to state 234
    CTE_F           shift and go to state 235

    expression                     shift and go to state 381
    var_gt                         shift and go to state 224
    var_lt                         shift and go to state 225
    var_equal                      shift and go to state 226
    var_neq                        shift and go to state 227
    var_geq                        shift and go to state 228
    var_leq                        shift and go to state 229
    expr                           shift and go to state 230

state 378

    (128) if -> IF LP expression RP check_bool gotof LB statement RB . fill_if
    (129) if -> IF LP expression RP check_bool gotof LB statement RB . goto fill_gotof else
    (136) fill_if -> .
    (131) goto -> .

    ID              reduce using rule 136 (fill_if -> .)
    IF              reduce using rule 136 (fill_if -> .)
    VAR             reduce using rule 136 (fill_if -> .)
    WHILE           reduce using rule 136 (fill_if -> .)
    FOR             reduce using rule 136 (fill_if -> .)
    PRINT           reduce using rule 136 (fill_if -> .)
    READ            reduce using rule 136 (fill_if -> .)
    RETURN          reduce using rule 136 (fill_if -> .)
    RB              reduce using rule 136 (fill_if -> .)
    ELSE            reduce using rule 131 (goto -> .)

    fill_if                        shift and go to state 382
    goto                           shift and go to state 383

state 379

    (113) var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .

    VAR             reduce using rule 113 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    ID              reduce using rule 113 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    IF              reduce using rule 113 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    WHILE           reduce using rule 113 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    FOR             reduce using rule 113 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    PRINT           reduce using rule 113 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    READ            reduce using rule 113 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    RETURN          reduce using rule 113 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    RB              reduce using rule 113 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)


state 380

    (138) while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB statement . RB goto

    RB              shift and go to state 384


state 381

    (139) for -> FOR LP VAR tipo ID IS value SEMICOL expression . check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (182) check_bool -> .

    SEMICOL         reduce using rule 182 (check_bool -> .)

    check_bool                     shift and go to state 385

state 382

    (128) if -> IF LP expression RP check_bool gotof LB statement RB fill_if .

    ID              reduce using rule 128 (if -> IF LP expression RP check_bool gotof LB statement RB fill_if .)
    IF              reduce using rule 128 (if -> IF LP expression RP check_bool gotof LB statement RB fill_if .)
    VAR             reduce using rule 128 (if -> IF LP expression RP check_bool gotof LB statement RB fill_if .)
    WHILE           reduce using rule 128 (if -> IF LP expression RP check_bool gotof LB statement RB fill_if .)
    FOR             reduce using rule 128 (if -> IF LP expression RP check_bool gotof LB statement RB fill_if .)
    PRINT           reduce using rule 128 (if -> IF LP expression RP check_bool gotof LB statement RB fill_if .)
    READ            reduce using rule 128 (if -> IF LP expression RP check_bool gotof LB statement RB fill_if .)
    RETURN          reduce using rule 128 (if -> IF LP expression RP check_bool gotof LB statement RB fill_if .)
    RB              reduce using rule 128 (if -> IF LP expression RP check_bool gotof LB statement RB fill_if .)


state 383

    (129) if -> IF LP expression RP check_bool gotof LB statement RB goto . fill_gotof else
    (134) fill_gotof -> .

    ELSE            reduce using rule 134 (fill_gotof -> .)

    fill_gotof                     shift and go to state 386

state 384

    (138) while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB . goto
    (131) goto -> .

    ID              reduce using rule 131 (goto -> .)
    IF              reduce using rule 131 (goto -> .)
    VAR             reduce using rule 131 (goto -> .)
    WHILE           reduce using rule 131 (goto -> .)
    FOR             reduce using rule 131 (goto -> .)
    PRINT           reduce using rule 131 (goto -> .)
    READ            reduce using rule 131 (goto -> .)
    RETURN          reduce using rule 131 (goto -> .)
    RB              reduce using rule 131 (goto -> .)

    goto                           shift and go to state 387

state 385

    (139) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool . gotof_for SEMICOL ID opers RP LB statement RB goto
    (140) gotof_for -> .

    SEMICOL         reduce using rule 140 (gotof_for -> .)

    gotof_for                      shift and go to state 388

state 386

    (129) if -> IF LP expression RP check_bool gotof LB statement RB goto fill_gotof . else
    (130) else -> . ELSE guarda_num_salto LB statement RB fill_goto_else

    ELSE            shift and go to state 390

    else                           shift and go to state 389

state 387

    (138) while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .

    ID              reduce using rule 138 (while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    IF              reduce using rule 138 (while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    VAR             reduce using rule 138 (while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    WHILE           reduce using rule 138 (while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    FOR             reduce using rule 138 (while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    PRINT           reduce using rule 138 (while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    READ            reduce using rule 138 (while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    RETURN          reduce using rule 138 (while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    RB              reduce using rule 138 (while -> WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)


state 388

    (139) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for . SEMICOL ID opers RP LB statement RB goto

    SEMICOL         shift and go to state 391


state 389

    (129) if -> IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else .

    ID              reduce using rule 129 (if -> IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else .)
    IF              reduce using rule 129 (if -> IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else .)
    VAR             reduce using rule 129 (if -> IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else .)
    WHILE           reduce using rule 129 (if -> IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else .)
    FOR             reduce using rule 129 (if -> IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else .)
    PRINT           reduce using rule 129 (if -> IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else .)
    READ            reduce using rule 129 (if -> IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else .)
    RETURN          reduce using rule 129 (if -> IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else .)
    RB              reduce using rule 129 (if -> IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else .)


state 390

    (130) else -> ELSE . guarda_num_salto LB statement RB fill_goto_else
    (137) guarda_num_salto -> .

    LB              reduce using rule 137 (guarda_num_salto -> .)

    guarda_num_salto               shift and go to state 392

state 391

    (139) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL . ID opers RP LB statement RB goto

    ID              shift and go to state 393


state 392

    (130) else -> ELSE guarda_num_salto . LB statement RB fill_goto_else

    LB              shift and go to state 394


state 393

    (139) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID . opers RP LB statement RB goto
    (141) opers -> . IS value
    (142) opers -> . PLUS IS value
    (143) opers -> . MINUS IS value
    (144) opers -> . DIV IS value
    (145) opers -> . MUL IS value
    (146) opers -> . PLUS PLUS
    (147) opers -> . MINUS MINUS

    IS              shift and go to state 395
    PLUS            shift and go to state 397
    MINUS           shift and go to state 398
    DIV             shift and go to state 399
    MUL             shift and go to state 400

    opers                          shift and go to state 396

state 394

    (130) else -> ELSE guarda_num_salto LB . statement RB fill_goto_else
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . while statement
    (19) statement -> . for statement
    (20) statement -> . escritura statement
    (21) statement -> . escritura_var statement
    (22) statement -> . lectura statement
    (23) statement -> . func_call statement
    (24) statement -> . ID row SEMICOL
    (25) statement -> . ID matrix SEMICOL
    (26) statement -> . empty
    (27) asignacion -> . ID IS value
    (128) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (129) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (138) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (139) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (148) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (149) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (150) escritura_var -> . PRINT LP any_var RP SEMICOL
    (155) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (156) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (104) func_call -> . ID LP RP SEMICOL
    (105) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (127) empty -> .
    (113) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (120) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 163
    IF              shift and go to state 165
    VAR             shift and go to state 166
    WHILE           shift and go to state 169
    FOR             shift and go to state 170
    PRINT           shift and go to state 171
    READ            shift and go to state 172
    RB              reduce using rule 127 (empty -> .)

  ! ID              [ reduce using rule 127 (empty -> .) ]
  ! IF              [ reduce using rule 127 (empty -> .) ]
  ! VAR             [ reduce using rule 127 (empty -> .) ]
  ! WHILE           [ reduce using rule 127 (empty -> .) ]
  ! FOR             [ reduce using rule 127 (empty -> .) ]
  ! PRINT           [ reduce using rule 127 (empty -> .) ]
  ! READ            [ reduce using rule 127 (empty -> .) ]

    statement                      shift and go to state 401
    asignacion                     shift and go to state 154
    if                             shift and go to state 155
    vars                           shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    escritura                      shift and go to state 159
    escritura_var                  shift and go to state 160
    lectura                        shift and go to state 161
    func_call                      shift and go to state 162
    empty                          shift and go to state 164
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168

state 395

    (141) opers -> IS . value
    (75) value -> . CTE_F
    (76) value -> . CTE_I
    (77) value -> . ID
    (78) value -> . CTE_C
    (79) value -> . COMILLA ID COMILLA
    (80) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88
    ID              shift and go to state 85
    CTE_C           shift and go to state 89
    COMILLA         shift and go to state 90
    COMILLAS        shift and go to state 91

    value                          shift and go to state 402

state 396

    (139) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers . RP LB statement RB goto

    RP              shift and go to state 403


state 397

    (142) opers -> PLUS . IS value
    (146) opers -> PLUS . PLUS

    IS              shift and go to state 405
    PLUS            shift and go to state 404


state 398

    (143) opers -> MINUS . IS value
    (147) opers -> MINUS . MINUS

    IS              shift and go to state 407
    MINUS           shift and go to state 406


state 399

    (144) opers -> DIV . IS value

    IS              shift and go to state 408


state 400

    (145) opers -> MUL . IS value

    IS              shift and go to state 409


state 401

    (130) else -> ELSE guarda_num_salto LB statement . RB fill_goto_else

    RB              shift and go to state 410


state 402

    (141) opers -> IS value .

    RP              reduce using rule 141 (opers -> IS value .)


state 403

    (139) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP . LB statement RB goto

    LB              shift and go to state 411


state 404

    (146) opers -> PLUS PLUS .

    RP              reduce using rule 146 (opers -> PLUS PLUS .)


state 405

    (142) opers -> PLUS IS . value
    (75) value -> . CTE_F
    (76) value -> . CTE_I
    (77) value -> . ID
    (78) value -> . CTE_C
    (79) value -> . COMILLA ID COMILLA
    (80) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88
    ID              shift and go to state 85
    CTE_C           shift and go to state 89
    COMILLA         shift and go to state 90
    COMILLAS        shift and go to state 91

    value                          shift and go to state 412

state 406

    (147) opers -> MINUS MINUS .

    RP              reduce using rule 147 (opers -> MINUS MINUS .)


state 407

    (143) opers -> MINUS IS . value
    (75) value -> . CTE_F
    (76) value -> . CTE_I
    (77) value -> . ID
    (78) value -> . CTE_C
    (79) value -> . COMILLA ID COMILLA
    (80) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88
    ID              shift and go to state 85
    CTE_C           shift and go to state 89
    COMILLA         shift and go to state 90
    COMILLAS        shift and go to state 91

    value                          shift and go to state 413

state 408

    (144) opers -> DIV IS . value
    (75) value -> . CTE_F
    (76) value -> . CTE_I
    (77) value -> . ID
    (78) value -> . CTE_C
    (79) value -> . COMILLA ID COMILLA
    (80) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88
    ID              shift and go to state 85
    CTE_C           shift and go to state 89
    COMILLA         shift and go to state 90
    COMILLAS        shift and go to state 91

    value                          shift and go to state 414

state 409

    (145) opers -> MUL IS . value
    (75) value -> . CTE_F
    (76) value -> . CTE_I
    (77) value -> . ID
    (78) value -> . CTE_C
    (79) value -> . COMILLA ID COMILLA
    (80) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88
    ID              shift and go to state 85
    CTE_C           shift and go to state 89
    COMILLA         shift and go to state 90
    COMILLAS        shift and go to state 91

    value                          shift and go to state 415

state 410

    (130) else -> ELSE guarda_num_salto LB statement RB . fill_goto_else
    (133) fill_goto_else -> .

    ID              reduce using rule 133 (fill_goto_else -> .)
    IF              reduce using rule 133 (fill_goto_else -> .)
    VAR             reduce using rule 133 (fill_goto_else -> .)
    WHILE           reduce using rule 133 (fill_goto_else -> .)
    FOR             reduce using rule 133 (fill_goto_else -> .)
    PRINT           reduce using rule 133 (fill_goto_else -> .)
    READ            reduce using rule 133 (fill_goto_else -> .)
    RETURN          reduce using rule 133 (fill_goto_else -> .)
    RB              reduce using rule 133 (fill_goto_else -> .)

    fill_goto_else                 shift and go to state 416

state 411

    (139) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB . statement RB goto
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . while statement
    (19) statement -> . for statement
    (20) statement -> . escritura statement
    (21) statement -> . escritura_var statement
    (22) statement -> . lectura statement
    (23) statement -> . func_call statement
    (24) statement -> . ID row SEMICOL
    (25) statement -> . ID matrix SEMICOL
    (26) statement -> . empty
    (27) asignacion -> . ID IS value
    (128) if -> . IF LP expression RP check_bool gotof LB statement RB fill_if
    (129) if -> . IF LP expression RP check_bool gotof LB statement RB goto fill_gotof else
    (28) vars -> . VAR tipo vars1
    (29) vars -> . VAR tipo vars2
    (30) vars -> . VAR tipo vars3
    (31) vars -> . VAR tipo oper_aritmetica
    (32) vars -> . VAR tipo ID row SEMICOL
    (33) vars -> . VAR tipo ID matrix SEMICOL
    (34) vars -> . var_row
    (35) vars -> . var_row vars
    (36) vars -> . var_matrix
    (37) vars -> . var_matrix vars
    (38) vars -> . empty
    (138) while -> . WHILE guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (139) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (148) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (149) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (150) escritura_var -> . PRINT LP any_var RP SEMICOL
    (155) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (156) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (104) func_call -> . ID LP RP SEMICOL
    (105) func_call -> . ID LP func_era func_call_param RP SEMICOL
    (127) empty -> .
    (113) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (120) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
    ID              shift and go to state 163
    IF              shift and go to state 165
    VAR             shift and go to state 166
    WHILE           shift and go to state 169
    FOR             shift and go to state 170
    PRINT           shift and go to state 171
    READ            shift and go to state 172
    RB              reduce using rule 127 (empty -> .)

  ! ID              [ reduce using rule 127 (empty -> .) ]
  ! IF              [ reduce using rule 127 (empty -> .) ]
  ! VAR             [ reduce using rule 127 (empty -> .) ]
  ! WHILE           [ reduce using rule 127 (empty -> .) ]
  ! FOR             [ reduce using rule 127 (empty -> .) ]
  ! PRINT           [ reduce using rule 127 (empty -> .) ]
  ! READ            [ reduce using rule 127 (empty -> .) ]

    statement                      shift and go to state 417
    asignacion                     shift and go to state 154
    if                             shift and go to state 155
    vars                           shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    escritura                      shift and go to state 159
    escritura_var                  shift and go to state 160
    lectura                        shift and go to state 161
    func_call                      shift and go to state 162
    empty                          shift and go to state 164
    var_row                        shift and go to state 167
    var_matrix                     shift and go to state 168

state 412

    (142) opers -> PLUS IS value .

    RP              reduce using rule 142 (opers -> PLUS IS value .)


state 413

    (143) opers -> MINUS IS value .

    RP              reduce using rule 143 (opers -> MINUS IS value .)


state 414

    (144) opers -> DIV IS value .

    RP              reduce using rule 144 (opers -> DIV IS value .)


state 415

    (145) opers -> MUL IS value .

    RP              reduce using rule 145 (opers -> MUL IS value .)


state 416

    (130) else -> ELSE guarda_num_salto LB statement RB fill_goto_else .

    ID              reduce using rule 130 (else -> ELSE guarda_num_salto LB statement RB fill_goto_else .)
    IF              reduce using rule 130 (else -> ELSE guarda_num_salto LB statement RB fill_goto_else .)
    VAR             reduce using rule 130 (else -> ELSE guarda_num_salto LB statement RB fill_goto_else .)
    WHILE           reduce using rule 130 (else -> ELSE guarda_num_salto LB statement RB fill_goto_else .)
    FOR             reduce using rule 130 (else -> ELSE guarda_num_salto LB statement RB fill_goto_else .)
    PRINT           reduce using rule 130 (else -> ELSE guarda_num_salto LB statement RB fill_goto_else .)
    READ            reduce using rule 130 (else -> ELSE guarda_num_salto LB statement RB fill_goto_else .)
    RETURN          reduce using rule 130 (else -> ELSE guarda_num_salto LB statement RB fill_goto_else .)
    RB              reduce using rule 130 (else -> ELSE guarda_num_salto LB statement RB fill_goto_else .)


state 417

    (139) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement . RB goto

    RB              shift and go to state 418


state 418

    (139) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB . goto
    (131) goto -> .

    ID              reduce using rule 131 (goto -> .)
    IF              reduce using rule 131 (goto -> .)
    VAR             reduce using rule 131 (goto -> .)
    WHILE           reduce using rule 131 (goto -> .)
    FOR             reduce using rule 131 (goto -> .)
    PRINT           reduce using rule 131 (goto -> .)
    READ            reduce using rule 131 (goto -> .)
    RETURN          reduce using rule 131 (goto -> .)
    RB              reduce using rule 131 (goto -> .)

    goto                           shift and go to state 419

state 419

    (139) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .

    ID              reduce using rule 139 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    IF              reduce using rule 139 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    VAR             reduce using rule 139 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    WHILE           reduce using rule 139 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    FOR             reduce using rule 139 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    PRINT           reduce using rule 139 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    READ            reduce using rule 139 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    RETURN          reduce using rule 139 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    RB              reduce using rule 139 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VOID in state 4 resolved as shift
WARNING: shift/reduce conflict for INT in state 4 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 4 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 4 resolved as shift
WARNING: shift/reduce conflict for VOID in state 21 resolved as shift
WARNING: shift/reduce conflict for INT in state 21 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 21 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 21 resolved as shift
WARNING: shift/reduce conflict for ID in state 28 resolved as shift
WARNING: shift/reduce conflict for VOID in state 39 resolved as shift
WARNING: shift/reduce conflict for INT in state 39 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 39 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 39 resolved as shift
WARNING: shift/reduce conflict for VOID in state 59 resolved as shift
WARNING: shift/reduce conflict for INT in state 59 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 59 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 59 resolved as shift
WARNING: shift/reduce conflict for RP in state 75 resolved as shift
WARNING: shift/reduce conflict for RP in state 76 resolved as shift
WARNING: shift/reduce conflict for RP in state 77 resolved as shift
WARNING: shift/reduce conflict for RP in state 78 resolved as shift
WARNING: shift/reduce conflict for ID in state 133 resolved as shift
WARNING: shift/reduce conflict for IF in state 133 resolved as shift
WARNING: shift/reduce conflict for VAR in state 133 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 133 resolved as shift
WARNING: shift/reduce conflict for FOR in state 133 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 133 resolved as shift
WARNING: shift/reduce conflict for READ in state 133 resolved as shift
WARNING: shift/reduce conflict for ID in state 134 resolved as shift
WARNING: shift/reduce conflict for IF in state 134 resolved as shift
WARNING: shift/reduce conflict for VAR in state 134 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 134 resolved as shift
WARNING: shift/reduce conflict for FOR in state 134 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 134 resolved as shift
WARNING: shift/reduce conflict for READ in state 134 resolved as shift
WARNING: shift/reduce conflict for VAR in state 145 resolved as shift
WARNING: shift/reduce conflict for VAR in state 152 resolved as shift
WARNING: shift/reduce conflict for ID in state 155 resolved as shift
WARNING: shift/reduce conflict for IF in state 155 resolved as shift
WARNING: shift/reduce conflict for VAR in state 155 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 155 resolved as shift
WARNING: shift/reduce conflict for FOR in state 155 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 155 resolved as shift
WARNING: shift/reduce conflict for READ in state 155 resolved as shift
WARNING: shift/reduce conflict for ID in state 156 resolved as shift
WARNING: shift/reduce conflict for IF in state 156 resolved as shift
WARNING: shift/reduce conflict for VAR in state 156 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 156 resolved as shift
WARNING: shift/reduce conflict for FOR in state 156 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 156 resolved as shift
WARNING: shift/reduce conflict for READ in state 156 resolved as shift
WARNING: shift/reduce conflict for ID in state 157 resolved as shift
WARNING: shift/reduce conflict for IF in state 157 resolved as shift
WARNING: shift/reduce conflict for VAR in state 157 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 157 resolved as shift
WARNING: shift/reduce conflict for FOR in state 157 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 157 resolved as shift
WARNING: shift/reduce conflict for READ in state 157 resolved as shift
WARNING: shift/reduce conflict for ID in state 158 resolved as shift
WARNING: shift/reduce conflict for IF in state 158 resolved as shift
WARNING: shift/reduce conflict for VAR in state 158 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 158 resolved as shift
WARNING: shift/reduce conflict for FOR in state 158 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 158 resolved as shift
WARNING: shift/reduce conflict for READ in state 158 resolved as shift
WARNING: shift/reduce conflict for ID in state 159 resolved as shift
WARNING: shift/reduce conflict for IF in state 159 resolved as shift
WARNING: shift/reduce conflict for VAR in state 159 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 159 resolved as shift
WARNING: shift/reduce conflict for FOR in state 159 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 159 resolved as shift
WARNING: shift/reduce conflict for READ in state 159 resolved as shift
WARNING: shift/reduce conflict for ID in state 160 resolved as shift
WARNING: shift/reduce conflict for IF in state 160 resolved as shift
WARNING: shift/reduce conflict for VAR in state 160 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 160 resolved as shift
WARNING: shift/reduce conflict for FOR in state 160 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 160 resolved as shift
WARNING: shift/reduce conflict for READ in state 160 resolved as shift
WARNING: shift/reduce conflict for ID in state 161 resolved as shift
WARNING: shift/reduce conflict for IF in state 161 resolved as shift
WARNING: shift/reduce conflict for VAR in state 161 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 161 resolved as shift
WARNING: shift/reduce conflict for FOR in state 161 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 161 resolved as shift
WARNING: shift/reduce conflict for READ in state 161 resolved as shift
WARNING: shift/reduce conflict for ID in state 162 resolved as shift
WARNING: shift/reduce conflict for IF in state 162 resolved as shift
WARNING: shift/reduce conflict for VAR in state 162 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 162 resolved as shift
WARNING: shift/reduce conflict for FOR in state 162 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 162 resolved as shift
WARNING: shift/reduce conflict for READ in state 162 resolved as shift
WARNING: shift/reduce conflict for VAR in state 167 resolved as shift
WARNING: shift/reduce conflict for VAR in state 167 resolved as shift
WARNING: shift/reduce conflict for VAR in state 168 resolved as shift
WARNING: shift/reduce conflict for VAR in state 168 resolved as shift
WARNING: shift/reduce conflict for ID in state 177 resolved as shift
WARNING: shift/reduce conflict for IF in state 177 resolved as shift
WARNING: shift/reduce conflict for VAR in state 177 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 177 resolved as shift
WARNING: shift/reduce conflict for FOR in state 177 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 177 resolved as shift
WARNING: shift/reduce conflict for READ in state 177 resolved as shift
WARNING: shift/reduce conflict for VAR in state 180 resolved as shift
WARNING: shift/reduce conflict for VAR in state 182 resolved as shift
WARNING: shift/reduce conflict for ID in state 183 resolved as shift
WARNING: shift/reduce conflict for IF in state 183 resolved as shift
WARNING: shift/reduce conflict for VAR in state 183 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 183 resolved as shift
WARNING: shift/reduce conflict for FOR in state 183 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 183 resolved as shift
WARNING: shift/reduce conflict for READ in state 183 resolved as shift
WARNING: shift/reduce conflict for ID in state 185 resolved as shift
WARNING: shift/reduce conflict for IF in state 185 resolved as shift
WARNING: shift/reduce conflict for VAR in state 185 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 185 resolved as shift
WARNING: shift/reduce conflict for FOR in state 185 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 185 resolved as shift
WARNING: shift/reduce conflict for READ in state 185 resolved as shift
WARNING: shift/reduce conflict for ID in state 199 resolved as shift
WARNING: shift/reduce conflict for ID in state 212 resolved as shift
WARNING: shift/reduce conflict for IF in state 212 resolved as shift
WARNING: shift/reduce conflict for VAR in state 212 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 212 resolved as shift
WARNING: shift/reduce conflict for FOR in state 212 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 212 resolved as shift
WARNING: shift/reduce conflict for READ in state 212 resolved as shift
WARNING: shift/reduce conflict for ID in state 213 resolved as shift
WARNING: shift/reduce conflict for IF in state 213 resolved as shift
WARNING: shift/reduce conflict for VAR in state 213 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 213 resolved as shift
WARNING: shift/reduce conflict for FOR in state 213 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 213 resolved as shift
WARNING: shift/reduce conflict for READ in state 213 resolved as shift
WARNING: shift/reduce conflict for CTE_I in state 286 resolved as shift
WARNING: shift/reduce conflict for CTE_F in state 286 resolved as shift
WARNING: shift/reduce conflict for ID in state 286 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 286 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 286 resolved as shift
WARNING: shift/reduce conflict for ID in state 361 resolved as shift
WARNING: shift/reduce conflict for IF in state 361 resolved as shift
WARNING: shift/reduce conflict for VAR in state 361 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 361 resolved as shift
WARNING: shift/reduce conflict for FOR in state 361 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 361 resolved as shift
WARNING: shift/reduce conflict for READ in state 361 resolved as shift
WARNING: shift/reduce conflict for ID in state 376 resolved as shift
WARNING: shift/reduce conflict for IF in state 376 resolved as shift
WARNING: shift/reduce conflict for VAR in state 376 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 376 resolved as shift
WARNING: shift/reduce conflict for FOR in state 376 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 376 resolved as shift
WARNING: shift/reduce conflict for READ in state 376 resolved as shift
WARNING: shift/reduce conflict for ID in state 394 resolved as shift
WARNING: shift/reduce conflict for IF in state 394 resolved as shift
WARNING: shift/reduce conflict for VAR in state 394 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 394 resolved as shift
WARNING: shift/reduce conflict for FOR in state 394 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 394 resolved as shift
WARNING: shift/reduce conflict for READ in state 394 resolved as shift
WARNING: shift/reduce conflict for ID in state 411 resolved as shift
WARNING: shift/reduce conflict for IF in state 411 resolved as shift
WARNING: shift/reduce conflict for VAR in state 411 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 411 resolved as shift
WARNING: shift/reduce conflict for FOR in state 411 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 411 resolved as shift
WARNING: shift/reduce conflict for READ in state 411 resolved as shift
WARNING: reduce/reduce conflict in state 4 resolved using rule (quad_main -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 4
WARNING: reduce/reduce conflict in state 6 resolved using rule (quad_main -> <empty>)
WARNING: rejected rule (end -> <empty>) in state 6
WARNING: reduce/reduce conflict in state 11 resolved using rule (varsG -> var_rowG)
WARNING: rejected rule (empty -> <empty>) in state 11
WARNING: reduce/reduce conflict in state 12 resolved using rule (varsG -> var_matrixG)
WARNING: rejected rule (empty -> <empty>) in state 12
WARNING: reduce/reduce conflict in state 13 resolved using rule (varsG -> declarar_func)
WARNING: rejected rule (empty -> <empty>) in state 13
WARNING: reduce/reduce conflict in state 14 resolved using rule (funciones -> empty)
WARNING: rejected rule (varsG -> empty) in state 14
WARNING: reduce/reduce conflict in state 52 resolved using rule (vars2_1G -> empty)
WARNING: rejected rule (vars3_1G -> empty) in state 52
WARNING: reduce/reduce conflict in state 68 resolved using rule (vars1G -> ID SEMICOL)
WARNING: rejected rule (vars3G -> ID SEMICOL) in state 68
WARNING: reduce/reduce conflict in state 164 resolved using rule (statement -> empty)
WARNING: rejected rule (vars -> empty) in state 164
WARNING: reduce/reduce conflict in state 167 resolved using rule (vars -> var_row)
WARNING: rejected rule (empty -> <empty>) in state 167
WARNING: reduce/reduce conflict in state 168 resolved using rule (vars -> var_matrix)
WARNING: rejected rule (empty -> <empty>) in state 168
WARNING: reduce/reduce conflict in state 233 resolved using rule (expression -> ID)
WARNING: rejected rule (expr -> ID) in state 233
WARNING: reduce/reduce conflict in state 243 resolved using rule (vars2_1 -> empty)
WARNING: rejected rule (vars3_1 -> empty) in state 243
WARNING: reduce/reduce conflict in state 277 resolved using rule (vars1 -> ID SEMICOL)
WARNING: rejected rule (vars3 -> ID SEMICOL) in state 277
WARNING: reduce/reduce conflict in state 286 resolved using rule (empty -> <empty>)
WARNING: rejected rule (expression -> expr) in state 286
WARNING: reduce/reduce conflict in state 289 resolved using rule (expression -> ID)
WARNING: rejected rule (expr -> ID) in state 289
WARNING: reduce/reduce conflict in state 319 resolved using rule (value -> ID)
WARNING: rejected rule (expr -> ID) in state 319
WARNING: reduce/reduce conflict in state 322 resolved using rule (value -> CTE_F)
WARNING: rejected rule (expr -> CTE_F) in state 322
WARNING: reduce/reduce conflict in state 323 resolved using rule (value -> CTE_I)
WARNING: rejected rule (expr -> CTE_I) in state 323
WARNING: Rule (vars3_1G -> empty) is never reduced
WARNING: Rule (vars3G -> ID SEMICOL) is never reduced
WARNING: Rule (vars3_1 -> empty) is never reduced
WARNING: Rule (vars3 -> ID SEMICOL) is never reduced
