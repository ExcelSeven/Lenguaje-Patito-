Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BEGIN
    BOOL
    COL
    CONST
    CTE_B
    CTE_S
    DETERMATRIZ
    DO
    DOT
    ELIF
    END
    EOF
    GLOBAL
    INPUT
    INVERMATRIZ
    LET
    LOCAL
    NOT
    OR
    RETURN
    SELECT
    SWITCH
    THEN
    TRANSMATRIZ

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SEMICOL programa1
Rule 2     programa1 -> varsG funciones
Rule 3     programa1 -> varsG funciones main funciones
Rule 4     programa1 -> empty
Rule 5     funciones -> funcion funciones
Rule 6     funciones -> empty
Rule 7     main -> tipo MAIN LP RP LB statement RB
Rule 8     main -> VOID tipo MAIN LP RP LB statement RB
Rule 9     statement -> asignacion SEMICOL statement
Rule 10    statement -> if statement
Rule 11    statement -> vars statement
Rule 12    statement -> while statement
Rule 13    statement -> for statement
Rule 14    statement -> escritura statement
Rule 15    statement -> escritura_var statement
Rule 16    statement -> lectura statement
Rule 17    statement -> ID row SEMICOL
Rule 18    statement -> ID matrix SEMICOL
Rule 19    statement -> empty
Rule 20    asignacion -> ID IS value
Rule 21    vars -> VAR tipo vars1
Rule 22    vars -> VAR tipo vars2
Rule 23    vars -> VAR tipo vars3
Rule 24    vars -> VAR tipo oper_aritmetica
Rule 25    vars -> VAR tipo ID row SEMICOL
Rule 26    vars -> VAR tipo ID matrix SEMICOL
Rule 27    vars -> varsG
Rule 28    vars -> var_row
Rule 29    vars -> var_row vars
Rule 30    vars -> var_matrix
Rule 31    vars -> var_matrix vars
Rule 32    vars -> empty
Rule 33    vars1 -> ID SEMICOL
Rule 34    vars1 -> ID SEMICOL vars
Rule 35    vars2 -> ID IS value COMMA vars2
Rule 36    vars2 -> ID IS value COMMA
Rule 37    vars2 -> ID IS value SEMICOL vars
Rule 38    vars3 -> ID COMMA vars3
Rule 39    vars3 -> ID SEMICOL vars
Rule 40    vars3 -> ID SEMICOL
Rule 41    varsG -> VAR tipo vars1G
Rule 42    varsG -> VAR tipo vars2G
Rule 43    varsG -> VAR tipo vars3G
Rule 44    varsG -> VAR LB varsG RB
Rule 45    varsG -> var_rowG
Rule 46    varsG -> var_rowG varsG
Rule 47    varsG -> var_matrixG
Rule 48    varsG -> var_matrixG varsG
Rule 49    varsG -> declarar_func varsG
Rule 50    varsG -> empty
Rule 51    vars1G -> ID SEMICOL
Rule 52    vars1G -> ID SEMICOL varsG
Rule 53    vars2G -> ID IS value check_type COMMA vars2G
Rule 54    vars2G -> ID IS value check_type SEMICOL varsG
Rule 55    vars2G -> empty
Rule 56    vars3G -> ID COMMA vars3G
Rule 57    vars3G -> ID SEMICOL varsG
Rule 58    vars3G -> ID SEMICOL
Rule 59    tipo -> INT
Rule 60    tipo -> FLOAT
Rule 61    tipo -> CHAR
Rule 62    value -> CTE_F
Rule 63    value -> CTE_I
Rule 64    value -> ID
Rule 65    value -> CTE_C
Rule 66    value -> COMILLA ID COMILLA
Rule 67    value -> COMILLAS ID COMILLAS
Rule 68    check_type -> <empty>
Rule 69    funcion -> VOID ID LP param RP verificar LB var_func statement RB
Rule 70    funcion -> tipo ID LP param RP verificar LB var_func statement RB
Rule 71    funcion -> VOID ID LP RP verificar2 LB var_func2 statement RB
Rule 72    funcion -> tipo ID LP RP verificar2 LB var_func2 statement RB
Rule 73    verificar -> <empty>
Rule 74    verificar2 -> <empty>
Rule 75    var_func -> vars
Rule 76    var_func2 -> vars
Rule 77    param -> tipo ID COMMA param
Rule 78    param -> tipo ID param
Rule 79    param -> empty
Rule 80    declarar_func -> FUNC tipo ID SEMICOL
Rule 81    declarar_func -> FUNC VOID ID SEMICOL
Rule 82    declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL
Rule 83    declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL
Rule 84    declarar_param -> tipo COMMA declarar_param
Rule 85    declarar_param -> tipo declarar_param
Rule 86    declarar_param -> empty
Rule 87    var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL
Rule 88    var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL
Rule 89    elem_lista -> value
Rule 90    elem_lista -> empty
Rule 91    lista2 -> elem_lista COMMA lista2
Rule 92    lista2 -> elem_lista COMMA elem_lista
Rule 93    row -> LC CTE_I RC
Rule 94    var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL
Rule 95    var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL
Rule 96    matrix2 -> LP lista2 RP COMMA matrix2
Rule 97    matrix2 -> LP lista2 RP COMMA LP lista2 RP
Rule 98    row_list -> row COMMA row_list
Rule 99    row_list -> row COMMA row
Rule 100   matrix -> row row
Rule 101   empty -> <empty>
Rule 102   if -> IF LP expression RP check_bool gotof LB statement RB
Rule 103   if -> IF LP expression RP check_bool gotof LB statement RB goto elseif
Rule 104   if -> IF LP expression RP check_bool gotof LB statement RB goto else
Rule 105   elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
Rule 106   elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto elseif
Rule 107   elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto else
Rule 108   else -> ELSE guarda_num_salto LB statement RB guarda_num_salto
Rule 109   goto -> <empty>
Rule 110   gotof -> <empty>
Rule 111   while -> WHILE LP expression RP check_bool gotof LB statement RB goto
Rule 112   for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
Rule 113   gotof_for -> <empty>
Rule 114   opers -> IS value
Rule 115   opers -> PLUS IS value
Rule 116   opers -> MINUS IS value
Rule 117   opers -> DIV IS value
Rule 118   opers -> MUL IS value
Rule 119   opers -> PLUS PLUS
Rule 120   opers -> MINUS MINUS
Rule 121   escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL
Rule 122   escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL
Rule 123   escritura_var -> PRINT LP any_var RP SEMICOL
Rule 124   any_var -> ID
Rule 125   any -> expr any
Rule 126   any -> expression any
Rule 127   any -> empty
Rule 128   lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL
Rule 129   lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
Rule 130   any_lectura -> ID
Rule 131   expression -> var_gt
Rule 132   expression -> var_lt
Rule 133   expression -> var_equal
Rule 134   expression -> var_neq
Rule 135   expression -> var_geq
Rule 136   expression -> var_leq
Rule 137   expression -> expr
Rule 138   expression -> TRUE
Rule 139   expression -> FALSE
Rule 140   expression -> ID
Rule 141   var_lt -> expr LT expr
Rule 142   var_gt -> expr GT expr
Rule 143   var_leq -> expr LEQ expr
Rule 144   var_geq -> expr GEQ expr
Rule 145   var_equal -> expr EQUAL expr
Rule 146   var_neq -> expr NEQ expr
Rule 147   oper_aritmetica -> ID IS expr SEMICOL
Rule 148   expr -> expr MUL expr
Rule 149   expr -> expr DIV expr
Rule 150   expr -> expr PLUS expr
Rule 151   expr -> expr MINUS expr
Rule 152   expr -> CTE_I
Rule 153   expr -> CTE_F
Rule 154   expr -> ID
Rule 155   check_bool -> <empty>
Rule 156   guarda_num_salto -> <empty>

Terminals, with rules where they appear

AND                  : 
BEGIN                : 
BOOL                 : 
CHAR                 : 61
COL                  : 
COMILLA              : 66 66 121 121 128 128
COMILLAS             : 67 67 122 122 129 129
COMMA                : 35 36 38 53 56 77 84 91 92 96 97 98 99
CONST                : 
CTE_B                : 
CTE_C                : 65
CTE_F                : 62 153
CTE_I                : 63 93 152
CTE_S                : 
DETERMATRIZ          : 
DIV                  : 117 149
DO                   : 
DOT                  : 
ELIF                 : 
ELSE                 : 108
ELSEIF               : 105 106 107
END                  : 
EOF                  : 
EQUAL                : 145
FALSE                : 139
FLOAT                : 60
FOR                  : 112
FUNC                 : 80 81 82 83
GEQ                  : 144
GLOBAL               : 
GT                   : 142
ID                   : 1 17 18 20 25 26 33 34 35 36 37 38 39 40 51 52 53 54 56 57 58 64 66 67 69 70 71 72 77 78 80 81 82 83 87 88 94 95 112 112 124 130 140 147 154
IF                   : 102 103 104
INPUT                : 
INT                  : 59
INVERMATRIZ          : 
IS                   : 20 35 36 37 53 54 87 88 94 95 112 114 115 116 117 118 147
LB                   : 7 8 44 69 70 71 72 102 103 104 105 106 107 108 111 112
LC                   : 93
LEQ                  : 143
LET                  : 
LOCAL                : 
LP                   : 7 8 69 70 71 72 82 83 87 88 96 97 97 102 103 104 105 106 107 111 112 121 122 123 128 129
LT                   : 141
MAIN                 : 7 8
MINUS                : 116 120 120 151
MUL                  : 118 148
NEQ                  : 146
NOT                  : 
OR                   : 
PLUS                 : 115 119 119 150
PRINT                : 121 122 123
PROGRAM              : 1
RB                   : 7 8 44 69 70 71 72 102 103 104 105 106 107 108 111 112
RC                   : 93
READ                 : 128 129
RETURN               : 
RP                   : 7 8 69 70 71 72 82 83 87 88 96 97 97 102 103 104 105 106 107 111 112 121 122 123 128 129
SELECT               : 
SEMICOL              : 1 9 17 18 25 26 33 34 37 39 40 51 52 54 57 58 80 81 82 83 87 88 94 95 112 112 121 122 123 128 129 147
SWITCH               : 
THEN                 : 
TRANSMATRIZ          : 
TRUE                 : 138
VAR                  : 21 22 23 24 25 26 41 42 43 44 87 88 94 95 112
VOID                 : 8 69 71 81 83
WHILE                : 111
error                : 

Nonterminals, with rules where they appear

any                  : 121 122 125 126
any_lectura          : 128 129
any_var              : 123
asignacion           : 9
check_bool           : 102 103 104 105 106 107 111 112
check_type           : 53 54
declarar_func        : 49
declarar_param       : 82 83 84 85
elem_lista           : 91 92 92
else                 : 104 107
elseif               : 103 106
empty                : 4 6 19 32 50 55 79 86 90 127
escritura            : 14
escritura_var        : 15
expr                 : 125 137 141 141 142 142 143 143 144 144 145 145 146 146 147 148 148 149 149 150 150 151 151
expression           : 102 103 104 105 106 107 111 112 126
for                  : 13
funcion              : 5
funciones            : 2 3 3 5
goto                 : 103 104 105 106 107 111 112
gotof                : 102 103 104 105 106 107 111
gotof_for            : 112
guarda_num_salto     : 105 106 107 108 108
if                   : 10
lectura              : 16
lista2               : 87 88 91 96 97 97
main                 : 3
matrix               : 18 26 94 95
matrix2              : 94 95 96
oper_aritmetica      : 24
opers                : 112
param                : 69 70 77 78
programa             : 0
programa1            : 1
row                  : 17 25 87 88 98 99 99 100 100
row_list             : 98
statement            : 7 8 9 10 11 12 13 14 15 16 69 70 71 72 102 103 104 105 106 107 108 111 112
tipo                 : 7 8 21 22 23 24 25 26 41 42 43 70 72 77 78 80 82 84 85 87 88 94 95 112
value                : 20 35 36 37 53 54 89 112 114 115 116 117 118
var_equal            : 133
var_func             : 69 70
var_func2            : 71 72
var_geq              : 135
var_gt               : 131
var_leq              : 136
var_lt               : 132
var_matrix           : 30 31
var_matrixG          : 47 48
var_neq              : 134
var_row              : 28 29
var_rowG             : 45 46
vars                 : 11 29 31 34 37 39 75 76
vars1                : 21
vars1G               : 41
vars2                : 22 35
vars2G               : 42 53
vars3                : 23 38
vars3G               : 43 56
varsG                : 2 3 27 44 46 48 49 52 54 57
verificar            : 69 70
verificar2           : 71 72
while                : 12

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SEMICOL programa1

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID SEMICOL programa1

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . SEMICOL programa1

    SEMICOL         shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SEMICOL . programa1
    (2) programa1 -> . varsG funciones
    (3) programa1 -> . varsG funciones main funciones
    (4) programa1 -> . empty
    (41) varsG -> . VAR tipo vars1G
    (42) varsG -> . VAR tipo vars2G
    (43) varsG -> . VAR tipo vars3G
    (44) varsG -> . VAR LB varsG RB
    (45) varsG -> . var_rowG
    (46) varsG -> . var_rowG varsG
    (47) varsG -> . var_matrixG
    (48) varsG -> . var_matrixG varsG
    (49) varsG -> . declarar_func varsG
    (50) varsG -> . empty
    (101) empty -> .
    (88) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (80) declarar_func -> . FUNC tipo ID SEMICOL
    (81) declarar_func -> . FUNC VOID ID SEMICOL
    (82) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (83) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL

    VAR             shift and go to state 8
    $end            reduce using rule 101 (empty -> .)
    VOID            reduce using rule 101 (empty -> .)
    INT             reduce using rule 101 (empty -> .)
    FLOAT           reduce using rule 101 (empty -> .)
    CHAR            reduce using rule 101 (empty -> .)
    FUNC            shift and go to state 12

    programa1                      shift and go to state 5
    varsG                          shift and go to state 6
    empty                          shift and go to state 7
    var_rowG                       shift and go to state 9
    var_matrixG                    shift and go to state 10
    declarar_func                  shift and go to state 11

state 5

    (1) programa -> PROGRAM ID SEMICOL programa1 .

    $end            reduce using rule 1 (programa -> PROGRAM ID SEMICOL programa1 .)


state 6

    (2) programa1 -> varsG . funciones
    (3) programa1 -> varsG . funciones main funciones
    (5) funciones -> . funcion funciones
    (6) funciones -> . empty
    (69) funcion -> . VOID ID LP param RP verificar LB var_func statement RB
    (70) funcion -> . tipo ID LP param RP verificar LB var_func statement RB
    (71) funcion -> . VOID ID LP RP verificar2 LB var_func2 statement RB
    (72) funcion -> . tipo ID LP RP verificar2 LB var_func2 statement RB
    (101) empty -> .
    (59) tipo -> . INT
    (60) tipo -> . FLOAT
    (61) tipo -> . CHAR

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    VOID            shift and go to state 16
    $end            reduce using rule 101 (empty -> .)
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

  ! VOID            [ reduce using rule 101 (empty -> .) ]
  ! INT             [ reduce using rule 101 (empty -> .) ]
  ! FLOAT           [ reduce using rule 101 (empty -> .) ]
  ! CHAR            [ reduce using rule 101 (empty -> .) ]

    funciones                      shift and go to state 13
    funcion                        shift and go to state 14
    empty                          shift and go to state 15
    tipo                           shift and go to state 17

state 7

    (4) programa1 -> empty .
    (50) varsG -> empty .

  ! reduce/reduce conflict for $end resolved using rule 4 (programa1 -> empty .)
    $end            reduce using rule 4 (programa1 -> empty .)
    VOID            reduce using rule 50 (varsG -> empty .)
    INT             reduce using rule 50 (varsG -> empty .)
    FLOAT           reduce using rule 50 (varsG -> empty .)
    CHAR            reduce using rule 50 (varsG -> empty .)

  ! $end            [ reduce using rule 50 (varsG -> empty .) ]


state 8

    (41) varsG -> VAR . tipo vars1G
    (42) varsG -> VAR . tipo vars2G
    (43) varsG -> VAR . tipo vars3G
    (44) varsG -> VAR . LB varsG RB
    (88) var_rowG -> VAR . tipo ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> VAR . tipo ID matrix IS matrix2 SEMICOL
    (59) tipo -> . INT
    (60) tipo -> . FLOAT
    (61) tipo -> . CHAR

    LB              shift and go to state 22
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    tipo                           shift and go to state 21

state 9

    (45) varsG -> var_rowG .
    (46) varsG -> var_rowG . varsG
    (41) varsG -> . VAR tipo vars1G
    (42) varsG -> . VAR tipo vars2G
    (43) varsG -> . VAR tipo vars3G
    (44) varsG -> . VAR LB varsG RB
    (45) varsG -> . var_rowG
    (46) varsG -> . var_rowG varsG
    (47) varsG -> . var_matrixG
    (48) varsG -> . var_matrixG varsG
    (49) varsG -> . declarar_func varsG
    (50) varsG -> . empty
    (88) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (80) declarar_func -> . FUNC tipo ID SEMICOL
    (81) declarar_func -> . FUNC VOID ID SEMICOL
    (82) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (83) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL
    (101) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
  ! reduce/reduce conflict for VOID resolved using rule 45 (varsG -> var_rowG .)
  ! reduce/reduce conflict for INT resolved using rule 45 (varsG -> var_rowG .)
  ! reduce/reduce conflict for FLOAT resolved using rule 45 (varsG -> var_rowG .)
  ! reduce/reduce conflict for CHAR resolved using rule 45 (varsG -> var_rowG .)
  ! reduce/reduce conflict for $end resolved using rule 45 (varsG -> var_rowG .)
  ! reduce/reduce conflict for RB resolved using rule 45 (varsG -> var_rowG .)
  ! reduce/reduce conflict for ID resolved using rule 45 (varsG -> var_rowG .)
  ! reduce/reduce conflict for IF resolved using rule 45 (varsG -> var_rowG .)
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for WHILE resolved using rule 45 (varsG -> var_rowG .)
  ! reduce/reduce conflict for FOR resolved using rule 45 (varsG -> var_rowG .)
  ! reduce/reduce conflict for PRINT resolved using rule 45 (varsG -> var_rowG .)
  ! reduce/reduce conflict for READ resolved using rule 45 (varsG -> var_rowG .)
  ! shift/reduce conflict for FUNC resolved as shift
    VOID            reduce using rule 45 (varsG -> var_rowG .)
    INT             reduce using rule 45 (varsG -> var_rowG .)
    FLOAT           reduce using rule 45 (varsG -> var_rowG .)
    CHAR            reduce using rule 45 (varsG -> var_rowG .)
    $end            reduce using rule 45 (varsG -> var_rowG .)
    RB              reduce using rule 45 (varsG -> var_rowG .)
    ID              reduce using rule 45 (varsG -> var_rowG .)
    IF              reduce using rule 45 (varsG -> var_rowG .)
    WHILE           reduce using rule 45 (varsG -> var_rowG .)
    FOR             reduce using rule 45 (varsG -> var_rowG .)
    PRINT           reduce using rule 45 (varsG -> var_rowG .)
    READ            reduce using rule 45 (varsG -> var_rowG .)
    VAR             shift and go to state 8
    FUNC            shift and go to state 12

  ! VAR             [ reduce using rule 45 (varsG -> var_rowG .) ]
  ! FUNC            [ reduce using rule 45 (varsG -> var_rowG .) ]
  ! VOID            [ reduce using rule 101 (empty -> .) ]
  ! INT             [ reduce using rule 101 (empty -> .) ]
  ! FLOAT           [ reduce using rule 101 (empty -> .) ]
  ! CHAR            [ reduce using rule 101 (empty -> .) ]
  ! $end            [ reduce using rule 101 (empty -> .) ]
  ! RB              [ reduce using rule 101 (empty -> .) ]
  ! ID              [ reduce using rule 101 (empty -> .) ]
  ! IF              [ reduce using rule 101 (empty -> .) ]
  ! VAR             [ reduce using rule 101 (empty -> .) ]
  ! WHILE           [ reduce using rule 101 (empty -> .) ]
  ! FOR             [ reduce using rule 101 (empty -> .) ]
  ! PRINT           [ reduce using rule 101 (empty -> .) ]
  ! READ            [ reduce using rule 101 (empty -> .) ]
  ! FUNC            [ reduce using rule 101 (empty -> .) ]

    var_rowG                       shift and go to state 9
    varsG                          shift and go to state 23
    var_matrixG                    shift and go to state 10
    declarar_func                  shift and go to state 11
    empty                          shift and go to state 24

state 10

    (47) varsG -> var_matrixG .
    (48) varsG -> var_matrixG . varsG
    (41) varsG -> . VAR tipo vars1G
    (42) varsG -> . VAR tipo vars2G
    (43) varsG -> . VAR tipo vars3G
    (44) varsG -> . VAR LB varsG RB
    (45) varsG -> . var_rowG
    (46) varsG -> . var_rowG varsG
    (47) varsG -> . var_matrixG
    (48) varsG -> . var_matrixG varsG
    (49) varsG -> . declarar_func varsG
    (50) varsG -> . empty
    (88) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (80) declarar_func -> . FUNC tipo ID SEMICOL
    (81) declarar_func -> . FUNC VOID ID SEMICOL
    (82) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (83) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL
    (101) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
  ! reduce/reduce conflict for VOID resolved using rule 47 (varsG -> var_matrixG .)
  ! reduce/reduce conflict for INT resolved using rule 47 (varsG -> var_matrixG .)
  ! reduce/reduce conflict for FLOAT resolved using rule 47 (varsG -> var_matrixG .)
  ! reduce/reduce conflict for CHAR resolved using rule 47 (varsG -> var_matrixG .)
  ! reduce/reduce conflict for $end resolved using rule 47 (varsG -> var_matrixG .)
  ! reduce/reduce conflict for RB resolved using rule 47 (varsG -> var_matrixG .)
  ! reduce/reduce conflict for ID resolved using rule 47 (varsG -> var_matrixG .)
  ! reduce/reduce conflict for IF resolved using rule 47 (varsG -> var_matrixG .)
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for WHILE resolved using rule 47 (varsG -> var_matrixG .)
  ! reduce/reduce conflict for FOR resolved using rule 47 (varsG -> var_matrixG .)
  ! reduce/reduce conflict for PRINT resolved using rule 47 (varsG -> var_matrixG .)
  ! reduce/reduce conflict for READ resolved using rule 47 (varsG -> var_matrixG .)
  ! shift/reduce conflict for FUNC resolved as shift
    VOID            reduce using rule 47 (varsG -> var_matrixG .)
    INT             reduce using rule 47 (varsG -> var_matrixG .)
    FLOAT           reduce using rule 47 (varsG -> var_matrixG .)
    CHAR            reduce using rule 47 (varsG -> var_matrixG .)
    $end            reduce using rule 47 (varsG -> var_matrixG .)
    RB              reduce using rule 47 (varsG -> var_matrixG .)
    ID              reduce using rule 47 (varsG -> var_matrixG .)
    IF              reduce using rule 47 (varsG -> var_matrixG .)
    WHILE           reduce using rule 47 (varsG -> var_matrixG .)
    FOR             reduce using rule 47 (varsG -> var_matrixG .)
    PRINT           reduce using rule 47 (varsG -> var_matrixG .)
    READ            reduce using rule 47 (varsG -> var_matrixG .)
    VAR             shift and go to state 8
    FUNC            shift and go to state 12

  ! VAR             [ reduce using rule 47 (varsG -> var_matrixG .) ]
  ! FUNC            [ reduce using rule 47 (varsG -> var_matrixG .) ]
  ! VOID            [ reduce using rule 101 (empty -> .) ]
  ! INT             [ reduce using rule 101 (empty -> .) ]
  ! FLOAT           [ reduce using rule 101 (empty -> .) ]
  ! CHAR            [ reduce using rule 101 (empty -> .) ]
  ! $end            [ reduce using rule 101 (empty -> .) ]
  ! RB              [ reduce using rule 101 (empty -> .) ]
  ! ID              [ reduce using rule 101 (empty -> .) ]
  ! IF              [ reduce using rule 101 (empty -> .) ]
  ! VAR             [ reduce using rule 101 (empty -> .) ]
  ! WHILE           [ reduce using rule 101 (empty -> .) ]
  ! FOR             [ reduce using rule 101 (empty -> .) ]
  ! PRINT           [ reduce using rule 101 (empty -> .) ]
  ! READ            [ reduce using rule 101 (empty -> .) ]
  ! FUNC            [ reduce using rule 101 (empty -> .) ]

    var_matrixG                    shift and go to state 10
    varsG                          shift and go to state 25
    var_rowG                       shift and go to state 9
    declarar_func                  shift and go to state 11
    empty                          shift and go to state 24

state 11

    (49) varsG -> declarar_func . varsG
    (41) varsG -> . VAR tipo vars1G
    (42) varsG -> . VAR tipo vars2G
    (43) varsG -> . VAR tipo vars3G
    (44) varsG -> . VAR LB varsG RB
    (45) varsG -> . var_rowG
    (46) varsG -> . var_rowG varsG
    (47) varsG -> . var_matrixG
    (48) varsG -> . var_matrixG varsG
    (49) varsG -> . declarar_func varsG
    (50) varsG -> . empty
    (88) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (80) declarar_func -> . FUNC tipo ID SEMICOL
    (81) declarar_func -> . FUNC VOID ID SEMICOL
    (82) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (83) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL
    (101) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
    VAR             shift and go to state 8
    FUNC            shift and go to state 12
    VOID            reduce using rule 101 (empty -> .)
    INT             reduce using rule 101 (empty -> .)
    FLOAT           reduce using rule 101 (empty -> .)
    CHAR            reduce using rule 101 (empty -> .)
    $end            reduce using rule 101 (empty -> .)
    RB              reduce using rule 101 (empty -> .)
    ID              reduce using rule 101 (empty -> .)
    IF              reduce using rule 101 (empty -> .)
    WHILE           reduce using rule 101 (empty -> .)
    FOR             reduce using rule 101 (empty -> .)
    PRINT           reduce using rule 101 (empty -> .)
    READ            reduce using rule 101 (empty -> .)

  ! VAR             [ reduce using rule 101 (empty -> .) ]
  ! FUNC            [ reduce using rule 101 (empty -> .) ]

    declarar_func                  shift and go to state 11
    varsG                          shift and go to state 26
    var_rowG                       shift and go to state 9
    var_matrixG                    shift and go to state 10
    empty                          shift and go to state 24

state 12

    (80) declarar_func -> FUNC . tipo ID SEMICOL
    (81) declarar_func -> FUNC . VOID ID SEMICOL
    (82) declarar_func -> FUNC . tipo ID LP declarar_param RP SEMICOL
    (83) declarar_func -> FUNC . VOID ID LP declarar_param RP SEMICOL
    (59) tipo -> . INT
    (60) tipo -> . FLOAT
    (61) tipo -> . CHAR

    VOID            shift and go to state 28
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    tipo                           shift and go to state 27

state 13

    (2) programa1 -> varsG funciones .
    (3) programa1 -> varsG funciones . main funciones
    (7) main -> . tipo MAIN LP RP LB statement RB
    (8) main -> . VOID tipo MAIN LP RP LB statement RB
    (59) tipo -> . INT
    (60) tipo -> . FLOAT
    (61) tipo -> . CHAR

    $end            reduce using rule 2 (programa1 -> varsG funciones .)
    VOID            shift and go to state 31
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    main                           shift and go to state 29
    tipo                           shift and go to state 30

state 14

    (5) funciones -> funcion . funciones
    (5) funciones -> . funcion funciones
    (6) funciones -> . empty
    (69) funcion -> . VOID ID LP param RP verificar LB var_func statement RB
    (70) funcion -> . tipo ID LP param RP verificar LB var_func statement RB
    (71) funcion -> . VOID ID LP RP verificar2 LB var_func2 statement RB
    (72) funcion -> . tipo ID LP RP verificar2 LB var_func2 statement RB
    (101) empty -> .
    (59) tipo -> . INT
    (60) tipo -> . FLOAT
    (61) tipo -> . CHAR

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    VOID            shift and go to state 16
    $end            reduce using rule 101 (empty -> .)
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

  ! VOID            [ reduce using rule 101 (empty -> .) ]
  ! INT             [ reduce using rule 101 (empty -> .) ]
  ! FLOAT           [ reduce using rule 101 (empty -> .) ]
  ! CHAR            [ reduce using rule 101 (empty -> .) ]

    funcion                        shift and go to state 14
    funciones                      shift and go to state 32
    empty                          shift and go to state 15
    tipo                           shift and go to state 17

state 15

    (6) funciones -> empty .

    VOID            reduce using rule 6 (funciones -> empty .)
    INT             reduce using rule 6 (funciones -> empty .)
    FLOAT           reduce using rule 6 (funciones -> empty .)
    CHAR            reduce using rule 6 (funciones -> empty .)
    $end            reduce using rule 6 (funciones -> empty .)


state 16

    (69) funcion -> VOID . ID LP param RP verificar LB var_func statement RB
    (71) funcion -> VOID . ID LP RP verificar2 LB var_func2 statement RB

    ID              shift and go to state 33


state 17

    (70) funcion -> tipo . ID LP param RP verificar LB var_func statement RB
    (72) funcion -> tipo . ID LP RP verificar2 LB var_func2 statement RB

    ID              shift and go to state 34


state 18

    (59) tipo -> INT .

    ID              reduce using rule 59 (tipo -> INT .)
    VOID            reduce using rule 59 (tipo -> INT .)
    INT             reduce using rule 59 (tipo -> INT .)
    FLOAT           reduce using rule 59 (tipo -> INT .)
    CHAR            reduce using rule 59 (tipo -> INT .)
    $end            reduce using rule 59 (tipo -> INT .)
    RB              reduce using rule 59 (tipo -> INT .)
    IF              reduce using rule 59 (tipo -> INT .)
    VAR             reduce using rule 59 (tipo -> INT .)
    WHILE           reduce using rule 59 (tipo -> INT .)
    FOR             reduce using rule 59 (tipo -> INT .)
    PRINT           reduce using rule 59 (tipo -> INT .)
    READ            reduce using rule 59 (tipo -> INT .)
    FUNC            reduce using rule 59 (tipo -> INT .)
    MAIN            reduce using rule 59 (tipo -> INT .)
    COMMA           reduce using rule 59 (tipo -> INT .)
    RP              reduce using rule 59 (tipo -> INT .)


state 19

    (60) tipo -> FLOAT .

    ID              reduce using rule 60 (tipo -> FLOAT .)
    VOID            reduce using rule 60 (tipo -> FLOAT .)
    INT             reduce using rule 60 (tipo -> FLOAT .)
    FLOAT           reduce using rule 60 (tipo -> FLOAT .)
    CHAR            reduce using rule 60 (tipo -> FLOAT .)
    $end            reduce using rule 60 (tipo -> FLOAT .)
    RB              reduce using rule 60 (tipo -> FLOAT .)
    IF              reduce using rule 60 (tipo -> FLOAT .)
    VAR             reduce using rule 60 (tipo -> FLOAT .)
    WHILE           reduce using rule 60 (tipo -> FLOAT .)
    FOR             reduce using rule 60 (tipo -> FLOAT .)
    PRINT           reduce using rule 60 (tipo -> FLOAT .)
    READ            reduce using rule 60 (tipo -> FLOAT .)
    FUNC            reduce using rule 60 (tipo -> FLOAT .)
    MAIN            reduce using rule 60 (tipo -> FLOAT .)
    COMMA           reduce using rule 60 (tipo -> FLOAT .)
    RP              reduce using rule 60 (tipo -> FLOAT .)


state 20

    (61) tipo -> CHAR .

    ID              reduce using rule 61 (tipo -> CHAR .)
    VOID            reduce using rule 61 (tipo -> CHAR .)
    INT             reduce using rule 61 (tipo -> CHAR .)
    FLOAT           reduce using rule 61 (tipo -> CHAR .)
    CHAR            reduce using rule 61 (tipo -> CHAR .)
    $end            reduce using rule 61 (tipo -> CHAR .)
    RB              reduce using rule 61 (tipo -> CHAR .)
    IF              reduce using rule 61 (tipo -> CHAR .)
    VAR             reduce using rule 61 (tipo -> CHAR .)
    WHILE           reduce using rule 61 (tipo -> CHAR .)
    FOR             reduce using rule 61 (tipo -> CHAR .)
    PRINT           reduce using rule 61 (tipo -> CHAR .)
    READ            reduce using rule 61 (tipo -> CHAR .)
    FUNC            reduce using rule 61 (tipo -> CHAR .)
    MAIN            reduce using rule 61 (tipo -> CHAR .)
    COMMA           reduce using rule 61 (tipo -> CHAR .)
    RP              reduce using rule 61 (tipo -> CHAR .)


state 21

    (41) varsG -> VAR tipo . vars1G
    (42) varsG -> VAR tipo . vars2G
    (43) varsG -> VAR tipo . vars3G
    (88) var_rowG -> VAR tipo . ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> VAR tipo . ID matrix IS matrix2 SEMICOL
    (51) vars1G -> . ID SEMICOL
    (52) vars1G -> . ID SEMICOL varsG
    (53) vars2G -> . ID IS value check_type COMMA vars2G
    (54) vars2G -> . ID IS value check_type SEMICOL varsG
    (55) vars2G -> . empty
    (56) vars3G -> . ID COMMA vars3G
    (57) vars3G -> . ID SEMICOL varsG
    (58) vars3G -> . ID SEMICOL
    (101) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 38
    VOID            reduce using rule 101 (empty -> .)
    INT             reduce using rule 101 (empty -> .)
    FLOAT           reduce using rule 101 (empty -> .)
    CHAR            reduce using rule 101 (empty -> .)
    $end            reduce using rule 101 (empty -> .)
    RB              reduce using rule 101 (empty -> .)
    IF              reduce using rule 101 (empty -> .)
    VAR             reduce using rule 101 (empty -> .)
    WHILE           reduce using rule 101 (empty -> .)
    FOR             reduce using rule 101 (empty -> .)
    PRINT           reduce using rule 101 (empty -> .)
    READ            reduce using rule 101 (empty -> .)
    FUNC            reduce using rule 101 (empty -> .)

  ! ID              [ reduce using rule 101 (empty -> .) ]

    vars1G                         shift and go to state 35
    vars2G                         shift and go to state 36
    vars3G                         shift and go to state 37
    empty                          shift and go to state 39

state 22

    (44) varsG -> VAR LB . varsG RB
    (41) varsG -> . VAR tipo vars1G
    (42) varsG -> . VAR tipo vars2G
    (43) varsG -> . VAR tipo vars3G
    (44) varsG -> . VAR LB varsG RB
    (45) varsG -> . var_rowG
    (46) varsG -> . var_rowG varsG
    (47) varsG -> . var_matrixG
    (48) varsG -> . var_matrixG varsG
    (49) varsG -> . declarar_func varsG
    (50) varsG -> . empty
    (88) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (80) declarar_func -> . FUNC tipo ID SEMICOL
    (81) declarar_func -> . FUNC VOID ID SEMICOL
    (82) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (83) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL
    (101) empty -> .

    VAR             shift and go to state 8
    FUNC            shift and go to state 12
    RB              reduce using rule 101 (empty -> .)

    varsG                          shift and go to state 40
    var_rowG                       shift and go to state 9
    var_matrixG                    shift and go to state 10
    declarar_func                  shift and go to state 11
    empty                          shift and go to state 24

state 23

    (46) varsG -> var_rowG varsG .

    VOID            reduce using rule 46 (varsG -> var_rowG varsG .)
    INT             reduce using rule 46 (varsG -> var_rowG varsG .)
    FLOAT           reduce using rule 46 (varsG -> var_rowG varsG .)
    CHAR            reduce using rule 46 (varsG -> var_rowG varsG .)
    $end            reduce using rule 46 (varsG -> var_rowG varsG .)
    RB              reduce using rule 46 (varsG -> var_rowG varsG .)
    ID              reduce using rule 46 (varsG -> var_rowG varsG .)
    IF              reduce using rule 46 (varsG -> var_rowG varsG .)
    VAR             reduce using rule 46 (varsG -> var_rowG varsG .)
    WHILE           reduce using rule 46 (varsG -> var_rowG varsG .)
    FOR             reduce using rule 46 (varsG -> var_rowG varsG .)
    PRINT           reduce using rule 46 (varsG -> var_rowG varsG .)
    READ            reduce using rule 46 (varsG -> var_rowG varsG .)
    FUNC            reduce using rule 46 (varsG -> var_rowG varsG .)


state 24

    (50) varsG -> empty .

    VOID            reduce using rule 50 (varsG -> empty .)
    INT             reduce using rule 50 (varsG -> empty .)
    FLOAT           reduce using rule 50 (varsG -> empty .)
    CHAR            reduce using rule 50 (varsG -> empty .)
    $end            reduce using rule 50 (varsG -> empty .)
    RB              reduce using rule 50 (varsG -> empty .)
    ID              reduce using rule 50 (varsG -> empty .)
    IF              reduce using rule 50 (varsG -> empty .)
    VAR             reduce using rule 50 (varsG -> empty .)
    WHILE           reduce using rule 50 (varsG -> empty .)
    FOR             reduce using rule 50 (varsG -> empty .)
    PRINT           reduce using rule 50 (varsG -> empty .)
    READ            reduce using rule 50 (varsG -> empty .)
    FUNC            reduce using rule 50 (varsG -> empty .)


state 25

    (48) varsG -> var_matrixG varsG .

    VOID            reduce using rule 48 (varsG -> var_matrixG varsG .)
    INT             reduce using rule 48 (varsG -> var_matrixG varsG .)
    FLOAT           reduce using rule 48 (varsG -> var_matrixG varsG .)
    CHAR            reduce using rule 48 (varsG -> var_matrixG varsG .)
    $end            reduce using rule 48 (varsG -> var_matrixG varsG .)
    RB              reduce using rule 48 (varsG -> var_matrixG varsG .)
    ID              reduce using rule 48 (varsG -> var_matrixG varsG .)
    IF              reduce using rule 48 (varsG -> var_matrixG varsG .)
    VAR             reduce using rule 48 (varsG -> var_matrixG varsG .)
    WHILE           reduce using rule 48 (varsG -> var_matrixG varsG .)
    FOR             reduce using rule 48 (varsG -> var_matrixG varsG .)
    PRINT           reduce using rule 48 (varsG -> var_matrixG varsG .)
    READ            reduce using rule 48 (varsG -> var_matrixG varsG .)
    FUNC            reduce using rule 48 (varsG -> var_matrixG varsG .)


state 26

    (49) varsG -> declarar_func varsG .

    VOID            reduce using rule 49 (varsG -> declarar_func varsG .)
    INT             reduce using rule 49 (varsG -> declarar_func varsG .)
    FLOAT           reduce using rule 49 (varsG -> declarar_func varsG .)
    CHAR            reduce using rule 49 (varsG -> declarar_func varsG .)
    $end            reduce using rule 49 (varsG -> declarar_func varsG .)
    RB              reduce using rule 49 (varsG -> declarar_func varsG .)
    ID              reduce using rule 49 (varsG -> declarar_func varsG .)
    IF              reduce using rule 49 (varsG -> declarar_func varsG .)
    VAR             reduce using rule 49 (varsG -> declarar_func varsG .)
    WHILE           reduce using rule 49 (varsG -> declarar_func varsG .)
    FOR             reduce using rule 49 (varsG -> declarar_func varsG .)
    PRINT           reduce using rule 49 (varsG -> declarar_func varsG .)
    READ            reduce using rule 49 (varsG -> declarar_func varsG .)
    FUNC            reduce using rule 49 (varsG -> declarar_func varsG .)


state 27

    (80) declarar_func -> FUNC tipo . ID SEMICOL
    (82) declarar_func -> FUNC tipo . ID LP declarar_param RP SEMICOL

    ID              shift and go to state 41


state 28

    (81) declarar_func -> FUNC VOID . ID SEMICOL
    (83) declarar_func -> FUNC VOID . ID LP declarar_param RP SEMICOL

    ID              shift and go to state 42


state 29

    (3) programa1 -> varsG funciones main . funciones
    (5) funciones -> . funcion funciones
    (6) funciones -> . empty
    (69) funcion -> . VOID ID LP param RP verificar LB var_func statement RB
    (70) funcion -> . tipo ID LP param RP verificar LB var_func statement RB
    (71) funcion -> . VOID ID LP RP verificar2 LB var_func2 statement RB
    (72) funcion -> . tipo ID LP RP verificar2 LB var_func2 statement RB
    (101) empty -> .
    (59) tipo -> . INT
    (60) tipo -> . FLOAT
    (61) tipo -> . CHAR

    VOID            shift and go to state 16
    $end            reduce using rule 101 (empty -> .)
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    funciones                      shift and go to state 43
    funcion                        shift and go to state 14
    empty                          shift and go to state 15
    tipo                           shift and go to state 17

state 30

    (7) main -> tipo . MAIN LP RP LB statement RB

    MAIN            shift and go to state 44


state 31

    (8) main -> VOID . tipo MAIN LP RP LB statement RB
    (59) tipo -> . INT
    (60) tipo -> . FLOAT
    (61) tipo -> . CHAR

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    tipo                           shift and go to state 45

state 32

    (5) funciones -> funcion funciones .

    VOID            reduce using rule 5 (funciones -> funcion funciones .)
    INT             reduce using rule 5 (funciones -> funcion funciones .)
    FLOAT           reduce using rule 5 (funciones -> funcion funciones .)
    CHAR            reduce using rule 5 (funciones -> funcion funciones .)
    $end            reduce using rule 5 (funciones -> funcion funciones .)


state 33

    (69) funcion -> VOID ID . LP param RP verificar LB var_func statement RB
    (71) funcion -> VOID ID . LP RP verificar2 LB var_func2 statement RB

    LP              shift and go to state 46


state 34

    (70) funcion -> tipo ID . LP param RP verificar LB var_func statement RB
    (72) funcion -> tipo ID . LP RP verificar2 LB var_func2 statement RB

    LP              shift and go to state 47


state 35

    (41) varsG -> VAR tipo vars1G .

    VOID            reduce using rule 41 (varsG -> VAR tipo vars1G .)
    INT             reduce using rule 41 (varsG -> VAR tipo vars1G .)
    FLOAT           reduce using rule 41 (varsG -> VAR tipo vars1G .)
    CHAR            reduce using rule 41 (varsG -> VAR tipo vars1G .)
    $end            reduce using rule 41 (varsG -> VAR tipo vars1G .)
    RB              reduce using rule 41 (varsG -> VAR tipo vars1G .)
    ID              reduce using rule 41 (varsG -> VAR tipo vars1G .)
    IF              reduce using rule 41 (varsG -> VAR tipo vars1G .)
    VAR             reduce using rule 41 (varsG -> VAR tipo vars1G .)
    WHILE           reduce using rule 41 (varsG -> VAR tipo vars1G .)
    FOR             reduce using rule 41 (varsG -> VAR tipo vars1G .)
    PRINT           reduce using rule 41 (varsG -> VAR tipo vars1G .)
    READ            reduce using rule 41 (varsG -> VAR tipo vars1G .)
    FUNC            reduce using rule 41 (varsG -> VAR tipo vars1G .)


state 36

    (42) varsG -> VAR tipo vars2G .

    VOID            reduce using rule 42 (varsG -> VAR tipo vars2G .)
    INT             reduce using rule 42 (varsG -> VAR tipo vars2G .)
    FLOAT           reduce using rule 42 (varsG -> VAR tipo vars2G .)
    CHAR            reduce using rule 42 (varsG -> VAR tipo vars2G .)
    $end            reduce using rule 42 (varsG -> VAR tipo vars2G .)
    RB              reduce using rule 42 (varsG -> VAR tipo vars2G .)
    ID              reduce using rule 42 (varsG -> VAR tipo vars2G .)
    IF              reduce using rule 42 (varsG -> VAR tipo vars2G .)
    VAR             reduce using rule 42 (varsG -> VAR tipo vars2G .)
    WHILE           reduce using rule 42 (varsG -> VAR tipo vars2G .)
    FOR             reduce using rule 42 (varsG -> VAR tipo vars2G .)
    PRINT           reduce using rule 42 (varsG -> VAR tipo vars2G .)
    READ            reduce using rule 42 (varsG -> VAR tipo vars2G .)
    FUNC            reduce using rule 42 (varsG -> VAR tipo vars2G .)


state 37

    (43) varsG -> VAR tipo vars3G .

    VOID            reduce using rule 43 (varsG -> VAR tipo vars3G .)
    INT             reduce using rule 43 (varsG -> VAR tipo vars3G .)
    FLOAT           reduce using rule 43 (varsG -> VAR tipo vars3G .)
    CHAR            reduce using rule 43 (varsG -> VAR tipo vars3G .)
    $end            reduce using rule 43 (varsG -> VAR tipo vars3G .)
    RB              reduce using rule 43 (varsG -> VAR tipo vars3G .)
    ID              reduce using rule 43 (varsG -> VAR tipo vars3G .)
    IF              reduce using rule 43 (varsG -> VAR tipo vars3G .)
    VAR             reduce using rule 43 (varsG -> VAR tipo vars3G .)
    WHILE           reduce using rule 43 (varsG -> VAR tipo vars3G .)
    FOR             reduce using rule 43 (varsG -> VAR tipo vars3G .)
    PRINT           reduce using rule 43 (varsG -> VAR tipo vars3G .)
    READ            reduce using rule 43 (varsG -> VAR tipo vars3G .)
    FUNC            reduce using rule 43 (varsG -> VAR tipo vars3G .)


state 38

    (88) var_rowG -> VAR tipo ID . row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> VAR tipo ID . matrix IS matrix2 SEMICOL
    (51) vars1G -> ID . SEMICOL
    (52) vars1G -> ID . SEMICOL varsG
    (53) vars2G -> ID . IS value check_type COMMA vars2G
    (54) vars2G -> ID . IS value check_type SEMICOL varsG
    (56) vars3G -> ID . COMMA vars3G
    (57) vars3G -> ID . SEMICOL varsG
    (58) vars3G -> ID . SEMICOL
    (93) row -> . LC CTE_I RC
    (100) matrix -> . row row

    SEMICOL         shift and go to state 50
    IS              shift and go to state 49
    COMMA           shift and go to state 52
    LC              shift and go to state 53

    row                            shift and go to state 48
    matrix                         shift and go to state 51

state 39

    (55) vars2G -> empty .

    VOID            reduce using rule 55 (vars2G -> empty .)
    INT             reduce using rule 55 (vars2G -> empty .)
    FLOAT           reduce using rule 55 (vars2G -> empty .)
    CHAR            reduce using rule 55 (vars2G -> empty .)
    $end            reduce using rule 55 (vars2G -> empty .)
    RB              reduce using rule 55 (vars2G -> empty .)
    ID              reduce using rule 55 (vars2G -> empty .)
    IF              reduce using rule 55 (vars2G -> empty .)
    VAR             reduce using rule 55 (vars2G -> empty .)
    WHILE           reduce using rule 55 (vars2G -> empty .)
    FOR             reduce using rule 55 (vars2G -> empty .)
    PRINT           reduce using rule 55 (vars2G -> empty .)
    READ            reduce using rule 55 (vars2G -> empty .)
    FUNC            reduce using rule 55 (vars2G -> empty .)


state 40

    (44) varsG -> VAR LB varsG . RB

    RB              shift and go to state 54


state 41

    (80) declarar_func -> FUNC tipo ID . SEMICOL
    (82) declarar_func -> FUNC tipo ID . LP declarar_param RP SEMICOL

    SEMICOL         shift and go to state 55
    LP              shift and go to state 56


state 42

    (81) declarar_func -> FUNC VOID ID . SEMICOL
    (83) declarar_func -> FUNC VOID ID . LP declarar_param RP SEMICOL

    SEMICOL         shift and go to state 57
    LP              shift and go to state 58


state 43

    (3) programa1 -> varsG funciones main funciones .

    $end            reduce using rule 3 (programa1 -> varsG funciones main funciones .)


state 44

    (7) main -> tipo MAIN . LP RP LB statement RB

    LP              shift and go to state 59


state 45

    (8) main -> VOID tipo . MAIN LP RP LB statement RB

    MAIN            shift and go to state 60


state 46

    (69) funcion -> VOID ID LP . param RP verificar LB var_func statement RB
    (71) funcion -> VOID ID LP . RP verificar2 LB var_func2 statement RB
    (77) param -> . tipo ID COMMA param
    (78) param -> . tipo ID param
    (79) param -> . empty
    (59) tipo -> . INT
    (60) tipo -> . FLOAT
    (61) tipo -> . CHAR
    (101) empty -> .

  ! shift/reduce conflict for RP resolved as shift
    RP              shift and go to state 62
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

  ! RP              [ reduce using rule 101 (empty -> .) ]

    param                          shift and go to state 61
    tipo                           shift and go to state 63
    empty                          shift and go to state 64

state 47

    (70) funcion -> tipo ID LP . param RP verificar LB var_func statement RB
    (72) funcion -> tipo ID LP . RP verificar2 LB var_func2 statement RB
    (77) param -> . tipo ID COMMA param
    (78) param -> . tipo ID param
    (79) param -> . empty
    (59) tipo -> . INT
    (60) tipo -> . FLOAT
    (61) tipo -> . CHAR
    (101) empty -> .

  ! shift/reduce conflict for RP resolved as shift
    RP              shift and go to state 66
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

  ! RP              [ reduce using rule 101 (empty -> .) ]

    tipo                           shift and go to state 63
    param                          shift and go to state 65
    empty                          shift and go to state 64

state 48

    (88) var_rowG -> VAR tipo ID row . IS LP lista2 RP SEMICOL
    (100) matrix -> row . row
    (93) row -> . LC CTE_I RC

    IS              shift and go to state 68
    LC              shift and go to state 53

    row                            shift and go to state 67

state 49

    (53) vars2G -> ID IS . value check_type COMMA vars2G
    (54) vars2G -> ID IS . value check_type SEMICOL varsG
    (62) value -> . CTE_F
    (63) value -> . CTE_I
    (64) value -> . ID
    (65) value -> . CTE_C
    (66) value -> . COMILLA ID COMILLA
    (67) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 71
    CTE_I           shift and go to state 72
    ID              shift and go to state 69
    CTE_C           shift and go to state 73
    COMILLA         shift and go to state 74
    COMILLAS        shift and go to state 75

    value                          shift and go to state 70

state 50

    (51) vars1G -> ID SEMICOL .
    (52) vars1G -> ID SEMICOL . varsG
    (57) vars3G -> ID SEMICOL . varsG
    (58) vars3G -> ID SEMICOL .
    (41) varsG -> . VAR tipo vars1G
    (42) varsG -> . VAR tipo vars2G
    (43) varsG -> . VAR tipo vars3G
    (44) varsG -> . VAR LB varsG RB
    (45) varsG -> . var_rowG
    (46) varsG -> . var_rowG varsG
    (47) varsG -> . var_matrixG
    (48) varsG -> . var_matrixG varsG
    (49) varsG -> . declarar_func varsG
    (50) varsG -> . empty
    (88) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (80) declarar_func -> . FUNC tipo ID SEMICOL
    (81) declarar_func -> . FUNC VOID ID SEMICOL
    (82) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (83) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL
    (101) empty -> .

  ! reduce/reduce conflict for VOID resolved using rule 51 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for INT resolved using rule 51 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for FLOAT resolved using rule 51 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for CHAR resolved using rule 51 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for $end resolved using rule 51 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for RB resolved using rule 51 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for ID resolved using rule 51 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for IF resolved using rule 51 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for VAR resolved using rule 51 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for WHILE resolved using rule 51 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for FOR resolved using rule 51 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for PRINT resolved using rule 51 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for READ resolved using rule 51 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for FUNC resolved using rule 51 (vars1G -> ID SEMICOL .)
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
  ! reduce/reduce conflict for VOID resolved using rule 51 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for INT resolved using rule 51 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for FLOAT resolved using rule 51 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for CHAR resolved using rule 51 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for $end resolved using rule 51 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for RB resolved using rule 51 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for ID resolved using rule 51 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for IF resolved using rule 51 (vars1G -> ID SEMICOL .)
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for WHILE resolved using rule 51 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for FOR resolved using rule 51 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for PRINT resolved using rule 51 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for READ resolved using rule 51 (vars1G -> ID SEMICOL .)
  ! shift/reduce conflict for FUNC resolved as shift
    VOID            reduce using rule 51 (vars1G -> ID SEMICOL .)
    INT             reduce using rule 51 (vars1G -> ID SEMICOL .)
    FLOAT           reduce using rule 51 (vars1G -> ID SEMICOL .)
    CHAR            reduce using rule 51 (vars1G -> ID SEMICOL .)
    $end            reduce using rule 51 (vars1G -> ID SEMICOL .)
    RB              reduce using rule 51 (vars1G -> ID SEMICOL .)
    ID              reduce using rule 51 (vars1G -> ID SEMICOL .)
    IF              reduce using rule 51 (vars1G -> ID SEMICOL .)
    WHILE           reduce using rule 51 (vars1G -> ID SEMICOL .)
    FOR             reduce using rule 51 (vars1G -> ID SEMICOL .)
    PRINT           reduce using rule 51 (vars1G -> ID SEMICOL .)
    READ            reduce using rule 51 (vars1G -> ID SEMICOL .)
    VAR             shift and go to state 8
    FUNC            shift and go to state 12

  ! VAR             [ reduce using rule 51 (vars1G -> ID SEMICOL .) ]
  ! FUNC            [ reduce using rule 51 (vars1G -> ID SEMICOL .) ]
  ! VOID            [ reduce using rule 58 (vars3G -> ID SEMICOL .) ]
  ! INT             [ reduce using rule 58 (vars3G -> ID SEMICOL .) ]
  ! FLOAT           [ reduce using rule 58 (vars3G -> ID SEMICOL .) ]
  ! CHAR            [ reduce using rule 58 (vars3G -> ID SEMICOL .) ]
  ! $end            [ reduce using rule 58 (vars3G -> ID SEMICOL .) ]
  ! RB              [ reduce using rule 58 (vars3G -> ID SEMICOL .) ]
  ! ID              [ reduce using rule 58 (vars3G -> ID SEMICOL .) ]
  ! IF              [ reduce using rule 58 (vars3G -> ID SEMICOL .) ]
  ! VAR             [ reduce using rule 58 (vars3G -> ID SEMICOL .) ]
  ! WHILE           [ reduce using rule 58 (vars3G -> ID SEMICOL .) ]
  ! FOR             [ reduce using rule 58 (vars3G -> ID SEMICOL .) ]
  ! PRINT           [ reduce using rule 58 (vars3G -> ID SEMICOL .) ]
  ! READ            [ reduce using rule 58 (vars3G -> ID SEMICOL .) ]
  ! FUNC            [ reduce using rule 58 (vars3G -> ID SEMICOL .) ]
  ! VOID            [ reduce using rule 101 (empty -> .) ]
  ! INT             [ reduce using rule 101 (empty -> .) ]
  ! FLOAT           [ reduce using rule 101 (empty -> .) ]
  ! CHAR            [ reduce using rule 101 (empty -> .) ]
  ! $end            [ reduce using rule 101 (empty -> .) ]
  ! RB              [ reduce using rule 101 (empty -> .) ]
  ! ID              [ reduce using rule 101 (empty -> .) ]
  ! IF              [ reduce using rule 101 (empty -> .) ]
  ! VAR             [ reduce using rule 101 (empty -> .) ]
  ! WHILE           [ reduce using rule 101 (empty -> .) ]
  ! FOR             [ reduce using rule 101 (empty -> .) ]
  ! PRINT           [ reduce using rule 101 (empty -> .) ]
  ! READ            [ reduce using rule 101 (empty -> .) ]
  ! FUNC            [ reduce using rule 101 (empty -> .) ]

    varsG                          shift and go to state 76
    var_rowG                       shift and go to state 9
    var_matrixG                    shift and go to state 10
    declarar_func                  shift and go to state 11
    empty                          shift and go to state 24

state 51

    (95) var_matrixG -> VAR tipo ID matrix . IS matrix2 SEMICOL

    IS              shift and go to state 77


state 52

    (56) vars3G -> ID COMMA . vars3G
    (56) vars3G -> . ID COMMA vars3G
    (57) vars3G -> . ID SEMICOL varsG
    (58) vars3G -> . ID SEMICOL

    ID              shift and go to state 78

    vars3G                         shift and go to state 79

state 53

    (93) row -> LC . CTE_I RC

    CTE_I           shift and go to state 80


state 54

    (44) varsG -> VAR LB varsG RB .

    VOID            reduce using rule 44 (varsG -> VAR LB varsG RB .)
    INT             reduce using rule 44 (varsG -> VAR LB varsG RB .)
    FLOAT           reduce using rule 44 (varsG -> VAR LB varsG RB .)
    CHAR            reduce using rule 44 (varsG -> VAR LB varsG RB .)
    $end            reduce using rule 44 (varsG -> VAR LB varsG RB .)
    RB              reduce using rule 44 (varsG -> VAR LB varsG RB .)
    ID              reduce using rule 44 (varsG -> VAR LB varsG RB .)
    IF              reduce using rule 44 (varsG -> VAR LB varsG RB .)
    VAR             reduce using rule 44 (varsG -> VAR LB varsG RB .)
    WHILE           reduce using rule 44 (varsG -> VAR LB varsG RB .)
    FOR             reduce using rule 44 (varsG -> VAR LB varsG RB .)
    PRINT           reduce using rule 44 (varsG -> VAR LB varsG RB .)
    READ            reduce using rule 44 (varsG -> VAR LB varsG RB .)
    FUNC            reduce using rule 44 (varsG -> VAR LB varsG RB .)


state 55

    (80) declarar_func -> FUNC tipo ID SEMICOL .

    VAR             reduce using rule 80 (declarar_func -> FUNC tipo ID SEMICOL .)
    FUNC            reduce using rule 80 (declarar_func -> FUNC tipo ID SEMICOL .)
    VOID            reduce using rule 80 (declarar_func -> FUNC tipo ID SEMICOL .)
    INT             reduce using rule 80 (declarar_func -> FUNC tipo ID SEMICOL .)
    FLOAT           reduce using rule 80 (declarar_func -> FUNC tipo ID SEMICOL .)
    CHAR            reduce using rule 80 (declarar_func -> FUNC tipo ID SEMICOL .)
    $end            reduce using rule 80 (declarar_func -> FUNC tipo ID SEMICOL .)
    RB              reduce using rule 80 (declarar_func -> FUNC tipo ID SEMICOL .)
    ID              reduce using rule 80 (declarar_func -> FUNC tipo ID SEMICOL .)
    IF              reduce using rule 80 (declarar_func -> FUNC tipo ID SEMICOL .)
    WHILE           reduce using rule 80 (declarar_func -> FUNC tipo ID SEMICOL .)
    FOR             reduce using rule 80 (declarar_func -> FUNC tipo ID SEMICOL .)
    PRINT           reduce using rule 80 (declarar_func -> FUNC tipo ID SEMICOL .)
    READ            reduce using rule 80 (declarar_func -> FUNC tipo ID SEMICOL .)


state 56

    (82) declarar_func -> FUNC tipo ID LP . declarar_param RP SEMICOL
    (84) declarar_param -> . tipo COMMA declarar_param
    (85) declarar_param -> . tipo declarar_param
    (86) declarar_param -> . empty
    (59) tipo -> . INT
    (60) tipo -> . FLOAT
    (61) tipo -> . CHAR
    (101) empty -> .

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20
    RP              reduce using rule 101 (empty -> .)

    tipo                           shift and go to state 81
    declarar_param                 shift and go to state 82
    empty                          shift and go to state 83

state 57

    (81) declarar_func -> FUNC VOID ID SEMICOL .

    VAR             reduce using rule 81 (declarar_func -> FUNC VOID ID SEMICOL .)
    FUNC            reduce using rule 81 (declarar_func -> FUNC VOID ID SEMICOL .)
    VOID            reduce using rule 81 (declarar_func -> FUNC VOID ID SEMICOL .)
    INT             reduce using rule 81 (declarar_func -> FUNC VOID ID SEMICOL .)
    FLOAT           reduce using rule 81 (declarar_func -> FUNC VOID ID SEMICOL .)
    CHAR            reduce using rule 81 (declarar_func -> FUNC VOID ID SEMICOL .)
    $end            reduce using rule 81 (declarar_func -> FUNC VOID ID SEMICOL .)
    RB              reduce using rule 81 (declarar_func -> FUNC VOID ID SEMICOL .)
    ID              reduce using rule 81 (declarar_func -> FUNC VOID ID SEMICOL .)
    IF              reduce using rule 81 (declarar_func -> FUNC VOID ID SEMICOL .)
    WHILE           reduce using rule 81 (declarar_func -> FUNC VOID ID SEMICOL .)
    FOR             reduce using rule 81 (declarar_func -> FUNC VOID ID SEMICOL .)
    PRINT           reduce using rule 81 (declarar_func -> FUNC VOID ID SEMICOL .)
    READ            reduce using rule 81 (declarar_func -> FUNC VOID ID SEMICOL .)


state 58

    (83) declarar_func -> FUNC VOID ID LP . declarar_param RP SEMICOL
    (84) declarar_param -> . tipo COMMA declarar_param
    (85) declarar_param -> . tipo declarar_param
    (86) declarar_param -> . empty
    (59) tipo -> . INT
    (60) tipo -> . FLOAT
    (61) tipo -> . CHAR
    (101) empty -> .

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20
    RP              reduce using rule 101 (empty -> .)

    declarar_param                 shift and go to state 84
    tipo                           shift and go to state 81
    empty                          shift and go to state 83

state 59

    (7) main -> tipo MAIN LP . RP LB statement RB

    RP              shift and go to state 85


state 60

    (8) main -> VOID tipo MAIN . LP RP LB statement RB

    LP              shift and go to state 86


state 61

    (69) funcion -> VOID ID LP param . RP verificar LB var_func statement RB

    RP              shift and go to state 87


state 62

    (71) funcion -> VOID ID LP RP . verificar2 LB var_func2 statement RB
    (74) verificar2 -> .

    LB              reduce using rule 74 (verificar2 -> .)

    verificar2                     shift and go to state 88

state 63

    (77) param -> tipo . ID COMMA param
    (78) param -> tipo . ID param

    ID              shift and go to state 89


state 64

    (79) param -> empty .

    RP              reduce using rule 79 (param -> empty .)


state 65

    (70) funcion -> tipo ID LP param . RP verificar LB var_func statement RB

    RP              shift and go to state 90


state 66

    (72) funcion -> tipo ID LP RP . verificar2 LB var_func2 statement RB
    (74) verificar2 -> .

    LB              reduce using rule 74 (verificar2 -> .)

    verificar2                     shift and go to state 91

state 67

    (100) matrix -> row row .

    IS              reduce using rule 100 (matrix -> row row .)
    SEMICOL         reduce using rule 100 (matrix -> row row .)


state 68

    (88) var_rowG -> VAR tipo ID row IS . LP lista2 RP SEMICOL

    LP              shift and go to state 92


state 69

    (64) value -> ID .

    COMMA           reduce using rule 64 (value -> ID .)
    SEMICOL         reduce using rule 64 (value -> ID .)
    RP              reduce using rule 64 (value -> ID .)


state 70

    (53) vars2G -> ID IS value . check_type COMMA vars2G
    (54) vars2G -> ID IS value . check_type SEMICOL varsG
    (68) check_type -> .

    COMMA           reduce using rule 68 (check_type -> .)
    SEMICOL         reduce using rule 68 (check_type -> .)

    check_type                     shift and go to state 93

state 71

    (62) value -> CTE_F .

    COMMA           reduce using rule 62 (value -> CTE_F .)
    SEMICOL         reduce using rule 62 (value -> CTE_F .)
    RP              reduce using rule 62 (value -> CTE_F .)


state 72

    (63) value -> CTE_I .

    COMMA           reduce using rule 63 (value -> CTE_I .)
    SEMICOL         reduce using rule 63 (value -> CTE_I .)
    RP              reduce using rule 63 (value -> CTE_I .)


state 73

    (65) value -> CTE_C .

    COMMA           reduce using rule 65 (value -> CTE_C .)
    SEMICOL         reduce using rule 65 (value -> CTE_C .)
    RP              reduce using rule 65 (value -> CTE_C .)


state 74

    (66) value -> COMILLA . ID COMILLA

    ID              shift and go to state 94


state 75

    (67) value -> COMILLAS . ID COMILLAS

    ID              shift and go to state 95


state 76

    (52) vars1G -> ID SEMICOL varsG .
    (57) vars3G -> ID SEMICOL varsG .

  ! reduce/reduce conflict for VOID resolved using rule 52 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for INT resolved using rule 52 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for FLOAT resolved using rule 52 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for CHAR resolved using rule 52 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for $end resolved using rule 52 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for RB resolved using rule 52 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for ID resolved using rule 52 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for IF resolved using rule 52 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for VAR resolved using rule 52 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for WHILE resolved using rule 52 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for FOR resolved using rule 52 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for PRINT resolved using rule 52 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for READ resolved using rule 52 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for FUNC resolved using rule 52 (vars1G -> ID SEMICOL varsG .)
    VOID            reduce using rule 52 (vars1G -> ID SEMICOL varsG .)
    INT             reduce using rule 52 (vars1G -> ID SEMICOL varsG .)
    FLOAT           reduce using rule 52 (vars1G -> ID SEMICOL varsG .)
    CHAR            reduce using rule 52 (vars1G -> ID SEMICOL varsG .)
    $end            reduce using rule 52 (vars1G -> ID SEMICOL varsG .)
    RB              reduce using rule 52 (vars1G -> ID SEMICOL varsG .)
    ID              reduce using rule 52 (vars1G -> ID SEMICOL varsG .)
    IF              reduce using rule 52 (vars1G -> ID SEMICOL varsG .)
    VAR             reduce using rule 52 (vars1G -> ID SEMICOL varsG .)
    WHILE           reduce using rule 52 (vars1G -> ID SEMICOL varsG .)
    FOR             reduce using rule 52 (vars1G -> ID SEMICOL varsG .)
    PRINT           reduce using rule 52 (vars1G -> ID SEMICOL varsG .)
    READ            reduce using rule 52 (vars1G -> ID SEMICOL varsG .)
    FUNC            reduce using rule 52 (vars1G -> ID SEMICOL varsG .)

  ! VOID            [ reduce using rule 57 (vars3G -> ID SEMICOL varsG .) ]
  ! INT             [ reduce using rule 57 (vars3G -> ID SEMICOL varsG .) ]
  ! FLOAT           [ reduce using rule 57 (vars3G -> ID SEMICOL varsG .) ]
  ! CHAR            [ reduce using rule 57 (vars3G -> ID SEMICOL varsG .) ]
  ! $end            [ reduce using rule 57 (vars3G -> ID SEMICOL varsG .) ]
  ! RB              [ reduce using rule 57 (vars3G -> ID SEMICOL varsG .) ]
  ! ID              [ reduce using rule 57 (vars3G -> ID SEMICOL varsG .) ]
  ! IF              [ reduce using rule 57 (vars3G -> ID SEMICOL varsG .) ]
  ! VAR             [ reduce using rule 57 (vars3G -> ID SEMICOL varsG .) ]
  ! WHILE           [ reduce using rule 57 (vars3G -> ID SEMICOL varsG .) ]
  ! FOR             [ reduce using rule 57 (vars3G -> ID SEMICOL varsG .) ]
  ! PRINT           [ reduce using rule 57 (vars3G -> ID SEMICOL varsG .) ]
  ! READ            [ reduce using rule 57 (vars3G -> ID SEMICOL varsG .) ]
  ! FUNC            [ reduce using rule 57 (vars3G -> ID SEMICOL varsG .) ]


state 77

    (95) var_matrixG -> VAR tipo ID matrix IS . matrix2 SEMICOL
    (96) matrix2 -> . LP lista2 RP COMMA matrix2
    (97) matrix2 -> . LP lista2 RP COMMA LP lista2 RP

    LP              shift and go to state 97

    matrix2                        shift and go to state 96

state 78

    (56) vars3G -> ID . COMMA vars3G
    (57) vars3G -> ID . SEMICOL varsG
    (58) vars3G -> ID . SEMICOL

    COMMA           shift and go to state 52
    SEMICOL         shift and go to state 98


state 79

    (56) vars3G -> ID COMMA vars3G .

    VOID            reduce using rule 56 (vars3G -> ID COMMA vars3G .)
    INT             reduce using rule 56 (vars3G -> ID COMMA vars3G .)
    FLOAT           reduce using rule 56 (vars3G -> ID COMMA vars3G .)
    CHAR            reduce using rule 56 (vars3G -> ID COMMA vars3G .)
    $end            reduce using rule 56 (vars3G -> ID COMMA vars3G .)
    RB              reduce using rule 56 (vars3G -> ID COMMA vars3G .)
    ID              reduce using rule 56 (vars3G -> ID COMMA vars3G .)
    IF              reduce using rule 56 (vars3G -> ID COMMA vars3G .)
    VAR             reduce using rule 56 (vars3G -> ID COMMA vars3G .)
    WHILE           reduce using rule 56 (vars3G -> ID COMMA vars3G .)
    FOR             reduce using rule 56 (vars3G -> ID COMMA vars3G .)
    PRINT           reduce using rule 56 (vars3G -> ID COMMA vars3G .)
    READ            reduce using rule 56 (vars3G -> ID COMMA vars3G .)
    FUNC            reduce using rule 56 (vars3G -> ID COMMA vars3G .)


state 80

    (93) row -> LC CTE_I . RC

    RC              shift and go to state 99


state 81

    (84) declarar_param -> tipo . COMMA declarar_param
    (85) declarar_param -> tipo . declarar_param
    (84) declarar_param -> . tipo COMMA declarar_param
    (85) declarar_param -> . tipo declarar_param
    (86) declarar_param -> . empty
    (59) tipo -> . INT
    (60) tipo -> . FLOAT
    (61) tipo -> . CHAR
    (101) empty -> .

    COMMA           shift and go to state 100
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20
    RP              reduce using rule 101 (empty -> .)

    tipo                           shift and go to state 81
    declarar_param                 shift and go to state 101
    empty                          shift and go to state 83

state 82

    (82) declarar_func -> FUNC tipo ID LP declarar_param . RP SEMICOL

    RP              shift and go to state 102


state 83

    (86) declarar_param -> empty .

    RP              reduce using rule 86 (declarar_param -> empty .)


state 84

    (83) declarar_func -> FUNC VOID ID LP declarar_param . RP SEMICOL

    RP              shift and go to state 103


state 85

    (7) main -> tipo MAIN LP RP . LB statement RB

    LB              shift and go to state 104


state 86

    (8) main -> VOID tipo MAIN LP . RP LB statement RB

    RP              shift and go to state 105


state 87

    (69) funcion -> VOID ID LP param RP . verificar LB var_func statement RB
    (73) verificar -> .

    LB              reduce using rule 73 (verificar -> .)

    verificar                      shift and go to state 106

state 88

    (71) funcion -> VOID ID LP RP verificar2 . LB var_func2 statement RB

    LB              shift and go to state 107


state 89

    (77) param -> tipo ID . COMMA param
    (78) param -> tipo ID . param
    (77) param -> . tipo ID COMMA param
    (78) param -> . tipo ID param
    (79) param -> . empty
    (59) tipo -> . INT
    (60) tipo -> . FLOAT
    (61) tipo -> . CHAR
    (101) empty -> .

    COMMA           shift and go to state 108
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20
    RP              reduce using rule 101 (empty -> .)

    tipo                           shift and go to state 63
    param                          shift and go to state 109
    empty                          shift and go to state 64

state 90

    (70) funcion -> tipo ID LP param RP . verificar LB var_func statement RB
    (73) verificar -> .

    LB              reduce using rule 73 (verificar -> .)

    verificar                      shift and go to state 110

state 91

    (72) funcion -> tipo ID LP RP verificar2 . LB var_func2 statement RB

    LB              shift and go to state 111


state 92

    (88) var_rowG -> VAR tipo ID row IS LP . lista2 RP SEMICOL
    (91) lista2 -> . elem_lista COMMA lista2
    (92) lista2 -> . elem_lista COMMA elem_lista
    (89) elem_lista -> . value
    (90) elem_lista -> . empty
    (62) value -> . CTE_F
    (63) value -> . CTE_I
    (64) value -> . ID
    (65) value -> . CTE_C
    (66) value -> . COMILLA ID COMILLA
    (67) value -> . COMILLAS ID COMILLAS
    (101) empty -> .

    CTE_F           shift and go to state 71
    CTE_I           shift and go to state 72
    ID              shift and go to state 69
    CTE_C           shift and go to state 73
    COMILLA         shift and go to state 74
    COMILLAS        shift and go to state 75
    COMMA           reduce using rule 101 (empty -> .)

    lista2                         shift and go to state 112
    elem_lista                     shift and go to state 113
    value                          shift and go to state 114
    empty                          shift and go to state 115

state 93

    (53) vars2G -> ID IS value check_type . COMMA vars2G
    (54) vars2G -> ID IS value check_type . SEMICOL varsG

    COMMA           shift and go to state 116
    SEMICOL         shift and go to state 117


state 94

    (66) value -> COMILLA ID . COMILLA

    COMILLA         shift and go to state 118


state 95

    (67) value -> COMILLAS ID . COMILLAS

    COMILLAS        shift and go to state 119


state 96

    (95) var_matrixG -> VAR tipo ID matrix IS matrix2 . SEMICOL

    SEMICOL         shift and go to state 120


state 97

    (96) matrix2 -> LP . lista2 RP COMMA matrix2
    (97) matrix2 -> LP . lista2 RP COMMA LP lista2 RP
    (91) lista2 -> . elem_lista COMMA lista2
    (92) lista2 -> . elem_lista COMMA elem_lista
    (89) elem_lista -> . value
    (90) elem_lista -> . empty
    (62) value -> . CTE_F
    (63) value -> . CTE_I
    (64) value -> . ID
    (65) value -> . CTE_C
    (66) value -> . COMILLA ID COMILLA
    (67) value -> . COMILLAS ID COMILLAS
    (101) empty -> .

    CTE_F           shift and go to state 71
    CTE_I           shift and go to state 72
    ID              shift and go to state 69
    CTE_C           shift and go to state 73
    COMILLA         shift and go to state 74
    COMILLAS        shift and go to state 75
    COMMA           reduce using rule 101 (empty -> .)

    lista2                         shift and go to state 121
    elem_lista                     shift and go to state 113
    value                          shift and go to state 114
    empty                          shift and go to state 115

state 98

    (57) vars3G -> ID SEMICOL . varsG
    (58) vars3G -> ID SEMICOL .
    (41) varsG -> . VAR tipo vars1G
    (42) varsG -> . VAR tipo vars2G
    (43) varsG -> . VAR tipo vars3G
    (44) varsG -> . VAR LB varsG RB
    (45) varsG -> . var_rowG
    (46) varsG -> . var_rowG varsG
    (47) varsG -> . var_matrixG
    (48) varsG -> . var_matrixG varsG
    (49) varsG -> . declarar_func varsG
    (50) varsG -> . empty
    (88) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (80) declarar_func -> . FUNC tipo ID SEMICOL
    (81) declarar_func -> . FUNC VOID ID SEMICOL
    (82) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (83) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL
    (101) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
  ! reduce/reduce conflict for VOID resolved using rule 58 (vars3G -> ID SEMICOL .)
  ! reduce/reduce conflict for INT resolved using rule 58 (vars3G -> ID SEMICOL .)
  ! reduce/reduce conflict for FLOAT resolved using rule 58 (vars3G -> ID SEMICOL .)
  ! reduce/reduce conflict for CHAR resolved using rule 58 (vars3G -> ID SEMICOL .)
  ! reduce/reduce conflict for $end resolved using rule 58 (vars3G -> ID SEMICOL .)
  ! reduce/reduce conflict for RB resolved using rule 58 (vars3G -> ID SEMICOL .)
  ! reduce/reduce conflict for ID resolved using rule 58 (vars3G -> ID SEMICOL .)
  ! reduce/reduce conflict for IF resolved using rule 58 (vars3G -> ID SEMICOL .)
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for WHILE resolved using rule 58 (vars3G -> ID SEMICOL .)
  ! reduce/reduce conflict for FOR resolved using rule 58 (vars3G -> ID SEMICOL .)
  ! reduce/reduce conflict for PRINT resolved using rule 58 (vars3G -> ID SEMICOL .)
  ! reduce/reduce conflict for READ resolved using rule 58 (vars3G -> ID SEMICOL .)
  ! shift/reduce conflict for FUNC resolved as shift
    VOID            reduce using rule 58 (vars3G -> ID SEMICOL .)
    INT             reduce using rule 58 (vars3G -> ID SEMICOL .)
    FLOAT           reduce using rule 58 (vars3G -> ID SEMICOL .)
    CHAR            reduce using rule 58 (vars3G -> ID SEMICOL .)
    $end            reduce using rule 58 (vars3G -> ID SEMICOL .)
    RB              reduce using rule 58 (vars3G -> ID SEMICOL .)
    ID              reduce using rule 58 (vars3G -> ID SEMICOL .)
    IF              reduce using rule 58 (vars3G -> ID SEMICOL .)
    WHILE           reduce using rule 58 (vars3G -> ID SEMICOL .)
    FOR             reduce using rule 58 (vars3G -> ID SEMICOL .)
    PRINT           reduce using rule 58 (vars3G -> ID SEMICOL .)
    READ            reduce using rule 58 (vars3G -> ID SEMICOL .)
    VAR             shift and go to state 8
    FUNC            shift and go to state 12

  ! VAR             [ reduce using rule 58 (vars3G -> ID SEMICOL .) ]
  ! FUNC            [ reduce using rule 58 (vars3G -> ID SEMICOL .) ]
  ! VOID            [ reduce using rule 101 (empty -> .) ]
  ! INT             [ reduce using rule 101 (empty -> .) ]
  ! FLOAT           [ reduce using rule 101 (empty -> .) ]
  ! CHAR            [ reduce using rule 101 (empty -> .) ]
  ! $end            [ reduce using rule 101 (empty -> .) ]
  ! RB              [ reduce using rule 101 (empty -> .) ]
  ! ID              [ reduce using rule 101 (empty -> .) ]
  ! IF              [ reduce using rule 101 (empty -> .) ]
  ! VAR             [ reduce using rule 101 (empty -> .) ]
  ! WHILE           [ reduce using rule 101 (empty -> .) ]
  ! FOR             [ reduce using rule 101 (empty -> .) ]
  ! PRINT           [ reduce using rule 101 (empty -> .) ]
  ! READ            [ reduce using rule 101 (empty -> .) ]
  ! FUNC            [ reduce using rule 101 (empty -> .) ]

    varsG                          shift and go to state 122
    var_rowG                       shift and go to state 9
    var_matrixG                    shift and go to state 10
    declarar_func                  shift and go to state 11
    empty                          shift and go to state 24

state 99

    (93) row -> LC CTE_I RC .

    IS              reduce using rule 93 (row -> LC CTE_I RC .)
    LC              reduce using rule 93 (row -> LC CTE_I RC .)
    SEMICOL         reduce using rule 93 (row -> LC CTE_I RC .)


state 100

    (84) declarar_param -> tipo COMMA . declarar_param
    (84) declarar_param -> . tipo COMMA declarar_param
    (85) declarar_param -> . tipo declarar_param
    (86) declarar_param -> . empty
    (59) tipo -> . INT
    (60) tipo -> . FLOAT
    (61) tipo -> . CHAR
    (101) empty -> .

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20
    RP              reduce using rule 101 (empty -> .)

    tipo                           shift and go to state 81
    declarar_param                 shift and go to state 123
    empty                          shift and go to state 83

state 101

    (85) declarar_param -> tipo declarar_param .

    RP              reduce using rule 85 (declarar_param -> tipo declarar_param .)


state 102

    (82) declarar_func -> FUNC tipo ID LP declarar_param RP . SEMICOL

    SEMICOL         shift and go to state 124


state 103

    (83) declarar_func -> FUNC VOID ID LP declarar_param RP . SEMICOL

    SEMICOL         shift and go to state 125


state 104

    (7) main -> tipo MAIN LP RP LB . statement RB
    (9) statement -> . asignacion SEMICOL statement
    (10) statement -> . if statement
    (11) statement -> . vars statement
    (12) statement -> . while statement
    (13) statement -> . for statement
    (14) statement -> . escritura statement
    (15) statement -> . escritura_var statement
    (16) statement -> . lectura statement
    (17) statement -> . ID row SEMICOL
    (18) statement -> . ID matrix SEMICOL
    (19) statement -> . empty
    (20) asignacion -> . ID IS value
    (102) if -> . IF LP expression RP check_bool gotof LB statement RB
    (103) if -> . IF LP expression RP check_bool gotof LB statement RB goto elseif
    (104) if -> . IF LP expression RP check_bool gotof LB statement RB goto else
    (21) vars -> . VAR tipo vars1
    (22) vars -> . VAR tipo vars2
    (23) vars -> . VAR tipo vars3
    (24) vars -> . VAR tipo oper_aritmetica
    (25) vars -> . VAR tipo ID row SEMICOL
    (26) vars -> . VAR tipo ID matrix SEMICOL
    (27) vars -> . varsG
    (28) vars -> . var_row
    (29) vars -> . var_row vars
    (30) vars -> . var_matrix
    (31) vars -> . var_matrix vars
    (32) vars -> . empty
    (111) while -> . WHILE LP expression RP check_bool gotof LB statement RB goto
    (112) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (121) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (122) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (123) escritura_var -> . PRINT LP any_var RP SEMICOL
    (128) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (129) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (101) empty -> .
    (41) varsG -> . VAR tipo vars1G
    (42) varsG -> . VAR tipo vars2G
    (43) varsG -> . VAR tipo vars3G
    (44) varsG -> . VAR LB varsG RB
    (45) varsG -> . var_rowG
    (46) varsG -> . var_rowG varsG
    (47) varsG -> . var_matrixG
    (48) varsG -> . var_matrixG varsG
    (49) varsG -> . declarar_func varsG
    (50) varsG -> . empty
    (87) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (88) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (80) declarar_func -> . FUNC tipo ID SEMICOL
    (81) declarar_func -> . FUNC VOID ID SEMICOL
    (82) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (83) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
    ID              shift and go to state 135
    IF              shift and go to state 137
    VAR             shift and go to state 138
    WHILE           shift and go to state 142
    FOR             shift and go to state 143
    PRINT           shift and go to state 144
    READ            shift and go to state 145
    RB              reduce using rule 101 (empty -> .)
    FUNC            shift and go to state 12

  ! ID              [ reduce using rule 101 (empty -> .) ]
  ! IF              [ reduce using rule 101 (empty -> .) ]
  ! VAR             [ reduce using rule 101 (empty -> .) ]
  ! WHILE           [ reduce using rule 101 (empty -> .) ]
  ! FOR             [ reduce using rule 101 (empty -> .) ]
  ! PRINT           [ reduce using rule 101 (empty -> .) ]
  ! READ            [ reduce using rule 101 (empty -> .) ]
  ! FUNC            [ reduce using rule 101 (empty -> .) ]

    statement                      shift and go to state 126
    asignacion                     shift and go to state 127
    if                             shift and go to state 128
    vars                           shift and go to state 129
    while                          shift and go to state 130
    for                            shift and go to state 131
    escritura                      shift and go to state 132
    escritura_var                  shift and go to state 133
    lectura                        shift and go to state 134
    empty                          shift and go to state 136
    varsG                          shift and go to state 139
    var_row                        shift and go to state 140
    var_matrix                     shift and go to state 141
    var_rowG                       shift and go to state 9
    var_matrixG                    shift and go to state 10
    declarar_func                  shift and go to state 11

state 105

    (8) main -> VOID tipo MAIN LP RP . LB statement RB

    LB              shift and go to state 146


state 106

    (69) funcion -> VOID ID LP param RP verificar . LB var_func statement RB

    LB              shift and go to state 147


state 107

    (71) funcion -> VOID ID LP RP verificar2 LB . var_func2 statement RB
    (76) var_func2 -> . vars
    (21) vars -> . VAR tipo vars1
    (22) vars -> . VAR tipo vars2
    (23) vars -> . VAR tipo vars3
    (24) vars -> . VAR tipo oper_aritmetica
    (25) vars -> . VAR tipo ID row SEMICOL
    (26) vars -> . VAR tipo ID matrix SEMICOL
    (27) vars -> . varsG
    (28) vars -> . var_row
    (29) vars -> . var_row vars
    (30) vars -> . var_matrix
    (31) vars -> . var_matrix vars
    (32) vars -> . empty
    (41) varsG -> . VAR tipo vars1G
    (42) varsG -> . VAR tipo vars2G
    (43) varsG -> . VAR tipo vars3G
    (44) varsG -> . VAR LB varsG RB
    (45) varsG -> . var_rowG
    (46) varsG -> . var_rowG varsG
    (47) varsG -> . var_matrixG
    (48) varsG -> . var_matrixG varsG
    (49) varsG -> . declarar_func varsG
    (50) varsG -> . empty
    (87) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (101) empty -> .
    (88) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (80) declarar_func -> . FUNC tipo ID SEMICOL
    (81) declarar_func -> . FUNC VOID ID SEMICOL
    (82) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (83) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL

  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
    VAR             shift and go to state 138
    ID              reduce using rule 101 (empty -> .)
    IF              reduce using rule 101 (empty -> .)
    WHILE           reduce using rule 101 (empty -> .)
    FOR             reduce using rule 101 (empty -> .)
    PRINT           reduce using rule 101 (empty -> .)
    READ            reduce using rule 101 (empty -> .)
    RB              reduce using rule 101 (empty -> .)
    FUNC            shift and go to state 12

  ! VAR             [ reduce using rule 101 (empty -> .) ]
  ! FUNC            [ reduce using rule 101 (empty -> .) ]

    var_func2                      shift and go to state 148
    vars                           shift and go to state 149
    varsG                          shift and go to state 139
    var_row                        shift and go to state 140
    var_matrix                     shift and go to state 141
    empty                          shift and go to state 150
    var_rowG                       shift and go to state 9
    var_matrixG                    shift and go to state 10
    declarar_func                  shift and go to state 11

state 108

    (77) param -> tipo ID COMMA . param
    (77) param -> . tipo ID COMMA param
    (78) param -> . tipo ID param
    (79) param -> . empty
    (59) tipo -> . INT
    (60) tipo -> . FLOAT
    (61) tipo -> . CHAR
    (101) empty -> .

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20
    RP              reduce using rule 101 (empty -> .)

    tipo                           shift and go to state 63
    param                          shift and go to state 151
    empty                          shift and go to state 64

state 109

    (78) param -> tipo ID param .

    RP              reduce using rule 78 (param -> tipo ID param .)


state 110

    (70) funcion -> tipo ID LP param RP verificar . LB var_func statement RB

    LB              shift and go to state 152


state 111

    (72) funcion -> tipo ID LP RP verificar2 LB . var_func2 statement RB
    (76) var_func2 -> . vars
    (21) vars -> . VAR tipo vars1
    (22) vars -> . VAR tipo vars2
    (23) vars -> . VAR tipo vars3
    (24) vars -> . VAR tipo oper_aritmetica
    (25) vars -> . VAR tipo ID row SEMICOL
    (26) vars -> . VAR tipo ID matrix SEMICOL
    (27) vars -> . varsG
    (28) vars -> . var_row
    (29) vars -> . var_row vars
    (30) vars -> . var_matrix
    (31) vars -> . var_matrix vars
    (32) vars -> . empty
    (41) varsG -> . VAR tipo vars1G
    (42) varsG -> . VAR tipo vars2G
    (43) varsG -> . VAR tipo vars3G
    (44) varsG -> . VAR LB varsG RB
    (45) varsG -> . var_rowG
    (46) varsG -> . var_rowG varsG
    (47) varsG -> . var_matrixG
    (48) varsG -> . var_matrixG varsG
    (49) varsG -> . declarar_func varsG
    (50) varsG -> . empty
    (87) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (101) empty -> .
    (88) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (80) declarar_func -> . FUNC tipo ID SEMICOL
    (81) declarar_func -> . FUNC VOID ID SEMICOL
    (82) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (83) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL

  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
    VAR             shift and go to state 138
    ID              reduce using rule 101 (empty -> .)
    IF              reduce using rule 101 (empty -> .)
    WHILE           reduce using rule 101 (empty -> .)
    FOR             reduce using rule 101 (empty -> .)
    PRINT           reduce using rule 101 (empty -> .)
    READ            reduce using rule 101 (empty -> .)
    RB              reduce using rule 101 (empty -> .)
    FUNC            shift and go to state 12

  ! VAR             [ reduce using rule 101 (empty -> .) ]
  ! FUNC            [ reduce using rule 101 (empty -> .) ]

    var_func2                      shift and go to state 153
    vars                           shift and go to state 149
    varsG                          shift and go to state 139
    var_row                        shift and go to state 140
    var_matrix                     shift and go to state 141
    empty                          shift and go to state 150
    var_rowG                       shift and go to state 9
    var_matrixG                    shift and go to state 10
    declarar_func                  shift and go to state 11

state 112

    (88) var_rowG -> VAR tipo ID row IS LP lista2 . RP SEMICOL

    RP              shift and go to state 154


state 113

    (91) lista2 -> elem_lista . COMMA lista2
    (92) lista2 -> elem_lista . COMMA elem_lista

    COMMA           shift and go to state 155


state 114

    (89) elem_lista -> value .

    COMMA           reduce using rule 89 (elem_lista -> value .)
    RP              reduce using rule 89 (elem_lista -> value .)


state 115

    (90) elem_lista -> empty .

    COMMA           reduce using rule 90 (elem_lista -> empty .)
    RP              reduce using rule 90 (elem_lista -> empty .)


state 116

    (53) vars2G -> ID IS value check_type COMMA . vars2G
    (53) vars2G -> . ID IS value check_type COMMA vars2G
    (54) vars2G -> . ID IS value check_type SEMICOL varsG
    (55) vars2G -> . empty
    (101) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 156
    VOID            reduce using rule 101 (empty -> .)
    INT             reduce using rule 101 (empty -> .)
    FLOAT           reduce using rule 101 (empty -> .)
    CHAR            reduce using rule 101 (empty -> .)
    $end            reduce using rule 101 (empty -> .)
    RB              reduce using rule 101 (empty -> .)
    IF              reduce using rule 101 (empty -> .)
    VAR             reduce using rule 101 (empty -> .)
    WHILE           reduce using rule 101 (empty -> .)
    FOR             reduce using rule 101 (empty -> .)
    PRINT           reduce using rule 101 (empty -> .)
    READ            reduce using rule 101 (empty -> .)
    FUNC            reduce using rule 101 (empty -> .)

  ! ID              [ reduce using rule 101 (empty -> .) ]

    vars2G                         shift and go to state 157
    empty                          shift and go to state 39

state 117

    (54) vars2G -> ID IS value check_type SEMICOL . varsG
    (41) varsG -> . VAR tipo vars1G
    (42) varsG -> . VAR tipo vars2G
    (43) varsG -> . VAR tipo vars3G
    (44) varsG -> . VAR LB varsG RB
    (45) varsG -> . var_rowG
    (46) varsG -> . var_rowG varsG
    (47) varsG -> . var_matrixG
    (48) varsG -> . var_matrixG varsG
    (49) varsG -> . declarar_func varsG
    (50) varsG -> . empty
    (88) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (80) declarar_func -> . FUNC tipo ID SEMICOL
    (81) declarar_func -> . FUNC VOID ID SEMICOL
    (82) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (83) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL
    (101) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
    VAR             shift and go to state 8
    FUNC            shift and go to state 12
    VOID            reduce using rule 101 (empty -> .)
    INT             reduce using rule 101 (empty -> .)
    FLOAT           reduce using rule 101 (empty -> .)
    CHAR            reduce using rule 101 (empty -> .)
    $end            reduce using rule 101 (empty -> .)
    RB              reduce using rule 101 (empty -> .)
    ID              reduce using rule 101 (empty -> .)
    IF              reduce using rule 101 (empty -> .)
    WHILE           reduce using rule 101 (empty -> .)
    FOR             reduce using rule 101 (empty -> .)
    PRINT           reduce using rule 101 (empty -> .)
    READ            reduce using rule 101 (empty -> .)

  ! VAR             [ reduce using rule 101 (empty -> .) ]
  ! FUNC            [ reduce using rule 101 (empty -> .) ]

    varsG                          shift and go to state 158
    var_rowG                       shift and go to state 9
    var_matrixG                    shift and go to state 10
    declarar_func                  shift and go to state 11
    empty                          shift and go to state 24

state 118

    (66) value -> COMILLA ID COMILLA .

    COMMA           reduce using rule 66 (value -> COMILLA ID COMILLA .)
    SEMICOL         reduce using rule 66 (value -> COMILLA ID COMILLA .)
    RP              reduce using rule 66 (value -> COMILLA ID COMILLA .)


state 119

    (67) value -> COMILLAS ID COMILLAS .

    COMMA           reduce using rule 67 (value -> COMILLAS ID COMILLAS .)
    SEMICOL         reduce using rule 67 (value -> COMILLAS ID COMILLAS .)
    RP              reduce using rule 67 (value -> COMILLAS ID COMILLAS .)


state 120

    (95) var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .

    VAR             reduce using rule 95 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    FUNC            reduce using rule 95 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    VOID            reduce using rule 95 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    INT             reduce using rule 95 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    FLOAT           reduce using rule 95 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    CHAR            reduce using rule 95 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    $end            reduce using rule 95 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    RB              reduce using rule 95 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    ID              reduce using rule 95 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    IF              reduce using rule 95 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    WHILE           reduce using rule 95 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    FOR             reduce using rule 95 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    PRINT           reduce using rule 95 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    READ            reduce using rule 95 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)


state 121

    (96) matrix2 -> LP lista2 . RP COMMA matrix2
    (97) matrix2 -> LP lista2 . RP COMMA LP lista2 RP

    RP              shift and go to state 159


state 122

    (57) vars3G -> ID SEMICOL varsG .

    VOID            reduce using rule 57 (vars3G -> ID SEMICOL varsG .)
    INT             reduce using rule 57 (vars3G -> ID SEMICOL varsG .)
    FLOAT           reduce using rule 57 (vars3G -> ID SEMICOL varsG .)
    CHAR            reduce using rule 57 (vars3G -> ID SEMICOL varsG .)
    $end            reduce using rule 57 (vars3G -> ID SEMICOL varsG .)
    RB              reduce using rule 57 (vars3G -> ID SEMICOL varsG .)
    ID              reduce using rule 57 (vars3G -> ID SEMICOL varsG .)
    IF              reduce using rule 57 (vars3G -> ID SEMICOL varsG .)
    VAR             reduce using rule 57 (vars3G -> ID SEMICOL varsG .)
    WHILE           reduce using rule 57 (vars3G -> ID SEMICOL varsG .)
    FOR             reduce using rule 57 (vars3G -> ID SEMICOL varsG .)
    PRINT           reduce using rule 57 (vars3G -> ID SEMICOL varsG .)
    READ            reduce using rule 57 (vars3G -> ID SEMICOL varsG .)
    FUNC            reduce using rule 57 (vars3G -> ID SEMICOL varsG .)


state 123

    (84) declarar_param -> tipo COMMA declarar_param .

    RP              reduce using rule 84 (declarar_param -> tipo COMMA declarar_param .)


state 124

    (82) declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .

    VAR             reduce using rule 82 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    FUNC            reduce using rule 82 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    VOID            reduce using rule 82 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    INT             reduce using rule 82 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    FLOAT           reduce using rule 82 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    CHAR            reduce using rule 82 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    $end            reduce using rule 82 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    RB              reduce using rule 82 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    ID              reduce using rule 82 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    IF              reduce using rule 82 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    WHILE           reduce using rule 82 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    FOR             reduce using rule 82 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    PRINT           reduce using rule 82 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)
    READ            reduce using rule 82 (declarar_func -> FUNC tipo ID LP declarar_param RP SEMICOL .)


state 125

    (83) declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .

    VAR             reduce using rule 83 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    FUNC            reduce using rule 83 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    VOID            reduce using rule 83 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    INT             reduce using rule 83 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    FLOAT           reduce using rule 83 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    CHAR            reduce using rule 83 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    $end            reduce using rule 83 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    RB              reduce using rule 83 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    ID              reduce using rule 83 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    IF              reduce using rule 83 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    WHILE           reduce using rule 83 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    FOR             reduce using rule 83 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    PRINT           reduce using rule 83 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)
    READ            reduce using rule 83 (declarar_func -> FUNC VOID ID LP declarar_param RP SEMICOL .)


state 126

    (7) main -> tipo MAIN LP RP LB statement . RB

    RB              shift and go to state 160


state 127

    (9) statement -> asignacion . SEMICOL statement

    SEMICOL         shift and go to state 161


state 128

    (10) statement -> if . statement
    (9) statement -> . asignacion SEMICOL statement
    (10) statement -> . if statement
    (11) statement -> . vars statement
    (12) statement -> . while statement
    (13) statement -> . for statement
    (14) statement -> . escritura statement
    (15) statement -> . escritura_var statement
    (16) statement -> . lectura statement
    (17) statement -> . ID row SEMICOL
    (18) statement -> . ID matrix SEMICOL
    (19) statement -> . empty
    (20) asignacion -> . ID IS value
    (102) if -> . IF LP expression RP check_bool gotof LB statement RB
    (103) if -> . IF LP expression RP check_bool gotof LB statement RB goto elseif
    (104) if -> . IF LP expression RP check_bool gotof LB statement RB goto else
    (21) vars -> . VAR tipo vars1
    (22) vars -> . VAR tipo vars2
    (23) vars -> . VAR tipo vars3
    (24) vars -> . VAR tipo oper_aritmetica
    (25) vars -> . VAR tipo ID row SEMICOL
    (26) vars -> . VAR tipo ID matrix SEMICOL
    (27) vars -> . varsG
    (28) vars -> . var_row
    (29) vars -> . var_row vars
    (30) vars -> . var_matrix
    (31) vars -> . var_matrix vars
    (32) vars -> . empty
    (111) while -> . WHILE LP expression RP check_bool gotof LB statement RB goto
    (112) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (121) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (122) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (123) escritura_var -> . PRINT LP any_var RP SEMICOL
    (128) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (129) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (101) empty -> .
    (41) varsG -> . VAR tipo vars1G
    (42) varsG -> . VAR tipo vars2G
    (43) varsG -> . VAR tipo vars3G
    (44) varsG -> . VAR LB varsG RB
    (45) varsG -> . var_rowG
    (46) varsG -> . var_rowG varsG
    (47) varsG -> . var_matrixG
    (48) varsG -> . var_matrixG varsG
    (49) varsG -> . declarar_func varsG
    (50) varsG -> . empty
    (87) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (88) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (80) declarar_func -> . FUNC tipo ID SEMICOL
    (81) declarar_func -> . FUNC VOID ID SEMICOL
    (82) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (83) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
    ID              shift and go to state 135
    IF              shift and go to state 137
    VAR             shift and go to state 138
    WHILE           shift and go to state 142
    FOR             shift and go to state 143
    PRINT           shift and go to state 144
    READ            shift and go to state 145
    RB              reduce using rule 101 (empty -> .)
    FUNC            shift and go to state 12

  ! ID              [ reduce using rule 101 (empty -> .) ]
  ! IF              [ reduce using rule 101 (empty -> .) ]
  ! VAR             [ reduce using rule 101 (empty -> .) ]
  ! WHILE           [ reduce using rule 101 (empty -> .) ]
  ! FOR             [ reduce using rule 101 (empty -> .) ]
  ! PRINT           [ reduce using rule 101 (empty -> .) ]
  ! READ            [ reduce using rule 101 (empty -> .) ]
  ! FUNC            [ reduce using rule 101 (empty -> .) ]

    if                             shift and go to state 128
    statement                      shift and go to state 162
    asignacion                     shift and go to state 127
    vars                           shift and go to state 129
    while                          shift and go to state 130
    for                            shift and go to state 131
    escritura                      shift and go to state 132
    escritura_var                  shift and go to state 133
    lectura                        shift and go to state 134
    empty                          shift and go to state 136
    varsG                          shift and go to state 139
    var_row                        shift and go to state 140
    var_matrix                     shift and go to state 141
    var_rowG                       shift and go to state 9
    var_matrixG                    shift and go to state 10
    declarar_func                  shift and go to state 11

state 129

    (11) statement -> vars . statement
    (9) statement -> . asignacion SEMICOL statement
    (10) statement -> . if statement
    (11) statement -> . vars statement
    (12) statement -> . while statement
    (13) statement -> . for statement
    (14) statement -> . escritura statement
    (15) statement -> . escritura_var statement
    (16) statement -> . lectura statement
    (17) statement -> . ID row SEMICOL
    (18) statement -> . ID matrix SEMICOL
    (19) statement -> . empty
    (20) asignacion -> . ID IS value
    (102) if -> . IF LP expression RP check_bool gotof LB statement RB
    (103) if -> . IF LP expression RP check_bool gotof LB statement RB goto elseif
    (104) if -> . IF LP expression RP check_bool gotof LB statement RB goto else
    (21) vars -> . VAR tipo vars1
    (22) vars -> . VAR tipo vars2
    (23) vars -> . VAR tipo vars3
    (24) vars -> . VAR tipo oper_aritmetica
    (25) vars -> . VAR tipo ID row SEMICOL
    (26) vars -> . VAR tipo ID matrix SEMICOL
    (27) vars -> . varsG
    (28) vars -> . var_row
    (29) vars -> . var_row vars
    (30) vars -> . var_matrix
    (31) vars -> . var_matrix vars
    (32) vars -> . empty
    (111) while -> . WHILE LP expression RP check_bool gotof LB statement RB goto
    (112) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (121) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (122) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (123) escritura_var -> . PRINT LP any_var RP SEMICOL
    (128) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (129) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (101) empty -> .
    (41) varsG -> . VAR tipo vars1G
    (42) varsG -> . VAR tipo vars2G
    (43) varsG -> . VAR tipo vars3G
    (44) varsG -> . VAR LB varsG RB
    (45) varsG -> . var_rowG
    (46) varsG -> . var_rowG varsG
    (47) varsG -> . var_matrixG
    (48) varsG -> . var_matrixG varsG
    (49) varsG -> . declarar_func varsG
    (50) varsG -> . empty
    (87) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (88) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (80) declarar_func -> . FUNC tipo ID SEMICOL
    (81) declarar_func -> . FUNC VOID ID SEMICOL
    (82) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (83) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
    ID              shift and go to state 135
    IF              shift and go to state 137
    VAR             shift and go to state 138
    WHILE           shift and go to state 142
    FOR             shift and go to state 143
    PRINT           shift and go to state 144
    READ            shift and go to state 145
    RB              reduce using rule 101 (empty -> .)
    FUNC            shift and go to state 12

  ! ID              [ reduce using rule 101 (empty -> .) ]
  ! IF              [ reduce using rule 101 (empty -> .) ]
  ! VAR             [ reduce using rule 101 (empty -> .) ]
  ! WHILE           [ reduce using rule 101 (empty -> .) ]
  ! FOR             [ reduce using rule 101 (empty -> .) ]
  ! PRINT           [ reduce using rule 101 (empty -> .) ]
  ! READ            [ reduce using rule 101 (empty -> .) ]
  ! FUNC            [ reduce using rule 101 (empty -> .) ]

    vars                           shift and go to state 129
    statement                      shift and go to state 163
    asignacion                     shift and go to state 127
    if                             shift and go to state 128
    while                          shift and go to state 130
    for                            shift and go to state 131
    escritura                      shift and go to state 132
    escritura_var                  shift and go to state 133
    lectura                        shift and go to state 134
    empty                          shift and go to state 136
    varsG                          shift and go to state 139
    var_row                        shift and go to state 140
    var_matrix                     shift and go to state 141
    var_rowG                       shift and go to state 9
    var_matrixG                    shift and go to state 10
    declarar_func                  shift and go to state 11

state 130

    (12) statement -> while . statement
    (9) statement -> . asignacion SEMICOL statement
    (10) statement -> . if statement
    (11) statement -> . vars statement
    (12) statement -> . while statement
    (13) statement -> . for statement
    (14) statement -> . escritura statement
    (15) statement -> . escritura_var statement
    (16) statement -> . lectura statement
    (17) statement -> . ID row SEMICOL
    (18) statement -> . ID matrix SEMICOL
    (19) statement -> . empty
    (20) asignacion -> . ID IS value
    (102) if -> . IF LP expression RP check_bool gotof LB statement RB
    (103) if -> . IF LP expression RP check_bool gotof LB statement RB goto elseif
    (104) if -> . IF LP expression RP check_bool gotof LB statement RB goto else
    (21) vars -> . VAR tipo vars1
    (22) vars -> . VAR tipo vars2
    (23) vars -> . VAR tipo vars3
    (24) vars -> . VAR tipo oper_aritmetica
    (25) vars -> . VAR tipo ID row SEMICOL
    (26) vars -> . VAR tipo ID matrix SEMICOL
    (27) vars -> . varsG
    (28) vars -> . var_row
    (29) vars -> . var_row vars
    (30) vars -> . var_matrix
    (31) vars -> . var_matrix vars
    (32) vars -> . empty
    (111) while -> . WHILE LP expression RP check_bool gotof LB statement RB goto
    (112) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (121) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (122) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (123) escritura_var -> . PRINT LP any_var RP SEMICOL
    (128) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (129) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (101) empty -> .
    (41) varsG -> . VAR tipo vars1G
    (42) varsG -> . VAR tipo vars2G
    (43) varsG -> . VAR tipo vars3G
    (44) varsG -> . VAR LB varsG RB
    (45) varsG -> . var_rowG
    (46) varsG -> . var_rowG varsG
    (47) varsG -> . var_matrixG
    (48) varsG -> . var_matrixG varsG
    (49) varsG -> . declarar_func varsG
    (50) varsG -> . empty
    (87) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (88) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (80) declarar_func -> . FUNC tipo ID SEMICOL
    (81) declarar_func -> . FUNC VOID ID SEMICOL
    (82) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (83) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
    ID              shift and go to state 135
    IF              shift and go to state 137
    VAR             shift and go to state 138
    WHILE           shift and go to state 142
    FOR             shift and go to state 143
    PRINT           shift and go to state 144
    READ            shift and go to state 145
    RB              reduce using rule 101 (empty -> .)
    FUNC            shift and go to state 12

  ! ID              [ reduce using rule 101 (empty -> .) ]
  ! IF              [ reduce using rule 101 (empty -> .) ]
  ! VAR             [ reduce using rule 101 (empty -> .) ]
  ! WHILE           [ reduce using rule 101 (empty -> .) ]
  ! FOR             [ reduce using rule 101 (empty -> .) ]
  ! PRINT           [ reduce using rule 101 (empty -> .) ]
  ! READ            [ reduce using rule 101 (empty -> .) ]
  ! FUNC            [ reduce using rule 101 (empty -> .) ]

    while                          shift and go to state 130
    statement                      shift and go to state 164
    asignacion                     shift and go to state 127
    if                             shift and go to state 128
    vars                           shift and go to state 129
    for                            shift and go to state 131
    escritura                      shift and go to state 132
    escritura_var                  shift and go to state 133
    lectura                        shift and go to state 134
    empty                          shift and go to state 136
    varsG                          shift and go to state 139
    var_row                        shift and go to state 140
    var_matrix                     shift and go to state 141
    var_rowG                       shift and go to state 9
    var_matrixG                    shift and go to state 10
    declarar_func                  shift and go to state 11

state 131

    (13) statement -> for . statement
    (9) statement -> . asignacion SEMICOL statement
    (10) statement -> . if statement
    (11) statement -> . vars statement
    (12) statement -> . while statement
    (13) statement -> . for statement
    (14) statement -> . escritura statement
    (15) statement -> . escritura_var statement
    (16) statement -> . lectura statement
    (17) statement -> . ID row SEMICOL
    (18) statement -> . ID matrix SEMICOL
    (19) statement -> . empty
    (20) asignacion -> . ID IS value
    (102) if -> . IF LP expression RP check_bool gotof LB statement RB
    (103) if -> . IF LP expression RP check_bool gotof LB statement RB goto elseif
    (104) if -> . IF LP expression RP check_bool gotof LB statement RB goto else
    (21) vars -> . VAR tipo vars1
    (22) vars -> . VAR tipo vars2
    (23) vars -> . VAR tipo vars3
    (24) vars -> . VAR tipo oper_aritmetica
    (25) vars -> . VAR tipo ID row SEMICOL
    (26) vars -> . VAR tipo ID matrix SEMICOL
    (27) vars -> . varsG
    (28) vars -> . var_row
    (29) vars -> . var_row vars
    (30) vars -> . var_matrix
    (31) vars -> . var_matrix vars
    (32) vars -> . empty
    (111) while -> . WHILE LP expression RP check_bool gotof LB statement RB goto
    (112) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (121) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (122) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (123) escritura_var -> . PRINT LP any_var RP SEMICOL
    (128) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (129) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (101) empty -> .
    (41) varsG -> . VAR tipo vars1G
    (42) varsG -> . VAR tipo vars2G
    (43) varsG -> . VAR tipo vars3G
    (44) varsG -> . VAR LB varsG RB
    (45) varsG -> . var_rowG
    (46) varsG -> . var_rowG varsG
    (47) varsG -> . var_matrixG
    (48) varsG -> . var_matrixG varsG
    (49) varsG -> . declarar_func varsG
    (50) varsG -> . empty
    (87) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (88) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (80) declarar_func -> . FUNC tipo ID SEMICOL
    (81) declarar_func -> . FUNC VOID ID SEMICOL
    (82) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (83) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
    ID              shift and go to state 135
    IF              shift and go to state 137
    VAR             shift and go to state 138
    WHILE           shift and go to state 142
    FOR             shift and go to state 143
    PRINT           shift and go to state 144
    READ            shift and go to state 145
    RB              reduce using rule 101 (empty -> .)
    FUNC            shift and go to state 12

  ! ID              [ reduce using rule 101 (empty -> .) ]
  ! IF              [ reduce using rule 101 (empty -> .) ]
  ! VAR             [ reduce using rule 101 (empty -> .) ]
  ! WHILE           [ reduce using rule 101 (empty -> .) ]
  ! FOR             [ reduce using rule 101 (empty -> .) ]
  ! PRINT           [ reduce using rule 101 (empty -> .) ]
  ! READ            [ reduce using rule 101 (empty -> .) ]
  ! FUNC            [ reduce using rule 101 (empty -> .) ]

    for                            shift and go to state 131
    statement                      shift and go to state 165
    asignacion                     shift and go to state 127
    if                             shift and go to state 128
    vars                           shift and go to state 129
    while                          shift and go to state 130
    escritura                      shift and go to state 132
    escritura_var                  shift and go to state 133
    lectura                        shift and go to state 134
    empty                          shift and go to state 136
    varsG                          shift and go to state 139
    var_row                        shift and go to state 140
    var_matrix                     shift and go to state 141
    var_rowG                       shift and go to state 9
    var_matrixG                    shift and go to state 10
    declarar_func                  shift and go to state 11

state 132

    (14) statement -> escritura . statement
    (9) statement -> . asignacion SEMICOL statement
    (10) statement -> . if statement
    (11) statement -> . vars statement
    (12) statement -> . while statement
    (13) statement -> . for statement
    (14) statement -> . escritura statement
    (15) statement -> . escritura_var statement
    (16) statement -> . lectura statement
    (17) statement -> . ID row SEMICOL
    (18) statement -> . ID matrix SEMICOL
    (19) statement -> . empty
    (20) asignacion -> . ID IS value
    (102) if -> . IF LP expression RP check_bool gotof LB statement RB
    (103) if -> . IF LP expression RP check_bool gotof LB statement RB goto elseif
    (104) if -> . IF LP expression RP check_bool gotof LB statement RB goto else
    (21) vars -> . VAR tipo vars1
    (22) vars -> . VAR tipo vars2
    (23) vars -> . VAR tipo vars3
    (24) vars -> . VAR tipo oper_aritmetica
    (25) vars -> . VAR tipo ID row SEMICOL
    (26) vars -> . VAR tipo ID matrix SEMICOL
    (27) vars -> . varsG
    (28) vars -> . var_row
    (29) vars -> . var_row vars
    (30) vars -> . var_matrix
    (31) vars -> . var_matrix vars
    (32) vars -> . empty
    (111) while -> . WHILE LP expression RP check_bool gotof LB statement RB goto
    (112) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (121) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (122) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (123) escritura_var -> . PRINT LP any_var RP SEMICOL
    (128) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (129) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (101) empty -> .
    (41) varsG -> . VAR tipo vars1G
    (42) varsG -> . VAR tipo vars2G
    (43) varsG -> . VAR tipo vars3G
    (44) varsG -> . VAR LB varsG RB
    (45) varsG -> . var_rowG
    (46) varsG -> . var_rowG varsG
    (47) varsG -> . var_matrixG
    (48) varsG -> . var_matrixG varsG
    (49) varsG -> . declarar_func varsG
    (50) varsG -> . empty
    (87) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (88) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (80) declarar_func -> . FUNC tipo ID SEMICOL
    (81) declarar_func -> . FUNC VOID ID SEMICOL
    (82) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (83) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
    ID              shift and go to state 135
    IF              shift and go to state 137
    VAR             shift and go to state 138
    WHILE           shift and go to state 142
    FOR             shift and go to state 143
    PRINT           shift and go to state 144
    READ            shift and go to state 145
    RB              reduce using rule 101 (empty -> .)
    FUNC            shift and go to state 12

  ! ID              [ reduce using rule 101 (empty -> .) ]
  ! IF              [ reduce using rule 101 (empty -> .) ]
  ! VAR             [ reduce using rule 101 (empty -> .) ]
  ! WHILE           [ reduce using rule 101 (empty -> .) ]
  ! FOR             [ reduce using rule 101 (empty -> .) ]
  ! PRINT           [ reduce using rule 101 (empty -> .) ]
  ! READ            [ reduce using rule 101 (empty -> .) ]
  ! FUNC            [ reduce using rule 101 (empty -> .) ]

    escritura                      shift and go to state 132
    statement                      shift and go to state 166
    asignacion                     shift and go to state 127
    if                             shift and go to state 128
    vars                           shift and go to state 129
    while                          shift and go to state 130
    for                            shift and go to state 131
    escritura_var                  shift and go to state 133
    lectura                        shift and go to state 134
    empty                          shift and go to state 136
    varsG                          shift and go to state 139
    var_row                        shift and go to state 140
    var_matrix                     shift and go to state 141
    var_rowG                       shift and go to state 9
    var_matrixG                    shift and go to state 10
    declarar_func                  shift and go to state 11

state 133

    (15) statement -> escritura_var . statement
    (9) statement -> . asignacion SEMICOL statement
    (10) statement -> . if statement
    (11) statement -> . vars statement
    (12) statement -> . while statement
    (13) statement -> . for statement
    (14) statement -> . escritura statement
    (15) statement -> . escritura_var statement
    (16) statement -> . lectura statement
    (17) statement -> . ID row SEMICOL
    (18) statement -> . ID matrix SEMICOL
    (19) statement -> . empty
    (20) asignacion -> . ID IS value
    (102) if -> . IF LP expression RP check_bool gotof LB statement RB
    (103) if -> . IF LP expression RP check_bool gotof LB statement RB goto elseif
    (104) if -> . IF LP expression RP check_bool gotof LB statement RB goto else
    (21) vars -> . VAR tipo vars1
    (22) vars -> . VAR tipo vars2
    (23) vars -> . VAR tipo vars3
    (24) vars -> . VAR tipo oper_aritmetica
    (25) vars -> . VAR tipo ID row SEMICOL
    (26) vars -> . VAR tipo ID matrix SEMICOL
    (27) vars -> . varsG
    (28) vars -> . var_row
    (29) vars -> . var_row vars
    (30) vars -> . var_matrix
    (31) vars -> . var_matrix vars
    (32) vars -> . empty
    (111) while -> . WHILE LP expression RP check_bool gotof LB statement RB goto
    (112) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (121) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (122) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (123) escritura_var -> . PRINT LP any_var RP SEMICOL
    (128) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (129) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (101) empty -> .
    (41) varsG -> . VAR tipo vars1G
    (42) varsG -> . VAR tipo vars2G
    (43) varsG -> . VAR tipo vars3G
    (44) varsG -> . VAR LB varsG RB
    (45) varsG -> . var_rowG
    (46) varsG -> . var_rowG varsG
    (47) varsG -> . var_matrixG
    (48) varsG -> . var_matrixG varsG
    (49) varsG -> . declarar_func varsG
    (50) varsG -> . empty
    (87) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (88) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (80) declarar_func -> . FUNC tipo ID SEMICOL
    (81) declarar_func -> . FUNC VOID ID SEMICOL
    (82) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (83) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
    ID              shift and go to state 135
    IF              shift and go to state 137
    VAR             shift and go to state 138
    WHILE           shift and go to state 142
    FOR             shift and go to state 143
    PRINT           shift and go to state 144
    READ            shift and go to state 145
    RB              reduce using rule 101 (empty -> .)
    FUNC            shift and go to state 12

  ! ID              [ reduce using rule 101 (empty -> .) ]
  ! IF              [ reduce using rule 101 (empty -> .) ]
  ! VAR             [ reduce using rule 101 (empty -> .) ]
  ! WHILE           [ reduce using rule 101 (empty -> .) ]
  ! FOR             [ reduce using rule 101 (empty -> .) ]
  ! PRINT           [ reduce using rule 101 (empty -> .) ]
  ! READ            [ reduce using rule 101 (empty -> .) ]
  ! FUNC            [ reduce using rule 101 (empty -> .) ]

    escritura_var                  shift and go to state 133
    statement                      shift and go to state 167
    asignacion                     shift and go to state 127
    if                             shift and go to state 128
    vars                           shift and go to state 129
    while                          shift and go to state 130
    for                            shift and go to state 131
    escritura                      shift and go to state 132
    lectura                        shift and go to state 134
    empty                          shift and go to state 136
    varsG                          shift and go to state 139
    var_row                        shift and go to state 140
    var_matrix                     shift and go to state 141
    var_rowG                       shift and go to state 9
    var_matrixG                    shift and go to state 10
    declarar_func                  shift and go to state 11

state 134

    (16) statement -> lectura . statement
    (9) statement -> . asignacion SEMICOL statement
    (10) statement -> . if statement
    (11) statement -> . vars statement
    (12) statement -> . while statement
    (13) statement -> . for statement
    (14) statement -> . escritura statement
    (15) statement -> . escritura_var statement
    (16) statement -> . lectura statement
    (17) statement -> . ID row SEMICOL
    (18) statement -> . ID matrix SEMICOL
    (19) statement -> . empty
    (20) asignacion -> . ID IS value
    (102) if -> . IF LP expression RP check_bool gotof LB statement RB
    (103) if -> . IF LP expression RP check_bool gotof LB statement RB goto elseif
    (104) if -> . IF LP expression RP check_bool gotof LB statement RB goto else
    (21) vars -> . VAR tipo vars1
    (22) vars -> . VAR tipo vars2
    (23) vars -> . VAR tipo vars3
    (24) vars -> . VAR tipo oper_aritmetica
    (25) vars -> . VAR tipo ID row SEMICOL
    (26) vars -> . VAR tipo ID matrix SEMICOL
    (27) vars -> . varsG
    (28) vars -> . var_row
    (29) vars -> . var_row vars
    (30) vars -> . var_matrix
    (31) vars -> . var_matrix vars
    (32) vars -> . empty
    (111) while -> . WHILE LP expression RP check_bool gotof LB statement RB goto
    (112) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (121) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (122) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (123) escritura_var -> . PRINT LP any_var RP SEMICOL
    (128) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (129) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (101) empty -> .
    (41) varsG -> . VAR tipo vars1G
    (42) varsG -> . VAR tipo vars2G
    (43) varsG -> . VAR tipo vars3G
    (44) varsG -> . VAR LB varsG RB
    (45) varsG -> . var_rowG
    (46) varsG -> . var_rowG varsG
    (47) varsG -> . var_matrixG
    (48) varsG -> . var_matrixG varsG
    (49) varsG -> . declarar_func varsG
    (50) varsG -> . empty
    (87) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (88) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (80) declarar_func -> . FUNC tipo ID SEMICOL
    (81) declarar_func -> . FUNC VOID ID SEMICOL
    (82) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (83) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
    ID              shift and go to state 135
    IF              shift and go to state 137
    VAR             shift and go to state 138
    WHILE           shift and go to state 142
    FOR             shift and go to state 143
    PRINT           shift and go to state 144
    READ            shift and go to state 145
    RB              reduce using rule 101 (empty -> .)
    FUNC            shift and go to state 12

  ! ID              [ reduce using rule 101 (empty -> .) ]
  ! IF              [ reduce using rule 101 (empty -> .) ]
  ! VAR             [ reduce using rule 101 (empty -> .) ]
  ! WHILE           [ reduce using rule 101 (empty -> .) ]
  ! FOR             [ reduce using rule 101 (empty -> .) ]
  ! PRINT           [ reduce using rule 101 (empty -> .) ]
  ! READ            [ reduce using rule 101 (empty -> .) ]
  ! FUNC            [ reduce using rule 101 (empty -> .) ]

    lectura                        shift and go to state 134
    statement                      shift and go to state 168
    asignacion                     shift and go to state 127
    if                             shift and go to state 128
    vars                           shift and go to state 129
    while                          shift and go to state 130
    for                            shift and go to state 131
    escritura                      shift and go to state 132
    escritura_var                  shift and go to state 133
    empty                          shift and go to state 136
    varsG                          shift and go to state 139
    var_row                        shift and go to state 140
    var_matrix                     shift and go to state 141
    var_rowG                       shift and go to state 9
    var_matrixG                    shift and go to state 10
    declarar_func                  shift and go to state 11

state 135

    (17) statement -> ID . row SEMICOL
    (18) statement -> ID . matrix SEMICOL
    (20) asignacion -> ID . IS value
    (93) row -> . LC CTE_I RC
    (100) matrix -> . row row

    IS              shift and go to state 171
    LC              shift and go to state 53

    row                            shift and go to state 169
    matrix                         shift and go to state 170

state 136

    (19) statement -> empty .
    (32) vars -> empty .
    (50) varsG -> empty .

  ! reduce/reduce conflict for RB resolved using rule 19 (statement -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 32 (vars -> empty .)
  ! reduce/reduce conflict for IF resolved using rule 32 (vars -> empty .)
  ! reduce/reduce conflict for VAR resolved using rule 32 (vars -> empty .)
  ! reduce/reduce conflict for WHILE resolved using rule 32 (vars -> empty .)
  ! reduce/reduce conflict for FOR resolved using rule 32 (vars -> empty .)
  ! reduce/reduce conflict for PRINT resolved using rule 32 (vars -> empty .)
  ! reduce/reduce conflict for READ resolved using rule 32 (vars -> empty .)
  ! reduce/reduce conflict for FUNC resolved using rule 32 (vars -> empty .)
  ! reduce/reduce conflict for RB resolved using rule 19 (statement -> empty .)
    RB              reduce using rule 19 (statement -> empty .)
    ID              reduce using rule 32 (vars -> empty .)
    IF              reduce using rule 32 (vars -> empty .)
    VAR             reduce using rule 32 (vars -> empty .)
    WHILE           reduce using rule 32 (vars -> empty .)
    FOR             reduce using rule 32 (vars -> empty .)
    PRINT           reduce using rule 32 (vars -> empty .)
    READ            reduce using rule 32 (vars -> empty .)
    FUNC            reduce using rule 32 (vars -> empty .)

  ! RB              [ reduce using rule 32 (vars -> empty .) ]
  ! ID              [ reduce using rule 50 (varsG -> empty .) ]
  ! IF              [ reduce using rule 50 (varsG -> empty .) ]
  ! VAR             [ reduce using rule 50 (varsG -> empty .) ]
  ! WHILE           [ reduce using rule 50 (varsG -> empty .) ]
  ! FOR             [ reduce using rule 50 (varsG -> empty .) ]
  ! PRINT           [ reduce using rule 50 (varsG -> empty .) ]
  ! READ            [ reduce using rule 50 (varsG -> empty .) ]
  ! FUNC            [ reduce using rule 50 (varsG -> empty .) ]
  ! RB              [ reduce using rule 50 (varsG -> empty .) ]


state 137

    (102) if -> IF . LP expression RP check_bool gotof LB statement RB
    (103) if -> IF . LP expression RP check_bool gotof LB statement RB goto elseif
    (104) if -> IF . LP expression RP check_bool gotof LB statement RB goto else

    LP              shift and go to state 172


state 138

    (21) vars -> VAR . tipo vars1
    (22) vars -> VAR . tipo vars2
    (23) vars -> VAR . tipo vars3
    (24) vars -> VAR . tipo oper_aritmetica
    (25) vars -> VAR . tipo ID row SEMICOL
    (26) vars -> VAR . tipo ID matrix SEMICOL
    (41) varsG -> VAR . tipo vars1G
    (42) varsG -> VAR . tipo vars2G
    (43) varsG -> VAR . tipo vars3G
    (44) varsG -> VAR . LB varsG RB
    (87) var_row -> VAR . tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrix -> VAR . tipo ID matrix IS matrix2 SEMICOL
    (88) var_rowG -> VAR . tipo ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> VAR . tipo ID matrix IS matrix2 SEMICOL
    (59) tipo -> . INT
    (60) tipo -> . FLOAT
    (61) tipo -> . CHAR

    LB              shift and go to state 22
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    tipo                           shift and go to state 173

state 139

    (27) vars -> varsG .

    ID              reduce using rule 27 (vars -> varsG .)
    IF              reduce using rule 27 (vars -> varsG .)
    VAR             reduce using rule 27 (vars -> varsG .)
    WHILE           reduce using rule 27 (vars -> varsG .)
    FOR             reduce using rule 27 (vars -> varsG .)
    PRINT           reduce using rule 27 (vars -> varsG .)
    READ            reduce using rule 27 (vars -> varsG .)
    FUNC            reduce using rule 27 (vars -> varsG .)
    RB              reduce using rule 27 (vars -> varsG .)


state 140

    (28) vars -> var_row .
    (29) vars -> var_row . vars
    (21) vars -> . VAR tipo vars1
    (22) vars -> . VAR tipo vars2
    (23) vars -> . VAR tipo vars3
    (24) vars -> . VAR tipo oper_aritmetica
    (25) vars -> . VAR tipo ID row SEMICOL
    (26) vars -> . VAR tipo ID matrix SEMICOL
    (27) vars -> . varsG
    (28) vars -> . var_row
    (29) vars -> . var_row vars
    (30) vars -> . var_matrix
    (31) vars -> . var_matrix vars
    (32) vars -> . empty
    (41) varsG -> . VAR tipo vars1G
    (42) varsG -> . VAR tipo vars2G
    (43) varsG -> . VAR tipo vars3G
    (44) varsG -> . VAR LB varsG RB
    (45) varsG -> . var_rowG
    (46) varsG -> . var_rowG varsG
    (47) varsG -> . var_matrixG
    (48) varsG -> . var_matrixG varsG
    (49) varsG -> . declarar_func varsG
    (50) varsG -> . empty
    (87) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (101) empty -> .
    (88) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (80) declarar_func -> . FUNC tipo ID SEMICOL
    (81) declarar_func -> . FUNC VOID ID SEMICOL
    (82) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (83) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL

  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for ID resolved using rule 28 (vars -> var_row .)
  ! reduce/reduce conflict for IF resolved using rule 28 (vars -> var_row .)
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for WHILE resolved using rule 28 (vars -> var_row .)
  ! reduce/reduce conflict for FOR resolved using rule 28 (vars -> var_row .)
  ! reduce/reduce conflict for PRINT resolved using rule 28 (vars -> var_row .)
  ! reduce/reduce conflict for READ resolved using rule 28 (vars -> var_row .)
  ! reduce/reduce conflict for FUNC resolved using rule 28 (vars -> var_row .)
  ! reduce/reduce conflict for RB resolved using rule 28 (vars -> var_row .)
  ! shift/reduce conflict for FUNC resolved as shift
    ID              reduce using rule 28 (vars -> var_row .)
    IF              reduce using rule 28 (vars -> var_row .)
    WHILE           reduce using rule 28 (vars -> var_row .)
    FOR             reduce using rule 28 (vars -> var_row .)
    PRINT           reduce using rule 28 (vars -> var_row .)
    READ            reduce using rule 28 (vars -> var_row .)
    RB              reduce using rule 28 (vars -> var_row .)
    VAR             shift and go to state 138
    FUNC            shift and go to state 12

  ! VAR             [ reduce using rule 28 (vars -> var_row .) ]
  ! FUNC            [ reduce using rule 28 (vars -> var_row .) ]
  ! ID              [ reduce using rule 101 (empty -> .) ]
  ! IF              [ reduce using rule 101 (empty -> .) ]
  ! VAR             [ reduce using rule 101 (empty -> .) ]
  ! WHILE           [ reduce using rule 101 (empty -> .) ]
  ! FOR             [ reduce using rule 101 (empty -> .) ]
  ! PRINT           [ reduce using rule 101 (empty -> .) ]
  ! READ            [ reduce using rule 101 (empty -> .) ]
  ! FUNC            [ reduce using rule 101 (empty -> .) ]
  ! RB              [ reduce using rule 101 (empty -> .) ]

    var_row                        shift and go to state 140
    vars                           shift and go to state 174
    varsG                          shift and go to state 139
    var_matrix                     shift and go to state 141
    empty                          shift and go to state 150
    var_rowG                       shift and go to state 9
    var_matrixG                    shift and go to state 10
    declarar_func                  shift and go to state 11

state 141

    (30) vars -> var_matrix .
    (31) vars -> var_matrix . vars
    (21) vars -> . VAR tipo vars1
    (22) vars -> . VAR tipo vars2
    (23) vars -> . VAR tipo vars3
    (24) vars -> . VAR tipo oper_aritmetica
    (25) vars -> . VAR tipo ID row SEMICOL
    (26) vars -> . VAR tipo ID matrix SEMICOL
    (27) vars -> . varsG
    (28) vars -> . var_row
    (29) vars -> . var_row vars
    (30) vars -> . var_matrix
    (31) vars -> . var_matrix vars
    (32) vars -> . empty
    (41) varsG -> . VAR tipo vars1G
    (42) varsG -> . VAR tipo vars2G
    (43) varsG -> . VAR tipo vars3G
    (44) varsG -> . VAR LB varsG RB
    (45) varsG -> . var_rowG
    (46) varsG -> . var_rowG varsG
    (47) varsG -> . var_matrixG
    (48) varsG -> . var_matrixG varsG
    (49) varsG -> . declarar_func varsG
    (50) varsG -> . empty
    (87) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (101) empty -> .
    (88) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (80) declarar_func -> . FUNC tipo ID SEMICOL
    (81) declarar_func -> . FUNC VOID ID SEMICOL
    (82) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (83) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL

  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for ID resolved using rule 30 (vars -> var_matrix .)
  ! reduce/reduce conflict for IF resolved using rule 30 (vars -> var_matrix .)
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for WHILE resolved using rule 30 (vars -> var_matrix .)
  ! reduce/reduce conflict for FOR resolved using rule 30 (vars -> var_matrix .)
  ! reduce/reduce conflict for PRINT resolved using rule 30 (vars -> var_matrix .)
  ! reduce/reduce conflict for READ resolved using rule 30 (vars -> var_matrix .)
  ! reduce/reduce conflict for FUNC resolved using rule 30 (vars -> var_matrix .)
  ! reduce/reduce conflict for RB resolved using rule 30 (vars -> var_matrix .)
  ! shift/reduce conflict for FUNC resolved as shift
    ID              reduce using rule 30 (vars -> var_matrix .)
    IF              reduce using rule 30 (vars -> var_matrix .)
    WHILE           reduce using rule 30 (vars -> var_matrix .)
    FOR             reduce using rule 30 (vars -> var_matrix .)
    PRINT           reduce using rule 30 (vars -> var_matrix .)
    READ            reduce using rule 30 (vars -> var_matrix .)
    RB              reduce using rule 30 (vars -> var_matrix .)
    VAR             shift and go to state 138
    FUNC            shift and go to state 12

  ! VAR             [ reduce using rule 30 (vars -> var_matrix .) ]
  ! FUNC            [ reduce using rule 30 (vars -> var_matrix .) ]
  ! ID              [ reduce using rule 101 (empty -> .) ]
  ! IF              [ reduce using rule 101 (empty -> .) ]
  ! VAR             [ reduce using rule 101 (empty -> .) ]
  ! WHILE           [ reduce using rule 101 (empty -> .) ]
  ! FOR             [ reduce using rule 101 (empty -> .) ]
  ! PRINT           [ reduce using rule 101 (empty -> .) ]
  ! READ            [ reduce using rule 101 (empty -> .) ]
  ! FUNC            [ reduce using rule 101 (empty -> .) ]
  ! RB              [ reduce using rule 101 (empty -> .) ]

    var_matrix                     shift and go to state 141
    vars                           shift and go to state 175
    varsG                          shift and go to state 139
    var_row                        shift and go to state 140
    empty                          shift and go to state 150
    var_rowG                       shift and go to state 9
    var_matrixG                    shift and go to state 10
    declarar_func                  shift and go to state 11

state 142

    (111) while -> WHILE . LP expression RP check_bool gotof LB statement RB goto

    LP              shift and go to state 176


state 143

    (112) for -> FOR . LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto

    LP              shift and go to state 177


state 144

    (121) escritura -> PRINT . LP COMILLA any COMILLA RP SEMICOL
    (122) escritura -> PRINT . LP COMILLAS any COMILLAS RP SEMICOL
    (123) escritura_var -> PRINT . LP any_var RP SEMICOL

    LP              shift and go to state 178


state 145

    (128) lectura -> READ . LP COMILLA any_lectura COMILLA RP SEMICOL
    (129) lectura -> READ . LP COMILLAS any_lectura COMILLAS RP SEMICOL

    LP              shift and go to state 179


state 146

    (8) main -> VOID tipo MAIN LP RP LB . statement RB
    (9) statement -> . asignacion SEMICOL statement
    (10) statement -> . if statement
    (11) statement -> . vars statement
    (12) statement -> . while statement
    (13) statement -> . for statement
    (14) statement -> . escritura statement
    (15) statement -> . escritura_var statement
    (16) statement -> . lectura statement
    (17) statement -> . ID row SEMICOL
    (18) statement -> . ID matrix SEMICOL
    (19) statement -> . empty
    (20) asignacion -> . ID IS value
    (102) if -> . IF LP expression RP check_bool gotof LB statement RB
    (103) if -> . IF LP expression RP check_bool gotof LB statement RB goto elseif
    (104) if -> . IF LP expression RP check_bool gotof LB statement RB goto else
    (21) vars -> . VAR tipo vars1
    (22) vars -> . VAR tipo vars2
    (23) vars -> . VAR tipo vars3
    (24) vars -> . VAR tipo oper_aritmetica
    (25) vars -> . VAR tipo ID row SEMICOL
    (26) vars -> . VAR tipo ID matrix SEMICOL
    (27) vars -> . varsG
    (28) vars -> . var_row
    (29) vars -> . var_row vars
    (30) vars -> . var_matrix
    (31) vars -> . var_matrix vars
    (32) vars -> . empty
    (111) while -> . WHILE LP expression RP check_bool gotof LB statement RB goto
    (112) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (121) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (122) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (123) escritura_var -> . PRINT LP any_var RP SEMICOL
    (128) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (129) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (101) empty -> .
    (41) varsG -> . VAR tipo vars1G
    (42) varsG -> . VAR tipo vars2G
    (43) varsG -> . VAR tipo vars3G
    (44) varsG -> . VAR LB varsG RB
    (45) varsG -> . var_rowG
    (46) varsG -> . var_rowG varsG
    (47) varsG -> . var_matrixG
    (48) varsG -> . var_matrixG varsG
    (49) varsG -> . declarar_func varsG
    (50) varsG -> . empty
    (87) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (88) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (80) declarar_func -> . FUNC tipo ID SEMICOL
    (81) declarar_func -> . FUNC VOID ID SEMICOL
    (82) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (83) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
    ID              shift and go to state 135
    IF              shift and go to state 137
    VAR             shift and go to state 138
    WHILE           shift and go to state 142
    FOR             shift and go to state 143
    PRINT           shift and go to state 144
    READ            shift and go to state 145
    RB              reduce using rule 101 (empty -> .)
    FUNC            shift and go to state 12

  ! ID              [ reduce using rule 101 (empty -> .) ]
  ! IF              [ reduce using rule 101 (empty -> .) ]
  ! VAR             [ reduce using rule 101 (empty -> .) ]
  ! WHILE           [ reduce using rule 101 (empty -> .) ]
  ! FOR             [ reduce using rule 101 (empty -> .) ]
  ! PRINT           [ reduce using rule 101 (empty -> .) ]
  ! READ            [ reduce using rule 101 (empty -> .) ]
  ! FUNC            [ reduce using rule 101 (empty -> .) ]

    statement                      shift and go to state 180
    asignacion                     shift and go to state 127
    if                             shift and go to state 128
    vars                           shift and go to state 129
    while                          shift and go to state 130
    for                            shift and go to state 131
    escritura                      shift and go to state 132
    escritura_var                  shift and go to state 133
    lectura                        shift and go to state 134
    empty                          shift and go to state 136
    varsG                          shift and go to state 139
    var_row                        shift and go to state 140
    var_matrix                     shift and go to state 141
    var_rowG                       shift and go to state 9
    var_matrixG                    shift and go to state 10
    declarar_func                  shift and go to state 11

state 147

    (69) funcion -> VOID ID LP param RP verificar LB . var_func statement RB
    (75) var_func -> . vars
    (21) vars -> . VAR tipo vars1
    (22) vars -> . VAR tipo vars2
    (23) vars -> . VAR tipo vars3
    (24) vars -> . VAR tipo oper_aritmetica
    (25) vars -> . VAR tipo ID row SEMICOL
    (26) vars -> . VAR tipo ID matrix SEMICOL
    (27) vars -> . varsG
    (28) vars -> . var_row
    (29) vars -> . var_row vars
    (30) vars -> . var_matrix
    (31) vars -> . var_matrix vars
    (32) vars -> . empty
    (41) varsG -> . VAR tipo vars1G
    (42) varsG -> . VAR tipo vars2G
    (43) varsG -> . VAR tipo vars3G
    (44) varsG -> . VAR LB varsG RB
    (45) varsG -> . var_rowG
    (46) varsG -> . var_rowG varsG
    (47) varsG -> . var_matrixG
    (48) varsG -> . var_matrixG varsG
    (49) varsG -> . declarar_func varsG
    (50) varsG -> . empty
    (87) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (101) empty -> .
    (88) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (80) declarar_func -> . FUNC tipo ID SEMICOL
    (81) declarar_func -> . FUNC VOID ID SEMICOL
    (82) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (83) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL

  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
    VAR             shift and go to state 138
    ID              reduce using rule 101 (empty -> .)
    IF              reduce using rule 101 (empty -> .)
    WHILE           reduce using rule 101 (empty -> .)
    FOR             reduce using rule 101 (empty -> .)
    PRINT           reduce using rule 101 (empty -> .)
    READ            reduce using rule 101 (empty -> .)
    RB              reduce using rule 101 (empty -> .)
    FUNC            shift and go to state 12

  ! VAR             [ reduce using rule 101 (empty -> .) ]
  ! FUNC            [ reduce using rule 101 (empty -> .) ]

    var_func                       shift and go to state 181
    vars                           shift and go to state 182
    varsG                          shift and go to state 139
    var_row                        shift and go to state 140
    var_matrix                     shift and go to state 141
    empty                          shift and go to state 150
    var_rowG                       shift and go to state 9
    var_matrixG                    shift and go to state 10
    declarar_func                  shift and go to state 11

state 148

    (71) funcion -> VOID ID LP RP verificar2 LB var_func2 . statement RB
    (9) statement -> . asignacion SEMICOL statement
    (10) statement -> . if statement
    (11) statement -> . vars statement
    (12) statement -> . while statement
    (13) statement -> . for statement
    (14) statement -> . escritura statement
    (15) statement -> . escritura_var statement
    (16) statement -> . lectura statement
    (17) statement -> . ID row SEMICOL
    (18) statement -> . ID matrix SEMICOL
    (19) statement -> . empty
    (20) asignacion -> . ID IS value
    (102) if -> . IF LP expression RP check_bool gotof LB statement RB
    (103) if -> . IF LP expression RP check_bool gotof LB statement RB goto elseif
    (104) if -> . IF LP expression RP check_bool gotof LB statement RB goto else
    (21) vars -> . VAR tipo vars1
    (22) vars -> . VAR tipo vars2
    (23) vars -> . VAR tipo vars3
    (24) vars -> . VAR tipo oper_aritmetica
    (25) vars -> . VAR tipo ID row SEMICOL
    (26) vars -> . VAR tipo ID matrix SEMICOL
    (27) vars -> . varsG
    (28) vars -> . var_row
    (29) vars -> . var_row vars
    (30) vars -> . var_matrix
    (31) vars -> . var_matrix vars
    (32) vars -> . empty
    (111) while -> . WHILE LP expression RP check_bool gotof LB statement RB goto
    (112) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (121) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (122) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (123) escritura_var -> . PRINT LP any_var RP SEMICOL
    (128) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (129) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (101) empty -> .
    (41) varsG -> . VAR tipo vars1G
    (42) varsG -> . VAR tipo vars2G
    (43) varsG -> . VAR tipo vars3G
    (44) varsG -> . VAR LB varsG RB
    (45) varsG -> . var_rowG
    (46) varsG -> . var_rowG varsG
    (47) varsG -> . var_matrixG
    (48) varsG -> . var_matrixG varsG
    (49) varsG -> . declarar_func varsG
    (50) varsG -> . empty
    (87) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (88) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (80) declarar_func -> . FUNC tipo ID SEMICOL
    (81) declarar_func -> . FUNC VOID ID SEMICOL
    (82) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (83) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
    ID              shift and go to state 135
    IF              shift and go to state 137
    VAR             shift and go to state 138
    WHILE           shift and go to state 142
    FOR             shift and go to state 143
    PRINT           shift and go to state 144
    READ            shift and go to state 145
    RB              reduce using rule 101 (empty -> .)
    FUNC            shift and go to state 12

  ! ID              [ reduce using rule 101 (empty -> .) ]
  ! IF              [ reduce using rule 101 (empty -> .) ]
  ! VAR             [ reduce using rule 101 (empty -> .) ]
  ! WHILE           [ reduce using rule 101 (empty -> .) ]
  ! FOR             [ reduce using rule 101 (empty -> .) ]
  ! PRINT           [ reduce using rule 101 (empty -> .) ]
  ! READ            [ reduce using rule 101 (empty -> .) ]
  ! FUNC            [ reduce using rule 101 (empty -> .) ]

    statement                      shift and go to state 183
    asignacion                     shift and go to state 127
    if                             shift and go to state 128
    vars                           shift and go to state 129
    while                          shift and go to state 130
    for                            shift and go to state 131
    escritura                      shift and go to state 132
    escritura_var                  shift and go to state 133
    lectura                        shift and go to state 134
    empty                          shift and go to state 136
    varsG                          shift and go to state 139
    var_row                        shift and go to state 140
    var_matrix                     shift and go to state 141
    var_rowG                       shift and go to state 9
    var_matrixG                    shift and go to state 10
    declarar_func                  shift and go to state 11

state 149

    (76) var_func2 -> vars .

    ID              reduce using rule 76 (var_func2 -> vars .)
    IF              reduce using rule 76 (var_func2 -> vars .)
    VAR             reduce using rule 76 (var_func2 -> vars .)
    WHILE           reduce using rule 76 (var_func2 -> vars .)
    FOR             reduce using rule 76 (var_func2 -> vars .)
    PRINT           reduce using rule 76 (var_func2 -> vars .)
    READ            reduce using rule 76 (var_func2 -> vars .)
    FUNC            reduce using rule 76 (var_func2 -> vars .)
    RB              reduce using rule 76 (var_func2 -> vars .)


state 150

    (32) vars -> empty .
    (50) varsG -> empty .

  ! reduce/reduce conflict for ID resolved using rule 32 (vars -> empty .)
  ! reduce/reduce conflict for IF resolved using rule 32 (vars -> empty .)
  ! reduce/reduce conflict for VAR resolved using rule 32 (vars -> empty .)
  ! reduce/reduce conflict for WHILE resolved using rule 32 (vars -> empty .)
  ! reduce/reduce conflict for FOR resolved using rule 32 (vars -> empty .)
  ! reduce/reduce conflict for PRINT resolved using rule 32 (vars -> empty .)
  ! reduce/reduce conflict for READ resolved using rule 32 (vars -> empty .)
  ! reduce/reduce conflict for FUNC resolved using rule 32 (vars -> empty .)
  ! reduce/reduce conflict for RB resolved using rule 32 (vars -> empty .)
    ID              reduce using rule 32 (vars -> empty .)
    IF              reduce using rule 32 (vars -> empty .)
    VAR             reduce using rule 32 (vars -> empty .)
    WHILE           reduce using rule 32 (vars -> empty .)
    FOR             reduce using rule 32 (vars -> empty .)
    PRINT           reduce using rule 32 (vars -> empty .)
    READ            reduce using rule 32 (vars -> empty .)
    FUNC            reduce using rule 32 (vars -> empty .)
    RB              reduce using rule 32 (vars -> empty .)

  ! ID              [ reduce using rule 50 (varsG -> empty .) ]
  ! IF              [ reduce using rule 50 (varsG -> empty .) ]
  ! VAR             [ reduce using rule 50 (varsG -> empty .) ]
  ! WHILE           [ reduce using rule 50 (varsG -> empty .) ]
  ! FOR             [ reduce using rule 50 (varsG -> empty .) ]
  ! PRINT           [ reduce using rule 50 (varsG -> empty .) ]
  ! READ            [ reduce using rule 50 (varsG -> empty .) ]
  ! FUNC            [ reduce using rule 50 (varsG -> empty .) ]
  ! RB              [ reduce using rule 50 (varsG -> empty .) ]


state 151

    (77) param -> tipo ID COMMA param .

    RP              reduce using rule 77 (param -> tipo ID COMMA param .)


state 152

    (70) funcion -> tipo ID LP param RP verificar LB . var_func statement RB
    (75) var_func -> . vars
    (21) vars -> . VAR tipo vars1
    (22) vars -> . VAR tipo vars2
    (23) vars -> . VAR tipo vars3
    (24) vars -> . VAR tipo oper_aritmetica
    (25) vars -> . VAR tipo ID row SEMICOL
    (26) vars -> . VAR tipo ID matrix SEMICOL
    (27) vars -> . varsG
    (28) vars -> . var_row
    (29) vars -> . var_row vars
    (30) vars -> . var_matrix
    (31) vars -> . var_matrix vars
    (32) vars -> . empty
    (41) varsG -> . VAR tipo vars1G
    (42) varsG -> . VAR tipo vars2G
    (43) varsG -> . VAR tipo vars3G
    (44) varsG -> . VAR LB varsG RB
    (45) varsG -> . var_rowG
    (46) varsG -> . var_rowG varsG
    (47) varsG -> . var_matrixG
    (48) varsG -> . var_matrixG varsG
    (49) varsG -> . declarar_func varsG
    (50) varsG -> . empty
    (87) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (101) empty -> .
    (88) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (80) declarar_func -> . FUNC tipo ID SEMICOL
    (81) declarar_func -> . FUNC VOID ID SEMICOL
    (82) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (83) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL

  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
    VAR             shift and go to state 138
    ID              reduce using rule 101 (empty -> .)
    IF              reduce using rule 101 (empty -> .)
    WHILE           reduce using rule 101 (empty -> .)
    FOR             reduce using rule 101 (empty -> .)
    PRINT           reduce using rule 101 (empty -> .)
    READ            reduce using rule 101 (empty -> .)
    RB              reduce using rule 101 (empty -> .)
    FUNC            shift and go to state 12

  ! VAR             [ reduce using rule 101 (empty -> .) ]
  ! FUNC            [ reduce using rule 101 (empty -> .) ]

    var_func                       shift and go to state 184
    vars                           shift and go to state 182
    varsG                          shift and go to state 139
    var_row                        shift and go to state 140
    var_matrix                     shift and go to state 141
    empty                          shift and go to state 150
    var_rowG                       shift and go to state 9
    var_matrixG                    shift and go to state 10
    declarar_func                  shift and go to state 11

state 153

    (72) funcion -> tipo ID LP RP verificar2 LB var_func2 . statement RB
    (9) statement -> . asignacion SEMICOL statement
    (10) statement -> . if statement
    (11) statement -> . vars statement
    (12) statement -> . while statement
    (13) statement -> . for statement
    (14) statement -> . escritura statement
    (15) statement -> . escritura_var statement
    (16) statement -> . lectura statement
    (17) statement -> . ID row SEMICOL
    (18) statement -> . ID matrix SEMICOL
    (19) statement -> . empty
    (20) asignacion -> . ID IS value
    (102) if -> . IF LP expression RP check_bool gotof LB statement RB
    (103) if -> . IF LP expression RP check_bool gotof LB statement RB goto elseif
    (104) if -> . IF LP expression RP check_bool gotof LB statement RB goto else
    (21) vars -> . VAR tipo vars1
    (22) vars -> . VAR tipo vars2
    (23) vars -> . VAR tipo vars3
    (24) vars -> . VAR tipo oper_aritmetica
    (25) vars -> . VAR tipo ID row SEMICOL
    (26) vars -> . VAR tipo ID matrix SEMICOL
    (27) vars -> . varsG
    (28) vars -> . var_row
    (29) vars -> . var_row vars
    (30) vars -> . var_matrix
    (31) vars -> . var_matrix vars
    (32) vars -> . empty
    (111) while -> . WHILE LP expression RP check_bool gotof LB statement RB goto
    (112) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (121) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (122) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (123) escritura_var -> . PRINT LP any_var RP SEMICOL
    (128) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (129) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (101) empty -> .
    (41) varsG -> . VAR tipo vars1G
    (42) varsG -> . VAR tipo vars2G
    (43) varsG -> . VAR tipo vars3G
    (44) varsG -> . VAR LB varsG RB
    (45) varsG -> . var_rowG
    (46) varsG -> . var_rowG varsG
    (47) varsG -> . var_matrixG
    (48) varsG -> . var_matrixG varsG
    (49) varsG -> . declarar_func varsG
    (50) varsG -> . empty
    (87) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (88) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (80) declarar_func -> . FUNC tipo ID SEMICOL
    (81) declarar_func -> . FUNC VOID ID SEMICOL
    (82) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (83) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
    ID              shift and go to state 135
    IF              shift and go to state 137
    VAR             shift and go to state 138
    WHILE           shift and go to state 142
    FOR             shift and go to state 143
    PRINT           shift and go to state 144
    READ            shift and go to state 145
    RB              reduce using rule 101 (empty -> .)
    FUNC            shift and go to state 12

  ! ID              [ reduce using rule 101 (empty -> .) ]
  ! IF              [ reduce using rule 101 (empty -> .) ]
  ! VAR             [ reduce using rule 101 (empty -> .) ]
  ! WHILE           [ reduce using rule 101 (empty -> .) ]
  ! FOR             [ reduce using rule 101 (empty -> .) ]
  ! PRINT           [ reduce using rule 101 (empty -> .) ]
  ! READ            [ reduce using rule 101 (empty -> .) ]
  ! FUNC            [ reduce using rule 101 (empty -> .) ]

    statement                      shift and go to state 185
    asignacion                     shift and go to state 127
    if                             shift and go to state 128
    vars                           shift and go to state 129
    while                          shift and go to state 130
    for                            shift and go to state 131
    escritura                      shift and go to state 132
    escritura_var                  shift and go to state 133
    lectura                        shift and go to state 134
    empty                          shift and go to state 136
    varsG                          shift and go to state 139
    var_row                        shift and go to state 140
    var_matrix                     shift and go to state 141
    var_rowG                       shift and go to state 9
    var_matrixG                    shift and go to state 10
    declarar_func                  shift and go to state 11

state 154

    (88) var_rowG -> VAR tipo ID row IS LP lista2 RP . SEMICOL

    SEMICOL         shift and go to state 186


state 155

    (91) lista2 -> elem_lista COMMA . lista2
    (92) lista2 -> elem_lista COMMA . elem_lista
    (91) lista2 -> . elem_lista COMMA lista2
    (92) lista2 -> . elem_lista COMMA elem_lista
    (89) elem_lista -> . value
    (90) elem_lista -> . empty
    (62) value -> . CTE_F
    (63) value -> . CTE_I
    (64) value -> . ID
    (65) value -> . CTE_C
    (66) value -> . COMILLA ID COMILLA
    (67) value -> . COMILLAS ID COMILLAS
    (101) empty -> .

    CTE_F           shift and go to state 71
    CTE_I           shift and go to state 72
    ID              shift and go to state 69
    CTE_C           shift and go to state 73
    COMILLA         shift and go to state 74
    COMILLAS        shift and go to state 75
    COMMA           reduce using rule 101 (empty -> .)
    RP              reduce using rule 101 (empty -> .)

    elem_lista                     shift and go to state 187
    lista2                         shift and go to state 188
    value                          shift and go to state 114
    empty                          shift and go to state 115

state 156

    (53) vars2G -> ID . IS value check_type COMMA vars2G
    (54) vars2G -> ID . IS value check_type SEMICOL varsG

    IS              shift and go to state 49


state 157

    (53) vars2G -> ID IS value check_type COMMA vars2G .

    VOID            reduce using rule 53 (vars2G -> ID IS value check_type COMMA vars2G .)
    INT             reduce using rule 53 (vars2G -> ID IS value check_type COMMA vars2G .)
    FLOAT           reduce using rule 53 (vars2G -> ID IS value check_type COMMA vars2G .)
    CHAR            reduce using rule 53 (vars2G -> ID IS value check_type COMMA vars2G .)
    $end            reduce using rule 53 (vars2G -> ID IS value check_type COMMA vars2G .)
    RB              reduce using rule 53 (vars2G -> ID IS value check_type COMMA vars2G .)
    ID              reduce using rule 53 (vars2G -> ID IS value check_type COMMA vars2G .)
    IF              reduce using rule 53 (vars2G -> ID IS value check_type COMMA vars2G .)
    VAR             reduce using rule 53 (vars2G -> ID IS value check_type COMMA vars2G .)
    WHILE           reduce using rule 53 (vars2G -> ID IS value check_type COMMA vars2G .)
    FOR             reduce using rule 53 (vars2G -> ID IS value check_type COMMA vars2G .)
    PRINT           reduce using rule 53 (vars2G -> ID IS value check_type COMMA vars2G .)
    READ            reduce using rule 53 (vars2G -> ID IS value check_type COMMA vars2G .)
    FUNC            reduce using rule 53 (vars2G -> ID IS value check_type COMMA vars2G .)


state 158

    (54) vars2G -> ID IS value check_type SEMICOL varsG .

    VOID            reduce using rule 54 (vars2G -> ID IS value check_type SEMICOL varsG .)
    INT             reduce using rule 54 (vars2G -> ID IS value check_type SEMICOL varsG .)
    FLOAT           reduce using rule 54 (vars2G -> ID IS value check_type SEMICOL varsG .)
    CHAR            reduce using rule 54 (vars2G -> ID IS value check_type SEMICOL varsG .)
    $end            reduce using rule 54 (vars2G -> ID IS value check_type SEMICOL varsG .)
    RB              reduce using rule 54 (vars2G -> ID IS value check_type SEMICOL varsG .)
    ID              reduce using rule 54 (vars2G -> ID IS value check_type SEMICOL varsG .)
    IF              reduce using rule 54 (vars2G -> ID IS value check_type SEMICOL varsG .)
    VAR             reduce using rule 54 (vars2G -> ID IS value check_type SEMICOL varsG .)
    WHILE           reduce using rule 54 (vars2G -> ID IS value check_type SEMICOL varsG .)
    FOR             reduce using rule 54 (vars2G -> ID IS value check_type SEMICOL varsG .)
    PRINT           reduce using rule 54 (vars2G -> ID IS value check_type SEMICOL varsG .)
    READ            reduce using rule 54 (vars2G -> ID IS value check_type SEMICOL varsG .)
    FUNC            reduce using rule 54 (vars2G -> ID IS value check_type SEMICOL varsG .)


state 159

    (96) matrix2 -> LP lista2 RP . COMMA matrix2
    (97) matrix2 -> LP lista2 RP . COMMA LP lista2 RP

    COMMA           shift and go to state 189


state 160

    (7) main -> tipo MAIN LP RP LB statement RB .

    VOID            reduce using rule 7 (main -> tipo MAIN LP RP LB statement RB .)
    INT             reduce using rule 7 (main -> tipo MAIN LP RP LB statement RB .)
    FLOAT           reduce using rule 7 (main -> tipo MAIN LP RP LB statement RB .)
    CHAR            reduce using rule 7 (main -> tipo MAIN LP RP LB statement RB .)
    $end            reduce using rule 7 (main -> tipo MAIN LP RP LB statement RB .)


state 161

    (9) statement -> asignacion SEMICOL . statement
    (9) statement -> . asignacion SEMICOL statement
    (10) statement -> . if statement
    (11) statement -> . vars statement
    (12) statement -> . while statement
    (13) statement -> . for statement
    (14) statement -> . escritura statement
    (15) statement -> . escritura_var statement
    (16) statement -> . lectura statement
    (17) statement -> . ID row SEMICOL
    (18) statement -> . ID matrix SEMICOL
    (19) statement -> . empty
    (20) asignacion -> . ID IS value
    (102) if -> . IF LP expression RP check_bool gotof LB statement RB
    (103) if -> . IF LP expression RP check_bool gotof LB statement RB goto elseif
    (104) if -> . IF LP expression RP check_bool gotof LB statement RB goto else
    (21) vars -> . VAR tipo vars1
    (22) vars -> . VAR tipo vars2
    (23) vars -> . VAR tipo vars3
    (24) vars -> . VAR tipo oper_aritmetica
    (25) vars -> . VAR tipo ID row SEMICOL
    (26) vars -> . VAR tipo ID matrix SEMICOL
    (27) vars -> . varsG
    (28) vars -> . var_row
    (29) vars -> . var_row vars
    (30) vars -> . var_matrix
    (31) vars -> . var_matrix vars
    (32) vars -> . empty
    (111) while -> . WHILE LP expression RP check_bool gotof LB statement RB goto
    (112) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (121) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (122) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (123) escritura_var -> . PRINT LP any_var RP SEMICOL
    (128) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (129) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (101) empty -> .
    (41) varsG -> . VAR tipo vars1G
    (42) varsG -> . VAR tipo vars2G
    (43) varsG -> . VAR tipo vars3G
    (44) varsG -> . VAR LB varsG RB
    (45) varsG -> . var_rowG
    (46) varsG -> . var_rowG varsG
    (47) varsG -> . var_matrixG
    (48) varsG -> . var_matrixG varsG
    (49) varsG -> . declarar_func varsG
    (50) varsG -> . empty
    (87) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (88) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (80) declarar_func -> . FUNC tipo ID SEMICOL
    (81) declarar_func -> . FUNC VOID ID SEMICOL
    (82) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (83) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
    ID              shift and go to state 135
    IF              shift and go to state 137
    VAR             shift and go to state 138
    WHILE           shift and go to state 142
    FOR             shift and go to state 143
    PRINT           shift and go to state 144
    READ            shift and go to state 145
    RB              reduce using rule 101 (empty -> .)
    FUNC            shift and go to state 12

  ! ID              [ reduce using rule 101 (empty -> .) ]
  ! IF              [ reduce using rule 101 (empty -> .) ]
  ! VAR             [ reduce using rule 101 (empty -> .) ]
  ! WHILE           [ reduce using rule 101 (empty -> .) ]
  ! FOR             [ reduce using rule 101 (empty -> .) ]
  ! PRINT           [ reduce using rule 101 (empty -> .) ]
  ! READ            [ reduce using rule 101 (empty -> .) ]
  ! FUNC            [ reduce using rule 101 (empty -> .) ]

    asignacion                     shift and go to state 127
    statement                      shift and go to state 190
    if                             shift and go to state 128
    vars                           shift and go to state 129
    while                          shift and go to state 130
    for                            shift and go to state 131
    escritura                      shift and go to state 132
    escritura_var                  shift and go to state 133
    lectura                        shift and go to state 134
    empty                          shift and go to state 136
    varsG                          shift and go to state 139
    var_row                        shift and go to state 140
    var_matrix                     shift and go to state 141
    var_rowG                       shift and go to state 9
    var_matrixG                    shift and go to state 10
    declarar_func                  shift and go to state 11

state 162

    (10) statement -> if statement .

    RB              reduce using rule 10 (statement -> if statement .)


state 163

    (11) statement -> vars statement .

    RB              reduce using rule 11 (statement -> vars statement .)


state 164

    (12) statement -> while statement .

    RB              reduce using rule 12 (statement -> while statement .)


state 165

    (13) statement -> for statement .

    RB              reduce using rule 13 (statement -> for statement .)


state 166

    (14) statement -> escritura statement .

    RB              reduce using rule 14 (statement -> escritura statement .)


state 167

    (15) statement -> escritura_var statement .

    RB              reduce using rule 15 (statement -> escritura_var statement .)


state 168

    (16) statement -> lectura statement .

    RB              reduce using rule 16 (statement -> lectura statement .)


state 169

    (17) statement -> ID row . SEMICOL
    (100) matrix -> row . row
    (93) row -> . LC CTE_I RC

    SEMICOL         shift and go to state 191
    LC              shift and go to state 53

    row                            shift and go to state 67

state 170

    (18) statement -> ID matrix . SEMICOL

    SEMICOL         shift and go to state 192


state 171

    (20) asignacion -> ID IS . value
    (62) value -> . CTE_F
    (63) value -> . CTE_I
    (64) value -> . ID
    (65) value -> . CTE_C
    (66) value -> . COMILLA ID COMILLA
    (67) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 71
    CTE_I           shift and go to state 72
    ID              shift and go to state 69
    CTE_C           shift and go to state 73
    COMILLA         shift and go to state 74
    COMILLAS        shift and go to state 75

    value                          shift and go to state 193

state 172

    (102) if -> IF LP . expression RP check_bool gotof LB statement RB
    (103) if -> IF LP . expression RP check_bool gotof LB statement RB goto elseif
    (104) if -> IF LP . expression RP check_bool gotof LB statement RB goto else
    (131) expression -> . var_gt
    (132) expression -> . var_lt
    (133) expression -> . var_equal
    (134) expression -> . var_neq
    (135) expression -> . var_geq
    (136) expression -> . var_leq
    (137) expression -> . expr
    (138) expression -> . TRUE
    (139) expression -> . FALSE
    (140) expression -> . ID
    (142) var_gt -> . expr GT expr
    (141) var_lt -> . expr LT expr
    (145) var_equal -> . expr EQUAL expr
    (146) var_neq -> . expr NEQ expr
    (144) var_geq -> . expr GEQ expr
    (143) var_leq -> . expr LEQ expr
    (148) expr -> . expr MUL expr
    (149) expr -> . expr DIV expr
    (150) expr -> . expr PLUS expr
    (151) expr -> . expr MINUS expr
    (152) expr -> . CTE_I
    (153) expr -> . CTE_F
    (154) expr -> . ID

    TRUE            shift and go to state 202
    FALSE           shift and go to state 203
    ID              shift and go to state 204
    CTE_I           shift and go to state 205
    CTE_F           shift and go to state 206

    expression                     shift and go to state 194
    var_gt                         shift and go to state 195
    var_lt                         shift and go to state 196
    var_equal                      shift and go to state 197
    var_neq                        shift and go to state 198
    var_geq                        shift and go to state 199
    var_leq                        shift and go to state 200
    expr                           shift and go to state 201

state 173

    (21) vars -> VAR tipo . vars1
    (22) vars -> VAR tipo . vars2
    (23) vars -> VAR tipo . vars3
    (24) vars -> VAR tipo . oper_aritmetica
    (25) vars -> VAR tipo . ID row SEMICOL
    (26) vars -> VAR tipo . ID matrix SEMICOL
    (41) varsG -> VAR tipo . vars1G
    (42) varsG -> VAR tipo . vars2G
    (43) varsG -> VAR tipo . vars3G
    (87) var_row -> VAR tipo . ID row IS LP lista2 RP SEMICOL
    (94) var_matrix -> VAR tipo . ID matrix IS matrix2 SEMICOL
    (88) var_rowG -> VAR tipo . ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> VAR tipo . ID matrix IS matrix2 SEMICOL
    (33) vars1 -> . ID SEMICOL
    (34) vars1 -> . ID SEMICOL vars
    (35) vars2 -> . ID IS value COMMA vars2
    (36) vars2 -> . ID IS value COMMA
    (37) vars2 -> . ID IS value SEMICOL vars
    (38) vars3 -> . ID COMMA vars3
    (39) vars3 -> . ID SEMICOL vars
    (40) vars3 -> . ID SEMICOL
    (147) oper_aritmetica -> . ID IS expr SEMICOL
    (51) vars1G -> . ID SEMICOL
    (52) vars1G -> . ID SEMICOL varsG
    (53) vars2G -> . ID IS value check_type COMMA vars2G
    (54) vars2G -> . ID IS value check_type SEMICOL varsG
    (55) vars2G -> . empty
    (56) vars3G -> . ID COMMA vars3G
    (57) vars3G -> . ID SEMICOL varsG
    (58) vars3G -> . ID SEMICOL
    (101) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 211
    IF              reduce using rule 101 (empty -> .)
    VAR             reduce using rule 101 (empty -> .)
    WHILE           reduce using rule 101 (empty -> .)
    FOR             reduce using rule 101 (empty -> .)
    PRINT           reduce using rule 101 (empty -> .)
    READ            reduce using rule 101 (empty -> .)
    FUNC            reduce using rule 101 (empty -> .)
    RB              reduce using rule 101 (empty -> .)

  ! ID              [ reduce using rule 101 (empty -> .) ]

    vars1                          shift and go to state 207
    vars2                          shift and go to state 208
    vars3                          shift and go to state 209
    oper_aritmetica                shift and go to state 210
    vars1G                         shift and go to state 35
    vars2G                         shift and go to state 36
    vars3G                         shift and go to state 37
    empty                          shift and go to state 39

state 174

    (29) vars -> var_row vars .

    ID              reduce using rule 29 (vars -> var_row vars .)
    IF              reduce using rule 29 (vars -> var_row vars .)
    VAR             reduce using rule 29 (vars -> var_row vars .)
    WHILE           reduce using rule 29 (vars -> var_row vars .)
    FOR             reduce using rule 29 (vars -> var_row vars .)
    PRINT           reduce using rule 29 (vars -> var_row vars .)
    READ            reduce using rule 29 (vars -> var_row vars .)
    FUNC            reduce using rule 29 (vars -> var_row vars .)
    RB              reduce using rule 29 (vars -> var_row vars .)


state 175

    (31) vars -> var_matrix vars .

    ID              reduce using rule 31 (vars -> var_matrix vars .)
    IF              reduce using rule 31 (vars -> var_matrix vars .)
    VAR             reduce using rule 31 (vars -> var_matrix vars .)
    WHILE           reduce using rule 31 (vars -> var_matrix vars .)
    FOR             reduce using rule 31 (vars -> var_matrix vars .)
    PRINT           reduce using rule 31 (vars -> var_matrix vars .)
    READ            reduce using rule 31 (vars -> var_matrix vars .)
    FUNC            reduce using rule 31 (vars -> var_matrix vars .)
    RB              reduce using rule 31 (vars -> var_matrix vars .)


state 176

    (111) while -> WHILE LP . expression RP check_bool gotof LB statement RB goto
    (131) expression -> . var_gt
    (132) expression -> . var_lt
    (133) expression -> . var_equal
    (134) expression -> . var_neq
    (135) expression -> . var_geq
    (136) expression -> . var_leq
    (137) expression -> . expr
    (138) expression -> . TRUE
    (139) expression -> . FALSE
    (140) expression -> . ID
    (142) var_gt -> . expr GT expr
    (141) var_lt -> . expr LT expr
    (145) var_equal -> . expr EQUAL expr
    (146) var_neq -> . expr NEQ expr
    (144) var_geq -> . expr GEQ expr
    (143) var_leq -> . expr LEQ expr
    (148) expr -> . expr MUL expr
    (149) expr -> . expr DIV expr
    (150) expr -> . expr PLUS expr
    (151) expr -> . expr MINUS expr
    (152) expr -> . CTE_I
    (153) expr -> . CTE_F
    (154) expr -> . ID

    TRUE            shift and go to state 202
    FALSE           shift and go to state 203
    ID              shift and go to state 204
    CTE_I           shift and go to state 205
    CTE_F           shift and go to state 206

    expression                     shift and go to state 212
    var_gt                         shift and go to state 195
    var_lt                         shift and go to state 196
    var_equal                      shift and go to state 197
    var_neq                        shift and go to state 198
    var_geq                        shift and go to state 199
    var_leq                        shift and go to state 200
    expr                           shift and go to state 201

state 177

    (112) for -> FOR LP . VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto

    VAR             shift and go to state 213


state 178

    (121) escritura -> PRINT LP . COMILLA any COMILLA RP SEMICOL
    (122) escritura -> PRINT LP . COMILLAS any COMILLAS RP SEMICOL
    (123) escritura_var -> PRINT LP . any_var RP SEMICOL
    (124) any_var -> . ID

    COMILLA         shift and go to state 214
    COMILLAS        shift and go to state 215
    ID              shift and go to state 217

    any_var                        shift and go to state 216

state 179

    (128) lectura -> READ LP . COMILLA any_lectura COMILLA RP SEMICOL
    (129) lectura -> READ LP . COMILLAS any_lectura COMILLAS RP SEMICOL

    COMILLA         shift and go to state 218
    COMILLAS        shift and go to state 219


state 180

    (8) main -> VOID tipo MAIN LP RP LB statement . RB

    RB              shift and go to state 220


state 181

    (69) funcion -> VOID ID LP param RP verificar LB var_func . statement RB
    (9) statement -> . asignacion SEMICOL statement
    (10) statement -> . if statement
    (11) statement -> . vars statement
    (12) statement -> . while statement
    (13) statement -> . for statement
    (14) statement -> . escritura statement
    (15) statement -> . escritura_var statement
    (16) statement -> . lectura statement
    (17) statement -> . ID row SEMICOL
    (18) statement -> . ID matrix SEMICOL
    (19) statement -> . empty
    (20) asignacion -> . ID IS value
    (102) if -> . IF LP expression RP check_bool gotof LB statement RB
    (103) if -> . IF LP expression RP check_bool gotof LB statement RB goto elseif
    (104) if -> . IF LP expression RP check_bool gotof LB statement RB goto else
    (21) vars -> . VAR tipo vars1
    (22) vars -> . VAR tipo vars2
    (23) vars -> . VAR tipo vars3
    (24) vars -> . VAR tipo oper_aritmetica
    (25) vars -> . VAR tipo ID row SEMICOL
    (26) vars -> . VAR tipo ID matrix SEMICOL
    (27) vars -> . varsG
    (28) vars -> . var_row
    (29) vars -> . var_row vars
    (30) vars -> . var_matrix
    (31) vars -> . var_matrix vars
    (32) vars -> . empty
    (111) while -> . WHILE LP expression RP check_bool gotof LB statement RB goto
    (112) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (121) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (122) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (123) escritura_var -> . PRINT LP any_var RP SEMICOL
    (128) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (129) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (101) empty -> .
    (41) varsG -> . VAR tipo vars1G
    (42) varsG -> . VAR tipo vars2G
    (43) varsG -> . VAR tipo vars3G
    (44) varsG -> . VAR LB varsG RB
    (45) varsG -> . var_rowG
    (46) varsG -> . var_rowG varsG
    (47) varsG -> . var_matrixG
    (48) varsG -> . var_matrixG varsG
    (49) varsG -> . declarar_func varsG
    (50) varsG -> . empty
    (87) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (88) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (80) declarar_func -> . FUNC tipo ID SEMICOL
    (81) declarar_func -> . FUNC VOID ID SEMICOL
    (82) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (83) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
    ID              shift and go to state 135
    IF              shift and go to state 137
    VAR             shift and go to state 138
    WHILE           shift and go to state 142
    FOR             shift and go to state 143
    PRINT           shift and go to state 144
    READ            shift and go to state 145
    RB              reduce using rule 101 (empty -> .)
    FUNC            shift and go to state 12

  ! ID              [ reduce using rule 101 (empty -> .) ]
  ! IF              [ reduce using rule 101 (empty -> .) ]
  ! VAR             [ reduce using rule 101 (empty -> .) ]
  ! WHILE           [ reduce using rule 101 (empty -> .) ]
  ! FOR             [ reduce using rule 101 (empty -> .) ]
  ! PRINT           [ reduce using rule 101 (empty -> .) ]
  ! READ            [ reduce using rule 101 (empty -> .) ]
  ! FUNC            [ reduce using rule 101 (empty -> .) ]

    statement                      shift and go to state 221
    asignacion                     shift and go to state 127
    if                             shift and go to state 128
    vars                           shift and go to state 129
    while                          shift and go to state 130
    for                            shift and go to state 131
    escritura                      shift and go to state 132
    escritura_var                  shift and go to state 133
    lectura                        shift and go to state 134
    empty                          shift and go to state 136
    varsG                          shift and go to state 139
    var_row                        shift and go to state 140
    var_matrix                     shift and go to state 141
    var_rowG                       shift and go to state 9
    var_matrixG                    shift and go to state 10
    declarar_func                  shift and go to state 11

state 182

    (75) var_func -> vars .

    ID              reduce using rule 75 (var_func -> vars .)
    IF              reduce using rule 75 (var_func -> vars .)
    VAR             reduce using rule 75 (var_func -> vars .)
    WHILE           reduce using rule 75 (var_func -> vars .)
    FOR             reduce using rule 75 (var_func -> vars .)
    PRINT           reduce using rule 75 (var_func -> vars .)
    READ            reduce using rule 75 (var_func -> vars .)
    FUNC            reduce using rule 75 (var_func -> vars .)
    RB              reduce using rule 75 (var_func -> vars .)


state 183

    (71) funcion -> VOID ID LP RP verificar2 LB var_func2 statement . RB

    RB              shift and go to state 222


state 184

    (70) funcion -> tipo ID LP param RP verificar LB var_func . statement RB
    (9) statement -> . asignacion SEMICOL statement
    (10) statement -> . if statement
    (11) statement -> . vars statement
    (12) statement -> . while statement
    (13) statement -> . for statement
    (14) statement -> . escritura statement
    (15) statement -> . escritura_var statement
    (16) statement -> . lectura statement
    (17) statement -> . ID row SEMICOL
    (18) statement -> . ID matrix SEMICOL
    (19) statement -> . empty
    (20) asignacion -> . ID IS value
    (102) if -> . IF LP expression RP check_bool gotof LB statement RB
    (103) if -> . IF LP expression RP check_bool gotof LB statement RB goto elseif
    (104) if -> . IF LP expression RP check_bool gotof LB statement RB goto else
    (21) vars -> . VAR tipo vars1
    (22) vars -> . VAR tipo vars2
    (23) vars -> . VAR tipo vars3
    (24) vars -> . VAR tipo oper_aritmetica
    (25) vars -> . VAR tipo ID row SEMICOL
    (26) vars -> . VAR tipo ID matrix SEMICOL
    (27) vars -> . varsG
    (28) vars -> . var_row
    (29) vars -> . var_row vars
    (30) vars -> . var_matrix
    (31) vars -> . var_matrix vars
    (32) vars -> . empty
    (111) while -> . WHILE LP expression RP check_bool gotof LB statement RB goto
    (112) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (121) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (122) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (123) escritura_var -> . PRINT LP any_var RP SEMICOL
    (128) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (129) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (101) empty -> .
    (41) varsG -> . VAR tipo vars1G
    (42) varsG -> . VAR tipo vars2G
    (43) varsG -> . VAR tipo vars3G
    (44) varsG -> . VAR LB varsG RB
    (45) varsG -> . var_rowG
    (46) varsG -> . var_rowG varsG
    (47) varsG -> . var_matrixG
    (48) varsG -> . var_matrixG varsG
    (49) varsG -> . declarar_func varsG
    (50) varsG -> . empty
    (87) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (88) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (80) declarar_func -> . FUNC tipo ID SEMICOL
    (81) declarar_func -> . FUNC VOID ID SEMICOL
    (82) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (83) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
    ID              shift and go to state 135
    IF              shift and go to state 137
    VAR             shift and go to state 138
    WHILE           shift and go to state 142
    FOR             shift and go to state 143
    PRINT           shift and go to state 144
    READ            shift and go to state 145
    RB              reduce using rule 101 (empty -> .)
    FUNC            shift and go to state 12

  ! ID              [ reduce using rule 101 (empty -> .) ]
  ! IF              [ reduce using rule 101 (empty -> .) ]
  ! VAR             [ reduce using rule 101 (empty -> .) ]
  ! WHILE           [ reduce using rule 101 (empty -> .) ]
  ! FOR             [ reduce using rule 101 (empty -> .) ]
  ! PRINT           [ reduce using rule 101 (empty -> .) ]
  ! READ            [ reduce using rule 101 (empty -> .) ]
  ! FUNC            [ reduce using rule 101 (empty -> .) ]

    statement                      shift and go to state 223
    asignacion                     shift and go to state 127
    if                             shift and go to state 128
    vars                           shift and go to state 129
    while                          shift and go to state 130
    for                            shift and go to state 131
    escritura                      shift and go to state 132
    escritura_var                  shift and go to state 133
    lectura                        shift and go to state 134
    empty                          shift and go to state 136
    varsG                          shift and go to state 139
    var_row                        shift and go to state 140
    var_matrix                     shift and go to state 141
    var_rowG                       shift and go to state 9
    var_matrixG                    shift and go to state 10
    declarar_func                  shift and go to state 11

state 185

    (72) funcion -> tipo ID LP RP verificar2 LB var_func2 statement . RB

    RB              shift and go to state 224


state 186

    (88) var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .

    VAR             reduce using rule 88 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    FUNC            reduce using rule 88 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    VOID            reduce using rule 88 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    INT             reduce using rule 88 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    FLOAT           reduce using rule 88 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    CHAR            reduce using rule 88 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    $end            reduce using rule 88 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    RB              reduce using rule 88 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    ID              reduce using rule 88 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    IF              reduce using rule 88 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    WHILE           reduce using rule 88 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    FOR             reduce using rule 88 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    PRINT           reduce using rule 88 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    READ            reduce using rule 88 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)


state 187

    (92) lista2 -> elem_lista COMMA elem_lista .
    (91) lista2 -> elem_lista . COMMA lista2
    (92) lista2 -> elem_lista . COMMA elem_lista

    RP              reduce using rule 92 (lista2 -> elem_lista COMMA elem_lista .)
    COMMA           shift and go to state 155


state 188

    (91) lista2 -> elem_lista COMMA lista2 .

    RP              reduce using rule 91 (lista2 -> elem_lista COMMA lista2 .)


state 189

    (96) matrix2 -> LP lista2 RP COMMA . matrix2
    (97) matrix2 -> LP lista2 RP COMMA . LP lista2 RP
    (96) matrix2 -> . LP lista2 RP COMMA matrix2
    (97) matrix2 -> . LP lista2 RP COMMA LP lista2 RP

    LP              shift and go to state 225

    matrix2                        shift and go to state 226

state 190

    (9) statement -> asignacion SEMICOL statement .

    RB              reduce using rule 9 (statement -> asignacion SEMICOL statement .)


state 191

    (17) statement -> ID row SEMICOL .

    RB              reduce using rule 17 (statement -> ID row SEMICOL .)


state 192

    (18) statement -> ID matrix SEMICOL .

    RB              reduce using rule 18 (statement -> ID matrix SEMICOL .)


state 193

    (20) asignacion -> ID IS value .

    SEMICOL         reduce using rule 20 (asignacion -> ID IS value .)


state 194

    (102) if -> IF LP expression . RP check_bool gotof LB statement RB
    (103) if -> IF LP expression . RP check_bool gotof LB statement RB goto elseif
    (104) if -> IF LP expression . RP check_bool gotof LB statement RB goto else

    RP              shift and go to state 227


state 195

    (131) expression -> var_gt .

    RP              reduce using rule 131 (expression -> var_gt .)
    CTE_I           reduce using rule 131 (expression -> var_gt .)
    CTE_F           reduce using rule 131 (expression -> var_gt .)
    ID              reduce using rule 131 (expression -> var_gt .)
    TRUE            reduce using rule 131 (expression -> var_gt .)
    FALSE           reduce using rule 131 (expression -> var_gt .)
    COMILLA         reduce using rule 131 (expression -> var_gt .)
    COMILLAS        reduce using rule 131 (expression -> var_gt .)
    SEMICOL         reduce using rule 131 (expression -> var_gt .)


state 196

    (132) expression -> var_lt .

    RP              reduce using rule 132 (expression -> var_lt .)
    CTE_I           reduce using rule 132 (expression -> var_lt .)
    CTE_F           reduce using rule 132 (expression -> var_lt .)
    ID              reduce using rule 132 (expression -> var_lt .)
    TRUE            reduce using rule 132 (expression -> var_lt .)
    FALSE           reduce using rule 132 (expression -> var_lt .)
    COMILLA         reduce using rule 132 (expression -> var_lt .)
    COMILLAS        reduce using rule 132 (expression -> var_lt .)
    SEMICOL         reduce using rule 132 (expression -> var_lt .)


state 197

    (133) expression -> var_equal .

    RP              reduce using rule 133 (expression -> var_equal .)
    CTE_I           reduce using rule 133 (expression -> var_equal .)
    CTE_F           reduce using rule 133 (expression -> var_equal .)
    ID              reduce using rule 133 (expression -> var_equal .)
    TRUE            reduce using rule 133 (expression -> var_equal .)
    FALSE           reduce using rule 133 (expression -> var_equal .)
    COMILLA         reduce using rule 133 (expression -> var_equal .)
    COMILLAS        reduce using rule 133 (expression -> var_equal .)
    SEMICOL         reduce using rule 133 (expression -> var_equal .)


state 198

    (134) expression -> var_neq .

    RP              reduce using rule 134 (expression -> var_neq .)
    CTE_I           reduce using rule 134 (expression -> var_neq .)
    CTE_F           reduce using rule 134 (expression -> var_neq .)
    ID              reduce using rule 134 (expression -> var_neq .)
    TRUE            reduce using rule 134 (expression -> var_neq .)
    FALSE           reduce using rule 134 (expression -> var_neq .)
    COMILLA         reduce using rule 134 (expression -> var_neq .)
    COMILLAS        reduce using rule 134 (expression -> var_neq .)
    SEMICOL         reduce using rule 134 (expression -> var_neq .)


state 199

    (135) expression -> var_geq .

    RP              reduce using rule 135 (expression -> var_geq .)
    CTE_I           reduce using rule 135 (expression -> var_geq .)
    CTE_F           reduce using rule 135 (expression -> var_geq .)
    ID              reduce using rule 135 (expression -> var_geq .)
    TRUE            reduce using rule 135 (expression -> var_geq .)
    FALSE           reduce using rule 135 (expression -> var_geq .)
    COMILLA         reduce using rule 135 (expression -> var_geq .)
    COMILLAS        reduce using rule 135 (expression -> var_geq .)
    SEMICOL         reduce using rule 135 (expression -> var_geq .)


state 200

    (136) expression -> var_leq .

    RP              reduce using rule 136 (expression -> var_leq .)
    CTE_I           reduce using rule 136 (expression -> var_leq .)
    CTE_F           reduce using rule 136 (expression -> var_leq .)
    ID              reduce using rule 136 (expression -> var_leq .)
    TRUE            reduce using rule 136 (expression -> var_leq .)
    FALSE           reduce using rule 136 (expression -> var_leq .)
    COMILLA         reduce using rule 136 (expression -> var_leq .)
    COMILLAS        reduce using rule 136 (expression -> var_leq .)
    SEMICOL         reduce using rule 136 (expression -> var_leq .)


state 201

    (137) expression -> expr .
    (142) var_gt -> expr . GT expr
    (141) var_lt -> expr . LT expr
    (145) var_equal -> expr . EQUAL expr
    (146) var_neq -> expr . NEQ expr
    (144) var_geq -> expr . GEQ expr
    (143) var_leq -> expr . LEQ expr
    (148) expr -> expr . MUL expr
    (149) expr -> expr . DIV expr
    (150) expr -> expr . PLUS expr
    (151) expr -> expr . MINUS expr

    RP              reduce using rule 137 (expression -> expr .)
    SEMICOL         reduce using rule 137 (expression -> expr .)
    GT              shift and go to state 228
    LT              shift and go to state 229
    EQUAL           shift and go to state 230
    NEQ             shift and go to state 231
    GEQ             shift and go to state 232
    LEQ             shift and go to state 233
    MUL             shift and go to state 234
    DIV             shift and go to state 235
    PLUS            shift and go to state 236
    MINUS           shift and go to state 237


state 202

    (138) expression -> TRUE .

    RP              reduce using rule 138 (expression -> TRUE .)
    CTE_I           reduce using rule 138 (expression -> TRUE .)
    CTE_F           reduce using rule 138 (expression -> TRUE .)
    ID              reduce using rule 138 (expression -> TRUE .)
    TRUE            reduce using rule 138 (expression -> TRUE .)
    FALSE           reduce using rule 138 (expression -> TRUE .)
    COMILLA         reduce using rule 138 (expression -> TRUE .)
    COMILLAS        reduce using rule 138 (expression -> TRUE .)
    SEMICOL         reduce using rule 138 (expression -> TRUE .)


state 203

    (139) expression -> FALSE .

    RP              reduce using rule 139 (expression -> FALSE .)
    CTE_I           reduce using rule 139 (expression -> FALSE .)
    CTE_F           reduce using rule 139 (expression -> FALSE .)
    ID              reduce using rule 139 (expression -> FALSE .)
    TRUE            reduce using rule 139 (expression -> FALSE .)
    FALSE           reduce using rule 139 (expression -> FALSE .)
    COMILLA         reduce using rule 139 (expression -> FALSE .)
    COMILLAS        reduce using rule 139 (expression -> FALSE .)
    SEMICOL         reduce using rule 139 (expression -> FALSE .)


state 204

    (140) expression -> ID .
    (154) expr -> ID .

  ! reduce/reduce conflict for RP resolved using rule 140 (expression -> ID .)
  ! reduce/reduce conflict for SEMICOL resolved using rule 140 (expression -> ID .)
    RP              reduce using rule 140 (expression -> ID .)
    SEMICOL         reduce using rule 140 (expression -> ID .)
    GT              reduce using rule 154 (expr -> ID .)
    LT              reduce using rule 154 (expr -> ID .)
    EQUAL           reduce using rule 154 (expr -> ID .)
    NEQ             reduce using rule 154 (expr -> ID .)
    GEQ             reduce using rule 154 (expr -> ID .)
    LEQ             reduce using rule 154 (expr -> ID .)
    MUL             reduce using rule 154 (expr -> ID .)
    DIV             reduce using rule 154 (expr -> ID .)
    PLUS            reduce using rule 154 (expr -> ID .)
    MINUS           reduce using rule 154 (expr -> ID .)

  ! RP              [ reduce using rule 154 (expr -> ID .) ]
  ! SEMICOL         [ reduce using rule 154 (expr -> ID .) ]


state 205

    (152) expr -> CTE_I .

    GT              reduce using rule 152 (expr -> CTE_I .)
    LT              reduce using rule 152 (expr -> CTE_I .)
    EQUAL           reduce using rule 152 (expr -> CTE_I .)
    NEQ             reduce using rule 152 (expr -> CTE_I .)
    GEQ             reduce using rule 152 (expr -> CTE_I .)
    LEQ             reduce using rule 152 (expr -> CTE_I .)
    MUL             reduce using rule 152 (expr -> CTE_I .)
    DIV             reduce using rule 152 (expr -> CTE_I .)
    PLUS            reduce using rule 152 (expr -> CTE_I .)
    MINUS           reduce using rule 152 (expr -> CTE_I .)
    RP              reduce using rule 152 (expr -> CTE_I .)
    CTE_I           reduce using rule 152 (expr -> CTE_I .)
    CTE_F           reduce using rule 152 (expr -> CTE_I .)
    ID              reduce using rule 152 (expr -> CTE_I .)
    TRUE            reduce using rule 152 (expr -> CTE_I .)
    FALSE           reduce using rule 152 (expr -> CTE_I .)
    COMILLA         reduce using rule 152 (expr -> CTE_I .)
    COMILLAS        reduce using rule 152 (expr -> CTE_I .)
    SEMICOL         reduce using rule 152 (expr -> CTE_I .)


state 206

    (153) expr -> CTE_F .

    GT              reduce using rule 153 (expr -> CTE_F .)
    LT              reduce using rule 153 (expr -> CTE_F .)
    EQUAL           reduce using rule 153 (expr -> CTE_F .)
    NEQ             reduce using rule 153 (expr -> CTE_F .)
    GEQ             reduce using rule 153 (expr -> CTE_F .)
    LEQ             reduce using rule 153 (expr -> CTE_F .)
    MUL             reduce using rule 153 (expr -> CTE_F .)
    DIV             reduce using rule 153 (expr -> CTE_F .)
    PLUS            reduce using rule 153 (expr -> CTE_F .)
    MINUS           reduce using rule 153 (expr -> CTE_F .)
    RP              reduce using rule 153 (expr -> CTE_F .)
    CTE_I           reduce using rule 153 (expr -> CTE_F .)
    CTE_F           reduce using rule 153 (expr -> CTE_F .)
    ID              reduce using rule 153 (expr -> CTE_F .)
    TRUE            reduce using rule 153 (expr -> CTE_F .)
    FALSE           reduce using rule 153 (expr -> CTE_F .)
    COMILLA         reduce using rule 153 (expr -> CTE_F .)
    COMILLAS        reduce using rule 153 (expr -> CTE_F .)
    SEMICOL         reduce using rule 153 (expr -> CTE_F .)


state 207

    (21) vars -> VAR tipo vars1 .

    ID              reduce using rule 21 (vars -> VAR tipo vars1 .)
    IF              reduce using rule 21 (vars -> VAR tipo vars1 .)
    VAR             reduce using rule 21 (vars -> VAR tipo vars1 .)
    WHILE           reduce using rule 21 (vars -> VAR tipo vars1 .)
    FOR             reduce using rule 21 (vars -> VAR tipo vars1 .)
    PRINT           reduce using rule 21 (vars -> VAR tipo vars1 .)
    READ            reduce using rule 21 (vars -> VAR tipo vars1 .)
    FUNC            reduce using rule 21 (vars -> VAR tipo vars1 .)
    RB              reduce using rule 21 (vars -> VAR tipo vars1 .)


state 208

    (22) vars -> VAR tipo vars2 .

    ID              reduce using rule 22 (vars -> VAR tipo vars2 .)
    IF              reduce using rule 22 (vars -> VAR tipo vars2 .)
    VAR             reduce using rule 22 (vars -> VAR tipo vars2 .)
    WHILE           reduce using rule 22 (vars -> VAR tipo vars2 .)
    FOR             reduce using rule 22 (vars -> VAR tipo vars2 .)
    PRINT           reduce using rule 22 (vars -> VAR tipo vars2 .)
    READ            reduce using rule 22 (vars -> VAR tipo vars2 .)
    FUNC            reduce using rule 22 (vars -> VAR tipo vars2 .)
    RB              reduce using rule 22 (vars -> VAR tipo vars2 .)


state 209

    (23) vars -> VAR tipo vars3 .

    ID              reduce using rule 23 (vars -> VAR tipo vars3 .)
    IF              reduce using rule 23 (vars -> VAR tipo vars3 .)
    VAR             reduce using rule 23 (vars -> VAR tipo vars3 .)
    WHILE           reduce using rule 23 (vars -> VAR tipo vars3 .)
    FOR             reduce using rule 23 (vars -> VAR tipo vars3 .)
    PRINT           reduce using rule 23 (vars -> VAR tipo vars3 .)
    READ            reduce using rule 23 (vars -> VAR tipo vars3 .)
    FUNC            reduce using rule 23 (vars -> VAR tipo vars3 .)
    RB              reduce using rule 23 (vars -> VAR tipo vars3 .)


state 210

    (24) vars -> VAR tipo oper_aritmetica .

    ID              reduce using rule 24 (vars -> VAR tipo oper_aritmetica .)
    IF              reduce using rule 24 (vars -> VAR tipo oper_aritmetica .)
    VAR             reduce using rule 24 (vars -> VAR tipo oper_aritmetica .)
    WHILE           reduce using rule 24 (vars -> VAR tipo oper_aritmetica .)
    FOR             reduce using rule 24 (vars -> VAR tipo oper_aritmetica .)
    PRINT           reduce using rule 24 (vars -> VAR tipo oper_aritmetica .)
    READ            reduce using rule 24 (vars -> VAR tipo oper_aritmetica .)
    FUNC            reduce using rule 24 (vars -> VAR tipo oper_aritmetica .)
    RB              reduce using rule 24 (vars -> VAR tipo oper_aritmetica .)


state 211

    (25) vars -> VAR tipo ID . row SEMICOL
    (26) vars -> VAR tipo ID . matrix SEMICOL
    (87) var_row -> VAR tipo ID . row IS LP lista2 RP SEMICOL
    (94) var_matrix -> VAR tipo ID . matrix IS matrix2 SEMICOL
    (88) var_rowG -> VAR tipo ID . row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> VAR tipo ID . matrix IS matrix2 SEMICOL
    (33) vars1 -> ID . SEMICOL
    (34) vars1 -> ID . SEMICOL vars
    (35) vars2 -> ID . IS value COMMA vars2
    (36) vars2 -> ID . IS value COMMA
    (37) vars2 -> ID . IS value SEMICOL vars
    (38) vars3 -> ID . COMMA vars3
    (39) vars3 -> ID . SEMICOL vars
    (40) vars3 -> ID . SEMICOL
    (147) oper_aritmetica -> ID . IS expr SEMICOL
    (51) vars1G -> ID . SEMICOL
    (52) vars1G -> ID . SEMICOL varsG
    (53) vars2G -> ID . IS value check_type COMMA vars2G
    (54) vars2G -> ID . IS value check_type SEMICOL varsG
    (56) vars3G -> ID . COMMA vars3G
    (57) vars3G -> ID . SEMICOL varsG
    (58) vars3G -> ID . SEMICOL
    (93) row -> . LC CTE_I RC
    (100) matrix -> . row row

    SEMICOL         shift and go to state 239
    IS              shift and go to state 241
    COMMA           shift and go to state 242
    LC              shift and go to state 53

    row                            shift and go to state 238
    matrix                         shift and go to state 240

state 212

    (111) while -> WHILE LP expression . RP check_bool gotof LB statement RB goto

    RP              shift and go to state 243


state 213

    (112) for -> FOR LP VAR . tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (59) tipo -> . INT
    (60) tipo -> . FLOAT
    (61) tipo -> . CHAR

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    tipo                           shift and go to state 244

state 214

    (121) escritura -> PRINT LP COMILLA . any COMILLA RP SEMICOL
    (125) any -> . expr any
    (126) any -> . expression any
    (127) any -> . empty
    (148) expr -> . expr MUL expr
    (149) expr -> . expr DIV expr
    (150) expr -> . expr PLUS expr
    (151) expr -> . expr MINUS expr
    (152) expr -> . CTE_I
    (153) expr -> . CTE_F
    (154) expr -> . ID
    (131) expression -> . var_gt
    (132) expression -> . var_lt
    (133) expression -> . var_equal
    (134) expression -> . var_neq
    (135) expression -> . var_geq
    (136) expression -> . var_leq
    (137) expression -> . expr
    (138) expression -> . TRUE
    (139) expression -> . FALSE
    (140) expression -> . ID
    (101) empty -> .
    (142) var_gt -> . expr GT expr
    (141) var_lt -> . expr LT expr
    (145) var_equal -> . expr EQUAL expr
    (146) var_neq -> . expr NEQ expr
    (144) var_geq -> . expr GEQ expr
    (143) var_leq -> . expr LEQ expr

    CTE_I           shift and go to state 205
    CTE_F           shift and go to state 206
    ID              shift and go to state 249
    TRUE            shift and go to state 202
    FALSE           shift and go to state 203
    COMILLA         reduce using rule 101 (empty -> .)

    any                            shift and go to state 245
    expr                           shift and go to state 246
    expression                     shift and go to state 247
    empty                          shift and go to state 248
    var_gt                         shift and go to state 195
    var_lt                         shift and go to state 196
    var_equal                      shift and go to state 197
    var_neq                        shift and go to state 198
    var_geq                        shift and go to state 199
    var_leq                        shift and go to state 200

state 215

    (122) escritura -> PRINT LP COMILLAS . any COMILLAS RP SEMICOL
    (125) any -> . expr any
    (126) any -> . expression any
    (127) any -> . empty
    (148) expr -> . expr MUL expr
    (149) expr -> . expr DIV expr
    (150) expr -> . expr PLUS expr
    (151) expr -> . expr MINUS expr
    (152) expr -> . CTE_I
    (153) expr -> . CTE_F
    (154) expr -> . ID
    (131) expression -> . var_gt
    (132) expression -> . var_lt
    (133) expression -> . var_equal
    (134) expression -> . var_neq
    (135) expression -> . var_geq
    (136) expression -> . var_leq
    (137) expression -> . expr
    (138) expression -> . TRUE
    (139) expression -> . FALSE
    (140) expression -> . ID
    (101) empty -> .
    (142) var_gt -> . expr GT expr
    (141) var_lt -> . expr LT expr
    (145) var_equal -> . expr EQUAL expr
    (146) var_neq -> . expr NEQ expr
    (144) var_geq -> . expr GEQ expr
    (143) var_leq -> . expr LEQ expr

    CTE_I           shift and go to state 205
    CTE_F           shift and go to state 206
    ID              shift and go to state 249
    TRUE            shift and go to state 202
    FALSE           shift and go to state 203
    COMILLAS        reduce using rule 101 (empty -> .)

    any                            shift and go to state 250
    expr                           shift and go to state 246
    expression                     shift and go to state 247
    empty                          shift and go to state 248
    var_gt                         shift and go to state 195
    var_lt                         shift and go to state 196
    var_equal                      shift and go to state 197
    var_neq                        shift and go to state 198
    var_geq                        shift and go to state 199
    var_leq                        shift and go to state 200

state 216

    (123) escritura_var -> PRINT LP any_var . RP SEMICOL

    RP              shift and go to state 251


state 217

    (124) any_var -> ID .

    RP              reduce using rule 124 (any_var -> ID .)


state 218

    (128) lectura -> READ LP COMILLA . any_lectura COMILLA RP SEMICOL
    (130) any_lectura -> . ID

    ID              shift and go to state 253

    any_lectura                    shift and go to state 252

state 219

    (129) lectura -> READ LP COMILLAS . any_lectura COMILLAS RP SEMICOL
    (130) any_lectura -> . ID

    ID              shift and go to state 253

    any_lectura                    shift and go to state 254

state 220

    (8) main -> VOID tipo MAIN LP RP LB statement RB .

    VOID            reduce using rule 8 (main -> VOID tipo MAIN LP RP LB statement RB .)
    INT             reduce using rule 8 (main -> VOID tipo MAIN LP RP LB statement RB .)
    FLOAT           reduce using rule 8 (main -> VOID tipo MAIN LP RP LB statement RB .)
    CHAR            reduce using rule 8 (main -> VOID tipo MAIN LP RP LB statement RB .)
    $end            reduce using rule 8 (main -> VOID tipo MAIN LP RP LB statement RB .)


state 221

    (69) funcion -> VOID ID LP param RP verificar LB var_func statement . RB

    RB              shift and go to state 255


state 222

    (71) funcion -> VOID ID LP RP verificar2 LB var_func2 statement RB .

    VOID            reduce using rule 71 (funcion -> VOID ID LP RP verificar2 LB var_func2 statement RB .)
    INT             reduce using rule 71 (funcion -> VOID ID LP RP verificar2 LB var_func2 statement RB .)
    FLOAT           reduce using rule 71 (funcion -> VOID ID LP RP verificar2 LB var_func2 statement RB .)
    CHAR            reduce using rule 71 (funcion -> VOID ID LP RP verificar2 LB var_func2 statement RB .)
    $end            reduce using rule 71 (funcion -> VOID ID LP RP verificar2 LB var_func2 statement RB .)


state 223

    (70) funcion -> tipo ID LP param RP verificar LB var_func statement . RB

    RB              shift and go to state 256


state 224

    (72) funcion -> tipo ID LP RP verificar2 LB var_func2 statement RB .

    VOID            reduce using rule 72 (funcion -> tipo ID LP RP verificar2 LB var_func2 statement RB .)
    INT             reduce using rule 72 (funcion -> tipo ID LP RP verificar2 LB var_func2 statement RB .)
    FLOAT           reduce using rule 72 (funcion -> tipo ID LP RP verificar2 LB var_func2 statement RB .)
    CHAR            reduce using rule 72 (funcion -> tipo ID LP RP verificar2 LB var_func2 statement RB .)
    $end            reduce using rule 72 (funcion -> tipo ID LP RP verificar2 LB var_func2 statement RB .)


state 225

    (97) matrix2 -> LP lista2 RP COMMA LP . lista2 RP
    (96) matrix2 -> LP . lista2 RP COMMA matrix2
    (97) matrix2 -> LP . lista2 RP COMMA LP lista2 RP
    (91) lista2 -> . elem_lista COMMA lista2
    (92) lista2 -> . elem_lista COMMA elem_lista
    (89) elem_lista -> . value
    (90) elem_lista -> . empty
    (62) value -> . CTE_F
    (63) value -> . CTE_I
    (64) value -> . ID
    (65) value -> . CTE_C
    (66) value -> . COMILLA ID COMILLA
    (67) value -> . COMILLAS ID COMILLAS
    (101) empty -> .

    CTE_F           shift and go to state 71
    CTE_I           shift and go to state 72
    ID              shift and go to state 69
    CTE_C           shift and go to state 73
    COMILLA         shift and go to state 74
    COMILLAS        shift and go to state 75
    COMMA           reduce using rule 101 (empty -> .)

    lista2                         shift and go to state 257
    elem_lista                     shift and go to state 113
    value                          shift and go to state 114
    empty                          shift and go to state 115

state 226

    (96) matrix2 -> LP lista2 RP COMMA matrix2 .

    SEMICOL         reduce using rule 96 (matrix2 -> LP lista2 RP COMMA matrix2 .)


state 227

    (102) if -> IF LP expression RP . check_bool gotof LB statement RB
    (103) if -> IF LP expression RP . check_bool gotof LB statement RB goto elseif
    (104) if -> IF LP expression RP . check_bool gotof LB statement RB goto else
    (155) check_bool -> .

    LB              reduce using rule 155 (check_bool -> .)

    check_bool                     shift and go to state 258

state 228

    (142) var_gt -> expr GT . expr
    (148) expr -> . expr MUL expr
    (149) expr -> . expr DIV expr
    (150) expr -> . expr PLUS expr
    (151) expr -> . expr MINUS expr
    (152) expr -> . CTE_I
    (153) expr -> . CTE_F
    (154) expr -> . ID

    CTE_I           shift and go to state 205
    CTE_F           shift and go to state 206
    ID              shift and go to state 260

    expr                           shift and go to state 259

state 229

    (141) var_lt -> expr LT . expr
    (148) expr -> . expr MUL expr
    (149) expr -> . expr DIV expr
    (150) expr -> . expr PLUS expr
    (151) expr -> . expr MINUS expr
    (152) expr -> . CTE_I
    (153) expr -> . CTE_F
    (154) expr -> . ID

    CTE_I           shift and go to state 205
    CTE_F           shift and go to state 206
    ID              shift and go to state 260

    expr                           shift and go to state 261

state 230

    (145) var_equal -> expr EQUAL . expr
    (148) expr -> . expr MUL expr
    (149) expr -> . expr DIV expr
    (150) expr -> . expr PLUS expr
    (151) expr -> . expr MINUS expr
    (152) expr -> . CTE_I
    (153) expr -> . CTE_F
    (154) expr -> . ID

    CTE_I           shift and go to state 205
    CTE_F           shift and go to state 206
    ID              shift and go to state 260

    expr                           shift and go to state 262

state 231

    (146) var_neq -> expr NEQ . expr
    (148) expr -> . expr MUL expr
    (149) expr -> . expr DIV expr
    (150) expr -> . expr PLUS expr
    (151) expr -> . expr MINUS expr
    (152) expr -> . CTE_I
    (153) expr -> . CTE_F
    (154) expr -> . ID

    CTE_I           shift and go to state 205
    CTE_F           shift and go to state 206
    ID              shift and go to state 260

    expr                           shift and go to state 263

state 232

    (144) var_geq -> expr GEQ . expr
    (148) expr -> . expr MUL expr
    (149) expr -> . expr DIV expr
    (150) expr -> . expr PLUS expr
    (151) expr -> . expr MINUS expr
    (152) expr -> . CTE_I
    (153) expr -> . CTE_F
    (154) expr -> . ID

    CTE_I           shift and go to state 205
    CTE_F           shift and go to state 206
    ID              shift and go to state 260

    expr                           shift and go to state 264

state 233

    (143) var_leq -> expr LEQ . expr
    (148) expr -> . expr MUL expr
    (149) expr -> . expr DIV expr
    (150) expr -> . expr PLUS expr
    (151) expr -> . expr MINUS expr
    (152) expr -> . CTE_I
    (153) expr -> . CTE_F
    (154) expr -> . ID

    CTE_I           shift and go to state 205
    CTE_F           shift and go to state 206
    ID              shift and go to state 260

    expr                           shift and go to state 265

state 234

    (148) expr -> expr MUL . expr
    (148) expr -> . expr MUL expr
    (149) expr -> . expr DIV expr
    (150) expr -> . expr PLUS expr
    (151) expr -> . expr MINUS expr
    (152) expr -> . CTE_I
    (153) expr -> . CTE_F
    (154) expr -> . ID

    CTE_I           shift and go to state 205
    CTE_F           shift and go to state 206
    ID              shift and go to state 260

    expr                           shift and go to state 266

state 235

    (149) expr -> expr DIV . expr
    (148) expr -> . expr MUL expr
    (149) expr -> . expr DIV expr
    (150) expr -> . expr PLUS expr
    (151) expr -> . expr MINUS expr
    (152) expr -> . CTE_I
    (153) expr -> . CTE_F
    (154) expr -> . ID

    CTE_I           shift and go to state 205
    CTE_F           shift and go to state 206
    ID              shift and go to state 260

    expr                           shift and go to state 267

state 236

    (150) expr -> expr PLUS . expr
    (148) expr -> . expr MUL expr
    (149) expr -> . expr DIV expr
    (150) expr -> . expr PLUS expr
    (151) expr -> . expr MINUS expr
    (152) expr -> . CTE_I
    (153) expr -> . CTE_F
    (154) expr -> . ID

    CTE_I           shift and go to state 205
    CTE_F           shift and go to state 206
    ID              shift and go to state 260

    expr                           shift and go to state 268

state 237

    (151) expr -> expr MINUS . expr
    (148) expr -> . expr MUL expr
    (149) expr -> . expr DIV expr
    (150) expr -> . expr PLUS expr
    (151) expr -> . expr MINUS expr
    (152) expr -> . CTE_I
    (153) expr -> . CTE_F
    (154) expr -> . ID

    CTE_I           shift and go to state 205
    CTE_F           shift and go to state 206
    ID              shift and go to state 260

    expr                           shift and go to state 269

state 238

    (25) vars -> VAR tipo ID row . SEMICOL
    (87) var_row -> VAR tipo ID row . IS LP lista2 RP SEMICOL
    (88) var_rowG -> VAR tipo ID row . IS LP lista2 RP SEMICOL
    (100) matrix -> row . row
    (93) row -> . LC CTE_I RC

    SEMICOL         shift and go to state 270
    IS              shift and go to state 271
    LC              shift and go to state 53

    row                            shift and go to state 67

state 239

    (33) vars1 -> ID SEMICOL .
    (34) vars1 -> ID SEMICOL . vars
    (39) vars3 -> ID SEMICOL . vars
    (40) vars3 -> ID SEMICOL .
    (51) vars1G -> ID SEMICOL .
    (52) vars1G -> ID SEMICOL . varsG
    (57) vars3G -> ID SEMICOL . varsG
    (58) vars3G -> ID SEMICOL .
    (21) vars -> . VAR tipo vars1
    (22) vars -> . VAR tipo vars2
    (23) vars -> . VAR tipo vars3
    (24) vars -> . VAR tipo oper_aritmetica
    (25) vars -> . VAR tipo ID row SEMICOL
    (26) vars -> . VAR tipo ID matrix SEMICOL
    (27) vars -> . varsG
    (28) vars -> . var_row
    (29) vars -> . var_row vars
    (30) vars -> . var_matrix
    (31) vars -> . var_matrix vars
    (32) vars -> . empty
    (41) varsG -> . VAR tipo vars1G
    (42) varsG -> . VAR tipo vars2G
    (43) varsG -> . VAR tipo vars3G
    (44) varsG -> . VAR LB varsG RB
    (45) varsG -> . var_rowG
    (46) varsG -> . var_rowG varsG
    (47) varsG -> . var_matrixG
    (48) varsG -> . var_matrixG varsG
    (49) varsG -> . declarar_func varsG
    (50) varsG -> . empty
    (87) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (101) empty -> .
    (88) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (80) declarar_func -> . FUNC tipo ID SEMICOL
    (81) declarar_func -> . FUNC VOID ID SEMICOL
    (82) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (83) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL

  ! reduce/reduce conflict for ID resolved using rule 33 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for IF resolved using rule 33 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for VAR resolved using rule 33 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for WHILE resolved using rule 33 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for FOR resolved using rule 33 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for PRINT resolved using rule 33 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for READ resolved using rule 33 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for FUNC resolved using rule 33 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for RB resolved using rule 33 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for ID resolved using rule 33 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for IF resolved using rule 33 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for VAR resolved using rule 33 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for WHILE resolved using rule 33 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for FOR resolved using rule 33 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for PRINT resolved using rule 33 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for READ resolved using rule 33 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for FUNC resolved using rule 33 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for RB resolved using rule 33 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for ID resolved using rule 33 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for IF resolved using rule 33 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for VAR resolved using rule 33 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for WHILE resolved using rule 33 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for FOR resolved using rule 33 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for PRINT resolved using rule 33 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for READ resolved using rule 33 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for FUNC resolved using rule 33 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for RB resolved using rule 33 (vars1 -> ID SEMICOL .)
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for ID resolved using rule 33 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for IF resolved using rule 33 (vars1 -> ID SEMICOL .)
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for WHILE resolved using rule 33 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for FOR resolved using rule 33 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for PRINT resolved using rule 33 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for READ resolved using rule 33 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for FUNC resolved using rule 33 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for RB resolved using rule 33 (vars1 -> ID SEMICOL .)
  ! shift/reduce conflict for FUNC resolved as shift
    ID              reduce using rule 33 (vars1 -> ID SEMICOL .)
    IF              reduce using rule 33 (vars1 -> ID SEMICOL .)
    WHILE           reduce using rule 33 (vars1 -> ID SEMICOL .)
    FOR             reduce using rule 33 (vars1 -> ID SEMICOL .)
    PRINT           reduce using rule 33 (vars1 -> ID SEMICOL .)
    READ            reduce using rule 33 (vars1 -> ID SEMICOL .)
    RB              reduce using rule 33 (vars1 -> ID SEMICOL .)
    VAR             shift and go to state 138
    FUNC            shift and go to state 12

  ! VAR             [ reduce using rule 33 (vars1 -> ID SEMICOL .) ]
  ! FUNC            [ reduce using rule 33 (vars1 -> ID SEMICOL .) ]
  ! ID              [ reduce using rule 40 (vars3 -> ID SEMICOL .) ]
  ! IF              [ reduce using rule 40 (vars3 -> ID SEMICOL .) ]
  ! VAR             [ reduce using rule 40 (vars3 -> ID SEMICOL .) ]
  ! WHILE           [ reduce using rule 40 (vars3 -> ID SEMICOL .) ]
  ! FOR             [ reduce using rule 40 (vars3 -> ID SEMICOL .) ]
  ! PRINT           [ reduce using rule 40 (vars3 -> ID SEMICOL .) ]
  ! READ            [ reduce using rule 40 (vars3 -> ID SEMICOL .) ]
  ! FUNC            [ reduce using rule 40 (vars3 -> ID SEMICOL .) ]
  ! RB              [ reduce using rule 40 (vars3 -> ID SEMICOL .) ]
  ! ID              [ reduce using rule 51 (vars1G -> ID SEMICOL .) ]
  ! IF              [ reduce using rule 51 (vars1G -> ID SEMICOL .) ]
  ! VAR             [ reduce using rule 51 (vars1G -> ID SEMICOL .) ]
  ! WHILE           [ reduce using rule 51 (vars1G -> ID SEMICOL .) ]
  ! FOR             [ reduce using rule 51 (vars1G -> ID SEMICOL .) ]
  ! PRINT           [ reduce using rule 51 (vars1G -> ID SEMICOL .) ]
  ! READ            [ reduce using rule 51 (vars1G -> ID SEMICOL .) ]
  ! FUNC            [ reduce using rule 51 (vars1G -> ID SEMICOL .) ]
  ! RB              [ reduce using rule 51 (vars1G -> ID SEMICOL .) ]
  ! ID              [ reduce using rule 58 (vars3G -> ID SEMICOL .) ]
  ! IF              [ reduce using rule 58 (vars3G -> ID SEMICOL .) ]
  ! VAR             [ reduce using rule 58 (vars3G -> ID SEMICOL .) ]
  ! WHILE           [ reduce using rule 58 (vars3G -> ID SEMICOL .) ]
  ! FOR             [ reduce using rule 58 (vars3G -> ID SEMICOL .) ]
  ! PRINT           [ reduce using rule 58 (vars3G -> ID SEMICOL .) ]
  ! READ            [ reduce using rule 58 (vars3G -> ID SEMICOL .) ]
  ! FUNC            [ reduce using rule 58 (vars3G -> ID SEMICOL .) ]
  ! RB              [ reduce using rule 58 (vars3G -> ID SEMICOL .) ]
  ! ID              [ reduce using rule 101 (empty -> .) ]
  ! IF              [ reduce using rule 101 (empty -> .) ]
  ! VAR             [ reduce using rule 101 (empty -> .) ]
  ! WHILE           [ reduce using rule 101 (empty -> .) ]
  ! FOR             [ reduce using rule 101 (empty -> .) ]
  ! PRINT           [ reduce using rule 101 (empty -> .) ]
  ! READ            [ reduce using rule 101 (empty -> .) ]
  ! FUNC            [ reduce using rule 101 (empty -> .) ]
  ! RB              [ reduce using rule 101 (empty -> .) ]

    vars                           shift and go to state 272
    varsG                          shift and go to state 273
    var_row                        shift and go to state 140
    var_matrix                     shift and go to state 141
    empty                          shift and go to state 150
    var_rowG                       shift and go to state 9
    var_matrixG                    shift and go to state 10
    declarar_func                  shift and go to state 11

state 240

    (26) vars -> VAR tipo ID matrix . SEMICOL
    (94) var_matrix -> VAR tipo ID matrix . IS matrix2 SEMICOL
    (95) var_matrixG -> VAR tipo ID matrix . IS matrix2 SEMICOL

    SEMICOL         shift and go to state 274
    IS              shift and go to state 275


state 241

    (35) vars2 -> ID IS . value COMMA vars2
    (36) vars2 -> ID IS . value COMMA
    (37) vars2 -> ID IS . value SEMICOL vars
    (147) oper_aritmetica -> ID IS . expr SEMICOL
    (53) vars2G -> ID IS . value check_type COMMA vars2G
    (54) vars2G -> ID IS . value check_type SEMICOL varsG
    (62) value -> . CTE_F
    (63) value -> . CTE_I
    (64) value -> . ID
    (65) value -> . CTE_C
    (66) value -> . COMILLA ID COMILLA
    (67) value -> . COMILLAS ID COMILLAS
    (148) expr -> . expr MUL expr
    (149) expr -> . expr DIV expr
    (150) expr -> . expr PLUS expr
    (151) expr -> . expr MINUS expr
    (152) expr -> . CTE_I
    (153) expr -> . CTE_F
    (154) expr -> . ID

    CTE_F           shift and go to state 279
    CTE_I           shift and go to state 280
    ID              shift and go to state 276
    CTE_C           shift and go to state 73
    COMILLA         shift and go to state 74
    COMILLAS        shift and go to state 75

    value                          shift and go to state 277
    expr                           shift and go to state 278

state 242

    (38) vars3 -> ID COMMA . vars3
    (56) vars3G -> ID COMMA . vars3G
    (38) vars3 -> . ID COMMA vars3
    (39) vars3 -> . ID SEMICOL vars
    (40) vars3 -> . ID SEMICOL
    (56) vars3G -> . ID COMMA vars3G
    (57) vars3G -> . ID SEMICOL varsG
    (58) vars3G -> . ID SEMICOL

    ID              shift and go to state 281

    vars3                          shift and go to state 282
    vars3G                         shift and go to state 79

state 243

    (111) while -> WHILE LP expression RP . check_bool gotof LB statement RB goto
    (155) check_bool -> .

    LB              reduce using rule 155 (check_bool -> .)

    check_bool                     shift and go to state 283

state 244

    (112) for -> FOR LP VAR tipo . ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto

    ID              shift and go to state 284


state 245

    (121) escritura -> PRINT LP COMILLA any . COMILLA RP SEMICOL

    COMILLA         shift and go to state 285


state 246

    (125) any -> expr . any
    (148) expr -> expr . MUL expr
    (149) expr -> expr . DIV expr
    (150) expr -> expr . PLUS expr
    (151) expr -> expr . MINUS expr
    (137) expression -> expr .
    (142) var_gt -> expr . GT expr
    (141) var_lt -> expr . LT expr
    (145) var_equal -> expr . EQUAL expr
    (146) var_neq -> expr . NEQ expr
    (144) var_geq -> expr . GEQ expr
    (143) var_leq -> expr . LEQ expr
    (125) any -> . expr any
    (126) any -> . expression any
    (127) any -> . empty
    (148) expr -> . expr MUL expr
    (149) expr -> . expr DIV expr
    (150) expr -> . expr PLUS expr
    (151) expr -> . expr MINUS expr
    (152) expr -> . CTE_I
    (153) expr -> . CTE_F
    (154) expr -> . ID
    (131) expression -> . var_gt
    (132) expression -> . var_lt
    (133) expression -> . var_equal
    (134) expression -> . var_neq
    (135) expression -> . var_geq
    (136) expression -> . var_leq
    (137) expression -> . expr
    (138) expression -> . TRUE
    (139) expression -> . FALSE
    (140) expression -> . ID
    (101) empty -> .
    (142) var_gt -> . expr GT expr
    (141) var_lt -> . expr LT expr
    (145) var_equal -> . expr EQUAL expr
    (146) var_neq -> . expr NEQ expr
    (144) var_geq -> . expr GEQ expr
    (143) var_leq -> . expr LEQ expr

  ! shift/reduce conflict for CTE_I resolved as shift
  ! shift/reduce conflict for CTE_F resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! reduce/reduce conflict for COMILLA resolved using rule 101 (empty -> .)
  ! reduce/reduce conflict for COMILLAS resolved using rule 101 (empty -> .)
    MUL             shift and go to state 234
    DIV             shift and go to state 235
    PLUS            shift and go to state 236
    MINUS           shift and go to state 237
    GT              shift and go to state 228
    LT              shift and go to state 229
    EQUAL           shift and go to state 230
    NEQ             shift and go to state 231
    GEQ             shift and go to state 232
    LEQ             shift and go to state 233
    CTE_I           shift and go to state 205
    CTE_F           shift and go to state 206
    ID              shift and go to state 249
    TRUE            shift and go to state 202
    FALSE           shift and go to state 203
    COMILLA         reduce using rule 101 (empty -> .)
    COMILLAS        reduce using rule 101 (empty -> .)

  ! CTE_I           [ reduce using rule 137 (expression -> expr .) ]
  ! CTE_F           [ reduce using rule 137 (expression -> expr .) ]
  ! ID              [ reduce using rule 137 (expression -> expr .) ]
  ! TRUE            [ reduce using rule 137 (expression -> expr .) ]
  ! FALSE           [ reduce using rule 137 (expression -> expr .) ]
  ! COMILLA         [ reduce using rule 137 (expression -> expr .) ]
  ! COMILLAS        [ reduce using rule 137 (expression -> expr .) ]

    expr                           shift and go to state 246
    any                            shift and go to state 286
    expression                     shift and go to state 247
    empty                          shift and go to state 248
    var_gt                         shift and go to state 195
    var_lt                         shift and go to state 196
    var_equal                      shift and go to state 197
    var_neq                        shift and go to state 198
    var_geq                        shift and go to state 199
    var_leq                        shift and go to state 200

state 247

    (126) any -> expression . any
    (125) any -> . expr any
    (126) any -> . expression any
    (127) any -> . empty
    (148) expr -> . expr MUL expr
    (149) expr -> . expr DIV expr
    (150) expr -> . expr PLUS expr
    (151) expr -> . expr MINUS expr
    (152) expr -> . CTE_I
    (153) expr -> . CTE_F
    (154) expr -> . ID
    (131) expression -> . var_gt
    (132) expression -> . var_lt
    (133) expression -> . var_equal
    (134) expression -> . var_neq
    (135) expression -> . var_geq
    (136) expression -> . var_leq
    (137) expression -> . expr
    (138) expression -> . TRUE
    (139) expression -> . FALSE
    (140) expression -> . ID
    (101) empty -> .
    (142) var_gt -> . expr GT expr
    (141) var_lt -> . expr LT expr
    (145) var_equal -> . expr EQUAL expr
    (146) var_neq -> . expr NEQ expr
    (144) var_geq -> . expr GEQ expr
    (143) var_leq -> . expr LEQ expr

    CTE_I           shift and go to state 205
    CTE_F           shift and go to state 206
    ID              shift and go to state 249
    TRUE            shift and go to state 202
    FALSE           shift and go to state 203
    COMILLA         reduce using rule 101 (empty -> .)
    COMILLAS        reduce using rule 101 (empty -> .)

    expression                     shift and go to state 247
    any                            shift and go to state 287
    expr                           shift and go to state 246
    empty                          shift and go to state 248
    var_gt                         shift and go to state 195
    var_lt                         shift and go to state 196
    var_equal                      shift and go to state 197
    var_neq                        shift and go to state 198
    var_geq                        shift and go to state 199
    var_leq                        shift and go to state 200

state 248

    (127) any -> empty .

    COMILLA         reduce using rule 127 (any -> empty .)
    COMILLAS        reduce using rule 127 (any -> empty .)


state 249

    (154) expr -> ID .
    (140) expression -> ID .

  ! reduce/reduce conflict for CTE_I resolved using rule 140 (expression -> ID .)
  ! reduce/reduce conflict for CTE_F resolved using rule 140 (expression -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 140 (expression -> ID .)
  ! reduce/reduce conflict for TRUE resolved using rule 140 (expression -> ID .)
  ! reduce/reduce conflict for FALSE resolved using rule 140 (expression -> ID .)
  ! reduce/reduce conflict for COMILLA resolved using rule 140 (expression -> ID .)
  ! reduce/reduce conflict for COMILLAS resolved using rule 140 (expression -> ID .)
    MUL             reduce using rule 154 (expr -> ID .)
    DIV             reduce using rule 154 (expr -> ID .)
    PLUS            reduce using rule 154 (expr -> ID .)
    MINUS           reduce using rule 154 (expr -> ID .)
    GT              reduce using rule 154 (expr -> ID .)
    LT              reduce using rule 154 (expr -> ID .)
    EQUAL           reduce using rule 154 (expr -> ID .)
    NEQ             reduce using rule 154 (expr -> ID .)
    GEQ             reduce using rule 154 (expr -> ID .)
    LEQ             reduce using rule 154 (expr -> ID .)
    CTE_I           reduce using rule 140 (expression -> ID .)
    CTE_F           reduce using rule 140 (expression -> ID .)
    ID              reduce using rule 140 (expression -> ID .)
    TRUE            reduce using rule 140 (expression -> ID .)
    FALSE           reduce using rule 140 (expression -> ID .)
    COMILLA         reduce using rule 140 (expression -> ID .)
    COMILLAS        reduce using rule 140 (expression -> ID .)

  ! CTE_I           [ reduce using rule 154 (expr -> ID .) ]
  ! CTE_F           [ reduce using rule 154 (expr -> ID .) ]
  ! ID              [ reduce using rule 154 (expr -> ID .) ]
  ! TRUE            [ reduce using rule 154 (expr -> ID .) ]
  ! FALSE           [ reduce using rule 154 (expr -> ID .) ]
  ! COMILLA         [ reduce using rule 154 (expr -> ID .) ]
  ! COMILLAS        [ reduce using rule 154 (expr -> ID .) ]


state 250

    (122) escritura -> PRINT LP COMILLAS any . COMILLAS RP SEMICOL

    COMILLAS        shift and go to state 288


state 251

    (123) escritura_var -> PRINT LP any_var RP . SEMICOL

    SEMICOL         shift and go to state 289


state 252

    (128) lectura -> READ LP COMILLA any_lectura . COMILLA RP SEMICOL

    COMILLA         shift and go to state 290


state 253

    (130) any_lectura -> ID .

    COMILLA         reduce using rule 130 (any_lectura -> ID .)
    COMILLAS        reduce using rule 130 (any_lectura -> ID .)


state 254

    (129) lectura -> READ LP COMILLAS any_lectura . COMILLAS RP SEMICOL

    COMILLAS        shift and go to state 291


state 255

    (69) funcion -> VOID ID LP param RP verificar LB var_func statement RB .

    VOID            reduce using rule 69 (funcion -> VOID ID LP param RP verificar LB var_func statement RB .)
    INT             reduce using rule 69 (funcion -> VOID ID LP param RP verificar LB var_func statement RB .)
    FLOAT           reduce using rule 69 (funcion -> VOID ID LP param RP verificar LB var_func statement RB .)
    CHAR            reduce using rule 69 (funcion -> VOID ID LP param RP verificar LB var_func statement RB .)
    $end            reduce using rule 69 (funcion -> VOID ID LP param RP verificar LB var_func statement RB .)


state 256

    (70) funcion -> tipo ID LP param RP verificar LB var_func statement RB .

    VOID            reduce using rule 70 (funcion -> tipo ID LP param RP verificar LB var_func statement RB .)
    INT             reduce using rule 70 (funcion -> tipo ID LP param RP verificar LB var_func statement RB .)
    FLOAT           reduce using rule 70 (funcion -> tipo ID LP param RP verificar LB var_func statement RB .)
    CHAR            reduce using rule 70 (funcion -> tipo ID LP param RP verificar LB var_func statement RB .)
    $end            reduce using rule 70 (funcion -> tipo ID LP param RP verificar LB var_func statement RB .)


state 257

    (97) matrix2 -> LP lista2 RP COMMA LP lista2 . RP
    (96) matrix2 -> LP lista2 . RP COMMA matrix2
    (97) matrix2 -> LP lista2 . RP COMMA LP lista2 RP

    RP              shift and go to state 292


state 258

    (102) if -> IF LP expression RP check_bool . gotof LB statement RB
    (103) if -> IF LP expression RP check_bool . gotof LB statement RB goto elseif
    (104) if -> IF LP expression RP check_bool . gotof LB statement RB goto else
    (110) gotof -> .

    LB              reduce using rule 110 (gotof -> .)

    gotof                          shift and go to state 293

state 259

    (142) var_gt -> expr GT expr .
    (148) expr -> expr . MUL expr
    (149) expr -> expr . DIV expr
    (150) expr -> expr . PLUS expr
    (151) expr -> expr . MINUS expr

    RP              reduce using rule 142 (var_gt -> expr GT expr .)
    CTE_I           reduce using rule 142 (var_gt -> expr GT expr .)
    CTE_F           reduce using rule 142 (var_gt -> expr GT expr .)
    ID              reduce using rule 142 (var_gt -> expr GT expr .)
    TRUE            reduce using rule 142 (var_gt -> expr GT expr .)
    FALSE           reduce using rule 142 (var_gt -> expr GT expr .)
    COMILLA         reduce using rule 142 (var_gt -> expr GT expr .)
    COMILLAS        reduce using rule 142 (var_gt -> expr GT expr .)
    SEMICOL         reduce using rule 142 (var_gt -> expr GT expr .)
    MUL             shift and go to state 234
    DIV             shift and go to state 235
    PLUS            shift and go to state 236
    MINUS           shift and go to state 237


state 260

    (154) expr -> ID .

    MUL             reduce using rule 154 (expr -> ID .)
    DIV             reduce using rule 154 (expr -> ID .)
    PLUS            reduce using rule 154 (expr -> ID .)
    MINUS           reduce using rule 154 (expr -> ID .)
    RP              reduce using rule 154 (expr -> ID .)
    CTE_I           reduce using rule 154 (expr -> ID .)
    CTE_F           reduce using rule 154 (expr -> ID .)
    ID              reduce using rule 154 (expr -> ID .)
    TRUE            reduce using rule 154 (expr -> ID .)
    FALSE           reduce using rule 154 (expr -> ID .)
    COMILLA         reduce using rule 154 (expr -> ID .)
    COMILLAS        reduce using rule 154 (expr -> ID .)
    SEMICOL         reduce using rule 154 (expr -> ID .)
    GT              reduce using rule 154 (expr -> ID .)
    LT              reduce using rule 154 (expr -> ID .)
    EQUAL           reduce using rule 154 (expr -> ID .)
    NEQ             reduce using rule 154 (expr -> ID .)
    GEQ             reduce using rule 154 (expr -> ID .)
    LEQ             reduce using rule 154 (expr -> ID .)


state 261

    (141) var_lt -> expr LT expr .
    (148) expr -> expr . MUL expr
    (149) expr -> expr . DIV expr
    (150) expr -> expr . PLUS expr
    (151) expr -> expr . MINUS expr

    RP              reduce using rule 141 (var_lt -> expr LT expr .)
    CTE_I           reduce using rule 141 (var_lt -> expr LT expr .)
    CTE_F           reduce using rule 141 (var_lt -> expr LT expr .)
    ID              reduce using rule 141 (var_lt -> expr LT expr .)
    TRUE            reduce using rule 141 (var_lt -> expr LT expr .)
    FALSE           reduce using rule 141 (var_lt -> expr LT expr .)
    COMILLA         reduce using rule 141 (var_lt -> expr LT expr .)
    COMILLAS        reduce using rule 141 (var_lt -> expr LT expr .)
    SEMICOL         reduce using rule 141 (var_lt -> expr LT expr .)
    MUL             shift and go to state 234
    DIV             shift and go to state 235
    PLUS            shift and go to state 236
    MINUS           shift and go to state 237


state 262

    (145) var_equal -> expr EQUAL expr .
    (148) expr -> expr . MUL expr
    (149) expr -> expr . DIV expr
    (150) expr -> expr . PLUS expr
    (151) expr -> expr . MINUS expr

    RP              reduce using rule 145 (var_equal -> expr EQUAL expr .)
    CTE_I           reduce using rule 145 (var_equal -> expr EQUAL expr .)
    CTE_F           reduce using rule 145 (var_equal -> expr EQUAL expr .)
    ID              reduce using rule 145 (var_equal -> expr EQUAL expr .)
    TRUE            reduce using rule 145 (var_equal -> expr EQUAL expr .)
    FALSE           reduce using rule 145 (var_equal -> expr EQUAL expr .)
    COMILLA         reduce using rule 145 (var_equal -> expr EQUAL expr .)
    COMILLAS        reduce using rule 145 (var_equal -> expr EQUAL expr .)
    SEMICOL         reduce using rule 145 (var_equal -> expr EQUAL expr .)
    MUL             shift and go to state 234
    DIV             shift and go to state 235
    PLUS            shift and go to state 236
    MINUS           shift and go to state 237


state 263

    (146) var_neq -> expr NEQ expr .
    (148) expr -> expr . MUL expr
    (149) expr -> expr . DIV expr
    (150) expr -> expr . PLUS expr
    (151) expr -> expr . MINUS expr

    RP              reduce using rule 146 (var_neq -> expr NEQ expr .)
    CTE_I           reduce using rule 146 (var_neq -> expr NEQ expr .)
    CTE_F           reduce using rule 146 (var_neq -> expr NEQ expr .)
    ID              reduce using rule 146 (var_neq -> expr NEQ expr .)
    TRUE            reduce using rule 146 (var_neq -> expr NEQ expr .)
    FALSE           reduce using rule 146 (var_neq -> expr NEQ expr .)
    COMILLA         reduce using rule 146 (var_neq -> expr NEQ expr .)
    COMILLAS        reduce using rule 146 (var_neq -> expr NEQ expr .)
    SEMICOL         reduce using rule 146 (var_neq -> expr NEQ expr .)
    MUL             shift and go to state 234
    DIV             shift and go to state 235
    PLUS            shift and go to state 236
    MINUS           shift and go to state 237


state 264

    (144) var_geq -> expr GEQ expr .
    (148) expr -> expr . MUL expr
    (149) expr -> expr . DIV expr
    (150) expr -> expr . PLUS expr
    (151) expr -> expr . MINUS expr

    RP              reduce using rule 144 (var_geq -> expr GEQ expr .)
    CTE_I           reduce using rule 144 (var_geq -> expr GEQ expr .)
    CTE_F           reduce using rule 144 (var_geq -> expr GEQ expr .)
    ID              reduce using rule 144 (var_geq -> expr GEQ expr .)
    TRUE            reduce using rule 144 (var_geq -> expr GEQ expr .)
    FALSE           reduce using rule 144 (var_geq -> expr GEQ expr .)
    COMILLA         reduce using rule 144 (var_geq -> expr GEQ expr .)
    COMILLAS        reduce using rule 144 (var_geq -> expr GEQ expr .)
    SEMICOL         reduce using rule 144 (var_geq -> expr GEQ expr .)
    MUL             shift and go to state 234
    DIV             shift and go to state 235
    PLUS            shift and go to state 236
    MINUS           shift and go to state 237


state 265

    (143) var_leq -> expr LEQ expr .
    (148) expr -> expr . MUL expr
    (149) expr -> expr . DIV expr
    (150) expr -> expr . PLUS expr
    (151) expr -> expr . MINUS expr

    RP              reduce using rule 143 (var_leq -> expr LEQ expr .)
    CTE_I           reduce using rule 143 (var_leq -> expr LEQ expr .)
    CTE_F           reduce using rule 143 (var_leq -> expr LEQ expr .)
    ID              reduce using rule 143 (var_leq -> expr LEQ expr .)
    TRUE            reduce using rule 143 (var_leq -> expr LEQ expr .)
    FALSE           reduce using rule 143 (var_leq -> expr LEQ expr .)
    COMILLA         reduce using rule 143 (var_leq -> expr LEQ expr .)
    COMILLAS        reduce using rule 143 (var_leq -> expr LEQ expr .)
    SEMICOL         reduce using rule 143 (var_leq -> expr LEQ expr .)
    MUL             shift and go to state 234
    DIV             shift and go to state 235
    PLUS            shift and go to state 236
    MINUS           shift and go to state 237


state 266

    (148) expr -> expr MUL expr .
    (148) expr -> expr . MUL expr
    (149) expr -> expr . DIV expr
    (150) expr -> expr . PLUS expr
    (151) expr -> expr . MINUS expr

    GT              reduce using rule 148 (expr -> expr MUL expr .)
    LT              reduce using rule 148 (expr -> expr MUL expr .)
    EQUAL           reduce using rule 148 (expr -> expr MUL expr .)
    NEQ             reduce using rule 148 (expr -> expr MUL expr .)
    GEQ             reduce using rule 148 (expr -> expr MUL expr .)
    LEQ             reduce using rule 148 (expr -> expr MUL expr .)
    MUL             reduce using rule 148 (expr -> expr MUL expr .)
    DIV             reduce using rule 148 (expr -> expr MUL expr .)
    PLUS            reduce using rule 148 (expr -> expr MUL expr .)
    MINUS           reduce using rule 148 (expr -> expr MUL expr .)
    RP              reduce using rule 148 (expr -> expr MUL expr .)
    CTE_I           reduce using rule 148 (expr -> expr MUL expr .)
    CTE_F           reduce using rule 148 (expr -> expr MUL expr .)
    ID              reduce using rule 148 (expr -> expr MUL expr .)
    TRUE            reduce using rule 148 (expr -> expr MUL expr .)
    FALSE           reduce using rule 148 (expr -> expr MUL expr .)
    COMILLA         reduce using rule 148 (expr -> expr MUL expr .)
    COMILLAS        reduce using rule 148 (expr -> expr MUL expr .)
    SEMICOL         reduce using rule 148 (expr -> expr MUL expr .)

  ! MUL             [ shift and go to state 234 ]
  ! DIV             [ shift and go to state 235 ]
  ! PLUS            [ shift and go to state 236 ]
  ! MINUS           [ shift and go to state 237 ]


state 267

    (149) expr -> expr DIV expr .
    (148) expr -> expr . MUL expr
    (149) expr -> expr . DIV expr
    (150) expr -> expr . PLUS expr
    (151) expr -> expr . MINUS expr

    GT              reduce using rule 149 (expr -> expr DIV expr .)
    LT              reduce using rule 149 (expr -> expr DIV expr .)
    EQUAL           reduce using rule 149 (expr -> expr DIV expr .)
    NEQ             reduce using rule 149 (expr -> expr DIV expr .)
    GEQ             reduce using rule 149 (expr -> expr DIV expr .)
    LEQ             reduce using rule 149 (expr -> expr DIV expr .)
    MUL             reduce using rule 149 (expr -> expr DIV expr .)
    DIV             reduce using rule 149 (expr -> expr DIV expr .)
    PLUS            reduce using rule 149 (expr -> expr DIV expr .)
    MINUS           reduce using rule 149 (expr -> expr DIV expr .)
    RP              reduce using rule 149 (expr -> expr DIV expr .)
    CTE_I           reduce using rule 149 (expr -> expr DIV expr .)
    CTE_F           reduce using rule 149 (expr -> expr DIV expr .)
    ID              reduce using rule 149 (expr -> expr DIV expr .)
    TRUE            reduce using rule 149 (expr -> expr DIV expr .)
    FALSE           reduce using rule 149 (expr -> expr DIV expr .)
    COMILLA         reduce using rule 149 (expr -> expr DIV expr .)
    COMILLAS        reduce using rule 149 (expr -> expr DIV expr .)
    SEMICOL         reduce using rule 149 (expr -> expr DIV expr .)

  ! MUL             [ shift and go to state 234 ]
  ! DIV             [ shift and go to state 235 ]
  ! PLUS            [ shift and go to state 236 ]
  ! MINUS           [ shift and go to state 237 ]


state 268

    (150) expr -> expr PLUS expr .
    (148) expr -> expr . MUL expr
    (149) expr -> expr . DIV expr
    (150) expr -> expr . PLUS expr
    (151) expr -> expr . MINUS expr

    GT              reduce using rule 150 (expr -> expr PLUS expr .)
    LT              reduce using rule 150 (expr -> expr PLUS expr .)
    EQUAL           reduce using rule 150 (expr -> expr PLUS expr .)
    NEQ             reduce using rule 150 (expr -> expr PLUS expr .)
    GEQ             reduce using rule 150 (expr -> expr PLUS expr .)
    LEQ             reduce using rule 150 (expr -> expr PLUS expr .)
    PLUS            reduce using rule 150 (expr -> expr PLUS expr .)
    MINUS           reduce using rule 150 (expr -> expr PLUS expr .)
    RP              reduce using rule 150 (expr -> expr PLUS expr .)
    CTE_I           reduce using rule 150 (expr -> expr PLUS expr .)
    CTE_F           reduce using rule 150 (expr -> expr PLUS expr .)
    ID              reduce using rule 150 (expr -> expr PLUS expr .)
    TRUE            reduce using rule 150 (expr -> expr PLUS expr .)
    FALSE           reduce using rule 150 (expr -> expr PLUS expr .)
    COMILLA         reduce using rule 150 (expr -> expr PLUS expr .)
    COMILLAS        reduce using rule 150 (expr -> expr PLUS expr .)
    SEMICOL         reduce using rule 150 (expr -> expr PLUS expr .)
    MUL             shift and go to state 234
    DIV             shift and go to state 235

  ! MUL             [ reduce using rule 150 (expr -> expr PLUS expr .) ]
  ! DIV             [ reduce using rule 150 (expr -> expr PLUS expr .) ]
  ! PLUS            [ shift and go to state 236 ]
  ! MINUS           [ shift and go to state 237 ]


state 269

    (151) expr -> expr MINUS expr .
    (148) expr -> expr . MUL expr
    (149) expr -> expr . DIV expr
    (150) expr -> expr . PLUS expr
    (151) expr -> expr . MINUS expr

    GT              reduce using rule 151 (expr -> expr MINUS expr .)
    LT              reduce using rule 151 (expr -> expr MINUS expr .)
    EQUAL           reduce using rule 151 (expr -> expr MINUS expr .)
    NEQ             reduce using rule 151 (expr -> expr MINUS expr .)
    GEQ             reduce using rule 151 (expr -> expr MINUS expr .)
    LEQ             reduce using rule 151 (expr -> expr MINUS expr .)
    PLUS            reduce using rule 151 (expr -> expr MINUS expr .)
    MINUS           reduce using rule 151 (expr -> expr MINUS expr .)
    RP              reduce using rule 151 (expr -> expr MINUS expr .)
    CTE_I           reduce using rule 151 (expr -> expr MINUS expr .)
    CTE_F           reduce using rule 151 (expr -> expr MINUS expr .)
    ID              reduce using rule 151 (expr -> expr MINUS expr .)
    TRUE            reduce using rule 151 (expr -> expr MINUS expr .)
    FALSE           reduce using rule 151 (expr -> expr MINUS expr .)
    COMILLA         reduce using rule 151 (expr -> expr MINUS expr .)
    COMILLAS        reduce using rule 151 (expr -> expr MINUS expr .)
    SEMICOL         reduce using rule 151 (expr -> expr MINUS expr .)
    MUL             shift and go to state 234
    DIV             shift and go to state 235

  ! MUL             [ reduce using rule 151 (expr -> expr MINUS expr .) ]
  ! DIV             [ reduce using rule 151 (expr -> expr MINUS expr .) ]
  ! PLUS            [ shift and go to state 236 ]
  ! MINUS           [ shift and go to state 237 ]


state 270

    (25) vars -> VAR tipo ID row SEMICOL .

    ID              reduce using rule 25 (vars -> VAR tipo ID row SEMICOL .)
    IF              reduce using rule 25 (vars -> VAR tipo ID row SEMICOL .)
    VAR             reduce using rule 25 (vars -> VAR tipo ID row SEMICOL .)
    WHILE           reduce using rule 25 (vars -> VAR tipo ID row SEMICOL .)
    FOR             reduce using rule 25 (vars -> VAR tipo ID row SEMICOL .)
    PRINT           reduce using rule 25 (vars -> VAR tipo ID row SEMICOL .)
    READ            reduce using rule 25 (vars -> VAR tipo ID row SEMICOL .)
    FUNC            reduce using rule 25 (vars -> VAR tipo ID row SEMICOL .)
    RB              reduce using rule 25 (vars -> VAR tipo ID row SEMICOL .)


state 271

    (87) var_row -> VAR tipo ID row IS . LP lista2 RP SEMICOL
    (88) var_rowG -> VAR tipo ID row IS . LP lista2 RP SEMICOL

    LP              shift and go to state 294


state 272

    (34) vars1 -> ID SEMICOL vars .
    (39) vars3 -> ID SEMICOL vars .

  ! reduce/reduce conflict for ID resolved using rule 34 (vars1 -> ID SEMICOL vars .)
  ! reduce/reduce conflict for IF resolved using rule 34 (vars1 -> ID SEMICOL vars .)
  ! reduce/reduce conflict for VAR resolved using rule 34 (vars1 -> ID SEMICOL vars .)
  ! reduce/reduce conflict for WHILE resolved using rule 34 (vars1 -> ID SEMICOL vars .)
  ! reduce/reduce conflict for FOR resolved using rule 34 (vars1 -> ID SEMICOL vars .)
  ! reduce/reduce conflict for PRINT resolved using rule 34 (vars1 -> ID SEMICOL vars .)
  ! reduce/reduce conflict for READ resolved using rule 34 (vars1 -> ID SEMICOL vars .)
  ! reduce/reduce conflict for FUNC resolved using rule 34 (vars1 -> ID SEMICOL vars .)
  ! reduce/reduce conflict for RB resolved using rule 34 (vars1 -> ID SEMICOL vars .)
    ID              reduce using rule 34 (vars1 -> ID SEMICOL vars .)
    IF              reduce using rule 34 (vars1 -> ID SEMICOL vars .)
    VAR             reduce using rule 34 (vars1 -> ID SEMICOL vars .)
    WHILE           reduce using rule 34 (vars1 -> ID SEMICOL vars .)
    FOR             reduce using rule 34 (vars1 -> ID SEMICOL vars .)
    PRINT           reduce using rule 34 (vars1 -> ID SEMICOL vars .)
    READ            reduce using rule 34 (vars1 -> ID SEMICOL vars .)
    FUNC            reduce using rule 34 (vars1 -> ID SEMICOL vars .)
    RB              reduce using rule 34 (vars1 -> ID SEMICOL vars .)

  ! ID              [ reduce using rule 39 (vars3 -> ID SEMICOL vars .) ]
  ! IF              [ reduce using rule 39 (vars3 -> ID SEMICOL vars .) ]
  ! VAR             [ reduce using rule 39 (vars3 -> ID SEMICOL vars .) ]
  ! WHILE           [ reduce using rule 39 (vars3 -> ID SEMICOL vars .) ]
  ! FOR             [ reduce using rule 39 (vars3 -> ID SEMICOL vars .) ]
  ! PRINT           [ reduce using rule 39 (vars3 -> ID SEMICOL vars .) ]
  ! READ            [ reduce using rule 39 (vars3 -> ID SEMICOL vars .) ]
  ! FUNC            [ reduce using rule 39 (vars3 -> ID SEMICOL vars .) ]
  ! RB              [ reduce using rule 39 (vars3 -> ID SEMICOL vars .) ]


state 273

    (52) vars1G -> ID SEMICOL varsG .
    (57) vars3G -> ID SEMICOL varsG .
    (27) vars -> varsG .

  ! reduce/reduce conflict for ID resolved using rule 52 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for IF resolved using rule 52 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for VAR resolved using rule 52 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for WHILE resolved using rule 52 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for FOR resolved using rule 52 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for PRINT resolved using rule 52 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for READ resolved using rule 52 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for FUNC resolved using rule 52 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for RB resolved using rule 52 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for ID resolved using rule 27 (vars -> varsG .)
  ! reduce/reduce conflict for IF resolved using rule 27 (vars -> varsG .)
  ! reduce/reduce conflict for VAR resolved using rule 27 (vars -> varsG .)
  ! reduce/reduce conflict for WHILE resolved using rule 27 (vars -> varsG .)
  ! reduce/reduce conflict for FOR resolved using rule 27 (vars -> varsG .)
  ! reduce/reduce conflict for PRINT resolved using rule 27 (vars -> varsG .)
  ! reduce/reduce conflict for READ resolved using rule 27 (vars -> varsG .)
  ! reduce/reduce conflict for FUNC resolved using rule 27 (vars -> varsG .)
  ! reduce/reduce conflict for RB resolved using rule 27 (vars -> varsG .)
    ID              reduce using rule 27 (vars -> varsG .)
    IF              reduce using rule 27 (vars -> varsG .)
    VAR             reduce using rule 27 (vars -> varsG .)
    WHILE           reduce using rule 27 (vars -> varsG .)
    FOR             reduce using rule 27 (vars -> varsG .)
    PRINT           reduce using rule 27 (vars -> varsG .)
    READ            reduce using rule 27 (vars -> varsG .)
    FUNC            reduce using rule 27 (vars -> varsG .)
    RB              reduce using rule 27 (vars -> varsG .)

  ! ID              [ reduce using rule 52 (vars1G -> ID SEMICOL varsG .) ]
  ! IF              [ reduce using rule 52 (vars1G -> ID SEMICOL varsG .) ]
  ! VAR             [ reduce using rule 52 (vars1G -> ID SEMICOL varsG .) ]
  ! WHILE           [ reduce using rule 52 (vars1G -> ID SEMICOL varsG .) ]
  ! FOR             [ reduce using rule 52 (vars1G -> ID SEMICOL varsG .) ]
  ! PRINT           [ reduce using rule 52 (vars1G -> ID SEMICOL varsG .) ]
  ! READ            [ reduce using rule 52 (vars1G -> ID SEMICOL varsG .) ]
  ! FUNC            [ reduce using rule 52 (vars1G -> ID SEMICOL varsG .) ]
  ! RB              [ reduce using rule 52 (vars1G -> ID SEMICOL varsG .) ]
  ! ID              [ reduce using rule 57 (vars3G -> ID SEMICOL varsG .) ]
  ! IF              [ reduce using rule 57 (vars3G -> ID SEMICOL varsG .) ]
  ! VAR             [ reduce using rule 57 (vars3G -> ID SEMICOL varsG .) ]
  ! WHILE           [ reduce using rule 57 (vars3G -> ID SEMICOL varsG .) ]
  ! FOR             [ reduce using rule 57 (vars3G -> ID SEMICOL varsG .) ]
  ! PRINT           [ reduce using rule 57 (vars3G -> ID SEMICOL varsG .) ]
  ! READ            [ reduce using rule 57 (vars3G -> ID SEMICOL varsG .) ]
  ! FUNC            [ reduce using rule 57 (vars3G -> ID SEMICOL varsG .) ]
  ! RB              [ reduce using rule 57 (vars3G -> ID SEMICOL varsG .) ]


state 274

    (26) vars -> VAR tipo ID matrix SEMICOL .

    ID              reduce using rule 26 (vars -> VAR tipo ID matrix SEMICOL .)
    IF              reduce using rule 26 (vars -> VAR tipo ID matrix SEMICOL .)
    VAR             reduce using rule 26 (vars -> VAR tipo ID matrix SEMICOL .)
    WHILE           reduce using rule 26 (vars -> VAR tipo ID matrix SEMICOL .)
    FOR             reduce using rule 26 (vars -> VAR tipo ID matrix SEMICOL .)
    PRINT           reduce using rule 26 (vars -> VAR tipo ID matrix SEMICOL .)
    READ            reduce using rule 26 (vars -> VAR tipo ID matrix SEMICOL .)
    FUNC            reduce using rule 26 (vars -> VAR tipo ID matrix SEMICOL .)
    RB              reduce using rule 26 (vars -> VAR tipo ID matrix SEMICOL .)


state 275

    (94) var_matrix -> VAR tipo ID matrix IS . matrix2 SEMICOL
    (95) var_matrixG -> VAR tipo ID matrix IS . matrix2 SEMICOL
    (96) matrix2 -> . LP lista2 RP COMMA matrix2
    (97) matrix2 -> . LP lista2 RP COMMA LP lista2 RP

    LP              shift and go to state 97

    matrix2                        shift and go to state 295

state 276

    (64) value -> ID .
    (154) expr -> ID .

  ! reduce/reduce conflict for SEMICOL resolved using rule 64 (value -> ID .)
    COMMA           reduce using rule 64 (value -> ID .)
    SEMICOL         reduce using rule 64 (value -> ID .)
    MUL             reduce using rule 154 (expr -> ID .)
    DIV             reduce using rule 154 (expr -> ID .)
    PLUS            reduce using rule 154 (expr -> ID .)
    MINUS           reduce using rule 154 (expr -> ID .)

  ! SEMICOL         [ reduce using rule 154 (expr -> ID .) ]


state 277

    (35) vars2 -> ID IS value . COMMA vars2
    (36) vars2 -> ID IS value . COMMA
    (37) vars2 -> ID IS value . SEMICOL vars
    (53) vars2G -> ID IS value . check_type COMMA vars2G
    (54) vars2G -> ID IS value . check_type SEMICOL varsG
    (68) check_type -> .

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for SEMICOL resolved as shift
    COMMA           shift and go to state 296
    SEMICOL         shift and go to state 297

  ! COMMA           [ reduce using rule 68 (check_type -> .) ]
  ! SEMICOL         [ reduce using rule 68 (check_type -> .) ]

    check_type                     shift and go to state 93

state 278

    (147) oper_aritmetica -> ID IS expr . SEMICOL
    (148) expr -> expr . MUL expr
    (149) expr -> expr . DIV expr
    (150) expr -> expr . PLUS expr
    (151) expr -> expr . MINUS expr

    SEMICOL         shift and go to state 298
    MUL             shift and go to state 234
    DIV             shift and go to state 235
    PLUS            shift and go to state 236
    MINUS           shift and go to state 237


state 279

    (62) value -> CTE_F .
    (153) expr -> CTE_F .

  ! reduce/reduce conflict for SEMICOL resolved using rule 62 (value -> CTE_F .)
    COMMA           reduce using rule 62 (value -> CTE_F .)
    SEMICOL         reduce using rule 62 (value -> CTE_F .)
    MUL             reduce using rule 153 (expr -> CTE_F .)
    DIV             reduce using rule 153 (expr -> CTE_F .)
    PLUS            reduce using rule 153 (expr -> CTE_F .)
    MINUS           reduce using rule 153 (expr -> CTE_F .)

  ! SEMICOL         [ reduce using rule 153 (expr -> CTE_F .) ]


state 280

    (63) value -> CTE_I .
    (152) expr -> CTE_I .

  ! reduce/reduce conflict for SEMICOL resolved using rule 63 (value -> CTE_I .)
    COMMA           reduce using rule 63 (value -> CTE_I .)
    SEMICOL         reduce using rule 63 (value -> CTE_I .)
    MUL             reduce using rule 152 (expr -> CTE_I .)
    DIV             reduce using rule 152 (expr -> CTE_I .)
    PLUS            reduce using rule 152 (expr -> CTE_I .)
    MINUS           reduce using rule 152 (expr -> CTE_I .)

  ! SEMICOL         [ reduce using rule 152 (expr -> CTE_I .) ]


state 281

    (38) vars3 -> ID . COMMA vars3
    (39) vars3 -> ID . SEMICOL vars
    (40) vars3 -> ID . SEMICOL
    (56) vars3G -> ID . COMMA vars3G
    (57) vars3G -> ID . SEMICOL varsG
    (58) vars3G -> ID . SEMICOL

    COMMA           shift and go to state 242
    SEMICOL         shift and go to state 299


state 282

    (38) vars3 -> ID COMMA vars3 .

    ID              reduce using rule 38 (vars3 -> ID COMMA vars3 .)
    IF              reduce using rule 38 (vars3 -> ID COMMA vars3 .)
    VAR             reduce using rule 38 (vars3 -> ID COMMA vars3 .)
    WHILE           reduce using rule 38 (vars3 -> ID COMMA vars3 .)
    FOR             reduce using rule 38 (vars3 -> ID COMMA vars3 .)
    PRINT           reduce using rule 38 (vars3 -> ID COMMA vars3 .)
    READ            reduce using rule 38 (vars3 -> ID COMMA vars3 .)
    FUNC            reduce using rule 38 (vars3 -> ID COMMA vars3 .)
    RB              reduce using rule 38 (vars3 -> ID COMMA vars3 .)


state 283

    (111) while -> WHILE LP expression RP check_bool . gotof LB statement RB goto
    (110) gotof -> .

    LB              reduce using rule 110 (gotof -> .)

    gotof                          shift and go to state 300

state 284

    (112) for -> FOR LP VAR tipo ID . IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto

    IS              shift and go to state 301


state 285

    (121) escritura -> PRINT LP COMILLA any COMILLA . RP SEMICOL

    RP              shift and go to state 302


state 286

    (125) any -> expr any .

    COMILLA         reduce using rule 125 (any -> expr any .)
    COMILLAS        reduce using rule 125 (any -> expr any .)


state 287

    (126) any -> expression any .

    COMILLA         reduce using rule 126 (any -> expression any .)
    COMILLAS        reduce using rule 126 (any -> expression any .)


state 288

    (122) escritura -> PRINT LP COMILLAS any COMILLAS . RP SEMICOL

    RP              shift and go to state 303


state 289

    (123) escritura_var -> PRINT LP any_var RP SEMICOL .

    ID              reduce using rule 123 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    IF              reduce using rule 123 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    VAR             reduce using rule 123 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    WHILE           reduce using rule 123 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    FOR             reduce using rule 123 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    PRINT           reduce using rule 123 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    READ            reduce using rule 123 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    FUNC            reduce using rule 123 (escritura_var -> PRINT LP any_var RP SEMICOL .)
    RB              reduce using rule 123 (escritura_var -> PRINT LP any_var RP SEMICOL .)


state 290

    (128) lectura -> READ LP COMILLA any_lectura COMILLA . RP SEMICOL

    RP              shift and go to state 304


state 291

    (129) lectura -> READ LP COMILLAS any_lectura COMILLAS . RP SEMICOL

    RP              shift and go to state 305


state 292

    (97) matrix2 -> LP lista2 RP COMMA LP lista2 RP .
    (96) matrix2 -> LP lista2 RP . COMMA matrix2
    (97) matrix2 -> LP lista2 RP . COMMA LP lista2 RP

    SEMICOL         reduce using rule 97 (matrix2 -> LP lista2 RP COMMA LP lista2 RP .)
    COMMA           shift and go to state 189


state 293

    (102) if -> IF LP expression RP check_bool gotof . LB statement RB
    (103) if -> IF LP expression RP check_bool gotof . LB statement RB goto elseif
    (104) if -> IF LP expression RP check_bool gotof . LB statement RB goto else

    LB              shift and go to state 306


state 294

    (87) var_row -> VAR tipo ID row IS LP . lista2 RP SEMICOL
    (88) var_rowG -> VAR tipo ID row IS LP . lista2 RP SEMICOL
    (91) lista2 -> . elem_lista COMMA lista2
    (92) lista2 -> . elem_lista COMMA elem_lista
    (89) elem_lista -> . value
    (90) elem_lista -> . empty
    (62) value -> . CTE_F
    (63) value -> . CTE_I
    (64) value -> . ID
    (65) value -> . CTE_C
    (66) value -> . COMILLA ID COMILLA
    (67) value -> . COMILLAS ID COMILLAS
    (101) empty -> .

    CTE_F           shift and go to state 71
    CTE_I           shift and go to state 72
    ID              shift and go to state 69
    CTE_C           shift and go to state 73
    COMILLA         shift and go to state 74
    COMILLAS        shift and go to state 75
    COMMA           reduce using rule 101 (empty -> .)

    lista2                         shift and go to state 307
    elem_lista                     shift and go to state 113
    value                          shift and go to state 114
    empty                          shift and go to state 115

state 295

    (94) var_matrix -> VAR tipo ID matrix IS matrix2 . SEMICOL
    (95) var_matrixG -> VAR tipo ID matrix IS matrix2 . SEMICOL

    SEMICOL         shift and go to state 308


state 296

    (35) vars2 -> ID IS value COMMA . vars2
    (36) vars2 -> ID IS value COMMA .
    (35) vars2 -> . ID IS value COMMA vars2
    (36) vars2 -> . ID IS value COMMA
    (37) vars2 -> . ID IS value SEMICOL vars

  ! shift/reduce conflict for ID resolved as shift
    IF              reduce using rule 36 (vars2 -> ID IS value COMMA .)
    VAR             reduce using rule 36 (vars2 -> ID IS value COMMA .)
    WHILE           reduce using rule 36 (vars2 -> ID IS value COMMA .)
    FOR             reduce using rule 36 (vars2 -> ID IS value COMMA .)
    PRINT           reduce using rule 36 (vars2 -> ID IS value COMMA .)
    READ            reduce using rule 36 (vars2 -> ID IS value COMMA .)
    FUNC            reduce using rule 36 (vars2 -> ID IS value COMMA .)
    RB              reduce using rule 36 (vars2 -> ID IS value COMMA .)
    ID              shift and go to state 309

  ! ID              [ reduce using rule 36 (vars2 -> ID IS value COMMA .) ]

    vars2                          shift and go to state 310

state 297

    (37) vars2 -> ID IS value SEMICOL . vars
    (21) vars -> . VAR tipo vars1
    (22) vars -> . VAR tipo vars2
    (23) vars -> . VAR tipo vars3
    (24) vars -> . VAR tipo oper_aritmetica
    (25) vars -> . VAR tipo ID row SEMICOL
    (26) vars -> . VAR tipo ID matrix SEMICOL
    (27) vars -> . varsG
    (28) vars -> . var_row
    (29) vars -> . var_row vars
    (30) vars -> . var_matrix
    (31) vars -> . var_matrix vars
    (32) vars -> . empty
    (41) varsG -> . VAR tipo vars1G
    (42) varsG -> . VAR tipo vars2G
    (43) varsG -> . VAR tipo vars3G
    (44) varsG -> . VAR LB varsG RB
    (45) varsG -> . var_rowG
    (46) varsG -> . var_rowG varsG
    (47) varsG -> . var_matrixG
    (48) varsG -> . var_matrixG varsG
    (49) varsG -> . declarar_func varsG
    (50) varsG -> . empty
    (87) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (101) empty -> .
    (88) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (80) declarar_func -> . FUNC tipo ID SEMICOL
    (81) declarar_func -> . FUNC VOID ID SEMICOL
    (82) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (83) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL

  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
    VAR             shift and go to state 138
    ID              reduce using rule 101 (empty -> .)
    IF              reduce using rule 101 (empty -> .)
    WHILE           reduce using rule 101 (empty -> .)
    FOR             reduce using rule 101 (empty -> .)
    PRINT           reduce using rule 101 (empty -> .)
    READ            reduce using rule 101 (empty -> .)
    RB              reduce using rule 101 (empty -> .)
    FUNC            shift and go to state 12

  ! VAR             [ reduce using rule 101 (empty -> .) ]
  ! FUNC            [ reduce using rule 101 (empty -> .) ]

    vars                           shift and go to state 311
    varsG                          shift and go to state 139
    var_row                        shift and go to state 140
    var_matrix                     shift and go to state 141
    empty                          shift and go to state 150
    var_rowG                       shift and go to state 9
    var_matrixG                    shift and go to state 10
    declarar_func                  shift and go to state 11

state 298

    (147) oper_aritmetica -> ID IS expr SEMICOL .

    ID              reduce using rule 147 (oper_aritmetica -> ID IS expr SEMICOL .)
    IF              reduce using rule 147 (oper_aritmetica -> ID IS expr SEMICOL .)
    VAR             reduce using rule 147 (oper_aritmetica -> ID IS expr SEMICOL .)
    WHILE           reduce using rule 147 (oper_aritmetica -> ID IS expr SEMICOL .)
    FOR             reduce using rule 147 (oper_aritmetica -> ID IS expr SEMICOL .)
    PRINT           reduce using rule 147 (oper_aritmetica -> ID IS expr SEMICOL .)
    READ            reduce using rule 147 (oper_aritmetica -> ID IS expr SEMICOL .)
    FUNC            reduce using rule 147 (oper_aritmetica -> ID IS expr SEMICOL .)
    RB              reduce using rule 147 (oper_aritmetica -> ID IS expr SEMICOL .)


state 299

    (39) vars3 -> ID SEMICOL . vars
    (40) vars3 -> ID SEMICOL .
    (57) vars3G -> ID SEMICOL . varsG
    (58) vars3G -> ID SEMICOL .
    (21) vars -> . VAR tipo vars1
    (22) vars -> . VAR tipo vars2
    (23) vars -> . VAR tipo vars3
    (24) vars -> . VAR tipo oper_aritmetica
    (25) vars -> . VAR tipo ID row SEMICOL
    (26) vars -> . VAR tipo ID matrix SEMICOL
    (27) vars -> . varsG
    (28) vars -> . var_row
    (29) vars -> . var_row vars
    (30) vars -> . var_matrix
    (31) vars -> . var_matrix vars
    (32) vars -> . empty
    (41) varsG -> . VAR tipo vars1G
    (42) varsG -> . VAR tipo vars2G
    (43) varsG -> . VAR tipo vars3G
    (44) varsG -> . VAR LB varsG RB
    (45) varsG -> . var_rowG
    (46) varsG -> . var_rowG varsG
    (47) varsG -> . var_matrixG
    (48) varsG -> . var_matrixG varsG
    (49) varsG -> . declarar_func varsG
    (50) varsG -> . empty
    (87) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (101) empty -> .
    (88) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (80) declarar_func -> . FUNC tipo ID SEMICOL
    (81) declarar_func -> . FUNC VOID ID SEMICOL
    (82) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (83) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL

  ! reduce/reduce conflict for ID resolved using rule 40 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for IF resolved using rule 40 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for VAR resolved using rule 40 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for WHILE resolved using rule 40 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for FOR resolved using rule 40 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for PRINT resolved using rule 40 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for READ resolved using rule 40 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for FUNC resolved using rule 40 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for RB resolved using rule 40 (vars3 -> ID SEMICOL .)
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for ID resolved using rule 40 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for IF resolved using rule 40 (vars3 -> ID SEMICOL .)
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for WHILE resolved using rule 40 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for FOR resolved using rule 40 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for PRINT resolved using rule 40 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for READ resolved using rule 40 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for FUNC resolved using rule 40 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for RB resolved using rule 40 (vars3 -> ID SEMICOL .)
  ! shift/reduce conflict for FUNC resolved as shift
    ID              reduce using rule 40 (vars3 -> ID SEMICOL .)
    IF              reduce using rule 40 (vars3 -> ID SEMICOL .)
    WHILE           reduce using rule 40 (vars3 -> ID SEMICOL .)
    FOR             reduce using rule 40 (vars3 -> ID SEMICOL .)
    PRINT           reduce using rule 40 (vars3 -> ID SEMICOL .)
    READ            reduce using rule 40 (vars3 -> ID SEMICOL .)
    RB              reduce using rule 40 (vars3 -> ID SEMICOL .)
    VAR             shift and go to state 138
    FUNC            shift and go to state 12

  ! VAR             [ reduce using rule 40 (vars3 -> ID SEMICOL .) ]
  ! FUNC            [ reduce using rule 40 (vars3 -> ID SEMICOL .) ]
  ! ID              [ reduce using rule 58 (vars3G -> ID SEMICOL .) ]
  ! IF              [ reduce using rule 58 (vars3G -> ID SEMICOL .) ]
  ! VAR             [ reduce using rule 58 (vars3G -> ID SEMICOL .) ]
  ! WHILE           [ reduce using rule 58 (vars3G -> ID SEMICOL .) ]
  ! FOR             [ reduce using rule 58 (vars3G -> ID SEMICOL .) ]
  ! PRINT           [ reduce using rule 58 (vars3G -> ID SEMICOL .) ]
  ! READ            [ reduce using rule 58 (vars3G -> ID SEMICOL .) ]
  ! FUNC            [ reduce using rule 58 (vars3G -> ID SEMICOL .) ]
  ! RB              [ reduce using rule 58 (vars3G -> ID SEMICOL .) ]
  ! ID              [ reduce using rule 101 (empty -> .) ]
  ! IF              [ reduce using rule 101 (empty -> .) ]
  ! VAR             [ reduce using rule 101 (empty -> .) ]
  ! WHILE           [ reduce using rule 101 (empty -> .) ]
  ! FOR             [ reduce using rule 101 (empty -> .) ]
  ! PRINT           [ reduce using rule 101 (empty -> .) ]
  ! READ            [ reduce using rule 101 (empty -> .) ]
  ! FUNC            [ reduce using rule 101 (empty -> .) ]
  ! RB              [ reduce using rule 101 (empty -> .) ]

    vars                           shift and go to state 312
    varsG                          shift and go to state 313
    var_row                        shift and go to state 140
    var_matrix                     shift and go to state 141
    empty                          shift and go to state 150
    var_rowG                       shift and go to state 9
    var_matrixG                    shift and go to state 10
    declarar_func                  shift and go to state 11

state 300

    (111) while -> WHILE LP expression RP check_bool gotof . LB statement RB goto

    LB              shift and go to state 314


state 301

    (112) for -> FOR LP VAR tipo ID IS . value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (62) value -> . CTE_F
    (63) value -> . CTE_I
    (64) value -> . ID
    (65) value -> . CTE_C
    (66) value -> . COMILLA ID COMILLA
    (67) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 71
    CTE_I           shift and go to state 72
    ID              shift and go to state 69
    CTE_C           shift and go to state 73
    COMILLA         shift and go to state 74
    COMILLAS        shift and go to state 75

    value                          shift and go to state 315

state 302

    (121) escritura -> PRINT LP COMILLA any COMILLA RP . SEMICOL

    SEMICOL         shift and go to state 316


state 303

    (122) escritura -> PRINT LP COMILLAS any COMILLAS RP . SEMICOL

    SEMICOL         shift and go to state 317


state 304

    (128) lectura -> READ LP COMILLA any_lectura COMILLA RP . SEMICOL

    SEMICOL         shift and go to state 318


state 305

    (129) lectura -> READ LP COMILLAS any_lectura COMILLAS RP . SEMICOL

    SEMICOL         shift and go to state 319


state 306

    (102) if -> IF LP expression RP check_bool gotof LB . statement RB
    (103) if -> IF LP expression RP check_bool gotof LB . statement RB goto elseif
    (104) if -> IF LP expression RP check_bool gotof LB . statement RB goto else
    (9) statement -> . asignacion SEMICOL statement
    (10) statement -> . if statement
    (11) statement -> . vars statement
    (12) statement -> . while statement
    (13) statement -> . for statement
    (14) statement -> . escritura statement
    (15) statement -> . escritura_var statement
    (16) statement -> . lectura statement
    (17) statement -> . ID row SEMICOL
    (18) statement -> . ID matrix SEMICOL
    (19) statement -> . empty
    (20) asignacion -> . ID IS value
    (102) if -> . IF LP expression RP check_bool gotof LB statement RB
    (103) if -> . IF LP expression RP check_bool gotof LB statement RB goto elseif
    (104) if -> . IF LP expression RP check_bool gotof LB statement RB goto else
    (21) vars -> . VAR tipo vars1
    (22) vars -> . VAR tipo vars2
    (23) vars -> . VAR tipo vars3
    (24) vars -> . VAR tipo oper_aritmetica
    (25) vars -> . VAR tipo ID row SEMICOL
    (26) vars -> . VAR tipo ID matrix SEMICOL
    (27) vars -> . varsG
    (28) vars -> . var_row
    (29) vars -> . var_row vars
    (30) vars -> . var_matrix
    (31) vars -> . var_matrix vars
    (32) vars -> . empty
    (111) while -> . WHILE LP expression RP check_bool gotof LB statement RB goto
    (112) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (121) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (122) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (123) escritura_var -> . PRINT LP any_var RP SEMICOL
    (128) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (129) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (101) empty -> .
    (41) varsG -> . VAR tipo vars1G
    (42) varsG -> . VAR tipo vars2G
    (43) varsG -> . VAR tipo vars3G
    (44) varsG -> . VAR LB varsG RB
    (45) varsG -> . var_rowG
    (46) varsG -> . var_rowG varsG
    (47) varsG -> . var_matrixG
    (48) varsG -> . var_matrixG varsG
    (49) varsG -> . declarar_func varsG
    (50) varsG -> . empty
    (87) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (88) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (80) declarar_func -> . FUNC tipo ID SEMICOL
    (81) declarar_func -> . FUNC VOID ID SEMICOL
    (82) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (83) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
    ID              shift and go to state 135
    IF              shift and go to state 137
    VAR             shift and go to state 138
    WHILE           shift and go to state 142
    FOR             shift and go to state 143
    PRINT           shift and go to state 144
    READ            shift and go to state 145
    RB              reduce using rule 101 (empty -> .)
    FUNC            shift and go to state 12

  ! ID              [ reduce using rule 101 (empty -> .) ]
  ! IF              [ reduce using rule 101 (empty -> .) ]
  ! VAR             [ reduce using rule 101 (empty -> .) ]
  ! WHILE           [ reduce using rule 101 (empty -> .) ]
  ! FOR             [ reduce using rule 101 (empty -> .) ]
  ! PRINT           [ reduce using rule 101 (empty -> .) ]
  ! READ            [ reduce using rule 101 (empty -> .) ]
  ! FUNC            [ reduce using rule 101 (empty -> .) ]

    statement                      shift and go to state 320
    asignacion                     shift and go to state 127
    if                             shift and go to state 128
    vars                           shift and go to state 129
    while                          shift and go to state 130
    for                            shift and go to state 131
    escritura                      shift and go to state 132
    escritura_var                  shift and go to state 133
    lectura                        shift and go to state 134
    empty                          shift and go to state 136
    varsG                          shift and go to state 139
    var_row                        shift and go to state 140
    var_matrix                     shift and go to state 141
    var_rowG                       shift and go to state 9
    var_matrixG                    shift and go to state 10
    declarar_func                  shift and go to state 11

state 307

    (87) var_row -> VAR tipo ID row IS LP lista2 . RP SEMICOL
    (88) var_rowG -> VAR tipo ID row IS LP lista2 . RP SEMICOL

    RP              shift and go to state 321


state 308

    (94) var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .
    (95) var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .

  ! reduce/reduce conflict for VAR resolved using rule 94 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
  ! reduce/reduce conflict for FUNC resolved using rule 94 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
  ! reduce/reduce conflict for ID resolved using rule 94 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
  ! reduce/reduce conflict for IF resolved using rule 94 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
  ! reduce/reduce conflict for WHILE resolved using rule 94 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
  ! reduce/reduce conflict for FOR resolved using rule 94 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
  ! reduce/reduce conflict for PRINT resolved using rule 94 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
  ! reduce/reduce conflict for READ resolved using rule 94 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
  ! reduce/reduce conflict for RB resolved using rule 94 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    VAR             reduce using rule 94 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    FUNC            reduce using rule 94 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    ID              reduce using rule 94 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    IF              reduce using rule 94 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    WHILE           reduce using rule 94 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    FOR             reduce using rule 94 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    PRINT           reduce using rule 94 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    READ            reduce using rule 94 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    RB              reduce using rule 94 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)

  ! VAR             [ reduce using rule 95 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .) ]
  ! FUNC            [ reduce using rule 95 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .) ]
  ! ID              [ reduce using rule 95 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .) ]
  ! IF              [ reduce using rule 95 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .) ]
  ! WHILE           [ reduce using rule 95 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .) ]
  ! FOR             [ reduce using rule 95 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .) ]
  ! PRINT           [ reduce using rule 95 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .) ]
  ! READ            [ reduce using rule 95 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .) ]
  ! RB              [ reduce using rule 95 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .) ]


state 309

    (35) vars2 -> ID . IS value COMMA vars2
    (36) vars2 -> ID . IS value COMMA
    (37) vars2 -> ID . IS value SEMICOL vars

    IS              shift and go to state 322


state 310

    (35) vars2 -> ID IS value COMMA vars2 .

    ID              reduce using rule 35 (vars2 -> ID IS value COMMA vars2 .)
    IF              reduce using rule 35 (vars2 -> ID IS value COMMA vars2 .)
    VAR             reduce using rule 35 (vars2 -> ID IS value COMMA vars2 .)
    WHILE           reduce using rule 35 (vars2 -> ID IS value COMMA vars2 .)
    FOR             reduce using rule 35 (vars2 -> ID IS value COMMA vars2 .)
    PRINT           reduce using rule 35 (vars2 -> ID IS value COMMA vars2 .)
    READ            reduce using rule 35 (vars2 -> ID IS value COMMA vars2 .)
    FUNC            reduce using rule 35 (vars2 -> ID IS value COMMA vars2 .)
    RB              reduce using rule 35 (vars2 -> ID IS value COMMA vars2 .)


state 311

    (37) vars2 -> ID IS value SEMICOL vars .

    ID              reduce using rule 37 (vars2 -> ID IS value SEMICOL vars .)
    IF              reduce using rule 37 (vars2 -> ID IS value SEMICOL vars .)
    VAR             reduce using rule 37 (vars2 -> ID IS value SEMICOL vars .)
    WHILE           reduce using rule 37 (vars2 -> ID IS value SEMICOL vars .)
    FOR             reduce using rule 37 (vars2 -> ID IS value SEMICOL vars .)
    PRINT           reduce using rule 37 (vars2 -> ID IS value SEMICOL vars .)
    READ            reduce using rule 37 (vars2 -> ID IS value SEMICOL vars .)
    FUNC            reduce using rule 37 (vars2 -> ID IS value SEMICOL vars .)
    RB              reduce using rule 37 (vars2 -> ID IS value SEMICOL vars .)


state 312

    (39) vars3 -> ID SEMICOL vars .

    ID              reduce using rule 39 (vars3 -> ID SEMICOL vars .)
    IF              reduce using rule 39 (vars3 -> ID SEMICOL vars .)
    VAR             reduce using rule 39 (vars3 -> ID SEMICOL vars .)
    WHILE           reduce using rule 39 (vars3 -> ID SEMICOL vars .)
    FOR             reduce using rule 39 (vars3 -> ID SEMICOL vars .)
    PRINT           reduce using rule 39 (vars3 -> ID SEMICOL vars .)
    READ            reduce using rule 39 (vars3 -> ID SEMICOL vars .)
    FUNC            reduce using rule 39 (vars3 -> ID SEMICOL vars .)
    RB              reduce using rule 39 (vars3 -> ID SEMICOL vars .)


state 313

    (57) vars3G -> ID SEMICOL varsG .
    (27) vars -> varsG .

  ! reduce/reduce conflict for ID resolved using rule 27 (vars -> varsG .)
  ! reduce/reduce conflict for IF resolved using rule 27 (vars -> varsG .)
  ! reduce/reduce conflict for VAR resolved using rule 27 (vars -> varsG .)
  ! reduce/reduce conflict for WHILE resolved using rule 27 (vars -> varsG .)
  ! reduce/reduce conflict for FOR resolved using rule 27 (vars -> varsG .)
  ! reduce/reduce conflict for PRINT resolved using rule 27 (vars -> varsG .)
  ! reduce/reduce conflict for READ resolved using rule 27 (vars -> varsG .)
  ! reduce/reduce conflict for FUNC resolved using rule 27 (vars -> varsG .)
  ! reduce/reduce conflict for RB resolved using rule 27 (vars -> varsG .)
    ID              reduce using rule 27 (vars -> varsG .)
    IF              reduce using rule 27 (vars -> varsG .)
    VAR             reduce using rule 27 (vars -> varsG .)
    WHILE           reduce using rule 27 (vars -> varsG .)
    FOR             reduce using rule 27 (vars -> varsG .)
    PRINT           reduce using rule 27 (vars -> varsG .)
    READ            reduce using rule 27 (vars -> varsG .)
    FUNC            reduce using rule 27 (vars -> varsG .)
    RB              reduce using rule 27 (vars -> varsG .)

  ! ID              [ reduce using rule 57 (vars3G -> ID SEMICOL varsG .) ]
  ! IF              [ reduce using rule 57 (vars3G -> ID SEMICOL varsG .) ]
  ! VAR             [ reduce using rule 57 (vars3G -> ID SEMICOL varsG .) ]
  ! WHILE           [ reduce using rule 57 (vars3G -> ID SEMICOL varsG .) ]
  ! FOR             [ reduce using rule 57 (vars3G -> ID SEMICOL varsG .) ]
  ! PRINT           [ reduce using rule 57 (vars3G -> ID SEMICOL varsG .) ]
  ! READ            [ reduce using rule 57 (vars3G -> ID SEMICOL varsG .) ]
  ! FUNC            [ reduce using rule 57 (vars3G -> ID SEMICOL varsG .) ]
  ! RB              [ reduce using rule 57 (vars3G -> ID SEMICOL varsG .) ]


state 314

    (111) while -> WHILE LP expression RP check_bool gotof LB . statement RB goto
    (9) statement -> . asignacion SEMICOL statement
    (10) statement -> . if statement
    (11) statement -> . vars statement
    (12) statement -> . while statement
    (13) statement -> . for statement
    (14) statement -> . escritura statement
    (15) statement -> . escritura_var statement
    (16) statement -> . lectura statement
    (17) statement -> . ID row SEMICOL
    (18) statement -> . ID matrix SEMICOL
    (19) statement -> . empty
    (20) asignacion -> . ID IS value
    (102) if -> . IF LP expression RP check_bool gotof LB statement RB
    (103) if -> . IF LP expression RP check_bool gotof LB statement RB goto elseif
    (104) if -> . IF LP expression RP check_bool gotof LB statement RB goto else
    (21) vars -> . VAR tipo vars1
    (22) vars -> . VAR tipo vars2
    (23) vars -> . VAR tipo vars3
    (24) vars -> . VAR tipo oper_aritmetica
    (25) vars -> . VAR tipo ID row SEMICOL
    (26) vars -> . VAR tipo ID matrix SEMICOL
    (27) vars -> . varsG
    (28) vars -> . var_row
    (29) vars -> . var_row vars
    (30) vars -> . var_matrix
    (31) vars -> . var_matrix vars
    (32) vars -> . empty
    (111) while -> . WHILE LP expression RP check_bool gotof LB statement RB goto
    (112) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (121) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (122) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (123) escritura_var -> . PRINT LP any_var RP SEMICOL
    (128) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (129) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (101) empty -> .
    (41) varsG -> . VAR tipo vars1G
    (42) varsG -> . VAR tipo vars2G
    (43) varsG -> . VAR tipo vars3G
    (44) varsG -> . VAR LB varsG RB
    (45) varsG -> . var_rowG
    (46) varsG -> . var_rowG varsG
    (47) varsG -> . var_matrixG
    (48) varsG -> . var_matrixG varsG
    (49) varsG -> . declarar_func varsG
    (50) varsG -> . empty
    (87) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (88) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (80) declarar_func -> . FUNC tipo ID SEMICOL
    (81) declarar_func -> . FUNC VOID ID SEMICOL
    (82) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (83) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
    ID              shift and go to state 135
    IF              shift and go to state 137
    VAR             shift and go to state 138
    WHILE           shift and go to state 142
    FOR             shift and go to state 143
    PRINT           shift and go to state 144
    READ            shift and go to state 145
    RB              reduce using rule 101 (empty -> .)
    FUNC            shift and go to state 12

  ! ID              [ reduce using rule 101 (empty -> .) ]
  ! IF              [ reduce using rule 101 (empty -> .) ]
  ! VAR             [ reduce using rule 101 (empty -> .) ]
  ! WHILE           [ reduce using rule 101 (empty -> .) ]
  ! FOR             [ reduce using rule 101 (empty -> .) ]
  ! PRINT           [ reduce using rule 101 (empty -> .) ]
  ! READ            [ reduce using rule 101 (empty -> .) ]
  ! FUNC            [ reduce using rule 101 (empty -> .) ]

    statement                      shift and go to state 323
    asignacion                     shift and go to state 127
    if                             shift and go to state 128
    vars                           shift and go to state 129
    while                          shift and go to state 130
    for                            shift and go to state 131
    escritura                      shift and go to state 132
    escritura_var                  shift and go to state 133
    lectura                        shift and go to state 134
    empty                          shift and go to state 136
    varsG                          shift and go to state 139
    var_row                        shift and go to state 140
    var_matrix                     shift and go to state 141
    var_rowG                       shift and go to state 9
    var_matrixG                    shift and go to state 10
    declarar_func                  shift and go to state 11

state 315

    (112) for -> FOR LP VAR tipo ID IS value . SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto

    SEMICOL         shift and go to state 324


state 316

    (121) escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .

    ID              reduce using rule 121 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    IF              reduce using rule 121 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    VAR             reduce using rule 121 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    WHILE           reduce using rule 121 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    FOR             reduce using rule 121 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    PRINT           reduce using rule 121 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    READ            reduce using rule 121 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    FUNC            reduce using rule 121 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)
    RB              reduce using rule 121 (escritura -> PRINT LP COMILLA any COMILLA RP SEMICOL .)


state 317

    (122) escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .

    ID              reduce using rule 122 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    IF              reduce using rule 122 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    VAR             reduce using rule 122 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    WHILE           reduce using rule 122 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    FOR             reduce using rule 122 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    PRINT           reduce using rule 122 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    READ            reduce using rule 122 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    FUNC            reduce using rule 122 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)
    RB              reduce using rule 122 (escritura -> PRINT LP COMILLAS any COMILLAS RP SEMICOL .)


state 318

    (128) lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .

    ID              reduce using rule 128 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    IF              reduce using rule 128 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    VAR             reduce using rule 128 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    WHILE           reduce using rule 128 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    FOR             reduce using rule 128 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    PRINT           reduce using rule 128 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    READ            reduce using rule 128 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    FUNC            reduce using rule 128 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)
    RB              reduce using rule 128 (lectura -> READ LP COMILLA any_lectura COMILLA RP SEMICOL .)


state 319

    (129) lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .

    ID              reduce using rule 129 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    IF              reduce using rule 129 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    VAR             reduce using rule 129 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    WHILE           reduce using rule 129 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    FOR             reduce using rule 129 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    PRINT           reduce using rule 129 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    READ            reduce using rule 129 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    FUNC            reduce using rule 129 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)
    RB              reduce using rule 129 (lectura -> READ LP COMILLAS any_lectura COMILLAS RP SEMICOL .)


state 320

    (102) if -> IF LP expression RP check_bool gotof LB statement . RB
    (103) if -> IF LP expression RP check_bool gotof LB statement . RB goto elseif
    (104) if -> IF LP expression RP check_bool gotof LB statement . RB goto else

    RB              shift and go to state 325


state 321

    (87) var_row -> VAR tipo ID row IS LP lista2 RP . SEMICOL
    (88) var_rowG -> VAR tipo ID row IS LP lista2 RP . SEMICOL

    SEMICOL         shift and go to state 326


state 322

    (35) vars2 -> ID IS . value COMMA vars2
    (36) vars2 -> ID IS . value COMMA
    (37) vars2 -> ID IS . value SEMICOL vars
    (62) value -> . CTE_F
    (63) value -> . CTE_I
    (64) value -> . ID
    (65) value -> . CTE_C
    (66) value -> . COMILLA ID COMILLA
    (67) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 71
    CTE_I           shift and go to state 72
    ID              shift and go to state 69
    CTE_C           shift and go to state 73
    COMILLA         shift and go to state 74
    COMILLAS        shift and go to state 75

    value                          shift and go to state 327

state 323

    (111) while -> WHILE LP expression RP check_bool gotof LB statement . RB goto

    RB              shift and go to state 328


state 324

    (112) for -> FOR LP VAR tipo ID IS value SEMICOL . expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (131) expression -> . var_gt
    (132) expression -> . var_lt
    (133) expression -> . var_equal
    (134) expression -> . var_neq
    (135) expression -> . var_geq
    (136) expression -> . var_leq
    (137) expression -> . expr
    (138) expression -> . TRUE
    (139) expression -> . FALSE
    (140) expression -> . ID
    (142) var_gt -> . expr GT expr
    (141) var_lt -> . expr LT expr
    (145) var_equal -> . expr EQUAL expr
    (146) var_neq -> . expr NEQ expr
    (144) var_geq -> . expr GEQ expr
    (143) var_leq -> . expr LEQ expr
    (148) expr -> . expr MUL expr
    (149) expr -> . expr DIV expr
    (150) expr -> . expr PLUS expr
    (151) expr -> . expr MINUS expr
    (152) expr -> . CTE_I
    (153) expr -> . CTE_F
    (154) expr -> . ID

    TRUE            shift and go to state 202
    FALSE           shift and go to state 203
    ID              shift and go to state 204
    CTE_I           shift and go to state 205
    CTE_F           shift and go to state 206

    expression                     shift and go to state 329
    var_gt                         shift and go to state 195
    var_lt                         shift and go to state 196
    var_equal                      shift and go to state 197
    var_neq                        shift and go to state 198
    var_geq                        shift and go to state 199
    var_leq                        shift and go to state 200
    expr                           shift and go to state 201

state 325

    (102) if -> IF LP expression RP check_bool gotof LB statement RB .
    (103) if -> IF LP expression RP check_bool gotof LB statement RB . goto elseif
    (104) if -> IF LP expression RP check_bool gotof LB statement RB . goto else
    (109) goto -> .

    ID              reduce using rule 102 (if -> IF LP expression RP check_bool gotof LB statement RB .)
    IF              reduce using rule 102 (if -> IF LP expression RP check_bool gotof LB statement RB .)
    VAR             reduce using rule 102 (if -> IF LP expression RP check_bool gotof LB statement RB .)
    WHILE           reduce using rule 102 (if -> IF LP expression RP check_bool gotof LB statement RB .)
    FOR             reduce using rule 102 (if -> IF LP expression RP check_bool gotof LB statement RB .)
    PRINT           reduce using rule 102 (if -> IF LP expression RP check_bool gotof LB statement RB .)
    READ            reduce using rule 102 (if -> IF LP expression RP check_bool gotof LB statement RB .)
    FUNC            reduce using rule 102 (if -> IF LP expression RP check_bool gotof LB statement RB .)
    RB              reduce using rule 102 (if -> IF LP expression RP check_bool gotof LB statement RB .)
    ELSEIF          reduce using rule 109 (goto -> .)
    ELSE            reduce using rule 109 (goto -> .)

    goto                           shift and go to state 330

state 326

    (87) var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .
    (88) var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .

  ! reduce/reduce conflict for VAR resolved using rule 87 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
  ! reduce/reduce conflict for FUNC resolved using rule 87 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
  ! reduce/reduce conflict for ID resolved using rule 87 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
  ! reduce/reduce conflict for IF resolved using rule 87 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
  ! reduce/reduce conflict for WHILE resolved using rule 87 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
  ! reduce/reduce conflict for FOR resolved using rule 87 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
  ! reduce/reduce conflict for PRINT resolved using rule 87 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
  ! reduce/reduce conflict for READ resolved using rule 87 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
  ! reduce/reduce conflict for RB resolved using rule 87 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    VAR             reduce using rule 87 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    FUNC            reduce using rule 87 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    ID              reduce using rule 87 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    IF              reduce using rule 87 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    WHILE           reduce using rule 87 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    FOR             reduce using rule 87 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    PRINT           reduce using rule 87 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    READ            reduce using rule 87 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    RB              reduce using rule 87 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)

  ! VAR             [ reduce using rule 88 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .) ]
  ! FUNC            [ reduce using rule 88 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .) ]
  ! ID              [ reduce using rule 88 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .) ]
  ! IF              [ reduce using rule 88 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .) ]
  ! WHILE           [ reduce using rule 88 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .) ]
  ! FOR             [ reduce using rule 88 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .) ]
  ! PRINT           [ reduce using rule 88 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .) ]
  ! READ            [ reduce using rule 88 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .) ]
  ! RB              [ reduce using rule 88 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .) ]


state 327

    (35) vars2 -> ID IS value . COMMA vars2
    (36) vars2 -> ID IS value . COMMA
    (37) vars2 -> ID IS value . SEMICOL vars

    COMMA           shift and go to state 296
    SEMICOL         shift and go to state 297


state 328

    (111) while -> WHILE LP expression RP check_bool gotof LB statement RB . goto
    (109) goto -> .

    ID              reduce using rule 109 (goto -> .)
    IF              reduce using rule 109 (goto -> .)
    VAR             reduce using rule 109 (goto -> .)
    WHILE           reduce using rule 109 (goto -> .)
    FOR             reduce using rule 109 (goto -> .)
    PRINT           reduce using rule 109 (goto -> .)
    READ            reduce using rule 109 (goto -> .)
    FUNC            reduce using rule 109 (goto -> .)
    RB              reduce using rule 109 (goto -> .)

    goto                           shift and go to state 331

state 329

    (112) for -> FOR LP VAR tipo ID IS value SEMICOL expression . check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (155) check_bool -> .

    SEMICOL         reduce using rule 155 (check_bool -> .)

    check_bool                     shift and go to state 332

state 330

    (103) if -> IF LP expression RP check_bool gotof LB statement RB goto . elseif
    (104) if -> IF LP expression RP check_bool gotof LB statement RB goto . else
    (105) elseif -> . ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (106) elseif -> . ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto elseif
    (107) elseif -> . ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto else
    (108) else -> . ELSE guarda_num_salto LB statement RB guarda_num_salto

    ELSEIF          shift and go to state 335
    ELSE            shift and go to state 336

    elseif                         shift and go to state 333
    else                           shift and go to state 334

state 331

    (111) while -> WHILE LP expression RP check_bool gotof LB statement RB goto .

    ID              reduce using rule 111 (while -> WHILE LP expression RP check_bool gotof LB statement RB goto .)
    IF              reduce using rule 111 (while -> WHILE LP expression RP check_bool gotof LB statement RB goto .)
    VAR             reduce using rule 111 (while -> WHILE LP expression RP check_bool gotof LB statement RB goto .)
    WHILE           reduce using rule 111 (while -> WHILE LP expression RP check_bool gotof LB statement RB goto .)
    FOR             reduce using rule 111 (while -> WHILE LP expression RP check_bool gotof LB statement RB goto .)
    PRINT           reduce using rule 111 (while -> WHILE LP expression RP check_bool gotof LB statement RB goto .)
    READ            reduce using rule 111 (while -> WHILE LP expression RP check_bool gotof LB statement RB goto .)
    FUNC            reduce using rule 111 (while -> WHILE LP expression RP check_bool gotof LB statement RB goto .)
    RB              reduce using rule 111 (while -> WHILE LP expression RP check_bool gotof LB statement RB goto .)


state 332

    (112) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool . gotof_for SEMICOL ID opers RP LB statement RB goto
    (113) gotof_for -> .

    SEMICOL         reduce using rule 113 (gotof_for -> .)

    gotof_for                      shift and go to state 337

state 333

    (103) if -> IF LP expression RP check_bool gotof LB statement RB goto elseif .

    ID              reduce using rule 103 (if -> IF LP expression RP check_bool gotof LB statement RB goto elseif .)
    IF              reduce using rule 103 (if -> IF LP expression RP check_bool gotof LB statement RB goto elseif .)
    VAR             reduce using rule 103 (if -> IF LP expression RP check_bool gotof LB statement RB goto elseif .)
    WHILE           reduce using rule 103 (if -> IF LP expression RP check_bool gotof LB statement RB goto elseif .)
    FOR             reduce using rule 103 (if -> IF LP expression RP check_bool gotof LB statement RB goto elseif .)
    PRINT           reduce using rule 103 (if -> IF LP expression RP check_bool gotof LB statement RB goto elseif .)
    READ            reduce using rule 103 (if -> IF LP expression RP check_bool gotof LB statement RB goto elseif .)
    FUNC            reduce using rule 103 (if -> IF LP expression RP check_bool gotof LB statement RB goto elseif .)
    RB              reduce using rule 103 (if -> IF LP expression RP check_bool gotof LB statement RB goto elseif .)


state 334

    (104) if -> IF LP expression RP check_bool gotof LB statement RB goto else .

    ID              reduce using rule 104 (if -> IF LP expression RP check_bool gotof LB statement RB goto else .)
    IF              reduce using rule 104 (if -> IF LP expression RP check_bool gotof LB statement RB goto else .)
    VAR             reduce using rule 104 (if -> IF LP expression RP check_bool gotof LB statement RB goto else .)
    WHILE           reduce using rule 104 (if -> IF LP expression RP check_bool gotof LB statement RB goto else .)
    FOR             reduce using rule 104 (if -> IF LP expression RP check_bool gotof LB statement RB goto else .)
    PRINT           reduce using rule 104 (if -> IF LP expression RP check_bool gotof LB statement RB goto else .)
    READ            reduce using rule 104 (if -> IF LP expression RP check_bool gotof LB statement RB goto else .)
    FUNC            reduce using rule 104 (if -> IF LP expression RP check_bool gotof LB statement RB goto else .)
    RB              reduce using rule 104 (if -> IF LP expression RP check_bool gotof LB statement RB goto else .)


state 335

    (105) elseif -> ELSEIF . guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (106) elseif -> ELSEIF . guarda_num_salto LP expression RP check_bool gotof LB statement RB goto elseif
    (107) elseif -> ELSEIF . guarda_num_salto LP expression RP check_bool gotof LB statement RB goto else
    (156) guarda_num_salto -> .

    LP              reduce using rule 156 (guarda_num_salto -> .)

    guarda_num_salto               shift and go to state 338

state 336

    (108) else -> ELSE . guarda_num_salto LB statement RB guarda_num_salto
    (156) guarda_num_salto -> .

    LB              reduce using rule 156 (guarda_num_salto -> .)

    guarda_num_salto               shift and go to state 339

state 337

    (112) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for . SEMICOL ID opers RP LB statement RB goto

    SEMICOL         shift and go to state 340


state 338

    (105) elseif -> ELSEIF guarda_num_salto . LP expression RP check_bool gotof LB statement RB goto
    (106) elseif -> ELSEIF guarda_num_salto . LP expression RP check_bool gotof LB statement RB goto elseif
    (107) elseif -> ELSEIF guarda_num_salto . LP expression RP check_bool gotof LB statement RB goto else

    LP              shift and go to state 341


state 339

    (108) else -> ELSE guarda_num_salto . LB statement RB guarda_num_salto

    LB              shift and go to state 342


state 340

    (112) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL . ID opers RP LB statement RB goto

    ID              shift and go to state 343


state 341

    (105) elseif -> ELSEIF guarda_num_salto LP . expression RP check_bool gotof LB statement RB goto
    (106) elseif -> ELSEIF guarda_num_salto LP . expression RP check_bool gotof LB statement RB goto elseif
    (107) elseif -> ELSEIF guarda_num_salto LP . expression RP check_bool gotof LB statement RB goto else
    (131) expression -> . var_gt
    (132) expression -> . var_lt
    (133) expression -> . var_equal
    (134) expression -> . var_neq
    (135) expression -> . var_geq
    (136) expression -> . var_leq
    (137) expression -> . expr
    (138) expression -> . TRUE
    (139) expression -> . FALSE
    (140) expression -> . ID
    (142) var_gt -> . expr GT expr
    (141) var_lt -> . expr LT expr
    (145) var_equal -> . expr EQUAL expr
    (146) var_neq -> . expr NEQ expr
    (144) var_geq -> . expr GEQ expr
    (143) var_leq -> . expr LEQ expr
    (148) expr -> . expr MUL expr
    (149) expr -> . expr DIV expr
    (150) expr -> . expr PLUS expr
    (151) expr -> . expr MINUS expr
    (152) expr -> . CTE_I
    (153) expr -> . CTE_F
    (154) expr -> . ID

    TRUE            shift and go to state 202
    FALSE           shift and go to state 203
    ID              shift and go to state 204
    CTE_I           shift and go to state 205
    CTE_F           shift and go to state 206

    expression                     shift and go to state 344
    var_gt                         shift and go to state 195
    var_lt                         shift and go to state 196
    var_equal                      shift and go to state 197
    var_neq                        shift and go to state 198
    var_geq                        shift and go to state 199
    var_leq                        shift and go to state 200
    expr                           shift and go to state 201

state 342

    (108) else -> ELSE guarda_num_salto LB . statement RB guarda_num_salto
    (9) statement -> . asignacion SEMICOL statement
    (10) statement -> . if statement
    (11) statement -> . vars statement
    (12) statement -> . while statement
    (13) statement -> . for statement
    (14) statement -> . escritura statement
    (15) statement -> . escritura_var statement
    (16) statement -> . lectura statement
    (17) statement -> . ID row SEMICOL
    (18) statement -> . ID matrix SEMICOL
    (19) statement -> . empty
    (20) asignacion -> . ID IS value
    (102) if -> . IF LP expression RP check_bool gotof LB statement RB
    (103) if -> . IF LP expression RP check_bool gotof LB statement RB goto elseif
    (104) if -> . IF LP expression RP check_bool gotof LB statement RB goto else
    (21) vars -> . VAR tipo vars1
    (22) vars -> . VAR tipo vars2
    (23) vars -> . VAR tipo vars3
    (24) vars -> . VAR tipo oper_aritmetica
    (25) vars -> . VAR tipo ID row SEMICOL
    (26) vars -> . VAR tipo ID matrix SEMICOL
    (27) vars -> . varsG
    (28) vars -> . var_row
    (29) vars -> . var_row vars
    (30) vars -> . var_matrix
    (31) vars -> . var_matrix vars
    (32) vars -> . empty
    (111) while -> . WHILE LP expression RP check_bool gotof LB statement RB goto
    (112) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (121) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (122) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (123) escritura_var -> . PRINT LP any_var RP SEMICOL
    (128) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (129) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (101) empty -> .
    (41) varsG -> . VAR tipo vars1G
    (42) varsG -> . VAR tipo vars2G
    (43) varsG -> . VAR tipo vars3G
    (44) varsG -> . VAR LB varsG RB
    (45) varsG -> . var_rowG
    (46) varsG -> . var_rowG varsG
    (47) varsG -> . var_matrixG
    (48) varsG -> . var_matrixG varsG
    (49) varsG -> . declarar_func varsG
    (50) varsG -> . empty
    (87) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (88) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (80) declarar_func -> . FUNC tipo ID SEMICOL
    (81) declarar_func -> . FUNC VOID ID SEMICOL
    (82) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (83) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
    ID              shift and go to state 135
    IF              shift and go to state 137
    VAR             shift and go to state 138
    WHILE           shift and go to state 142
    FOR             shift and go to state 143
    PRINT           shift and go to state 144
    READ            shift and go to state 145
    RB              reduce using rule 101 (empty -> .)
    FUNC            shift and go to state 12

  ! ID              [ reduce using rule 101 (empty -> .) ]
  ! IF              [ reduce using rule 101 (empty -> .) ]
  ! VAR             [ reduce using rule 101 (empty -> .) ]
  ! WHILE           [ reduce using rule 101 (empty -> .) ]
  ! FOR             [ reduce using rule 101 (empty -> .) ]
  ! PRINT           [ reduce using rule 101 (empty -> .) ]
  ! READ            [ reduce using rule 101 (empty -> .) ]
  ! FUNC            [ reduce using rule 101 (empty -> .) ]

    statement                      shift and go to state 345
    asignacion                     shift and go to state 127
    if                             shift and go to state 128
    vars                           shift and go to state 129
    while                          shift and go to state 130
    for                            shift and go to state 131
    escritura                      shift and go to state 132
    escritura_var                  shift and go to state 133
    lectura                        shift and go to state 134
    empty                          shift and go to state 136
    varsG                          shift and go to state 139
    var_row                        shift and go to state 140
    var_matrix                     shift and go to state 141
    var_rowG                       shift and go to state 9
    var_matrixG                    shift and go to state 10
    declarar_func                  shift and go to state 11

state 343

    (112) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID . opers RP LB statement RB goto
    (114) opers -> . IS value
    (115) opers -> . PLUS IS value
    (116) opers -> . MINUS IS value
    (117) opers -> . DIV IS value
    (118) opers -> . MUL IS value
    (119) opers -> . PLUS PLUS
    (120) opers -> . MINUS MINUS

    IS              shift and go to state 346
    PLUS            shift and go to state 348
    MINUS           shift and go to state 349
    DIV             shift and go to state 350
    MUL             shift and go to state 351

    opers                          shift and go to state 347

state 344

    (105) elseif -> ELSEIF guarda_num_salto LP expression . RP check_bool gotof LB statement RB goto
    (106) elseif -> ELSEIF guarda_num_salto LP expression . RP check_bool gotof LB statement RB goto elseif
    (107) elseif -> ELSEIF guarda_num_salto LP expression . RP check_bool gotof LB statement RB goto else

    RP              shift and go to state 352


state 345

    (108) else -> ELSE guarda_num_salto LB statement . RB guarda_num_salto

    RB              shift and go to state 353


state 346

    (114) opers -> IS . value
    (62) value -> . CTE_F
    (63) value -> . CTE_I
    (64) value -> . ID
    (65) value -> . CTE_C
    (66) value -> . COMILLA ID COMILLA
    (67) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 71
    CTE_I           shift and go to state 72
    ID              shift and go to state 69
    CTE_C           shift and go to state 73
    COMILLA         shift and go to state 74
    COMILLAS        shift and go to state 75

    value                          shift and go to state 354

state 347

    (112) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers . RP LB statement RB goto

    RP              shift and go to state 355


state 348

    (115) opers -> PLUS . IS value
    (119) opers -> PLUS . PLUS

    IS              shift and go to state 357
    PLUS            shift and go to state 356


state 349

    (116) opers -> MINUS . IS value
    (120) opers -> MINUS . MINUS

    IS              shift and go to state 359
    MINUS           shift and go to state 358


state 350

    (117) opers -> DIV . IS value

    IS              shift and go to state 360


state 351

    (118) opers -> MUL . IS value

    IS              shift and go to state 361


state 352

    (105) elseif -> ELSEIF guarda_num_salto LP expression RP . check_bool gotof LB statement RB goto
    (106) elseif -> ELSEIF guarda_num_salto LP expression RP . check_bool gotof LB statement RB goto elseif
    (107) elseif -> ELSEIF guarda_num_salto LP expression RP . check_bool gotof LB statement RB goto else
    (155) check_bool -> .

    LB              reduce using rule 155 (check_bool -> .)

    check_bool                     shift and go to state 362

state 353

    (108) else -> ELSE guarda_num_salto LB statement RB . guarda_num_salto
    (156) guarda_num_salto -> .

    ID              reduce using rule 156 (guarda_num_salto -> .)
    IF              reduce using rule 156 (guarda_num_salto -> .)
    VAR             reduce using rule 156 (guarda_num_salto -> .)
    WHILE           reduce using rule 156 (guarda_num_salto -> .)
    FOR             reduce using rule 156 (guarda_num_salto -> .)
    PRINT           reduce using rule 156 (guarda_num_salto -> .)
    READ            reduce using rule 156 (guarda_num_salto -> .)
    FUNC            reduce using rule 156 (guarda_num_salto -> .)
    RB              reduce using rule 156 (guarda_num_salto -> .)

    guarda_num_salto               shift and go to state 363

state 354

    (114) opers -> IS value .

    RP              reduce using rule 114 (opers -> IS value .)


state 355

    (112) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP . LB statement RB goto

    LB              shift and go to state 364


state 356

    (119) opers -> PLUS PLUS .

    RP              reduce using rule 119 (opers -> PLUS PLUS .)


state 357

    (115) opers -> PLUS IS . value
    (62) value -> . CTE_F
    (63) value -> . CTE_I
    (64) value -> . ID
    (65) value -> . CTE_C
    (66) value -> . COMILLA ID COMILLA
    (67) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 71
    CTE_I           shift and go to state 72
    ID              shift and go to state 69
    CTE_C           shift and go to state 73
    COMILLA         shift and go to state 74
    COMILLAS        shift and go to state 75

    value                          shift and go to state 365

state 358

    (120) opers -> MINUS MINUS .

    RP              reduce using rule 120 (opers -> MINUS MINUS .)


state 359

    (116) opers -> MINUS IS . value
    (62) value -> . CTE_F
    (63) value -> . CTE_I
    (64) value -> . ID
    (65) value -> . CTE_C
    (66) value -> . COMILLA ID COMILLA
    (67) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 71
    CTE_I           shift and go to state 72
    ID              shift and go to state 69
    CTE_C           shift and go to state 73
    COMILLA         shift and go to state 74
    COMILLAS        shift and go to state 75

    value                          shift and go to state 366

state 360

    (117) opers -> DIV IS . value
    (62) value -> . CTE_F
    (63) value -> . CTE_I
    (64) value -> . ID
    (65) value -> . CTE_C
    (66) value -> . COMILLA ID COMILLA
    (67) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 71
    CTE_I           shift and go to state 72
    ID              shift and go to state 69
    CTE_C           shift and go to state 73
    COMILLA         shift and go to state 74
    COMILLAS        shift and go to state 75

    value                          shift and go to state 367

state 361

    (118) opers -> MUL IS . value
    (62) value -> . CTE_F
    (63) value -> . CTE_I
    (64) value -> . ID
    (65) value -> . CTE_C
    (66) value -> . COMILLA ID COMILLA
    (67) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 71
    CTE_I           shift and go to state 72
    ID              shift and go to state 69
    CTE_C           shift and go to state 73
    COMILLA         shift and go to state 74
    COMILLAS        shift and go to state 75

    value                          shift and go to state 368

state 362

    (105) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool . gotof LB statement RB goto
    (106) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool . gotof LB statement RB goto elseif
    (107) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool . gotof LB statement RB goto else
    (110) gotof -> .

    LB              reduce using rule 110 (gotof -> .)

    gotof                          shift and go to state 369

state 363

    (108) else -> ELSE guarda_num_salto LB statement RB guarda_num_salto .

    ID              reduce using rule 108 (else -> ELSE guarda_num_salto LB statement RB guarda_num_salto .)
    IF              reduce using rule 108 (else -> ELSE guarda_num_salto LB statement RB guarda_num_salto .)
    VAR             reduce using rule 108 (else -> ELSE guarda_num_salto LB statement RB guarda_num_salto .)
    WHILE           reduce using rule 108 (else -> ELSE guarda_num_salto LB statement RB guarda_num_salto .)
    FOR             reduce using rule 108 (else -> ELSE guarda_num_salto LB statement RB guarda_num_salto .)
    PRINT           reduce using rule 108 (else -> ELSE guarda_num_salto LB statement RB guarda_num_salto .)
    READ            reduce using rule 108 (else -> ELSE guarda_num_salto LB statement RB guarda_num_salto .)
    FUNC            reduce using rule 108 (else -> ELSE guarda_num_salto LB statement RB guarda_num_salto .)
    RB              reduce using rule 108 (else -> ELSE guarda_num_salto LB statement RB guarda_num_salto .)


state 364

    (112) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB . statement RB goto
    (9) statement -> . asignacion SEMICOL statement
    (10) statement -> . if statement
    (11) statement -> . vars statement
    (12) statement -> . while statement
    (13) statement -> . for statement
    (14) statement -> . escritura statement
    (15) statement -> . escritura_var statement
    (16) statement -> . lectura statement
    (17) statement -> . ID row SEMICOL
    (18) statement -> . ID matrix SEMICOL
    (19) statement -> . empty
    (20) asignacion -> . ID IS value
    (102) if -> . IF LP expression RP check_bool gotof LB statement RB
    (103) if -> . IF LP expression RP check_bool gotof LB statement RB goto elseif
    (104) if -> . IF LP expression RP check_bool gotof LB statement RB goto else
    (21) vars -> . VAR tipo vars1
    (22) vars -> . VAR tipo vars2
    (23) vars -> . VAR tipo vars3
    (24) vars -> . VAR tipo oper_aritmetica
    (25) vars -> . VAR tipo ID row SEMICOL
    (26) vars -> . VAR tipo ID matrix SEMICOL
    (27) vars -> . varsG
    (28) vars -> . var_row
    (29) vars -> . var_row vars
    (30) vars -> . var_matrix
    (31) vars -> . var_matrix vars
    (32) vars -> . empty
    (111) while -> . WHILE LP expression RP check_bool gotof LB statement RB goto
    (112) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (121) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (122) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (123) escritura_var -> . PRINT LP any_var RP SEMICOL
    (128) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (129) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (101) empty -> .
    (41) varsG -> . VAR tipo vars1G
    (42) varsG -> . VAR tipo vars2G
    (43) varsG -> . VAR tipo vars3G
    (44) varsG -> . VAR LB varsG RB
    (45) varsG -> . var_rowG
    (46) varsG -> . var_rowG varsG
    (47) varsG -> . var_matrixG
    (48) varsG -> . var_matrixG varsG
    (49) varsG -> . declarar_func varsG
    (50) varsG -> . empty
    (87) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (88) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (80) declarar_func -> . FUNC tipo ID SEMICOL
    (81) declarar_func -> . FUNC VOID ID SEMICOL
    (82) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (83) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
    ID              shift and go to state 135
    IF              shift and go to state 137
    VAR             shift and go to state 138
    WHILE           shift and go to state 142
    FOR             shift and go to state 143
    PRINT           shift and go to state 144
    READ            shift and go to state 145
    RB              reduce using rule 101 (empty -> .)
    FUNC            shift and go to state 12

  ! ID              [ reduce using rule 101 (empty -> .) ]
  ! IF              [ reduce using rule 101 (empty -> .) ]
  ! VAR             [ reduce using rule 101 (empty -> .) ]
  ! WHILE           [ reduce using rule 101 (empty -> .) ]
  ! FOR             [ reduce using rule 101 (empty -> .) ]
  ! PRINT           [ reduce using rule 101 (empty -> .) ]
  ! READ            [ reduce using rule 101 (empty -> .) ]
  ! FUNC            [ reduce using rule 101 (empty -> .) ]

    statement                      shift and go to state 370
    asignacion                     shift and go to state 127
    if                             shift and go to state 128
    vars                           shift and go to state 129
    while                          shift and go to state 130
    for                            shift and go to state 131
    escritura                      shift and go to state 132
    escritura_var                  shift and go to state 133
    lectura                        shift and go to state 134
    empty                          shift and go to state 136
    varsG                          shift and go to state 139
    var_row                        shift and go to state 140
    var_matrix                     shift and go to state 141
    var_rowG                       shift and go to state 9
    var_matrixG                    shift and go to state 10
    declarar_func                  shift and go to state 11

state 365

    (115) opers -> PLUS IS value .

    RP              reduce using rule 115 (opers -> PLUS IS value .)


state 366

    (116) opers -> MINUS IS value .

    RP              reduce using rule 116 (opers -> MINUS IS value .)


state 367

    (117) opers -> DIV IS value .

    RP              reduce using rule 117 (opers -> DIV IS value .)


state 368

    (118) opers -> MUL IS value .

    RP              reduce using rule 118 (opers -> MUL IS value .)


state 369

    (105) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof . LB statement RB goto
    (106) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof . LB statement RB goto elseif
    (107) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof . LB statement RB goto else

    LB              shift and go to state 371


state 370

    (112) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement . RB goto

    RB              shift and go to state 372


state 371

    (105) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB . statement RB goto
    (106) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB . statement RB goto elseif
    (107) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB . statement RB goto else
    (9) statement -> . asignacion SEMICOL statement
    (10) statement -> . if statement
    (11) statement -> . vars statement
    (12) statement -> . while statement
    (13) statement -> . for statement
    (14) statement -> . escritura statement
    (15) statement -> . escritura_var statement
    (16) statement -> . lectura statement
    (17) statement -> . ID row SEMICOL
    (18) statement -> . ID matrix SEMICOL
    (19) statement -> . empty
    (20) asignacion -> . ID IS value
    (102) if -> . IF LP expression RP check_bool gotof LB statement RB
    (103) if -> . IF LP expression RP check_bool gotof LB statement RB goto elseif
    (104) if -> . IF LP expression RP check_bool gotof LB statement RB goto else
    (21) vars -> . VAR tipo vars1
    (22) vars -> . VAR tipo vars2
    (23) vars -> . VAR tipo vars3
    (24) vars -> . VAR tipo oper_aritmetica
    (25) vars -> . VAR tipo ID row SEMICOL
    (26) vars -> . VAR tipo ID matrix SEMICOL
    (27) vars -> . varsG
    (28) vars -> . var_row
    (29) vars -> . var_row vars
    (30) vars -> . var_matrix
    (31) vars -> . var_matrix vars
    (32) vars -> . empty
    (111) while -> . WHILE LP expression RP check_bool gotof LB statement RB goto
    (112) for -> . FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto
    (121) escritura -> . PRINT LP COMILLA any COMILLA RP SEMICOL
    (122) escritura -> . PRINT LP COMILLAS any COMILLAS RP SEMICOL
    (123) escritura_var -> . PRINT LP any_var RP SEMICOL
    (128) lectura -> . READ LP COMILLA any_lectura COMILLA RP SEMICOL
    (129) lectura -> . READ LP COMILLAS any_lectura COMILLAS RP SEMICOL
    (101) empty -> .
    (41) varsG -> . VAR tipo vars1G
    (42) varsG -> . VAR tipo vars2G
    (43) varsG -> . VAR tipo vars3G
    (44) varsG -> . VAR LB varsG RB
    (45) varsG -> . var_rowG
    (46) varsG -> . var_rowG varsG
    (47) varsG -> . var_matrixG
    (48) varsG -> . var_matrixG varsG
    (49) varsG -> . declarar_func varsG
    (50) varsG -> . empty
    (87) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (88) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (95) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (80) declarar_func -> . FUNC tipo ID SEMICOL
    (81) declarar_func -> . FUNC VOID ID SEMICOL
    (82) declarar_func -> . FUNC tipo ID LP declarar_param RP SEMICOL
    (83) declarar_func -> . FUNC VOID ID LP declarar_param RP SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
    ID              shift and go to state 135
    IF              shift and go to state 137
    VAR             shift and go to state 138
    WHILE           shift and go to state 142
    FOR             shift and go to state 143
    PRINT           shift and go to state 144
    READ            shift and go to state 145
    RB              reduce using rule 101 (empty -> .)
    FUNC            shift and go to state 12

  ! ID              [ reduce using rule 101 (empty -> .) ]
  ! IF              [ reduce using rule 101 (empty -> .) ]
  ! VAR             [ reduce using rule 101 (empty -> .) ]
  ! WHILE           [ reduce using rule 101 (empty -> .) ]
  ! FOR             [ reduce using rule 101 (empty -> .) ]
  ! PRINT           [ reduce using rule 101 (empty -> .) ]
  ! READ            [ reduce using rule 101 (empty -> .) ]
  ! FUNC            [ reduce using rule 101 (empty -> .) ]

    statement                      shift and go to state 373
    asignacion                     shift and go to state 127
    if                             shift and go to state 128
    vars                           shift and go to state 129
    while                          shift and go to state 130
    for                            shift and go to state 131
    escritura                      shift and go to state 132
    escritura_var                  shift and go to state 133
    lectura                        shift and go to state 134
    empty                          shift and go to state 136
    varsG                          shift and go to state 139
    var_row                        shift and go to state 140
    var_matrix                     shift and go to state 141
    var_rowG                       shift and go to state 9
    var_matrixG                    shift and go to state 10
    declarar_func                  shift and go to state 11

state 372

    (112) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB . goto
    (109) goto -> .

    ID              reduce using rule 109 (goto -> .)
    IF              reduce using rule 109 (goto -> .)
    VAR             reduce using rule 109 (goto -> .)
    WHILE           reduce using rule 109 (goto -> .)
    FOR             reduce using rule 109 (goto -> .)
    PRINT           reduce using rule 109 (goto -> .)
    READ            reduce using rule 109 (goto -> .)
    FUNC            reduce using rule 109 (goto -> .)
    RB              reduce using rule 109 (goto -> .)

    goto                           shift and go to state 374

state 373

    (105) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement . RB goto
    (106) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement . RB goto elseif
    (107) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement . RB goto else

    RB              shift and go to state 375


state 374

    (112) for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .

    ID              reduce using rule 112 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    IF              reduce using rule 112 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    VAR             reduce using rule 112 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    WHILE           reduce using rule 112 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    FOR             reduce using rule 112 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    PRINT           reduce using rule 112 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    READ            reduce using rule 112 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    FUNC            reduce using rule 112 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)
    RB              reduce using rule 112 (for -> FOR LP VAR tipo ID IS value SEMICOL expression check_bool gotof_for SEMICOL ID opers RP LB statement RB goto .)


state 375

    (105) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB . goto
    (106) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB . goto elseif
    (107) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB . goto else
    (109) goto -> .

    ELSEIF          reduce using rule 109 (goto -> .)
    ELSE            reduce using rule 109 (goto -> .)
    ID              reduce using rule 109 (goto -> .)
    IF              reduce using rule 109 (goto -> .)
    VAR             reduce using rule 109 (goto -> .)
    WHILE           reduce using rule 109 (goto -> .)
    FOR             reduce using rule 109 (goto -> .)
    PRINT           reduce using rule 109 (goto -> .)
    READ            reduce using rule 109 (goto -> .)
    FUNC            reduce using rule 109 (goto -> .)
    RB              reduce using rule 109 (goto -> .)

    goto                           shift and go to state 376

state 376

    (105) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .
    (106) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto . elseif
    (107) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto . else
    (105) elseif -> . ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto
    (106) elseif -> . ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto elseif
    (107) elseif -> . ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto else
    (108) else -> . ELSE guarda_num_salto LB statement RB guarda_num_salto

    ID              reduce using rule 105 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    IF              reduce using rule 105 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    VAR             reduce using rule 105 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    WHILE           reduce using rule 105 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    FOR             reduce using rule 105 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    PRINT           reduce using rule 105 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    READ            reduce using rule 105 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    FUNC            reduce using rule 105 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    RB              reduce using rule 105 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto .)
    ELSEIF          shift and go to state 335
    ELSE            shift and go to state 336

    elseif                         shift and go to state 377
    else                           shift and go to state 378

state 377

    (106) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto elseif .

    ID              reduce using rule 106 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto elseif .)
    IF              reduce using rule 106 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto elseif .)
    VAR             reduce using rule 106 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto elseif .)
    WHILE           reduce using rule 106 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto elseif .)
    FOR             reduce using rule 106 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto elseif .)
    PRINT           reduce using rule 106 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto elseif .)
    READ            reduce using rule 106 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto elseif .)
    FUNC            reduce using rule 106 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto elseif .)
    RB              reduce using rule 106 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto elseif .)


state 378

    (107) elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto else .

    ID              reduce using rule 107 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto else .)
    IF              reduce using rule 107 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto else .)
    VAR             reduce using rule 107 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto else .)
    WHILE           reduce using rule 107 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto else .)
    FOR             reduce using rule 107 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto else .)
    PRINT           reduce using rule 107 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto else .)
    READ            reduce using rule 107 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto else .)
    FUNC            reduce using rule 107 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto else .)
    RB              reduce using rule 107 (elseif -> ELSEIF guarda_num_salto LP expression RP check_bool gotof LB statement RB goto else .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VOID in state 6 resolved as shift
WARNING: shift/reduce conflict for INT in state 6 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 6 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 6 resolved as shift
WARNING: shift/reduce conflict for VAR in state 9 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 9 resolved as shift
WARNING: shift/reduce conflict for VAR in state 9 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 9 resolved as shift
WARNING: shift/reduce conflict for VAR in state 10 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 10 resolved as shift
WARNING: shift/reduce conflict for VAR in state 10 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 10 resolved as shift
WARNING: shift/reduce conflict for VAR in state 11 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 11 resolved as shift
WARNING: shift/reduce conflict for VOID in state 14 resolved as shift
WARNING: shift/reduce conflict for INT in state 14 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 14 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 14 resolved as shift
WARNING: shift/reduce conflict for ID in state 21 resolved as shift
WARNING: shift/reduce conflict for RP in state 46 resolved as shift
WARNING: shift/reduce conflict for RP in state 47 resolved as shift
WARNING: shift/reduce conflict for VAR in state 50 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 50 resolved as shift
WARNING: shift/reduce conflict for VAR in state 50 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 50 resolved as shift
WARNING: shift/reduce conflict for VAR in state 98 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 98 resolved as shift
WARNING: shift/reduce conflict for VAR in state 98 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 98 resolved as shift
WARNING: shift/reduce conflict for ID in state 104 resolved as shift
WARNING: shift/reduce conflict for IF in state 104 resolved as shift
WARNING: shift/reduce conflict for VAR in state 104 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 104 resolved as shift
WARNING: shift/reduce conflict for FOR in state 104 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 104 resolved as shift
WARNING: shift/reduce conflict for READ in state 104 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 104 resolved as shift
WARNING: shift/reduce conflict for VAR in state 107 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 107 resolved as shift
WARNING: shift/reduce conflict for VAR in state 111 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 111 resolved as shift
WARNING: shift/reduce conflict for ID in state 116 resolved as shift
WARNING: shift/reduce conflict for VAR in state 117 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 117 resolved as shift
WARNING: shift/reduce conflict for ID in state 128 resolved as shift
WARNING: shift/reduce conflict for IF in state 128 resolved as shift
WARNING: shift/reduce conflict for VAR in state 128 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 128 resolved as shift
WARNING: shift/reduce conflict for FOR in state 128 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 128 resolved as shift
WARNING: shift/reduce conflict for READ in state 128 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 128 resolved as shift
WARNING: shift/reduce conflict for ID in state 129 resolved as shift
WARNING: shift/reduce conflict for IF in state 129 resolved as shift
WARNING: shift/reduce conflict for VAR in state 129 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 129 resolved as shift
WARNING: shift/reduce conflict for FOR in state 129 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 129 resolved as shift
WARNING: shift/reduce conflict for READ in state 129 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 129 resolved as shift
WARNING: shift/reduce conflict for ID in state 130 resolved as shift
WARNING: shift/reduce conflict for IF in state 130 resolved as shift
WARNING: shift/reduce conflict for VAR in state 130 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 130 resolved as shift
WARNING: shift/reduce conflict for FOR in state 130 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 130 resolved as shift
WARNING: shift/reduce conflict for READ in state 130 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 130 resolved as shift
WARNING: shift/reduce conflict for ID in state 131 resolved as shift
WARNING: shift/reduce conflict for IF in state 131 resolved as shift
WARNING: shift/reduce conflict for VAR in state 131 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 131 resolved as shift
WARNING: shift/reduce conflict for FOR in state 131 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 131 resolved as shift
WARNING: shift/reduce conflict for READ in state 131 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 131 resolved as shift
WARNING: shift/reduce conflict for ID in state 132 resolved as shift
WARNING: shift/reduce conflict for IF in state 132 resolved as shift
WARNING: shift/reduce conflict for VAR in state 132 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 132 resolved as shift
WARNING: shift/reduce conflict for FOR in state 132 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 132 resolved as shift
WARNING: shift/reduce conflict for READ in state 132 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 132 resolved as shift
WARNING: shift/reduce conflict for ID in state 133 resolved as shift
WARNING: shift/reduce conflict for IF in state 133 resolved as shift
WARNING: shift/reduce conflict for VAR in state 133 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 133 resolved as shift
WARNING: shift/reduce conflict for FOR in state 133 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 133 resolved as shift
WARNING: shift/reduce conflict for READ in state 133 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 133 resolved as shift
WARNING: shift/reduce conflict for ID in state 134 resolved as shift
WARNING: shift/reduce conflict for IF in state 134 resolved as shift
WARNING: shift/reduce conflict for VAR in state 134 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 134 resolved as shift
WARNING: shift/reduce conflict for FOR in state 134 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 134 resolved as shift
WARNING: shift/reduce conflict for READ in state 134 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 134 resolved as shift
WARNING: shift/reduce conflict for VAR in state 140 resolved as shift
WARNING: shift/reduce conflict for VAR in state 140 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 140 resolved as shift
WARNING: shift/reduce conflict for VAR in state 141 resolved as shift
WARNING: shift/reduce conflict for VAR in state 141 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 141 resolved as shift
WARNING: shift/reduce conflict for ID in state 146 resolved as shift
WARNING: shift/reduce conflict for IF in state 146 resolved as shift
WARNING: shift/reduce conflict for VAR in state 146 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 146 resolved as shift
WARNING: shift/reduce conflict for FOR in state 146 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 146 resolved as shift
WARNING: shift/reduce conflict for READ in state 146 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 146 resolved as shift
WARNING: shift/reduce conflict for VAR in state 147 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 147 resolved as shift
WARNING: shift/reduce conflict for ID in state 148 resolved as shift
WARNING: shift/reduce conflict for IF in state 148 resolved as shift
WARNING: shift/reduce conflict for VAR in state 148 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 148 resolved as shift
WARNING: shift/reduce conflict for FOR in state 148 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 148 resolved as shift
WARNING: shift/reduce conflict for READ in state 148 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 148 resolved as shift
WARNING: shift/reduce conflict for VAR in state 152 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 152 resolved as shift
WARNING: shift/reduce conflict for ID in state 153 resolved as shift
WARNING: shift/reduce conflict for IF in state 153 resolved as shift
WARNING: shift/reduce conflict for VAR in state 153 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 153 resolved as shift
WARNING: shift/reduce conflict for FOR in state 153 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 153 resolved as shift
WARNING: shift/reduce conflict for READ in state 153 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 153 resolved as shift
WARNING: shift/reduce conflict for ID in state 161 resolved as shift
WARNING: shift/reduce conflict for IF in state 161 resolved as shift
WARNING: shift/reduce conflict for VAR in state 161 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 161 resolved as shift
WARNING: shift/reduce conflict for FOR in state 161 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 161 resolved as shift
WARNING: shift/reduce conflict for READ in state 161 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 161 resolved as shift
WARNING: shift/reduce conflict for ID in state 173 resolved as shift
WARNING: shift/reduce conflict for ID in state 181 resolved as shift
WARNING: shift/reduce conflict for IF in state 181 resolved as shift
WARNING: shift/reduce conflict for VAR in state 181 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 181 resolved as shift
WARNING: shift/reduce conflict for FOR in state 181 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 181 resolved as shift
WARNING: shift/reduce conflict for READ in state 181 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 181 resolved as shift
WARNING: shift/reduce conflict for ID in state 184 resolved as shift
WARNING: shift/reduce conflict for IF in state 184 resolved as shift
WARNING: shift/reduce conflict for VAR in state 184 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 184 resolved as shift
WARNING: shift/reduce conflict for FOR in state 184 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 184 resolved as shift
WARNING: shift/reduce conflict for READ in state 184 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 184 resolved as shift
WARNING: shift/reduce conflict for VAR in state 239 resolved as shift
WARNING: shift/reduce conflict for VAR in state 239 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 239 resolved as shift
WARNING: shift/reduce conflict for CTE_I in state 246 resolved as shift
WARNING: shift/reduce conflict for CTE_F in state 246 resolved as shift
WARNING: shift/reduce conflict for ID in state 246 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 246 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 246 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 277 resolved as shift
WARNING: shift/reduce conflict for SEMICOL in state 277 resolved as shift
WARNING: shift/reduce conflict for ID in state 296 resolved as shift
WARNING: shift/reduce conflict for VAR in state 297 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 297 resolved as shift
WARNING: shift/reduce conflict for VAR in state 299 resolved as shift
WARNING: shift/reduce conflict for VAR in state 299 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 299 resolved as shift
WARNING: shift/reduce conflict for ID in state 306 resolved as shift
WARNING: shift/reduce conflict for IF in state 306 resolved as shift
WARNING: shift/reduce conflict for VAR in state 306 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 306 resolved as shift
WARNING: shift/reduce conflict for FOR in state 306 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 306 resolved as shift
WARNING: shift/reduce conflict for READ in state 306 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 306 resolved as shift
WARNING: shift/reduce conflict for ID in state 314 resolved as shift
WARNING: shift/reduce conflict for IF in state 314 resolved as shift
WARNING: shift/reduce conflict for VAR in state 314 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 314 resolved as shift
WARNING: shift/reduce conflict for FOR in state 314 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 314 resolved as shift
WARNING: shift/reduce conflict for READ in state 314 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 314 resolved as shift
WARNING: shift/reduce conflict for ID in state 342 resolved as shift
WARNING: shift/reduce conflict for IF in state 342 resolved as shift
WARNING: shift/reduce conflict for VAR in state 342 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 342 resolved as shift
WARNING: shift/reduce conflict for FOR in state 342 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 342 resolved as shift
WARNING: shift/reduce conflict for READ in state 342 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 342 resolved as shift
WARNING: shift/reduce conflict for ID in state 364 resolved as shift
WARNING: shift/reduce conflict for IF in state 364 resolved as shift
WARNING: shift/reduce conflict for VAR in state 364 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 364 resolved as shift
WARNING: shift/reduce conflict for FOR in state 364 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 364 resolved as shift
WARNING: shift/reduce conflict for READ in state 364 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 364 resolved as shift
WARNING: shift/reduce conflict for ID in state 371 resolved as shift
WARNING: shift/reduce conflict for IF in state 371 resolved as shift
WARNING: shift/reduce conflict for VAR in state 371 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 371 resolved as shift
WARNING: shift/reduce conflict for FOR in state 371 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 371 resolved as shift
WARNING: shift/reduce conflict for READ in state 371 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 371 resolved as shift
WARNING: reduce/reduce conflict in state 7 resolved using rule (programa1 -> empty)
WARNING: rejected rule (varsG -> empty) in state 7
WARNING: reduce/reduce conflict in state 9 resolved using rule (varsG -> var_rowG)
WARNING: rejected rule (empty -> <empty>) in state 9
WARNING: reduce/reduce conflict in state 10 resolved using rule (varsG -> var_matrixG)
WARNING: rejected rule (empty -> <empty>) in state 10
WARNING: reduce/reduce conflict in state 50 resolved using rule (vars1G -> ID SEMICOL)
WARNING: rejected rule (vars3G -> ID SEMICOL) in state 50
WARNING: reduce/reduce conflict in state 50 resolved using rule (vars1G -> ID SEMICOL)
WARNING: rejected rule (empty -> <empty>) in state 50
WARNING: reduce/reduce conflict in state 76 resolved using rule (vars1G -> ID SEMICOL varsG)
WARNING: rejected rule (vars3G -> ID SEMICOL varsG) in state 76
WARNING: reduce/reduce conflict in state 98 resolved using rule (vars3G -> ID SEMICOL)
WARNING: rejected rule (empty -> <empty>) in state 98
WARNING: reduce/reduce conflict in state 136 resolved using rule (statement -> empty)
WARNING: rejected rule (vars -> empty) in state 136
WARNING: reduce/reduce conflict in state 136 resolved using rule (vars -> empty)
WARNING: rejected rule (varsG -> empty) in state 136
WARNING: reduce/reduce conflict in state 136 resolved using rule (statement -> empty)
WARNING: rejected rule (varsG -> empty) in state 136
WARNING: reduce/reduce conflict in state 140 resolved using rule (vars -> var_row)
WARNING: rejected rule (empty -> <empty>) in state 140
WARNING: reduce/reduce conflict in state 141 resolved using rule (vars -> var_matrix)
WARNING: rejected rule (empty -> <empty>) in state 141
WARNING: reduce/reduce conflict in state 150 resolved using rule (vars -> empty)
WARNING: rejected rule (varsG -> empty) in state 150
WARNING: reduce/reduce conflict in state 204 resolved using rule (expression -> ID)
WARNING: rejected rule (expr -> ID) in state 204
WARNING: reduce/reduce conflict in state 239 resolved using rule (vars1 -> ID SEMICOL)
WARNING: rejected rule (vars3 -> ID SEMICOL) in state 239
WARNING: reduce/reduce conflict in state 239 resolved using rule (vars1 -> ID SEMICOL)
WARNING: rejected rule (vars1G -> ID SEMICOL) in state 239
WARNING: reduce/reduce conflict in state 239 resolved using rule (vars1 -> ID SEMICOL)
WARNING: rejected rule (vars3G -> ID SEMICOL) in state 239
WARNING: reduce/reduce conflict in state 239 resolved using rule (vars1 -> ID SEMICOL)
WARNING: rejected rule (empty -> <empty>) in state 239
WARNING: reduce/reduce conflict in state 246 resolved using rule (empty -> <empty>)
WARNING: rejected rule (expression -> expr) in state 246
WARNING: reduce/reduce conflict in state 249 resolved using rule (expression -> ID)
WARNING: rejected rule (expr -> ID) in state 249
WARNING: reduce/reduce conflict in state 272 resolved using rule (vars1 -> ID SEMICOL vars)
WARNING: rejected rule (vars3 -> ID SEMICOL vars) in state 272
WARNING: reduce/reduce conflict in state 273 resolved using rule (vars1G -> ID SEMICOL varsG)
WARNING: rejected rule (vars3G -> ID SEMICOL varsG) in state 273
WARNING: reduce/reduce conflict in state 273 resolved using rule (vars -> varsG)
WARNING: rejected rule (vars1G -> ID SEMICOL varsG) in state 273
WARNING: reduce/reduce conflict in state 276 resolved using rule (value -> ID)
WARNING: rejected rule (expr -> ID) in state 276
WARNING: reduce/reduce conflict in state 279 resolved using rule (value -> CTE_F)
WARNING: rejected rule (expr -> CTE_F) in state 279
WARNING: reduce/reduce conflict in state 280 resolved using rule (value -> CTE_I)
WARNING: rejected rule (expr -> CTE_I) in state 280
WARNING: reduce/reduce conflict in state 299 resolved using rule (vars3 -> ID SEMICOL)
WARNING: rejected rule (vars3G -> ID SEMICOL) in state 299
WARNING: reduce/reduce conflict in state 299 resolved using rule (vars3 -> ID SEMICOL)
WARNING: rejected rule (empty -> <empty>) in state 299
WARNING: reduce/reduce conflict in state 308 resolved using rule (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL)
WARNING: rejected rule (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL) in state 308
WARNING: reduce/reduce conflict in state 313 resolved using rule (vars -> varsG)
WARNING: rejected rule (vars3G -> ID SEMICOL varsG) in state 313
WARNING: reduce/reduce conflict in state 326 resolved using rule (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL)
WARNING: rejected rule (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL) in state 326
