Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BEGIN
    BOOL
    COL
    CONST
    CTE_B
    CTE_S
    DETERMATRIZ
    DO
    DOT
    ELIF
    END
    EOF
    FUNC
    GLOBAL
    INPUT
    INVERMATRIZ
    LET
    LOCAL
    NOT
    OR
    PRINT
    RETURN
    SELECT
    SWITCH
    THEN
    TRANSMATRIZ
    WHILE

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SEMICOL programa1
Rule 2     programa1 -> vars funcion main funcion
Rule 3     programa1 -> funcion main funcion
Rule 4     programa1 -> funcion main
Rule 5     programa1 -> vars funcion main
Rule 6     programa1 -> vars funcion
Rule 7     programa1 -> vars main
Rule 8     programa1 -> vars main funcion
Rule 9     programa1 -> funcion
Rule 10    programa1 -> vars
Rule 11    programa1 -> main
Rule 12    programa1 -> empty
Rule 13    main -> tipo MAIN LP RP LB statement RB
Rule 14    main -> VOID tipo MAIN LP RP LB statement RB
Rule 15    statement -> asignacion SEMICOL statement
Rule 16    statement -> if statement
Rule 17    statement -> vars statement
Rule 18    statement -> ID row SEMICOL
Rule 19    statement -> ID matrix SEMICOL
Rule 20    statement -> empty
Rule 21    asignacion -> ID IS value
Rule 22    vars -> VAR tipo vars1
Rule 23    vars -> VAR tipo vars2
Rule 24    vars -> VAR tipo vars3
Rule 25    vars -> VAR tipo oper_aritmetica
Rule 26    vars -> VAR tipo ID row SEMICOL
Rule 27    vars -> VAR tipo ID matrix SEMICOL
Rule 28    vars -> varsG
Rule 29    vars -> var_row
Rule 30    vars -> var_row vars
Rule 31    vars -> var_matrix
Rule 32    vars -> var_matrix vars
Rule 33    vars -> empty
Rule 34    vars1 -> ID SEMICOL
Rule 35    vars1 -> ID SEMICOL vars
Rule 36    vars2 -> ID IS value COMMA vars2
Rule 37    vars2 -> ID IS value COMMA
Rule 38    vars2 -> ID IS value SEMICOL vars
Rule 39    vars3 -> ID COMMA vars3
Rule 40    vars3 -> ID SEMICOL vars
Rule 41    vars3 -> ID SEMICOL
Rule 42    varsG -> VAR tipo vars1G
Rule 43    varsG -> VAR tipo vars2G
Rule 44    varsG -> VAR tipo vars3G
Rule 45    varsG -> VAR LB varsG RB
Rule 46    varsG -> var_rowG
Rule 47    varsG -> var_rowG varsG
Rule 48    varsG -> var_matrixG
Rule 49    varsG -> var_matrixG varsG
Rule 50    vars1G -> ID SEMICOL
Rule 51    vars1G -> ID SEMICOL varsG
Rule 52    vars2G -> ID IS value check_type COMMA vars2G
Rule 53    vars2G -> ID IS value check_type SEMICOL varsG
Rule 54    vars2G -> empty
Rule 55    vars3G -> ID COMMA vars3G
Rule 56    vars3G -> ID SEMICOL varsG
Rule 57    vars3G -> ID SEMICOL
Rule 58    tipo -> INT
Rule 59    tipo -> FLOAT
Rule 60    tipo -> CHAR
Rule 61    value -> CTE_F
Rule 62    value -> CTE_I
Rule 63    value -> ID
Rule 64    value -> CTE_C
Rule 65    value -> COMILLA ID COMILLA
Rule 66    value -> COMILLAS ID COMILLAS
Rule 67    check_type -> <empty>
Rule 68    funcion -> VOID ID LP param RP LB statement RB funcion
Rule 69    funcion -> tipo ID LP param RP LB statement RB funcion
Rule 70    funcion -> VOID ID LP param RP LB statement RB
Rule 71    funcion -> tipo ID LP param RP LB statement RB
Rule 72    param -> <empty>
Rule 73    var_lt -> expr LT expr
Rule 74    var_gt -> expr GT expr
Rule 75    var_leq -> expr LEQ expr
Rule 76    var_geq -> expr GEQ expr
Rule 77    var_equal -> expr EQUAL expr
Rule 78    var_neq -> expr NEQ expr
Rule 79    oper_aritmetica -> ID IS expr SEMICOL
Rule 80    expr -> expr MUL expr
Rule 81    expr -> expr DIV expr
Rule 82    expr -> expr PLUS expr
Rule 83    expr -> expr MINUS expr
Rule 84    expr -> CTE_I
Rule 85    expr -> CTE_F
Rule 86    var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL
Rule 87    var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL
Rule 88    elem_lista -> value
Rule 89    elem_lista -> empty
Rule 90    lista2 -> elem_lista COMMA lista2
Rule 91    lista2 -> elem_lista COMMA elem_lista
Rule 92    row -> LC CTE_I RC
Rule 93    var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL
Rule 94    var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL
Rule 95    matrix2 -> LP lista2 RP COMMA matrix2
Rule 96    matrix2 -> LP lista2 RP COMMA LP lista2 RP
Rule 97    row_list -> row COMMA row_list
Rule 98    row_list -> row COMMA row
Rule 99    matrix -> row row
Rule 100   empty -> <empty>
Rule 101   if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto
Rule 102   if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto elseif
Rule 103   if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto else
Rule 104   elseif -> ELSEIF goto LP expression RP check_bool gotof LB statement RB guarda_salto
Rule 105   elseif -> ELSEIF goto LP expression RP check_bool gotof LB statement RB guarda_salto elseif
Rule 106   elseif -> ELSEIF goto LP expression RP check_bool gotof LB statement RB guarda_salto else
Rule 107   else -> ELSE goto guarda_salto LB statement RB guarda_salto
Rule 108   goto -> <empty>
Rule 109   gotof -> <empty>
Rule 110   expression -> var_gt
Rule 111   expression -> var_lt
Rule 112   expression -> var_equal
Rule 113   expression -> var_neq
Rule 114   expression -> var_geq
Rule 115   expression -> var_leq
Rule 116   expression -> expr
Rule 117   expression -> TRUE
Rule 118   expression -> FALSE
Rule 119   expression -> ID
Rule 120   check_bool -> <empty>
Rule 121   guarda_salto -> <empty>

Terminals, with rules where they appear

AND                  : 
BEGIN                : 
BOOL                 : 
CHAR                 : 60
COL                  : 
COMILLA              : 65 65
COMILLAS             : 66 66
COMMA                : 36 37 39 52 55 90 91 95 96 97 98
CONST                : 
CTE_B                : 
CTE_C                : 64
CTE_F                : 61 85
CTE_I                : 62 84 92
CTE_S                : 
DETERMATRIZ          : 
DIV                  : 81
DO                   : 
DOT                  : 
ELIF                 : 
ELSE                 : 107
ELSEIF               : 104 105 106
END                  : 
EOF                  : 
EQUAL                : 77
FALSE                : 118
FLOAT                : 59
FUNC                 : 
GEQ                  : 76
GLOBAL               : 
GT                   : 74
ID                   : 1 18 19 21 26 27 34 35 36 37 38 39 40 41 50 51 52 53 55 56 57 63 65 66 68 69 70 71 79 86 87 93 94 119
IF                   : 101 102 103
INPUT                : 
INT                  : 58
INVERMATRIZ          : 
IS                   : 21 36 37 38 52 53 79 86 87 93 94
LB                   : 13 14 45 68 69 70 71 101 102 103 104 105 106 107
LC                   : 92
LEQ                  : 75
LET                  : 
LOCAL                : 
LP                   : 13 14 68 69 70 71 86 87 95 96 96 101 102 103 104 105 106
LT                   : 73
MAIN                 : 13 14
MINUS                : 83
MUL                  : 80
NEQ                  : 78
NOT                  : 
OR                   : 
PLUS                 : 82
PRINT                : 
PROGRAM              : 1
RB                   : 13 14 45 68 69 70 71 101 102 103 104 105 106 107
RC                   : 92
RETURN               : 
RP                   : 13 14 68 69 70 71 86 87 95 96 96 101 102 103 104 105 106
SELECT               : 
SEMICOL              : 1 15 18 19 26 27 34 35 38 40 41 50 51 53 56 57 79 86 87 93 94
SWITCH               : 
THEN                 : 
TRANSMATRIZ          : 
TRUE                 : 117
VAR                  : 22 23 24 25 26 27 42 43 44 45 86 87 93 94
VOID                 : 14 68 70
WHILE                : 
error                : 

Nonterminals, with rules where they appear

asignacion           : 15
check_bool           : 101 102 103 104 105 106
check_type           : 52 53
elem_lista           : 90 91 91
else                 : 103 106
elseif               : 102 105
empty                : 12 20 33 54 89
expr                 : 73 73 74 74 75 75 76 76 77 77 78 78 79 80 80 81 81 82 82 83 83 116
expression           : 101 102 103 104 105 106
funcion              : 2 2 3 3 4 5 6 8 9 68 69
goto                 : 104 105 106 107
gotof                : 101 102 103 104 105 106
guarda_salto         : 101 102 103 104 105 106 107 107
if                   : 16
lista2               : 86 87 90 95 96 96
main                 : 2 3 4 5 7 8 11
matrix               : 19 27 93 94
matrix2              : 93 94 95
oper_aritmetica      : 25
param                : 68 69 70 71
programa             : 0
programa1            : 1
row                  : 18 26 86 87 97 98 98 99 99
row_list             : 97
statement            : 13 14 15 16 17 68 69 70 71 101 102 103 104 105 106 107
tipo                 : 13 14 22 23 24 25 26 27 42 43 44 69 71 86 87 93 94
value                : 21 36 37 38 52 53 88
var_equal            : 112
var_geq              : 114
var_gt               : 110
var_leq              : 115
var_lt               : 111
var_matrix           : 31 32
var_matrixG          : 48 49
var_neq              : 113
var_row              : 29 30
var_rowG             : 46 47
vars                 : 2 5 6 7 8 10 17 30 32 35 38 40
vars1                : 22
vars1G               : 42
vars2                : 23 36
vars2G               : 43 52
vars3                : 24 39
vars3G               : 44 55
varsG                : 28 45 47 49 51 53 56

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SEMICOL programa1

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID SEMICOL programa1

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . SEMICOL programa1

    SEMICOL         shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SEMICOL . programa1
    (2) programa1 -> . vars funcion main funcion
    (3) programa1 -> . funcion main funcion
    (4) programa1 -> . funcion main
    (5) programa1 -> . vars funcion main
    (6) programa1 -> . vars funcion
    (7) programa1 -> . vars main
    (8) programa1 -> . vars main funcion
    (9) programa1 -> . funcion
    (10) programa1 -> . vars
    (11) programa1 -> . main
    (12) programa1 -> . empty
    (22) vars -> . VAR tipo vars1
    (23) vars -> . VAR tipo vars2
    (24) vars -> . VAR tipo vars3
    (25) vars -> . VAR tipo oper_aritmetica
    (26) vars -> . VAR tipo ID row SEMICOL
    (27) vars -> . VAR tipo ID matrix SEMICOL
    (28) vars -> . varsG
    (29) vars -> . var_row
    (30) vars -> . var_row vars
    (31) vars -> . var_matrix
    (32) vars -> . var_matrix vars
    (33) vars -> . empty
    (68) funcion -> . VOID ID LP param RP LB statement RB funcion
    (69) funcion -> . tipo ID LP param RP LB statement RB funcion
    (70) funcion -> . VOID ID LP param RP LB statement RB
    (71) funcion -> . tipo ID LP param RP LB statement RB
    (13) main -> . tipo MAIN LP RP LB statement RB
    (14) main -> . VOID tipo MAIN LP RP LB statement RB
    (100) empty -> .
    (42) varsG -> . VAR tipo vars1G
    (43) varsG -> . VAR tipo vars2G
    (44) varsG -> . VAR tipo vars3G
    (45) varsG -> . VAR LB varsG RB
    (46) varsG -> . var_rowG
    (47) varsG -> . var_rowG varsG
    (48) varsG -> . var_matrixG
    (49) varsG -> . var_matrixG varsG
    (86) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (93) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (58) tipo -> . INT
    (59) tipo -> . FLOAT
    (60) tipo -> . CHAR
    (87) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    VAR             shift and go to state 10
    VOID            shift and go to state 15
    $end            reduce using rule 100 (empty -> .)
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

  ! VOID            [ reduce using rule 100 (empty -> .) ]
  ! INT             [ reduce using rule 100 (empty -> .) ]
  ! FLOAT           [ reduce using rule 100 (empty -> .) ]
  ! CHAR            [ reduce using rule 100 (empty -> .) ]

    programa1                      shift and go to state 5
    vars                           shift and go to state 6
    funcion                        shift and go to state 7
    main                           shift and go to state 8
    empty                          shift and go to state 9
    tipo                           shift and go to state 11
    varsG                          shift and go to state 12
    var_row                        shift and go to state 13
    var_matrix                     shift and go to state 14
    var_rowG                       shift and go to state 16
    var_matrixG                    shift and go to state 17

state 5

    (1) programa -> PROGRAM ID SEMICOL programa1 .

    $end            reduce using rule 1 (programa -> PROGRAM ID SEMICOL programa1 .)


state 6

    (2) programa1 -> vars . funcion main funcion
    (5) programa1 -> vars . funcion main
    (6) programa1 -> vars . funcion
    (7) programa1 -> vars . main
    (8) programa1 -> vars . main funcion
    (10) programa1 -> vars .
    (68) funcion -> . VOID ID LP param RP LB statement RB funcion
    (69) funcion -> . tipo ID LP param RP LB statement RB funcion
    (70) funcion -> . VOID ID LP param RP LB statement RB
    (71) funcion -> . tipo ID LP param RP LB statement RB
    (13) main -> . tipo MAIN LP RP LB statement RB
    (14) main -> . VOID tipo MAIN LP RP LB statement RB
    (58) tipo -> . INT
    (59) tipo -> . FLOAT
    (60) tipo -> . CHAR

    $end            reduce using rule 10 (programa1 -> vars .)
    VOID            shift and go to state 15
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    funcion                        shift and go to state 21
    main                           shift and go to state 22
    tipo                           shift and go to state 11

state 7

    (3) programa1 -> funcion . main funcion
    (4) programa1 -> funcion . main
    (9) programa1 -> funcion .
    (13) main -> . tipo MAIN LP RP LB statement RB
    (14) main -> . VOID tipo MAIN LP RP LB statement RB
    (58) tipo -> . INT
    (59) tipo -> . FLOAT
    (60) tipo -> . CHAR

    $end            reduce using rule 9 (programa1 -> funcion .)
    VOID            shift and go to state 25
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    main                           shift and go to state 23
    tipo                           shift and go to state 24

state 8

    (11) programa1 -> main .

    $end            reduce using rule 11 (programa1 -> main .)


state 9

    (12) programa1 -> empty .
    (33) vars -> empty .

  ! reduce/reduce conflict for $end resolved using rule 12 (programa1 -> empty .)
    $end            reduce using rule 12 (programa1 -> empty .)
    VOID            reduce using rule 33 (vars -> empty .)
    INT             reduce using rule 33 (vars -> empty .)
    FLOAT           reduce using rule 33 (vars -> empty .)
    CHAR            reduce using rule 33 (vars -> empty .)

  ! $end            [ reduce using rule 33 (vars -> empty .) ]


state 10

    (22) vars -> VAR . tipo vars1
    (23) vars -> VAR . tipo vars2
    (24) vars -> VAR . tipo vars3
    (25) vars -> VAR . tipo oper_aritmetica
    (26) vars -> VAR . tipo ID row SEMICOL
    (27) vars -> VAR . tipo ID matrix SEMICOL
    (42) varsG -> VAR . tipo vars1G
    (43) varsG -> VAR . tipo vars2G
    (44) varsG -> VAR . tipo vars3G
    (45) varsG -> VAR . LB varsG RB
    (86) var_row -> VAR . tipo ID row IS LP lista2 RP SEMICOL
    (93) var_matrix -> VAR . tipo ID matrix IS matrix2 SEMICOL
    (87) var_rowG -> VAR . tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrixG -> VAR . tipo ID matrix IS matrix2 SEMICOL
    (58) tipo -> . INT
    (59) tipo -> . FLOAT
    (60) tipo -> . CHAR

    LB              shift and go to state 27
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    tipo                           shift and go to state 26

state 11

    (69) funcion -> tipo . ID LP param RP LB statement RB funcion
    (71) funcion -> tipo . ID LP param RP LB statement RB
    (13) main -> tipo . MAIN LP RP LB statement RB

    ID              shift and go to state 28
    MAIN            shift and go to state 29


state 12

    (28) vars -> varsG .

    VOID            reduce using rule 28 (vars -> varsG .)
    INT             reduce using rule 28 (vars -> varsG .)
    FLOAT           reduce using rule 28 (vars -> varsG .)
    CHAR            reduce using rule 28 (vars -> varsG .)
    $end            reduce using rule 28 (vars -> varsG .)
    ID              reduce using rule 28 (vars -> varsG .)
    IF              reduce using rule 28 (vars -> varsG .)
    VAR             reduce using rule 28 (vars -> varsG .)
    RB              reduce using rule 28 (vars -> varsG .)


state 13

    (29) vars -> var_row .
    (30) vars -> var_row . vars
    (22) vars -> . VAR tipo vars1
    (23) vars -> . VAR tipo vars2
    (24) vars -> . VAR tipo vars3
    (25) vars -> . VAR tipo oper_aritmetica
    (26) vars -> . VAR tipo ID row SEMICOL
    (27) vars -> . VAR tipo ID matrix SEMICOL
    (28) vars -> . varsG
    (29) vars -> . var_row
    (30) vars -> . var_row vars
    (31) vars -> . var_matrix
    (32) vars -> . var_matrix vars
    (33) vars -> . empty
    (42) varsG -> . VAR tipo vars1G
    (43) varsG -> . VAR tipo vars2G
    (44) varsG -> . VAR tipo vars3G
    (45) varsG -> . VAR LB varsG RB
    (46) varsG -> . var_rowG
    (47) varsG -> . var_rowG varsG
    (48) varsG -> . var_matrixG
    (49) varsG -> . var_matrixG varsG
    (86) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (93) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (100) empty -> .
    (87) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for VOID resolved using rule 29 (vars -> var_row .)
  ! reduce/reduce conflict for INT resolved using rule 29 (vars -> var_row .)
  ! reduce/reduce conflict for FLOAT resolved using rule 29 (vars -> var_row .)
  ! reduce/reduce conflict for CHAR resolved using rule 29 (vars -> var_row .)
  ! reduce/reduce conflict for $end resolved using rule 29 (vars -> var_row .)
  ! reduce/reduce conflict for ID resolved using rule 29 (vars -> var_row .)
  ! reduce/reduce conflict for IF resolved using rule 29 (vars -> var_row .)
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for RB resolved using rule 29 (vars -> var_row .)
    VOID            reduce using rule 29 (vars -> var_row .)
    INT             reduce using rule 29 (vars -> var_row .)
    FLOAT           reduce using rule 29 (vars -> var_row .)
    CHAR            reduce using rule 29 (vars -> var_row .)
    $end            reduce using rule 29 (vars -> var_row .)
    ID              reduce using rule 29 (vars -> var_row .)
    IF              reduce using rule 29 (vars -> var_row .)
    RB              reduce using rule 29 (vars -> var_row .)
    VAR             shift and go to state 10

  ! VAR             [ reduce using rule 29 (vars -> var_row .) ]
  ! VOID            [ reduce using rule 100 (empty -> .) ]
  ! INT             [ reduce using rule 100 (empty -> .) ]
  ! FLOAT           [ reduce using rule 100 (empty -> .) ]
  ! CHAR            [ reduce using rule 100 (empty -> .) ]
  ! $end            [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! VAR             [ reduce using rule 100 (empty -> .) ]
  ! RB              [ reduce using rule 100 (empty -> .) ]

    var_row                        shift and go to state 13
    vars                           shift and go to state 30
    varsG                          shift and go to state 12
    var_matrix                     shift and go to state 14
    empty                          shift and go to state 31
    var_rowG                       shift and go to state 16
    var_matrixG                    shift and go to state 17

state 14

    (31) vars -> var_matrix .
    (32) vars -> var_matrix . vars
    (22) vars -> . VAR tipo vars1
    (23) vars -> . VAR tipo vars2
    (24) vars -> . VAR tipo vars3
    (25) vars -> . VAR tipo oper_aritmetica
    (26) vars -> . VAR tipo ID row SEMICOL
    (27) vars -> . VAR tipo ID matrix SEMICOL
    (28) vars -> . varsG
    (29) vars -> . var_row
    (30) vars -> . var_row vars
    (31) vars -> . var_matrix
    (32) vars -> . var_matrix vars
    (33) vars -> . empty
    (42) varsG -> . VAR tipo vars1G
    (43) varsG -> . VAR tipo vars2G
    (44) varsG -> . VAR tipo vars3G
    (45) varsG -> . VAR LB varsG RB
    (46) varsG -> . var_rowG
    (47) varsG -> . var_rowG varsG
    (48) varsG -> . var_matrixG
    (49) varsG -> . var_matrixG varsG
    (86) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (93) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (100) empty -> .
    (87) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for VOID resolved using rule 31 (vars -> var_matrix .)
  ! reduce/reduce conflict for INT resolved using rule 31 (vars -> var_matrix .)
  ! reduce/reduce conflict for FLOAT resolved using rule 31 (vars -> var_matrix .)
  ! reduce/reduce conflict for CHAR resolved using rule 31 (vars -> var_matrix .)
  ! reduce/reduce conflict for $end resolved using rule 31 (vars -> var_matrix .)
  ! reduce/reduce conflict for ID resolved using rule 31 (vars -> var_matrix .)
  ! reduce/reduce conflict for IF resolved using rule 31 (vars -> var_matrix .)
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for RB resolved using rule 31 (vars -> var_matrix .)
    VOID            reduce using rule 31 (vars -> var_matrix .)
    INT             reduce using rule 31 (vars -> var_matrix .)
    FLOAT           reduce using rule 31 (vars -> var_matrix .)
    CHAR            reduce using rule 31 (vars -> var_matrix .)
    $end            reduce using rule 31 (vars -> var_matrix .)
    ID              reduce using rule 31 (vars -> var_matrix .)
    IF              reduce using rule 31 (vars -> var_matrix .)
    RB              reduce using rule 31 (vars -> var_matrix .)
    VAR             shift and go to state 10

  ! VAR             [ reduce using rule 31 (vars -> var_matrix .) ]
  ! VOID            [ reduce using rule 100 (empty -> .) ]
  ! INT             [ reduce using rule 100 (empty -> .) ]
  ! FLOAT           [ reduce using rule 100 (empty -> .) ]
  ! CHAR            [ reduce using rule 100 (empty -> .) ]
  ! $end            [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! VAR             [ reduce using rule 100 (empty -> .) ]
  ! RB              [ reduce using rule 100 (empty -> .) ]

    var_matrix                     shift and go to state 14
    vars                           shift and go to state 32
    varsG                          shift and go to state 12
    var_row                        shift and go to state 13
    empty                          shift and go to state 31
    var_rowG                       shift and go to state 16
    var_matrixG                    shift and go to state 17

state 15

    (68) funcion -> VOID . ID LP param RP LB statement RB funcion
    (70) funcion -> VOID . ID LP param RP LB statement RB
    (14) main -> VOID . tipo MAIN LP RP LB statement RB
    (58) tipo -> . INT
    (59) tipo -> . FLOAT
    (60) tipo -> . CHAR

    ID              shift and go to state 33
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    tipo                           shift and go to state 34

state 16

    (46) varsG -> var_rowG .
    (47) varsG -> var_rowG . varsG
    (42) varsG -> . VAR tipo vars1G
    (43) varsG -> . VAR tipo vars2G
    (44) varsG -> . VAR tipo vars3G
    (45) varsG -> . VAR LB varsG RB
    (46) varsG -> . var_rowG
    (47) varsG -> . var_rowG varsG
    (48) varsG -> . var_matrixG
    (49) varsG -> . var_matrixG varsG
    (87) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for VAR resolved as shift
    VOID            reduce using rule 46 (varsG -> var_rowG .)
    INT             reduce using rule 46 (varsG -> var_rowG .)
    FLOAT           reduce using rule 46 (varsG -> var_rowG .)
    CHAR            reduce using rule 46 (varsG -> var_rowG .)
    $end            reduce using rule 46 (varsG -> var_rowG .)
    ID              reduce using rule 46 (varsG -> var_rowG .)
    IF              reduce using rule 46 (varsG -> var_rowG .)
    RB              reduce using rule 46 (varsG -> var_rowG .)
    VAR             shift and go to state 36

  ! VAR             [ reduce using rule 46 (varsG -> var_rowG .) ]

    var_rowG                       shift and go to state 16
    varsG                          shift and go to state 35
    var_matrixG                    shift and go to state 17

state 17

    (48) varsG -> var_matrixG .
    (49) varsG -> var_matrixG . varsG
    (42) varsG -> . VAR tipo vars1G
    (43) varsG -> . VAR tipo vars2G
    (44) varsG -> . VAR tipo vars3G
    (45) varsG -> . VAR LB varsG RB
    (46) varsG -> . var_rowG
    (47) varsG -> . var_rowG varsG
    (48) varsG -> . var_matrixG
    (49) varsG -> . var_matrixG varsG
    (87) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for VAR resolved as shift
    VOID            reduce using rule 48 (varsG -> var_matrixG .)
    INT             reduce using rule 48 (varsG -> var_matrixG .)
    FLOAT           reduce using rule 48 (varsG -> var_matrixG .)
    CHAR            reduce using rule 48 (varsG -> var_matrixG .)
    $end            reduce using rule 48 (varsG -> var_matrixG .)
    ID              reduce using rule 48 (varsG -> var_matrixG .)
    IF              reduce using rule 48 (varsG -> var_matrixG .)
    RB              reduce using rule 48 (varsG -> var_matrixG .)
    VAR             shift and go to state 36

  ! VAR             [ reduce using rule 48 (varsG -> var_matrixG .) ]

    var_matrixG                    shift and go to state 17
    varsG                          shift and go to state 37
    var_rowG                       shift and go to state 16

state 18

    (58) tipo -> INT .

    ID              reduce using rule 58 (tipo -> INT .)
    MAIN            reduce using rule 58 (tipo -> INT .)
    VOID            reduce using rule 58 (tipo -> INT .)
    INT             reduce using rule 58 (tipo -> INT .)
    FLOAT           reduce using rule 58 (tipo -> INT .)
    CHAR            reduce using rule 58 (tipo -> INT .)
    $end            reduce using rule 58 (tipo -> INT .)
    IF              reduce using rule 58 (tipo -> INT .)
    VAR             reduce using rule 58 (tipo -> INT .)
    RB              reduce using rule 58 (tipo -> INT .)


state 19

    (59) tipo -> FLOAT .

    ID              reduce using rule 59 (tipo -> FLOAT .)
    MAIN            reduce using rule 59 (tipo -> FLOAT .)
    VOID            reduce using rule 59 (tipo -> FLOAT .)
    INT             reduce using rule 59 (tipo -> FLOAT .)
    FLOAT           reduce using rule 59 (tipo -> FLOAT .)
    CHAR            reduce using rule 59 (tipo -> FLOAT .)
    $end            reduce using rule 59 (tipo -> FLOAT .)
    IF              reduce using rule 59 (tipo -> FLOAT .)
    VAR             reduce using rule 59 (tipo -> FLOAT .)
    RB              reduce using rule 59 (tipo -> FLOAT .)


state 20

    (60) tipo -> CHAR .

    ID              reduce using rule 60 (tipo -> CHAR .)
    MAIN            reduce using rule 60 (tipo -> CHAR .)
    VOID            reduce using rule 60 (tipo -> CHAR .)
    INT             reduce using rule 60 (tipo -> CHAR .)
    FLOAT           reduce using rule 60 (tipo -> CHAR .)
    CHAR            reduce using rule 60 (tipo -> CHAR .)
    $end            reduce using rule 60 (tipo -> CHAR .)
    IF              reduce using rule 60 (tipo -> CHAR .)
    VAR             reduce using rule 60 (tipo -> CHAR .)
    RB              reduce using rule 60 (tipo -> CHAR .)


state 21

    (2) programa1 -> vars funcion . main funcion
    (5) programa1 -> vars funcion . main
    (6) programa1 -> vars funcion .
    (13) main -> . tipo MAIN LP RP LB statement RB
    (14) main -> . VOID tipo MAIN LP RP LB statement RB
    (58) tipo -> . INT
    (59) tipo -> . FLOAT
    (60) tipo -> . CHAR

    $end            reduce using rule 6 (programa1 -> vars funcion .)
    VOID            shift and go to state 25
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    main                           shift and go to state 38
    tipo                           shift and go to state 24

state 22

    (7) programa1 -> vars main .
    (8) programa1 -> vars main . funcion
    (68) funcion -> . VOID ID LP param RP LB statement RB funcion
    (69) funcion -> . tipo ID LP param RP LB statement RB funcion
    (70) funcion -> . VOID ID LP param RP LB statement RB
    (71) funcion -> . tipo ID LP param RP LB statement RB
    (58) tipo -> . INT
    (59) tipo -> . FLOAT
    (60) tipo -> . CHAR

    $end            reduce using rule 7 (programa1 -> vars main .)
    VOID            shift and go to state 40
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    funcion                        shift and go to state 39
    tipo                           shift and go to state 41

state 23

    (3) programa1 -> funcion main . funcion
    (4) programa1 -> funcion main .
    (68) funcion -> . VOID ID LP param RP LB statement RB funcion
    (69) funcion -> . tipo ID LP param RP LB statement RB funcion
    (70) funcion -> . VOID ID LP param RP LB statement RB
    (71) funcion -> . tipo ID LP param RP LB statement RB
    (58) tipo -> . INT
    (59) tipo -> . FLOAT
    (60) tipo -> . CHAR

    $end            reduce using rule 4 (programa1 -> funcion main .)
    VOID            shift and go to state 40
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    funcion                        shift and go to state 42
    tipo                           shift and go to state 41

state 24

    (13) main -> tipo . MAIN LP RP LB statement RB

    MAIN            shift and go to state 29


state 25

    (14) main -> VOID . tipo MAIN LP RP LB statement RB
    (58) tipo -> . INT
    (59) tipo -> . FLOAT
    (60) tipo -> . CHAR

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    tipo                           shift and go to state 34

state 26

    (22) vars -> VAR tipo . vars1
    (23) vars -> VAR tipo . vars2
    (24) vars -> VAR tipo . vars3
    (25) vars -> VAR tipo . oper_aritmetica
    (26) vars -> VAR tipo . ID row SEMICOL
    (27) vars -> VAR tipo . ID matrix SEMICOL
    (42) varsG -> VAR tipo . vars1G
    (43) varsG -> VAR tipo . vars2G
    (44) varsG -> VAR tipo . vars3G
    (86) var_row -> VAR tipo . ID row IS LP lista2 RP SEMICOL
    (93) var_matrix -> VAR tipo . ID matrix IS matrix2 SEMICOL
    (87) var_rowG -> VAR tipo . ID row IS LP lista2 RP SEMICOL
    (94) var_matrixG -> VAR tipo . ID matrix IS matrix2 SEMICOL
    (34) vars1 -> . ID SEMICOL
    (35) vars1 -> . ID SEMICOL vars
    (36) vars2 -> . ID IS value COMMA vars2
    (37) vars2 -> . ID IS value COMMA
    (38) vars2 -> . ID IS value SEMICOL vars
    (39) vars3 -> . ID COMMA vars3
    (40) vars3 -> . ID SEMICOL vars
    (41) vars3 -> . ID SEMICOL
    (79) oper_aritmetica -> . ID IS expr SEMICOL
    (50) vars1G -> . ID SEMICOL
    (51) vars1G -> . ID SEMICOL varsG
    (52) vars2G -> . ID IS value check_type COMMA vars2G
    (53) vars2G -> . ID IS value check_type SEMICOL varsG
    (54) vars2G -> . empty
    (55) vars3G -> . ID COMMA vars3G
    (56) vars3G -> . ID SEMICOL varsG
    (57) vars3G -> . ID SEMICOL
    (100) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 47
    VOID            reduce using rule 100 (empty -> .)
    INT             reduce using rule 100 (empty -> .)
    FLOAT           reduce using rule 100 (empty -> .)
    CHAR            reduce using rule 100 (empty -> .)
    $end            reduce using rule 100 (empty -> .)
    IF              reduce using rule 100 (empty -> .)
    VAR             reduce using rule 100 (empty -> .)
    RB              reduce using rule 100 (empty -> .)

  ! ID              [ reduce using rule 100 (empty -> .) ]

    vars1                          shift and go to state 43
    vars2                          shift and go to state 44
    vars3                          shift and go to state 45
    oper_aritmetica                shift and go to state 46
    vars1G                         shift and go to state 48
    vars2G                         shift and go to state 49
    vars3G                         shift and go to state 50
    empty                          shift and go to state 51

state 27

    (45) varsG -> VAR LB . varsG RB
    (42) varsG -> . VAR tipo vars1G
    (43) varsG -> . VAR tipo vars2G
    (44) varsG -> . VAR tipo vars3G
    (45) varsG -> . VAR LB varsG RB
    (46) varsG -> . var_rowG
    (47) varsG -> . var_rowG varsG
    (48) varsG -> . var_matrixG
    (49) varsG -> . var_matrixG varsG
    (87) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL

    VAR             shift and go to state 36

    varsG                          shift and go to state 52
    var_rowG                       shift and go to state 16
    var_matrixG                    shift and go to state 17

state 28

    (69) funcion -> tipo ID . LP param RP LB statement RB funcion
    (71) funcion -> tipo ID . LP param RP LB statement RB

    LP              shift and go to state 53


state 29

    (13) main -> tipo MAIN . LP RP LB statement RB

    LP              shift and go to state 54


state 30

    (30) vars -> var_row vars .

    VOID            reduce using rule 30 (vars -> var_row vars .)
    INT             reduce using rule 30 (vars -> var_row vars .)
    FLOAT           reduce using rule 30 (vars -> var_row vars .)
    CHAR            reduce using rule 30 (vars -> var_row vars .)
    $end            reduce using rule 30 (vars -> var_row vars .)
    ID              reduce using rule 30 (vars -> var_row vars .)
    IF              reduce using rule 30 (vars -> var_row vars .)
    VAR             reduce using rule 30 (vars -> var_row vars .)
    RB              reduce using rule 30 (vars -> var_row vars .)


state 31

    (33) vars -> empty .

    VOID            reduce using rule 33 (vars -> empty .)
    INT             reduce using rule 33 (vars -> empty .)
    FLOAT           reduce using rule 33 (vars -> empty .)
    CHAR            reduce using rule 33 (vars -> empty .)
    $end            reduce using rule 33 (vars -> empty .)
    ID              reduce using rule 33 (vars -> empty .)
    IF              reduce using rule 33 (vars -> empty .)
    VAR             reduce using rule 33 (vars -> empty .)
    RB              reduce using rule 33 (vars -> empty .)


state 32

    (32) vars -> var_matrix vars .

    VOID            reduce using rule 32 (vars -> var_matrix vars .)
    INT             reduce using rule 32 (vars -> var_matrix vars .)
    FLOAT           reduce using rule 32 (vars -> var_matrix vars .)
    CHAR            reduce using rule 32 (vars -> var_matrix vars .)
    $end            reduce using rule 32 (vars -> var_matrix vars .)
    ID              reduce using rule 32 (vars -> var_matrix vars .)
    IF              reduce using rule 32 (vars -> var_matrix vars .)
    VAR             reduce using rule 32 (vars -> var_matrix vars .)
    RB              reduce using rule 32 (vars -> var_matrix vars .)


state 33

    (68) funcion -> VOID ID . LP param RP LB statement RB funcion
    (70) funcion -> VOID ID . LP param RP LB statement RB

    LP              shift and go to state 55


state 34

    (14) main -> VOID tipo . MAIN LP RP LB statement RB

    MAIN            shift and go to state 56


state 35

    (47) varsG -> var_rowG varsG .

    VOID            reduce using rule 47 (varsG -> var_rowG varsG .)
    INT             reduce using rule 47 (varsG -> var_rowG varsG .)
    FLOAT           reduce using rule 47 (varsG -> var_rowG varsG .)
    CHAR            reduce using rule 47 (varsG -> var_rowG varsG .)
    $end            reduce using rule 47 (varsG -> var_rowG varsG .)
    ID              reduce using rule 47 (varsG -> var_rowG varsG .)
    IF              reduce using rule 47 (varsG -> var_rowG varsG .)
    VAR             reduce using rule 47 (varsG -> var_rowG varsG .)
    RB              reduce using rule 47 (varsG -> var_rowG varsG .)


state 36

    (42) varsG -> VAR . tipo vars1G
    (43) varsG -> VAR . tipo vars2G
    (44) varsG -> VAR . tipo vars3G
    (45) varsG -> VAR . LB varsG RB
    (87) var_rowG -> VAR . tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrixG -> VAR . tipo ID matrix IS matrix2 SEMICOL
    (58) tipo -> . INT
    (59) tipo -> . FLOAT
    (60) tipo -> . CHAR

    LB              shift and go to state 27
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    tipo                           shift and go to state 57

state 37

    (49) varsG -> var_matrixG varsG .

    VOID            reduce using rule 49 (varsG -> var_matrixG varsG .)
    INT             reduce using rule 49 (varsG -> var_matrixG varsG .)
    FLOAT           reduce using rule 49 (varsG -> var_matrixG varsG .)
    CHAR            reduce using rule 49 (varsG -> var_matrixG varsG .)
    $end            reduce using rule 49 (varsG -> var_matrixG varsG .)
    ID              reduce using rule 49 (varsG -> var_matrixG varsG .)
    IF              reduce using rule 49 (varsG -> var_matrixG varsG .)
    VAR             reduce using rule 49 (varsG -> var_matrixG varsG .)
    RB              reduce using rule 49 (varsG -> var_matrixG varsG .)


state 38

    (2) programa1 -> vars funcion main . funcion
    (5) programa1 -> vars funcion main .
    (68) funcion -> . VOID ID LP param RP LB statement RB funcion
    (69) funcion -> . tipo ID LP param RP LB statement RB funcion
    (70) funcion -> . VOID ID LP param RP LB statement RB
    (71) funcion -> . tipo ID LP param RP LB statement RB
    (58) tipo -> . INT
    (59) tipo -> . FLOAT
    (60) tipo -> . CHAR

    $end            reduce using rule 5 (programa1 -> vars funcion main .)
    VOID            shift and go to state 40
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    funcion                        shift and go to state 58
    tipo                           shift and go to state 41

state 39

    (8) programa1 -> vars main funcion .

    $end            reduce using rule 8 (programa1 -> vars main funcion .)


state 40

    (68) funcion -> VOID . ID LP param RP LB statement RB funcion
    (70) funcion -> VOID . ID LP param RP LB statement RB

    ID              shift and go to state 33


state 41

    (69) funcion -> tipo . ID LP param RP LB statement RB funcion
    (71) funcion -> tipo . ID LP param RP LB statement RB

    ID              shift and go to state 28


state 42

    (3) programa1 -> funcion main funcion .

    $end            reduce using rule 3 (programa1 -> funcion main funcion .)


state 43

    (22) vars -> VAR tipo vars1 .

    VOID            reduce using rule 22 (vars -> VAR tipo vars1 .)
    INT             reduce using rule 22 (vars -> VAR tipo vars1 .)
    FLOAT           reduce using rule 22 (vars -> VAR tipo vars1 .)
    CHAR            reduce using rule 22 (vars -> VAR tipo vars1 .)
    $end            reduce using rule 22 (vars -> VAR tipo vars1 .)
    ID              reduce using rule 22 (vars -> VAR tipo vars1 .)
    IF              reduce using rule 22 (vars -> VAR tipo vars1 .)
    VAR             reduce using rule 22 (vars -> VAR tipo vars1 .)
    RB              reduce using rule 22 (vars -> VAR tipo vars1 .)


state 44

    (23) vars -> VAR tipo vars2 .

    VOID            reduce using rule 23 (vars -> VAR tipo vars2 .)
    INT             reduce using rule 23 (vars -> VAR tipo vars2 .)
    FLOAT           reduce using rule 23 (vars -> VAR tipo vars2 .)
    CHAR            reduce using rule 23 (vars -> VAR tipo vars2 .)
    $end            reduce using rule 23 (vars -> VAR tipo vars2 .)
    ID              reduce using rule 23 (vars -> VAR tipo vars2 .)
    IF              reduce using rule 23 (vars -> VAR tipo vars2 .)
    VAR             reduce using rule 23 (vars -> VAR tipo vars2 .)
    RB              reduce using rule 23 (vars -> VAR tipo vars2 .)


state 45

    (24) vars -> VAR tipo vars3 .

    VOID            reduce using rule 24 (vars -> VAR tipo vars3 .)
    INT             reduce using rule 24 (vars -> VAR tipo vars3 .)
    FLOAT           reduce using rule 24 (vars -> VAR tipo vars3 .)
    CHAR            reduce using rule 24 (vars -> VAR tipo vars3 .)
    $end            reduce using rule 24 (vars -> VAR tipo vars3 .)
    ID              reduce using rule 24 (vars -> VAR tipo vars3 .)
    IF              reduce using rule 24 (vars -> VAR tipo vars3 .)
    VAR             reduce using rule 24 (vars -> VAR tipo vars3 .)
    RB              reduce using rule 24 (vars -> VAR tipo vars3 .)


state 46

    (25) vars -> VAR tipo oper_aritmetica .

    VOID            reduce using rule 25 (vars -> VAR tipo oper_aritmetica .)
    INT             reduce using rule 25 (vars -> VAR tipo oper_aritmetica .)
    FLOAT           reduce using rule 25 (vars -> VAR tipo oper_aritmetica .)
    CHAR            reduce using rule 25 (vars -> VAR tipo oper_aritmetica .)
    $end            reduce using rule 25 (vars -> VAR tipo oper_aritmetica .)
    ID              reduce using rule 25 (vars -> VAR tipo oper_aritmetica .)
    IF              reduce using rule 25 (vars -> VAR tipo oper_aritmetica .)
    VAR             reduce using rule 25 (vars -> VAR tipo oper_aritmetica .)
    RB              reduce using rule 25 (vars -> VAR tipo oper_aritmetica .)


state 47

    (26) vars -> VAR tipo ID . row SEMICOL
    (27) vars -> VAR tipo ID . matrix SEMICOL
    (86) var_row -> VAR tipo ID . row IS LP lista2 RP SEMICOL
    (93) var_matrix -> VAR tipo ID . matrix IS matrix2 SEMICOL
    (87) var_rowG -> VAR tipo ID . row IS LP lista2 RP SEMICOL
    (94) var_matrixG -> VAR tipo ID . matrix IS matrix2 SEMICOL
    (34) vars1 -> ID . SEMICOL
    (35) vars1 -> ID . SEMICOL vars
    (36) vars2 -> ID . IS value COMMA vars2
    (37) vars2 -> ID . IS value COMMA
    (38) vars2 -> ID . IS value SEMICOL vars
    (39) vars3 -> ID . COMMA vars3
    (40) vars3 -> ID . SEMICOL vars
    (41) vars3 -> ID . SEMICOL
    (79) oper_aritmetica -> ID . IS expr SEMICOL
    (50) vars1G -> ID . SEMICOL
    (51) vars1G -> ID . SEMICOL varsG
    (52) vars2G -> ID . IS value check_type COMMA vars2G
    (53) vars2G -> ID . IS value check_type SEMICOL varsG
    (55) vars3G -> ID . COMMA vars3G
    (56) vars3G -> ID . SEMICOL varsG
    (57) vars3G -> ID . SEMICOL
    (92) row -> . LC CTE_I RC
    (99) matrix -> . row row

    SEMICOL         shift and go to state 60
    IS              shift and go to state 62
    COMMA           shift and go to state 63
    LC              shift and go to state 64

    row                            shift and go to state 59
    matrix                         shift and go to state 61

state 48

    (42) varsG -> VAR tipo vars1G .

    VOID            reduce using rule 42 (varsG -> VAR tipo vars1G .)
    INT             reduce using rule 42 (varsG -> VAR tipo vars1G .)
    FLOAT           reduce using rule 42 (varsG -> VAR tipo vars1G .)
    CHAR            reduce using rule 42 (varsG -> VAR tipo vars1G .)
    $end            reduce using rule 42 (varsG -> VAR tipo vars1G .)
    ID              reduce using rule 42 (varsG -> VAR tipo vars1G .)
    IF              reduce using rule 42 (varsG -> VAR tipo vars1G .)
    VAR             reduce using rule 42 (varsG -> VAR tipo vars1G .)
    RB              reduce using rule 42 (varsG -> VAR tipo vars1G .)


state 49

    (43) varsG -> VAR tipo vars2G .

    VOID            reduce using rule 43 (varsG -> VAR tipo vars2G .)
    INT             reduce using rule 43 (varsG -> VAR tipo vars2G .)
    FLOAT           reduce using rule 43 (varsG -> VAR tipo vars2G .)
    CHAR            reduce using rule 43 (varsG -> VAR tipo vars2G .)
    $end            reduce using rule 43 (varsG -> VAR tipo vars2G .)
    ID              reduce using rule 43 (varsG -> VAR tipo vars2G .)
    IF              reduce using rule 43 (varsG -> VAR tipo vars2G .)
    VAR             reduce using rule 43 (varsG -> VAR tipo vars2G .)
    RB              reduce using rule 43 (varsG -> VAR tipo vars2G .)


state 50

    (44) varsG -> VAR tipo vars3G .

    VOID            reduce using rule 44 (varsG -> VAR tipo vars3G .)
    INT             reduce using rule 44 (varsG -> VAR tipo vars3G .)
    FLOAT           reduce using rule 44 (varsG -> VAR tipo vars3G .)
    CHAR            reduce using rule 44 (varsG -> VAR tipo vars3G .)
    $end            reduce using rule 44 (varsG -> VAR tipo vars3G .)
    ID              reduce using rule 44 (varsG -> VAR tipo vars3G .)
    IF              reduce using rule 44 (varsG -> VAR tipo vars3G .)
    VAR             reduce using rule 44 (varsG -> VAR tipo vars3G .)
    RB              reduce using rule 44 (varsG -> VAR tipo vars3G .)


state 51

    (54) vars2G -> empty .

    VOID            reduce using rule 54 (vars2G -> empty .)
    INT             reduce using rule 54 (vars2G -> empty .)
    FLOAT           reduce using rule 54 (vars2G -> empty .)
    CHAR            reduce using rule 54 (vars2G -> empty .)
    $end            reduce using rule 54 (vars2G -> empty .)
    ID              reduce using rule 54 (vars2G -> empty .)
    IF              reduce using rule 54 (vars2G -> empty .)
    VAR             reduce using rule 54 (vars2G -> empty .)
    RB              reduce using rule 54 (vars2G -> empty .)


state 52

    (45) varsG -> VAR LB varsG . RB

    RB              shift and go to state 65


state 53

    (69) funcion -> tipo ID LP . param RP LB statement RB funcion
    (71) funcion -> tipo ID LP . param RP LB statement RB
    (72) param -> .

    RP              reduce using rule 72 (param -> .)

    param                          shift and go to state 66

state 54

    (13) main -> tipo MAIN LP . RP LB statement RB

    RP              shift and go to state 67


state 55

    (68) funcion -> VOID ID LP . param RP LB statement RB funcion
    (70) funcion -> VOID ID LP . param RP LB statement RB
    (72) param -> .

    RP              reduce using rule 72 (param -> .)

    param                          shift and go to state 68

state 56

    (14) main -> VOID tipo MAIN . LP RP LB statement RB

    LP              shift and go to state 69


state 57

    (42) varsG -> VAR tipo . vars1G
    (43) varsG -> VAR tipo . vars2G
    (44) varsG -> VAR tipo . vars3G
    (87) var_rowG -> VAR tipo . ID row IS LP lista2 RP SEMICOL
    (94) var_matrixG -> VAR tipo . ID matrix IS matrix2 SEMICOL
    (50) vars1G -> . ID SEMICOL
    (51) vars1G -> . ID SEMICOL varsG
    (52) vars2G -> . ID IS value check_type COMMA vars2G
    (53) vars2G -> . ID IS value check_type SEMICOL varsG
    (54) vars2G -> . empty
    (55) vars3G -> . ID COMMA vars3G
    (56) vars3G -> . ID SEMICOL varsG
    (57) vars3G -> . ID SEMICOL
    (100) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 70
    VOID            reduce using rule 100 (empty -> .)
    INT             reduce using rule 100 (empty -> .)
    FLOAT           reduce using rule 100 (empty -> .)
    CHAR            reduce using rule 100 (empty -> .)
    $end            reduce using rule 100 (empty -> .)
    IF              reduce using rule 100 (empty -> .)
    VAR             reduce using rule 100 (empty -> .)
    RB              reduce using rule 100 (empty -> .)

  ! ID              [ reduce using rule 100 (empty -> .) ]

    vars1G                         shift and go to state 48
    vars2G                         shift and go to state 49
    vars3G                         shift and go to state 50
    empty                          shift and go to state 51

state 58

    (2) programa1 -> vars funcion main funcion .

    $end            reduce using rule 2 (programa1 -> vars funcion main funcion .)


state 59

    (26) vars -> VAR tipo ID row . SEMICOL
    (86) var_row -> VAR tipo ID row . IS LP lista2 RP SEMICOL
    (87) var_rowG -> VAR tipo ID row . IS LP lista2 RP SEMICOL
    (99) matrix -> row . row
    (92) row -> . LC CTE_I RC

    SEMICOL         shift and go to state 72
    IS              shift and go to state 73
    LC              shift and go to state 64

    row                            shift and go to state 71

state 60

    (34) vars1 -> ID SEMICOL .
    (35) vars1 -> ID SEMICOL . vars
    (40) vars3 -> ID SEMICOL . vars
    (41) vars3 -> ID SEMICOL .
    (50) vars1G -> ID SEMICOL .
    (51) vars1G -> ID SEMICOL . varsG
    (56) vars3G -> ID SEMICOL . varsG
    (57) vars3G -> ID SEMICOL .
    (22) vars -> . VAR tipo vars1
    (23) vars -> . VAR tipo vars2
    (24) vars -> . VAR tipo vars3
    (25) vars -> . VAR tipo oper_aritmetica
    (26) vars -> . VAR tipo ID row SEMICOL
    (27) vars -> . VAR tipo ID matrix SEMICOL
    (28) vars -> . varsG
    (29) vars -> . var_row
    (30) vars -> . var_row vars
    (31) vars -> . var_matrix
    (32) vars -> . var_matrix vars
    (33) vars -> . empty
    (42) varsG -> . VAR tipo vars1G
    (43) varsG -> . VAR tipo vars2G
    (44) varsG -> . VAR tipo vars3G
    (45) varsG -> . VAR LB varsG RB
    (46) varsG -> . var_rowG
    (47) varsG -> . var_rowG varsG
    (48) varsG -> . var_matrixG
    (49) varsG -> . var_matrixG varsG
    (86) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (93) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (100) empty -> .
    (87) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! reduce/reduce conflict for VOID resolved using rule 34 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for INT resolved using rule 34 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for FLOAT resolved using rule 34 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for CHAR resolved using rule 34 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for $end resolved using rule 34 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for ID resolved using rule 34 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for IF resolved using rule 34 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for VAR resolved using rule 34 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for RB resolved using rule 34 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for VOID resolved using rule 34 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for INT resolved using rule 34 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for FLOAT resolved using rule 34 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for CHAR resolved using rule 34 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for $end resolved using rule 34 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for ID resolved using rule 34 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for IF resolved using rule 34 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for VAR resolved using rule 34 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for RB resolved using rule 34 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for VOID resolved using rule 34 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for INT resolved using rule 34 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for FLOAT resolved using rule 34 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for CHAR resolved using rule 34 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for $end resolved using rule 34 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for ID resolved using rule 34 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for IF resolved using rule 34 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for VAR resolved using rule 34 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for RB resolved using rule 34 (vars1 -> ID SEMICOL .)
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for VOID resolved using rule 34 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for INT resolved using rule 34 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for FLOAT resolved using rule 34 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for CHAR resolved using rule 34 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for $end resolved using rule 34 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for ID resolved using rule 34 (vars1 -> ID SEMICOL .)
  ! reduce/reduce conflict for IF resolved using rule 34 (vars1 -> ID SEMICOL .)
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for RB resolved using rule 34 (vars1 -> ID SEMICOL .)
    VOID            reduce using rule 34 (vars1 -> ID SEMICOL .)
    INT             reduce using rule 34 (vars1 -> ID SEMICOL .)
    FLOAT           reduce using rule 34 (vars1 -> ID SEMICOL .)
    CHAR            reduce using rule 34 (vars1 -> ID SEMICOL .)
    $end            reduce using rule 34 (vars1 -> ID SEMICOL .)
    ID              reduce using rule 34 (vars1 -> ID SEMICOL .)
    IF              reduce using rule 34 (vars1 -> ID SEMICOL .)
    RB              reduce using rule 34 (vars1 -> ID SEMICOL .)
    VAR             shift and go to state 10

  ! VAR             [ reduce using rule 34 (vars1 -> ID SEMICOL .) ]
  ! VOID            [ reduce using rule 41 (vars3 -> ID SEMICOL .) ]
  ! INT             [ reduce using rule 41 (vars3 -> ID SEMICOL .) ]
  ! FLOAT           [ reduce using rule 41 (vars3 -> ID SEMICOL .) ]
  ! CHAR            [ reduce using rule 41 (vars3 -> ID SEMICOL .) ]
  ! $end            [ reduce using rule 41 (vars3 -> ID SEMICOL .) ]
  ! ID              [ reduce using rule 41 (vars3 -> ID SEMICOL .) ]
  ! IF              [ reduce using rule 41 (vars3 -> ID SEMICOL .) ]
  ! VAR             [ reduce using rule 41 (vars3 -> ID SEMICOL .) ]
  ! RB              [ reduce using rule 41 (vars3 -> ID SEMICOL .) ]
  ! VOID            [ reduce using rule 50 (vars1G -> ID SEMICOL .) ]
  ! INT             [ reduce using rule 50 (vars1G -> ID SEMICOL .) ]
  ! FLOAT           [ reduce using rule 50 (vars1G -> ID SEMICOL .) ]
  ! CHAR            [ reduce using rule 50 (vars1G -> ID SEMICOL .) ]
  ! $end            [ reduce using rule 50 (vars1G -> ID SEMICOL .) ]
  ! ID              [ reduce using rule 50 (vars1G -> ID SEMICOL .) ]
  ! IF              [ reduce using rule 50 (vars1G -> ID SEMICOL .) ]
  ! VAR             [ reduce using rule 50 (vars1G -> ID SEMICOL .) ]
  ! RB              [ reduce using rule 50 (vars1G -> ID SEMICOL .) ]
  ! VOID            [ reduce using rule 57 (vars3G -> ID SEMICOL .) ]
  ! INT             [ reduce using rule 57 (vars3G -> ID SEMICOL .) ]
  ! FLOAT           [ reduce using rule 57 (vars3G -> ID SEMICOL .) ]
  ! CHAR            [ reduce using rule 57 (vars3G -> ID SEMICOL .) ]
  ! $end            [ reduce using rule 57 (vars3G -> ID SEMICOL .) ]
  ! ID              [ reduce using rule 57 (vars3G -> ID SEMICOL .) ]
  ! IF              [ reduce using rule 57 (vars3G -> ID SEMICOL .) ]
  ! VAR             [ reduce using rule 57 (vars3G -> ID SEMICOL .) ]
  ! RB              [ reduce using rule 57 (vars3G -> ID SEMICOL .) ]
  ! VOID            [ reduce using rule 100 (empty -> .) ]
  ! INT             [ reduce using rule 100 (empty -> .) ]
  ! FLOAT           [ reduce using rule 100 (empty -> .) ]
  ! CHAR            [ reduce using rule 100 (empty -> .) ]
  ! $end            [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! VAR             [ reduce using rule 100 (empty -> .) ]
  ! RB              [ reduce using rule 100 (empty -> .) ]

    vars                           shift and go to state 74
    varsG                          shift and go to state 75
    var_row                        shift and go to state 13
    var_matrix                     shift and go to state 14
    empty                          shift and go to state 31
    var_rowG                       shift and go to state 16
    var_matrixG                    shift and go to state 17

state 61

    (27) vars -> VAR tipo ID matrix . SEMICOL
    (93) var_matrix -> VAR tipo ID matrix . IS matrix2 SEMICOL
    (94) var_matrixG -> VAR tipo ID matrix . IS matrix2 SEMICOL

    SEMICOL         shift and go to state 76
    IS              shift and go to state 77


state 62

    (36) vars2 -> ID IS . value COMMA vars2
    (37) vars2 -> ID IS . value COMMA
    (38) vars2 -> ID IS . value SEMICOL vars
    (79) oper_aritmetica -> ID IS . expr SEMICOL
    (52) vars2G -> ID IS . value check_type COMMA vars2G
    (53) vars2G -> ID IS . value check_type SEMICOL varsG
    (61) value -> . CTE_F
    (62) value -> . CTE_I
    (63) value -> . ID
    (64) value -> . CTE_C
    (65) value -> . COMILLA ID COMILLA
    (66) value -> . COMILLAS ID COMILLAS
    (80) expr -> . expr MUL expr
    (81) expr -> . expr DIV expr
    (82) expr -> . expr PLUS expr
    (83) expr -> . expr MINUS expr
    (84) expr -> . CTE_I
    (85) expr -> . CTE_F

    CTE_F           shift and go to state 81
    CTE_I           shift and go to state 82
    ID              shift and go to state 78
    CTE_C           shift and go to state 83
    COMILLA         shift and go to state 84
    COMILLAS        shift and go to state 85

    value                          shift and go to state 79
    expr                           shift and go to state 80

state 63

    (39) vars3 -> ID COMMA . vars3
    (55) vars3G -> ID COMMA . vars3G
    (39) vars3 -> . ID COMMA vars3
    (40) vars3 -> . ID SEMICOL vars
    (41) vars3 -> . ID SEMICOL
    (55) vars3G -> . ID COMMA vars3G
    (56) vars3G -> . ID SEMICOL varsG
    (57) vars3G -> . ID SEMICOL

    ID              shift and go to state 86

    vars3                          shift and go to state 87
    vars3G                         shift and go to state 88

state 64

    (92) row -> LC . CTE_I RC

    CTE_I           shift and go to state 89


state 65

    (45) varsG -> VAR LB varsG RB .

    VOID            reduce using rule 45 (varsG -> VAR LB varsG RB .)
    INT             reduce using rule 45 (varsG -> VAR LB varsG RB .)
    FLOAT           reduce using rule 45 (varsG -> VAR LB varsG RB .)
    CHAR            reduce using rule 45 (varsG -> VAR LB varsG RB .)
    $end            reduce using rule 45 (varsG -> VAR LB varsG RB .)
    ID              reduce using rule 45 (varsG -> VAR LB varsG RB .)
    IF              reduce using rule 45 (varsG -> VAR LB varsG RB .)
    VAR             reduce using rule 45 (varsG -> VAR LB varsG RB .)
    RB              reduce using rule 45 (varsG -> VAR LB varsG RB .)


state 66

    (69) funcion -> tipo ID LP param . RP LB statement RB funcion
    (71) funcion -> tipo ID LP param . RP LB statement RB

    RP              shift and go to state 90


state 67

    (13) main -> tipo MAIN LP RP . LB statement RB

    LB              shift and go to state 91


state 68

    (68) funcion -> VOID ID LP param . RP LB statement RB funcion
    (70) funcion -> VOID ID LP param . RP LB statement RB

    RP              shift and go to state 92


state 69

    (14) main -> VOID tipo MAIN LP . RP LB statement RB

    RP              shift and go to state 93


state 70

    (87) var_rowG -> VAR tipo ID . row IS LP lista2 RP SEMICOL
    (94) var_matrixG -> VAR tipo ID . matrix IS matrix2 SEMICOL
    (50) vars1G -> ID . SEMICOL
    (51) vars1G -> ID . SEMICOL varsG
    (52) vars2G -> ID . IS value check_type COMMA vars2G
    (53) vars2G -> ID . IS value check_type SEMICOL varsG
    (55) vars3G -> ID . COMMA vars3G
    (56) vars3G -> ID . SEMICOL varsG
    (57) vars3G -> ID . SEMICOL
    (92) row -> . LC CTE_I RC
    (99) matrix -> . row row

    SEMICOL         shift and go to state 96
    IS              shift and go to state 95
    COMMA           shift and go to state 98
    LC              shift and go to state 64

    row                            shift and go to state 94
    matrix                         shift and go to state 97

state 71

    (99) matrix -> row row .

    SEMICOL         reduce using rule 99 (matrix -> row row .)
    IS              reduce using rule 99 (matrix -> row row .)


state 72

    (26) vars -> VAR tipo ID row SEMICOL .

    VOID            reduce using rule 26 (vars -> VAR tipo ID row SEMICOL .)
    INT             reduce using rule 26 (vars -> VAR tipo ID row SEMICOL .)
    FLOAT           reduce using rule 26 (vars -> VAR tipo ID row SEMICOL .)
    CHAR            reduce using rule 26 (vars -> VAR tipo ID row SEMICOL .)
    $end            reduce using rule 26 (vars -> VAR tipo ID row SEMICOL .)
    ID              reduce using rule 26 (vars -> VAR tipo ID row SEMICOL .)
    IF              reduce using rule 26 (vars -> VAR tipo ID row SEMICOL .)
    VAR             reduce using rule 26 (vars -> VAR tipo ID row SEMICOL .)
    RB              reduce using rule 26 (vars -> VAR tipo ID row SEMICOL .)


state 73

    (86) var_row -> VAR tipo ID row IS . LP lista2 RP SEMICOL
    (87) var_rowG -> VAR tipo ID row IS . LP lista2 RP SEMICOL

    LP              shift and go to state 99


state 74

    (35) vars1 -> ID SEMICOL vars .
    (40) vars3 -> ID SEMICOL vars .

  ! reduce/reduce conflict for VOID resolved using rule 35 (vars1 -> ID SEMICOL vars .)
  ! reduce/reduce conflict for INT resolved using rule 35 (vars1 -> ID SEMICOL vars .)
  ! reduce/reduce conflict for FLOAT resolved using rule 35 (vars1 -> ID SEMICOL vars .)
  ! reduce/reduce conflict for CHAR resolved using rule 35 (vars1 -> ID SEMICOL vars .)
  ! reduce/reduce conflict for $end resolved using rule 35 (vars1 -> ID SEMICOL vars .)
  ! reduce/reduce conflict for ID resolved using rule 35 (vars1 -> ID SEMICOL vars .)
  ! reduce/reduce conflict for IF resolved using rule 35 (vars1 -> ID SEMICOL vars .)
  ! reduce/reduce conflict for VAR resolved using rule 35 (vars1 -> ID SEMICOL vars .)
  ! reduce/reduce conflict for RB resolved using rule 35 (vars1 -> ID SEMICOL vars .)
    VOID            reduce using rule 35 (vars1 -> ID SEMICOL vars .)
    INT             reduce using rule 35 (vars1 -> ID SEMICOL vars .)
    FLOAT           reduce using rule 35 (vars1 -> ID SEMICOL vars .)
    CHAR            reduce using rule 35 (vars1 -> ID SEMICOL vars .)
    $end            reduce using rule 35 (vars1 -> ID SEMICOL vars .)
    ID              reduce using rule 35 (vars1 -> ID SEMICOL vars .)
    IF              reduce using rule 35 (vars1 -> ID SEMICOL vars .)
    VAR             reduce using rule 35 (vars1 -> ID SEMICOL vars .)
    RB              reduce using rule 35 (vars1 -> ID SEMICOL vars .)

  ! VOID            [ reduce using rule 40 (vars3 -> ID SEMICOL vars .) ]
  ! INT             [ reduce using rule 40 (vars3 -> ID SEMICOL vars .) ]
  ! FLOAT           [ reduce using rule 40 (vars3 -> ID SEMICOL vars .) ]
  ! CHAR            [ reduce using rule 40 (vars3 -> ID SEMICOL vars .) ]
  ! $end            [ reduce using rule 40 (vars3 -> ID SEMICOL vars .) ]
  ! ID              [ reduce using rule 40 (vars3 -> ID SEMICOL vars .) ]
  ! IF              [ reduce using rule 40 (vars3 -> ID SEMICOL vars .) ]
  ! VAR             [ reduce using rule 40 (vars3 -> ID SEMICOL vars .) ]
  ! RB              [ reduce using rule 40 (vars3 -> ID SEMICOL vars .) ]


state 75

    (51) vars1G -> ID SEMICOL varsG .
    (56) vars3G -> ID SEMICOL varsG .
    (28) vars -> varsG .

  ! reduce/reduce conflict for VOID resolved using rule 51 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for INT resolved using rule 51 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for FLOAT resolved using rule 51 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for CHAR resolved using rule 51 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for $end resolved using rule 51 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for ID resolved using rule 51 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for IF resolved using rule 51 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for VAR resolved using rule 51 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for RB resolved using rule 51 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for VOID resolved using rule 28 (vars -> varsG .)
  ! reduce/reduce conflict for INT resolved using rule 28 (vars -> varsG .)
  ! reduce/reduce conflict for FLOAT resolved using rule 28 (vars -> varsG .)
  ! reduce/reduce conflict for CHAR resolved using rule 28 (vars -> varsG .)
  ! reduce/reduce conflict for $end resolved using rule 28 (vars -> varsG .)
  ! reduce/reduce conflict for ID resolved using rule 28 (vars -> varsG .)
  ! reduce/reduce conflict for IF resolved using rule 28 (vars -> varsG .)
  ! reduce/reduce conflict for VAR resolved using rule 28 (vars -> varsG .)
  ! reduce/reduce conflict for RB resolved using rule 28 (vars -> varsG .)
    VOID            reduce using rule 28 (vars -> varsG .)
    INT             reduce using rule 28 (vars -> varsG .)
    FLOAT           reduce using rule 28 (vars -> varsG .)
    CHAR            reduce using rule 28 (vars -> varsG .)
    $end            reduce using rule 28 (vars -> varsG .)
    ID              reduce using rule 28 (vars -> varsG .)
    IF              reduce using rule 28 (vars -> varsG .)
    VAR             reduce using rule 28 (vars -> varsG .)
    RB              reduce using rule 28 (vars -> varsG .)

  ! VOID            [ reduce using rule 51 (vars1G -> ID SEMICOL varsG .) ]
  ! INT             [ reduce using rule 51 (vars1G -> ID SEMICOL varsG .) ]
  ! FLOAT           [ reduce using rule 51 (vars1G -> ID SEMICOL varsG .) ]
  ! CHAR            [ reduce using rule 51 (vars1G -> ID SEMICOL varsG .) ]
  ! $end            [ reduce using rule 51 (vars1G -> ID SEMICOL varsG .) ]
  ! ID              [ reduce using rule 51 (vars1G -> ID SEMICOL varsG .) ]
  ! IF              [ reduce using rule 51 (vars1G -> ID SEMICOL varsG .) ]
  ! VAR             [ reduce using rule 51 (vars1G -> ID SEMICOL varsG .) ]
  ! RB              [ reduce using rule 51 (vars1G -> ID SEMICOL varsG .) ]
  ! VOID            [ reduce using rule 56 (vars3G -> ID SEMICOL varsG .) ]
  ! INT             [ reduce using rule 56 (vars3G -> ID SEMICOL varsG .) ]
  ! FLOAT           [ reduce using rule 56 (vars3G -> ID SEMICOL varsG .) ]
  ! CHAR            [ reduce using rule 56 (vars3G -> ID SEMICOL varsG .) ]
  ! $end            [ reduce using rule 56 (vars3G -> ID SEMICOL varsG .) ]
  ! ID              [ reduce using rule 56 (vars3G -> ID SEMICOL varsG .) ]
  ! IF              [ reduce using rule 56 (vars3G -> ID SEMICOL varsG .) ]
  ! VAR             [ reduce using rule 56 (vars3G -> ID SEMICOL varsG .) ]
  ! RB              [ reduce using rule 56 (vars3G -> ID SEMICOL varsG .) ]


state 76

    (27) vars -> VAR tipo ID matrix SEMICOL .

    VOID            reduce using rule 27 (vars -> VAR tipo ID matrix SEMICOL .)
    INT             reduce using rule 27 (vars -> VAR tipo ID matrix SEMICOL .)
    FLOAT           reduce using rule 27 (vars -> VAR tipo ID matrix SEMICOL .)
    CHAR            reduce using rule 27 (vars -> VAR tipo ID matrix SEMICOL .)
    $end            reduce using rule 27 (vars -> VAR tipo ID matrix SEMICOL .)
    ID              reduce using rule 27 (vars -> VAR tipo ID matrix SEMICOL .)
    IF              reduce using rule 27 (vars -> VAR tipo ID matrix SEMICOL .)
    VAR             reduce using rule 27 (vars -> VAR tipo ID matrix SEMICOL .)
    RB              reduce using rule 27 (vars -> VAR tipo ID matrix SEMICOL .)


state 77

    (93) var_matrix -> VAR tipo ID matrix IS . matrix2 SEMICOL
    (94) var_matrixG -> VAR tipo ID matrix IS . matrix2 SEMICOL
    (95) matrix2 -> . LP lista2 RP COMMA matrix2
    (96) matrix2 -> . LP lista2 RP COMMA LP lista2 RP

    LP              shift and go to state 101

    matrix2                        shift and go to state 100

state 78

    (63) value -> ID .

    COMMA           reduce using rule 63 (value -> ID .)
    SEMICOL         reduce using rule 63 (value -> ID .)
    RP              reduce using rule 63 (value -> ID .)


state 79

    (36) vars2 -> ID IS value . COMMA vars2
    (37) vars2 -> ID IS value . COMMA
    (38) vars2 -> ID IS value . SEMICOL vars
    (52) vars2G -> ID IS value . check_type COMMA vars2G
    (53) vars2G -> ID IS value . check_type SEMICOL varsG
    (67) check_type -> .

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for SEMICOL resolved as shift
    COMMA           shift and go to state 102
    SEMICOL         shift and go to state 103

  ! COMMA           [ reduce using rule 67 (check_type -> .) ]
  ! SEMICOL         [ reduce using rule 67 (check_type -> .) ]

    check_type                     shift and go to state 104

state 80

    (79) oper_aritmetica -> ID IS expr . SEMICOL
    (80) expr -> expr . MUL expr
    (81) expr -> expr . DIV expr
    (82) expr -> expr . PLUS expr
    (83) expr -> expr . MINUS expr

    SEMICOL         shift and go to state 105
    MUL             shift and go to state 106
    DIV             shift and go to state 107
    PLUS            shift and go to state 108
    MINUS           shift and go to state 109


state 81

    (61) value -> CTE_F .
    (85) expr -> CTE_F .

  ! reduce/reduce conflict for SEMICOL resolved using rule 61 (value -> CTE_F .)
    COMMA           reduce using rule 61 (value -> CTE_F .)
    SEMICOL         reduce using rule 61 (value -> CTE_F .)
    MUL             reduce using rule 85 (expr -> CTE_F .)
    DIV             reduce using rule 85 (expr -> CTE_F .)
    PLUS            reduce using rule 85 (expr -> CTE_F .)
    MINUS           reduce using rule 85 (expr -> CTE_F .)

  ! SEMICOL         [ reduce using rule 85 (expr -> CTE_F .) ]


state 82

    (62) value -> CTE_I .
    (84) expr -> CTE_I .

  ! reduce/reduce conflict for SEMICOL resolved using rule 62 (value -> CTE_I .)
    COMMA           reduce using rule 62 (value -> CTE_I .)
    SEMICOL         reduce using rule 62 (value -> CTE_I .)
    MUL             reduce using rule 84 (expr -> CTE_I .)
    DIV             reduce using rule 84 (expr -> CTE_I .)
    PLUS            reduce using rule 84 (expr -> CTE_I .)
    MINUS           reduce using rule 84 (expr -> CTE_I .)

  ! SEMICOL         [ reduce using rule 84 (expr -> CTE_I .) ]


state 83

    (64) value -> CTE_C .

    COMMA           reduce using rule 64 (value -> CTE_C .)
    SEMICOL         reduce using rule 64 (value -> CTE_C .)
    RP              reduce using rule 64 (value -> CTE_C .)


state 84

    (65) value -> COMILLA . ID COMILLA

    ID              shift and go to state 110


state 85

    (66) value -> COMILLAS . ID COMILLAS

    ID              shift and go to state 111


state 86

    (39) vars3 -> ID . COMMA vars3
    (40) vars3 -> ID . SEMICOL vars
    (41) vars3 -> ID . SEMICOL
    (55) vars3G -> ID . COMMA vars3G
    (56) vars3G -> ID . SEMICOL varsG
    (57) vars3G -> ID . SEMICOL

    COMMA           shift and go to state 63
    SEMICOL         shift and go to state 112


state 87

    (39) vars3 -> ID COMMA vars3 .

    VOID            reduce using rule 39 (vars3 -> ID COMMA vars3 .)
    INT             reduce using rule 39 (vars3 -> ID COMMA vars3 .)
    FLOAT           reduce using rule 39 (vars3 -> ID COMMA vars3 .)
    CHAR            reduce using rule 39 (vars3 -> ID COMMA vars3 .)
    $end            reduce using rule 39 (vars3 -> ID COMMA vars3 .)
    ID              reduce using rule 39 (vars3 -> ID COMMA vars3 .)
    IF              reduce using rule 39 (vars3 -> ID COMMA vars3 .)
    VAR             reduce using rule 39 (vars3 -> ID COMMA vars3 .)
    RB              reduce using rule 39 (vars3 -> ID COMMA vars3 .)


state 88

    (55) vars3G -> ID COMMA vars3G .

    VOID            reduce using rule 55 (vars3G -> ID COMMA vars3G .)
    INT             reduce using rule 55 (vars3G -> ID COMMA vars3G .)
    FLOAT           reduce using rule 55 (vars3G -> ID COMMA vars3G .)
    CHAR            reduce using rule 55 (vars3G -> ID COMMA vars3G .)
    $end            reduce using rule 55 (vars3G -> ID COMMA vars3G .)
    ID              reduce using rule 55 (vars3G -> ID COMMA vars3G .)
    IF              reduce using rule 55 (vars3G -> ID COMMA vars3G .)
    VAR             reduce using rule 55 (vars3G -> ID COMMA vars3G .)
    RB              reduce using rule 55 (vars3G -> ID COMMA vars3G .)


state 89

    (92) row -> LC CTE_I . RC

    RC              shift and go to state 113


state 90

    (69) funcion -> tipo ID LP param RP . LB statement RB funcion
    (71) funcion -> tipo ID LP param RP . LB statement RB

    LB              shift and go to state 114


state 91

    (13) main -> tipo MAIN LP RP LB . statement RB
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . ID row SEMICOL
    (19) statement -> . ID matrix SEMICOL
    (20) statement -> . empty
    (21) asignacion -> . ID IS value
    (101) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto
    (102) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto elseif
    (103) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto else
    (22) vars -> . VAR tipo vars1
    (23) vars -> . VAR tipo vars2
    (24) vars -> . VAR tipo vars3
    (25) vars -> . VAR tipo oper_aritmetica
    (26) vars -> . VAR tipo ID row SEMICOL
    (27) vars -> . VAR tipo ID matrix SEMICOL
    (28) vars -> . varsG
    (29) vars -> . var_row
    (30) vars -> . var_row vars
    (31) vars -> . var_matrix
    (32) vars -> . var_matrix vars
    (33) vars -> . empty
    (100) empty -> .
    (42) varsG -> . VAR tipo vars1G
    (43) varsG -> . VAR tipo vars2G
    (44) varsG -> . VAR tipo vars3G
    (45) varsG -> . VAR LB varsG RB
    (46) varsG -> . var_rowG
    (47) varsG -> . var_rowG varsG
    (48) varsG -> . var_matrixG
    (49) varsG -> . var_matrixG varsG
    (86) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (93) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (87) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
    ID              shift and go to state 119
    IF              shift and go to state 121
    VAR             shift and go to state 10
    RB              reduce using rule 100 (empty -> .)

  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! VAR             [ reduce using rule 100 (empty -> .) ]

    statement                      shift and go to state 115
    asignacion                     shift and go to state 116
    if                             shift and go to state 117
    vars                           shift and go to state 118
    empty                          shift and go to state 120
    varsG                          shift and go to state 12
    var_row                        shift and go to state 13
    var_matrix                     shift and go to state 14
    var_rowG                       shift and go to state 16
    var_matrixG                    shift and go to state 17

state 92

    (68) funcion -> VOID ID LP param RP . LB statement RB funcion
    (70) funcion -> VOID ID LP param RP . LB statement RB

    LB              shift and go to state 122


state 93

    (14) main -> VOID tipo MAIN LP RP . LB statement RB

    LB              shift and go to state 123


state 94

    (87) var_rowG -> VAR tipo ID row . IS LP lista2 RP SEMICOL
    (99) matrix -> row . row
    (92) row -> . LC CTE_I RC

    IS              shift and go to state 124
    LC              shift and go to state 64

    row                            shift and go to state 71

state 95

    (52) vars2G -> ID IS . value check_type COMMA vars2G
    (53) vars2G -> ID IS . value check_type SEMICOL varsG
    (61) value -> . CTE_F
    (62) value -> . CTE_I
    (63) value -> . ID
    (64) value -> . CTE_C
    (65) value -> . COMILLA ID COMILLA
    (66) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 126
    CTE_I           shift and go to state 127
    ID              shift and go to state 78
    CTE_C           shift and go to state 83
    COMILLA         shift and go to state 84
    COMILLAS        shift and go to state 85

    value                          shift and go to state 125

state 96

    (50) vars1G -> ID SEMICOL .
    (51) vars1G -> ID SEMICOL . varsG
    (56) vars3G -> ID SEMICOL . varsG
    (57) vars3G -> ID SEMICOL .
    (42) varsG -> . VAR tipo vars1G
    (43) varsG -> . VAR tipo vars2G
    (44) varsG -> . VAR tipo vars3G
    (45) varsG -> . VAR LB varsG RB
    (46) varsG -> . var_rowG
    (47) varsG -> . var_rowG varsG
    (48) varsG -> . var_matrixG
    (49) varsG -> . var_matrixG varsG
    (87) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! reduce/reduce conflict for VOID resolved using rule 50 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for INT resolved using rule 50 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for FLOAT resolved using rule 50 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for CHAR resolved using rule 50 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for $end resolved using rule 50 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for ID resolved using rule 50 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for IF resolved using rule 50 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for VAR resolved using rule 50 (vars1G -> ID SEMICOL .)
  ! reduce/reduce conflict for RB resolved using rule 50 (vars1G -> ID SEMICOL .)
  ! shift/reduce conflict for VAR resolved as shift
    VOID            reduce using rule 50 (vars1G -> ID SEMICOL .)
    INT             reduce using rule 50 (vars1G -> ID SEMICOL .)
    FLOAT           reduce using rule 50 (vars1G -> ID SEMICOL .)
    CHAR            reduce using rule 50 (vars1G -> ID SEMICOL .)
    $end            reduce using rule 50 (vars1G -> ID SEMICOL .)
    ID              reduce using rule 50 (vars1G -> ID SEMICOL .)
    IF              reduce using rule 50 (vars1G -> ID SEMICOL .)
    RB              reduce using rule 50 (vars1G -> ID SEMICOL .)
    VAR             shift and go to state 36

  ! VAR             [ reduce using rule 50 (vars1G -> ID SEMICOL .) ]
  ! VOID            [ reduce using rule 57 (vars3G -> ID SEMICOL .) ]
  ! INT             [ reduce using rule 57 (vars3G -> ID SEMICOL .) ]
  ! FLOAT           [ reduce using rule 57 (vars3G -> ID SEMICOL .) ]
  ! CHAR            [ reduce using rule 57 (vars3G -> ID SEMICOL .) ]
  ! $end            [ reduce using rule 57 (vars3G -> ID SEMICOL .) ]
  ! ID              [ reduce using rule 57 (vars3G -> ID SEMICOL .) ]
  ! IF              [ reduce using rule 57 (vars3G -> ID SEMICOL .) ]
  ! VAR             [ reduce using rule 57 (vars3G -> ID SEMICOL .) ]
  ! RB              [ reduce using rule 57 (vars3G -> ID SEMICOL .) ]

    varsG                          shift and go to state 128
    var_rowG                       shift and go to state 16
    var_matrixG                    shift and go to state 17

state 97

    (94) var_matrixG -> VAR tipo ID matrix . IS matrix2 SEMICOL

    IS              shift and go to state 129


state 98

    (55) vars3G -> ID COMMA . vars3G
    (55) vars3G -> . ID COMMA vars3G
    (56) vars3G -> . ID SEMICOL varsG
    (57) vars3G -> . ID SEMICOL

    ID              shift and go to state 130

    vars3G                         shift and go to state 88

state 99

    (86) var_row -> VAR tipo ID row IS LP . lista2 RP SEMICOL
    (87) var_rowG -> VAR tipo ID row IS LP . lista2 RP SEMICOL
    (90) lista2 -> . elem_lista COMMA lista2
    (91) lista2 -> . elem_lista COMMA elem_lista
    (88) elem_lista -> . value
    (89) elem_lista -> . empty
    (61) value -> . CTE_F
    (62) value -> . CTE_I
    (63) value -> . ID
    (64) value -> . CTE_C
    (65) value -> . COMILLA ID COMILLA
    (66) value -> . COMILLAS ID COMILLAS
    (100) empty -> .

    CTE_F           shift and go to state 126
    CTE_I           shift and go to state 127
    ID              shift and go to state 78
    CTE_C           shift and go to state 83
    COMILLA         shift and go to state 84
    COMILLAS        shift and go to state 85
    COMMA           reduce using rule 100 (empty -> .)

    lista2                         shift and go to state 131
    elem_lista                     shift and go to state 132
    value                          shift and go to state 133
    empty                          shift and go to state 134

state 100

    (93) var_matrix -> VAR tipo ID matrix IS matrix2 . SEMICOL
    (94) var_matrixG -> VAR tipo ID matrix IS matrix2 . SEMICOL

    SEMICOL         shift and go to state 135


state 101

    (95) matrix2 -> LP . lista2 RP COMMA matrix2
    (96) matrix2 -> LP . lista2 RP COMMA LP lista2 RP
    (90) lista2 -> . elem_lista COMMA lista2
    (91) lista2 -> . elem_lista COMMA elem_lista
    (88) elem_lista -> . value
    (89) elem_lista -> . empty
    (61) value -> . CTE_F
    (62) value -> . CTE_I
    (63) value -> . ID
    (64) value -> . CTE_C
    (65) value -> . COMILLA ID COMILLA
    (66) value -> . COMILLAS ID COMILLAS
    (100) empty -> .

    CTE_F           shift and go to state 126
    CTE_I           shift and go to state 127
    ID              shift and go to state 78
    CTE_C           shift and go to state 83
    COMILLA         shift and go to state 84
    COMILLAS        shift and go to state 85
    COMMA           reduce using rule 100 (empty -> .)

    lista2                         shift and go to state 136
    elem_lista                     shift and go to state 132
    value                          shift and go to state 133
    empty                          shift and go to state 134

state 102

    (36) vars2 -> ID IS value COMMA . vars2
    (37) vars2 -> ID IS value COMMA .
    (36) vars2 -> . ID IS value COMMA vars2
    (37) vars2 -> . ID IS value COMMA
    (38) vars2 -> . ID IS value SEMICOL vars

  ! shift/reduce conflict for ID resolved as shift
    VOID            reduce using rule 37 (vars2 -> ID IS value COMMA .)
    INT             reduce using rule 37 (vars2 -> ID IS value COMMA .)
    FLOAT           reduce using rule 37 (vars2 -> ID IS value COMMA .)
    CHAR            reduce using rule 37 (vars2 -> ID IS value COMMA .)
    $end            reduce using rule 37 (vars2 -> ID IS value COMMA .)
    IF              reduce using rule 37 (vars2 -> ID IS value COMMA .)
    VAR             reduce using rule 37 (vars2 -> ID IS value COMMA .)
    RB              reduce using rule 37 (vars2 -> ID IS value COMMA .)
    ID              shift and go to state 137

  ! ID              [ reduce using rule 37 (vars2 -> ID IS value COMMA .) ]

    vars2                          shift and go to state 138

state 103

    (38) vars2 -> ID IS value SEMICOL . vars
    (22) vars -> . VAR tipo vars1
    (23) vars -> . VAR tipo vars2
    (24) vars -> . VAR tipo vars3
    (25) vars -> . VAR tipo oper_aritmetica
    (26) vars -> . VAR tipo ID row SEMICOL
    (27) vars -> . VAR tipo ID matrix SEMICOL
    (28) vars -> . varsG
    (29) vars -> . var_row
    (30) vars -> . var_row vars
    (31) vars -> . var_matrix
    (32) vars -> . var_matrix vars
    (33) vars -> . empty
    (42) varsG -> . VAR tipo vars1G
    (43) varsG -> . VAR tipo vars2G
    (44) varsG -> . VAR tipo vars3G
    (45) varsG -> . VAR LB varsG RB
    (46) varsG -> . var_rowG
    (47) varsG -> . var_rowG varsG
    (48) varsG -> . var_matrixG
    (49) varsG -> . var_matrixG varsG
    (86) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (93) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (100) empty -> .
    (87) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for VAR resolved as shift
    VAR             shift and go to state 10
    VOID            reduce using rule 100 (empty -> .)
    INT             reduce using rule 100 (empty -> .)
    FLOAT           reduce using rule 100 (empty -> .)
    CHAR            reduce using rule 100 (empty -> .)
    $end            reduce using rule 100 (empty -> .)
    ID              reduce using rule 100 (empty -> .)
    IF              reduce using rule 100 (empty -> .)
    RB              reduce using rule 100 (empty -> .)

  ! VAR             [ reduce using rule 100 (empty -> .) ]

    vars                           shift and go to state 139
    varsG                          shift and go to state 12
    var_row                        shift and go to state 13
    var_matrix                     shift and go to state 14
    empty                          shift and go to state 31
    var_rowG                       shift and go to state 16
    var_matrixG                    shift and go to state 17

state 104

    (52) vars2G -> ID IS value check_type . COMMA vars2G
    (53) vars2G -> ID IS value check_type . SEMICOL varsG

    COMMA           shift and go to state 140
    SEMICOL         shift and go to state 141


state 105

    (79) oper_aritmetica -> ID IS expr SEMICOL .

    VOID            reduce using rule 79 (oper_aritmetica -> ID IS expr SEMICOL .)
    INT             reduce using rule 79 (oper_aritmetica -> ID IS expr SEMICOL .)
    FLOAT           reduce using rule 79 (oper_aritmetica -> ID IS expr SEMICOL .)
    CHAR            reduce using rule 79 (oper_aritmetica -> ID IS expr SEMICOL .)
    $end            reduce using rule 79 (oper_aritmetica -> ID IS expr SEMICOL .)
    ID              reduce using rule 79 (oper_aritmetica -> ID IS expr SEMICOL .)
    IF              reduce using rule 79 (oper_aritmetica -> ID IS expr SEMICOL .)
    VAR             reduce using rule 79 (oper_aritmetica -> ID IS expr SEMICOL .)
    RB              reduce using rule 79 (oper_aritmetica -> ID IS expr SEMICOL .)


state 106

    (80) expr -> expr MUL . expr
    (80) expr -> . expr MUL expr
    (81) expr -> . expr DIV expr
    (82) expr -> . expr PLUS expr
    (83) expr -> . expr MINUS expr
    (84) expr -> . CTE_I
    (85) expr -> . CTE_F

    CTE_I           shift and go to state 143
    CTE_F           shift and go to state 144

    expr                           shift and go to state 142

state 107

    (81) expr -> expr DIV . expr
    (80) expr -> . expr MUL expr
    (81) expr -> . expr DIV expr
    (82) expr -> . expr PLUS expr
    (83) expr -> . expr MINUS expr
    (84) expr -> . CTE_I
    (85) expr -> . CTE_F

    CTE_I           shift and go to state 143
    CTE_F           shift and go to state 144

    expr                           shift and go to state 145

state 108

    (82) expr -> expr PLUS . expr
    (80) expr -> . expr MUL expr
    (81) expr -> . expr DIV expr
    (82) expr -> . expr PLUS expr
    (83) expr -> . expr MINUS expr
    (84) expr -> . CTE_I
    (85) expr -> . CTE_F

    CTE_I           shift and go to state 143
    CTE_F           shift and go to state 144

    expr                           shift and go to state 146

state 109

    (83) expr -> expr MINUS . expr
    (80) expr -> . expr MUL expr
    (81) expr -> . expr DIV expr
    (82) expr -> . expr PLUS expr
    (83) expr -> . expr MINUS expr
    (84) expr -> . CTE_I
    (85) expr -> . CTE_F

    CTE_I           shift and go to state 143
    CTE_F           shift and go to state 144

    expr                           shift and go to state 147

state 110

    (65) value -> COMILLA ID . COMILLA

    COMILLA         shift and go to state 148


state 111

    (66) value -> COMILLAS ID . COMILLAS

    COMILLAS        shift and go to state 149


state 112

    (40) vars3 -> ID SEMICOL . vars
    (41) vars3 -> ID SEMICOL .
    (56) vars3G -> ID SEMICOL . varsG
    (57) vars3G -> ID SEMICOL .
    (22) vars -> . VAR tipo vars1
    (23) vars -> . VAR tipo vars2
    (24) vars -> . VAR tipo vars3
    (25) vars -> . VAR tipo oper_aritmetica
    (26) vars -> . VAR tipo ID row SEMICOL
    (27) vars -> . VAR tipo ID matrix SEMICOL
    (28) vars -> . varsG
    (29) vars -> . var_row
    (30) vars -> . var_row vars
    (31) vars -> . var_matrix
    (32) vars -> . var_matrix vars
    (33) vars -> . empty
    (42) varsG -> . VAR tipo vars1G
    (43) varsG -> . VAR tipo vars2G
    (44) varsG -> . VAR tipo vars3G
    (45) varsG -> . VAR LB varsG RB
    (46) varsG -> . var_rowG
    (47) varsG -> . var_rowG varsG
    (48) varsG -> . var_matrixG
    (49) varsG -> . var_matrixG varsG
    (86) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (93) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (100) empty -> .
    (87) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! reduce/reduce conflict for VOID resolved using rule 41 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for INT resolved using rule 41 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for FLOAT resolved using rule 41 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for CHAR resolved using rule 41 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for $end resolved using rule 41 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for ID resolved using rule 41 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for IF resolved using rule 41 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for VAR resolved using rule 41 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for RB resolved using rule 41 (vars3 -> ID SEMICOL .)
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for VOID resolved using rule 41 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for INT resolved using rule 41 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for FLOAT resolved using rule 41 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for CHAR resolved using rule 41 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for $end resolved using rule 41 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for ID resolved using rule 41 (vars3 -> ID SEMICOL .)
  ! reduce/reduce conflict for IF resolved using rule 41 (vars3 -> ID SEMICOL .)
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for RB resolved using rule 41 (vars3 -> ID SEMICOL .)
    VOID            reduce using rule 41 (vars3 -> ID SEMICOL .)
    INT             reduce using rule 41 (vars3 -> ID SEMICOL .)
    FLOAT           reduce using rule 41 (vars3 -> ID SEMICOL .)
    CHAR            reduce using rule 41 (vars3 -> ID SEMICOL .)
    $end            reduce using rule 41 (vars3 -> ID SEMICOL .)
    ID              reduce using rule 41 (vars3 -> ID SEMICOL .)
    IF              reduce using rule 41 (vars3 -> ID SEMICOL .)
    RB              reduce using rule 41 (vars3 -> ID SEMICOL .)
    VAR             shift and go to state 10

  ! VAR             [ reduce using rule 41 (vars3 -> ID SEMICOL .) ]
  ! VOID            [ reduce using rule 57 (vars3G -> ID SEMICOL .) ]
  ! INT             [ reduce using rule 57 (vars3G -> ID SEMICOL .) ]
  ! FLOAT           [ reduce using rule 57 (vars3G -> ID SEMICOL .) ]
  ! CHAR            [ reduce using rule 57 (vars3G -> ID SEMICOL .) ]
  ! $end            [ reduce using rule 57 (vars3G -> ID SEMICOL .) ]
  ! ID              [ reduce using rule 57 (vars3G -> ID SEMICOL .) ]
  ! IF              [ reduce using rule 57 (vars3G -> ID SEMICOL .) ]
  ! VAR             [ reduce using rule 57 (vars3G -> ID SEMICOL .) ]
  ! RB              [ reduce using rule 57 (vars3G -> ID SEMICOL .) ]
  ! VOID            [ reduce using rule 100 (empty -> .) ]
  ! INT             [ reduce using rule 100 (empty -> .) ]
  ! FLOAT           [ reduce using rule 100 (empty -> .) ]
  ! CHAR            [ reduce using rule 100 (empty -> .) ]
  ! $end            [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! VAR             [ reduce using rule 100 (empty -> .) ]
  ! RB              [ reduce using rule 100 (empty -> .) ]

    vars                           shift and go to state 150
    varsG                          shift and go to state 151
    var_row                        shift and go to state 13
    var_matrix                     shift and go to state 14
    empty                          shift and go to state 31
    var_rowG                       shift and go to state 16
    var_matrixG                    shift and go to state 17

state 113

    (92) row -> LC CTE_I RC .

    SEMICOL         reduce using rule 92 (row -> LC CTE_I RC .)
    IS              reduce using rule 92 (row -> LC CTE_I RC .)
    LC              reduce using rule 92 (row -> LC CTE_I RC .)


state 114

    (69) funcion -> tipo ID LP param RP LB . statement RB funcion
    (71) funcion -> tipo ID LP param RP LB . statement RB
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . ID row SEMICOL
    (19) statement -> . ID matrix SEMICOL
    (20) statement -> . empty
    (21) asignacion -> . ID IS value
    (101) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto
    (102) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto elseif
    (103) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto else
    (22) vars -> . VAR tipo vars1
    (23) vars -> . VAR tipo vars2
    (24) vars -> . VAR tipo vars3
    (25) vars -> . VAR tipo oper_aritmetica
    (26) vars -> . VAR tipo ID row SEMICOL
    (27) vars -> . VAR tipo ID matrix SEMICOL
    (28) vars -> . varsG
    (29) vars -> . var_row
    (30) vars -> . var_row vars
    (31) vars -> . var_matrix
    (32) vars -> . var_matrix vars
    (33) vars -> . empty
    (100) empty -> .
    (42) varsG -> . VAR tipo vars1G
    (43) varsG -> . VAR tipo vars2G
    (44) varsG -> . VAR tipo vars3G
    (45) varsG -> . VAR LB varsG RB
    (46) varsG -> . var_rowG
    (47) varsG -> . var_rowG varsG
    (48) varsG -> . var_matrixG
    (49) varsG -> . var_matrixG varsG
    (86) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (93) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (87) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
    ID              shift and go to state 119
    IF              shift and go to state 121
    VAR             shift and go to state 10
    RB              reduce using rule 100 (empty -> .)

  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! VAR             [ reduce using rule 100 (empty -> .) ]

    statement                      shift and go to state 152
    asignacion                     shift and go to state 116
    if                             shift and go to state 117
    vars                           shift and go to state 118
    empty                          shift and go to state 120
    varsG                          shift and go to state 12
    var_row                        shift and go to state 13
    var_matrix                     shift and go to state 14
    var_rowG                       shift and go to state 16
    var_matrixG                    shift and go to state 17

state 115

    (13) main -> tipo MAIN LP RP LB statement . RB

    RB              shift and go to state 153


state 116

    (15) statement -> asignacion . SEMICOL statement

    SEMICOL         shift and go to state 154


state 117

    (16) statement -> if . statement
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . ID row SEMICOL
    (19) statement -> . ID matrix SEMICOL
    (20) statement -> . empty
    (21) asignacion -> . ID IS value
    (101) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto
    (102) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto elseif
    (103) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto else
    (22) vars -> . VAR tipo vars1
    (23) vars -> . VAR tipo vars2
    (24) vars -> . VAR tipo vars3
    (25) vars -> . VAR tipo oper_aritmetica
    (26) vars -> . VAR tipo ID row SEMICOL
    (27) vars -> . VAR tipo ID matrix SEMICOL
    (28) vars -> . varsG
    (29) vars -> . var_row
    (30) vars -> . var_row vars
    (31) vars -> . var_matrix
    (32) vars -> . var_matrix vars
    (33) vars -> . empty
    (100) empty -> .
    (42) varsG -> . VAR tipo vars1G
    (43) varsG -> . VAR tipo vars2G
    (44) varsG -> . VAR tipo vars3G
    (45) varsG -> . VAR LB varsG RB
    (46) varsG -> . var_rowG
    (47) varsG -> . var_rowG varsG
    (48) varsG -> . var_matrixG
    (49) varsG -> . var_matrixG varsG
    (86) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (93) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (87) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
    ID              shift and go to state 119
    IF              shift and go to state 121
    VAR             shift and go to state 10
    RB              reduce using rule 100 (empty -> .)

  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! VAR             [ reduce using rule 100 (empty -> .) ]

    if                             shift and go to state 117
    statement                      shift and go to state 155
    asignacion                     shift and go to state 116
    vars                           shift and go to state 118
    empty                          shift and go to state 120
    varsG                          shift and go to state 12
    var_row                        shift and go to state 13
    var_matrix                     shift and go to state 14
    var_rowG                       shift and go to state 16
    var_matrixG                    shift and go to state 17

state 118

    (17) statement -> vars . statement
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . ID row SEMICOL
    (19) statement -> . ID matrix SEMICOL
    (20) statement -> . empty
    (21) asignacion -> . ID IS value
    (101) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto
    (102) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto elseif
    (103) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto else
    (22) vars -> . VAR tipo vars1
    (23) vars -> . VAR tipo vars2
    (24) vars -> . VAR tipo vars3
    (25) vars -> . VAR tipo oper_aritmetica
    (26) vars -> . VAR tipo ID row SEMICOL
    (27) vars -> . VAR tipo ID matrix SEMICOL
    (28) vars -> . varsG
    (29) vars -> . var_row
    (30) vars -> . var_row vars
    (31) vars -> . var_matrix
    (32) vars -> . var_matrix vars
    (33) vars -> . empty
    (100) empty -> .
    (42) varsG -> . VAR tipo vars1G
    (43) varsG -> . VAR tipo vars2G
    (44) varsG -> . VAR tipo vars3G
    (45) varsG -> . VAR LB varsG RB
    (46) varsG -> . var_rowG
    (47) varsG -> . var_rowG varsG
    (48) varsG -> . var_matrixG
    (49) varsG -> . var_matrixG varsG
    (86) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (93) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (87) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
    ID              shift and go to state 119
    IF              shift and go to state 121
    VAR             shift and go to state 10
    RB              reduce using rule 100 (empty -> .)

  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! VAR             [ reduce using rule 100 (empty -> .) ]

    vars                           shift and go to state 118
    statement                      shift and go to state 156
    asignacion                     shift and go to state 116
    if                             shift and go to state 117
    empty                          shift and go to state 120
    varsG                          shift and go to state 12
    var_row                        shift and go to state 13
    var_matrix                     shift and go to state 14
    var_rowG                       shift and go to state 16
    var_matrixG                    shift and go to state 17

state 119

    (18) statement -> ID . row SEMICOL
    (19) statement -> ID . matrix SEMICOL
    (21) asignacion -> ID . IS value
    (92) row -> . LC CTE_I RC
    (99) matrix -> . row row

    IS              shift and go to state 159
    LC              shift and go to state 64

    row                            shift and go to state 157
    matrix                         shift and go to state 158

state 120

    (20) statement -> empty .
    (33) vars -> empty .

  ! reduce/reduce conflict for RB resolved using rule 20 (statement -> empty .)
    RB              reduce using rule 20 (statement -> empty .)
    ID              reduce using rule 33 (vars -> empty .)
    IF              reduce using rule 33 (vars -> empty .)
    VAR             reduce using rule 33 (vars -> empty .)

  ! RB              [ reduce using rule 33 (vars -> empty .) ]


state 121

    (101) if -> IF . LP expression RP check_bool gotof LB statement RB guarda_salto
    (102) if -> IF . LP expression RP check_bool gotof LB statement RB guarda_salto elseif
    (103) if -> IF . LP expression RP check_bool gotof LB statement RB guarda_salto else

    LP              shift and go to state 160


state 122

    (68) funcion -> VOID ID LP param RP LB . statement RB funcion
    (70) funcion -> VOID ID LP param RP LB . statement RB
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . ID row SEMICOL
    (19) statement -> . ID matrix SEMICOL
    (20) statement -> . empty
    (21) asignacion -> . ID IS value
    (101) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto
    (102) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto elseif
    (103) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto else
    (22) vars -> . VAR tipo vars1
    (23) vars -> . VAR tipo vars2
    (24) vars -> . VAR tipo vars3
    (25) vars -> . VAR tipo oper_aritmetica
    (26) vars -> . VAR tipo ID row SEMICOL
    (27) vars -> . VAR tipo ID matrix SEMICOL
    (28) vars -> . varsG
    (29) vars -> . var_row
    (30) vars -> . var_row vars
    (31) vars -> . var_matrix
    (32) vars -> . var_matrix vars
    (33) vars -> . empty
    (100) empty -> .
    (42) varsG -> . VAR tipo vars1G
    (43) varsG -> . VAR tipo vars2G
    (44) varsG -> . VAR tipo vars3G
    (45) varsG -> . VAR LB varsG RB
    (46) varsG -> . var_rowG
    (47) varsG -> . var_rowG varsG
    (48) varsG -> . var_matrixG
    (49) varsG -> . var_matrixG varsG
    (86) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (93) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (87) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
    ID              shift and go to state 119
    IF              shift and go to state 121
    VAR             shift and go to state 10
    RB              reduce using rule 100 (empty -> .)

  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! VAR             [ reduce using rule 100 (empty -> .) ]

    statement                      shift and go to state 161
    asignacion                     shift and go to state 116
    if                             shift and go to state 117
    vars                           shift and go to state 118
    empty                          shift and go to state 120
    varsG                          shift and go to state 12
    var_row                        shift and go to state 13
    var_matrix                     shift and go to state 14
    var_rowG                       shift and go to state 16
    var_matrixG                    shift and go to state 17

state 123

    (14) main -> VOID tipo MAIN LP RP LB . statement RB
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . ID row SEMICOL
    (19) statement -> . ID matrix SEMICOL
    (20) statement -> . empty
    (21) asignacion -> . ID IS value
    (101) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto
    (102) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto elseif
    (103) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto else
    (22) vars -> . VAR tipo vars1
    (23) vars -> . VAR tipo vars2
    (24) vars -> . VAR tipo vars3
    (25) vars -> . VAR tipo oper_aritmetica
    (26) vars -> . VAR tipo ID row SEMICOL
    (27) vars -> . VAR tipo ID matrix SEMICOL
    (28) vars -> . varsG
    (29) vars -> . var_row
    (30) vars -> . var_row vars
    (31) vars -> . var_matrix
    (32) vars -> . var_matrix vars
    (33) vars -> . empty
    (100) empty -> .
    (42) varsG -> . VAR tipo vars1G
    (43) varsG -> . VAR tipo vars2G
    (44) varsG -> . VAR tipo vars3G
    (45) varsG -> . VAR LB varsG RB
    (46) varsG -> . var_rowG
    (47) varsG -> . var_rowG varsG
    (48) varsG -> . var_matrixG
    (49) varsG -> . var_matrixG varsG
    (86) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (93) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (87) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
    ID              shift and go to state 119
    IF              shift and go to state 121
    VAR             shift and go to state 10
    RB              reduce using rule 100 (empty -> .)

  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! VAR             [ reduce using rule 100 (empty -> .) ]

    statement                      shift and go to state 162
    asignacion                     shift and go to state 116
    if                             shift and go to state 117
    vars                           shift and go to state 118
    empty                          shift and go to state 120
    varsG                          shift and go to state 12
    var_row                        shift and go to state 13
    var_matrix                     shift and go to state 14
    var_rowG                       shift and go to state 16
    var_matrixG                    shift and go to state 17

state 124

    (87) var_rowG -> VAR tipo ID row IS . LP lista2 RP SEMICOL

    LP              shift and go to state 163


state 125

    (52) vars2G -> ID IS value . check_type COMMA vars2G
    (53) vars2G -> ID IS value . check_type SEMICOL varsG
    (67) check_type -> .

    COMMA           reduce using rule 67 (check_type -> .)
    SEMICOL         reduce using rule 67 (check_type -> .)

    check_type                     shift and go to state 104

state 126

    (61) value -> CTE_F .

    COMMA           reduce using rule 61 (value -> CTE_F .)
    SEMICOL         reduce using rule 61 (value -> CTE_F .)
    RP              reduce using rule 61 (value -> CTE_F .)


state 127

    (62) value -> CTE_I .

    COMMA           reduce using rule 62 (value -> CTE_I .)
    SEMICOL         reduce using rule 62 (value -> CTE_I .)
    RP              reduce using rule 62 (value -> CTE_I .)


state 128

    (51) vars1G -> ID SEMICOL varsG .
    (56) vars3G -> ID SEMICOL varsG .

  ! reduce/reduce conflict for VOID resolved using rule 51 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for INT resolved using rule 51 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for FLOAT resolved using rule 51 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for CHAR resolved using rule 51 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for $end resolved using rule 51 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for ID resolved using rule 51 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for IF resolved using rule 51 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for VAR resolved using rule 51 (vars1G -> ID SEMICOL varsG .)
  ! reduce/reduce conflict for RB resolved using rule 51 (vars1G -> ID SEMICOL varsG .)
    VOID            reduce using rule 51 (vars1G -> ID SEMICOL varsG .)
    INT             reduce using rule 51 (vars1G -> ID SEMICOL varsG .)
    FLOAT           reduce using rule 51 (vars1G -> ID SEMICOL varsG .)
    CHAR            reduce using rule 51 (vars1G -> ID SEMICOL varsG .)
    $end            reduce using rule 51 (vars1G -> ID SEMICOL varsG .)
    ID              reduce using rule 51 (vars1G -> ID SEMICOL varsG .)
    IF              reduce using rule 51 (vars1G -> ID SEMICOL varsG .)
    VAR             reduce using rule 51 (vars1G -> ID SEMICOL varsG .)
    RB              reduce using rule 51 (vars1G -> ID SEMICOL varsG .)

  ! VOID            [ reduce using rule 56 (vars3G -> ID SEMICOL varsG .) ]
  ! INT             [ reduce using rule 56 (vars3G -> ID SEMICOL varsG .) ]
  ! FLOAT           [ reduce using rule 56 (vars3G -> ID SEMICOL varsG .) ]
  ! CHAR            [ reduce using rule 56 (vars3G -> ID SEMICOL varsG .) ]
  ! $end            [ reduce using rule 56 (vars3G -> ID SEMICOL varsG .) ]
  ! ID              [ reduce using rule 56 (vars3G -> ID SEMICOL varsG .) ]
  ! IF              [ reduce using rule 56 (vars3G -> ID SEMICOL varsG .) ]
  ! VAR             [ reduce using rule 56 (vars3G -> ID SEMICOL varsG .) ]
  ! RB              [ reduce using rule 56 (vars3G -> ID SEMICOL varsG .) ]


state 129

    (94) var_matrixG -> VAR tipo ID matrix IS . matrix2 SEMICOL
    (95) matrix2 -> . LP lista2 RP COMMA matrix2
    (96) matrix2 -> . LP lista2 RP COMMA LP lista2 RP

    LP              shift and go to state 101

    matrix2                        shift and go to state 164

state 130

    (55) vars3G -> ID . COMMA vars3G
    (56) vars3G -> ID . SEMICOL varsG
    (57) vars3G -> ID . SEMICOL

    COMMA           shift and go to state 98
    SEMICOL         shift and go to state 165


state 131

    (86) var_row -> VAR tipo ID row IS LP lista2 . RP SEMICOL
    (87) var_rowG -> VAR tipo ID row IS LP lista2 . RP SEMICOL

    RP              shift and go to state 166


state 132

    (90) lista2 -> elem_lista . COMMA lista2
    (91) lista2 -> elem_lista . COMMA elem_lista

    COMMA           shift and go to state 167


state 133

    (88) elem_lista -> value .

    COMMA           reduce using rule 88 (elem_lista -> value .)
    RP              reduce using rule 88 (elem_lista -> value .)


state 134

    (89) elem_lista -> empty .

    COMMA           reduce using rule 89 (elem_lista -> empty .)
    RP              reduce using rule 89 (elem_lista -> empty .)


state 135

    (93) var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .
    (94) var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .

  ! reduce/reduce conflict for VAR resolved using rule 93 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
  ! reduce/reduce conflict for VOID resolved using rule 93 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
  ! reduce/reduce conflict for INT resolved using rule 93 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
  ! reduce/reduce conflict for FLOAT resolved using rule 93 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
  ! reduce/reduce conflict for CHAR resolved using rule 93 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
  ! reduce/reduce conflict for $end resolved using rule 93 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
  ! reduce/reduce conflict for ID resolved using rule 93 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
  ! reduce/reduce conflict for IF resolved using rule 93 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
  ! reduce/reduce conflict for RB resolved using rule 93 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    VAR             reduce using rule 93 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    VOID            reduce using rule 93 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    INT             reduce using rule 93 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    FLOAT           reduce using rule 93 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    CHAR            reduce using rule 93 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    $end            reduce using rule 93 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    ID              reduce using rule 93 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    IF              reduce using rule 93 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    RB              reduce using rule 93 (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL .)

  ! VAR             [ reduce using rule 94 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .) ]
  ! VOID            [ reduce using rule 94 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .) ]
  ! INT             [ reduce using rule 94 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .) ]
  ! FLOAT           [ reduce using rule 94 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .) ]
  ! CHAR            [ reduce using rule 94 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .) ]
  ! $end            [ reduce using rule 94 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .) ]
  ! ID              [ reduce using rule 94 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .) ]
  ! IF              [ reduce using rule 94 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .) ]
  ! RB              [ reduce using rule 94 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .) ]


state 136

    (95) matrix2 -> LP lista2 . RP COMMA matrix2
    (96) matrix2 -> LP lista2 . RP COMMA LP lista2 RP

    RP              shift and go to state 168


state 137

    (36) vars2 -> ID . IS value COMMA vars2
    (37) vars2 -> ID . IS value COMMA
    (38) vars2 -> ID . IS value SEMICOL vars

    IS              shift and go to state 169


state 138

    (36) vars2 -> ID IS value COMMA vars2 .

    VOID            reduce using rule 36 (vars2 -> ID IS value COMMA vars2 .)
    INT             reduce using rule 36 (vars2 -> ID IS value COMMA vars2 .)
    FLOAT           reduce using rule 36 (vars2 -> ID IS value COMMA vars2 .)
    CHAR            reduce using rule 36 (vars2 -> ID IS value COMMA vars2 .)
    $end            reduce using rule 36 (vars2 -> ID IS value COMMA vars2 .)
    ID              reduce using rule 36 (vars2 -> ID IS value COMMA vars2 .)
    IF              reduce using rule 36 (vars2 -> ID IS value COMMA vars2 .)
    VAR             reduce using rule 36 (vars2 -> ID IS value COMMA vars2 .)
    RB              reduce using rule 36 (vars2 -> ID IS value COMMA vars2 .)


state 139

    (38) vars2 -> ID IS value SEMICOL vars .

    VOID            reduce using rule 38 (vars2 -> ID IS value SEMICOL vars .)
    INT             reduce using rule 38 (vars2 -> ID IS value SEMICOL vars .)
    FLOAT           reduce using rule 38 (vars2 -> ID IS value SEMICOL vars .)
    CHAR            reduce using rule 38 (vars2 -> ID IS value SEMICOL vars .)
    $end            reduce using rule 38 (vars2 -> ID IS value SEMICOL vars .)
    ID              reduce using rule 38 (vars2 -> ID IS value SEMICOL vars .)
    IF              reduce using rule 38 (vars2 -> ID IS value SEMICOL vars .)
    VAR             reduce using rule 38 (vars2 -> ID IS value SEMICOL vars .)
    RB              reduce using rule 38 (vars2 -> ID IS value SEMICOL vars .)


state 140

    (52) vars2G -> ID IS value check_type COMMA . vars2G
    (52) vars2G -> . ID IS value check_type COMMA vars2G
    (53) vars2G -> . ID IS value check_type SEMICOL varsG
    (54) vars2G -> . empty
    (100) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 170
    VOID            reduce using rule 100 (empty -> .)
    INT             reduce using rule 100 (empty -> .)
    FLOAT           reduce using rule 100 (empty -> .)
    CHAR            reduce using rule 100 (empty -> .)
    $end            reduce using rule 100 (empty -> .)
    IF              reduce using rule 100 (empty -> .)
    VAR             reduce using rule 100 (empty -> .)
    RB              reduce using rule 100 (empty -> .)

  ! ID              [ reduce using rule 100 (empty -> .) ]

    vars2G                         shift and go to state 171
    empty                          shift and go to state 51

state 141

    (53) vars2G -> ID IS value check_type SEMICOL . varsG
    (42) varsG -> . VAR tipo vars1G
    (43) varsG -> . VAR tipo vars2G
    (44) varsG -> . VAR tipo vars3G
    (45) varsG -> . VAR LB varsG RB
    (46) varsG -> . var_rowG
    (47) varsG -> . var_rowG varsG
    (48) varsG -> . var_matrixG
    (49) varsG -> . var_matrixG varsG
    (87) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL

    VAR             shift and go to state 36

    varsG                          shift and go to state 172
    var_rowG                       shift and go to state 16
    var_matrixG                    shift and go to state 17

state 142

    (80) expr -> expr MUL expr .
    (80) expr -> expr . MUL expr
    (81) expr -> expr . DIV expr
    (82) expr -> expr . PLUS expr
    (83) expr -> expr . MINUS expr

    SEMICOL         reduce using rule 80 (expr -> expr MUL expr .)
    MUL             reduce using rule 80 (expr -> expr MUL expr .)
    DIV             reduce using rule 80 (expr -> expr MUL expr .)
    PLUS            reduce using rule 80 (expr -> expr MUL expr .)
    MINUS           reduce using rule 80 (expr -> expr MUL expr .)
    GT              reduce using rule 80 (expr -> expr MUL expr .)
    LT              reduce using rule 80 (expr -> expr MUL expr .)
    EQUAL           reduce using rule 80 (expr -> expr MUL expr .)
    NEQ             reduce using rule 80 (expr -> expr MUL expr .)
    GEQ             reduce using rule 80 (expr -> expr MUL expr .)
    LEQ             reduce using rule 80 (expr -> expr MUL expr .)
    RP              reduce using rule 80 (expr -> expr MUL expr .)

  ! MUL             [ shift and go to state 106 ]
  ! DIV             [ shift and go to state 107 ]
  ! PLUS            [ shift and go to state 108 ]
  ! MINUS           [ shift and go to state 109 ]


state 143

    (84) expr -> CTE_I .

    MUL             reduce using rule 84 (expr -> CTE_I .)
    DIV             reduce using rule 84 (expr -> CTE_I .)
    PLUS            reduce using rule 84 (expr -> CTE_I .)
    MINUS           reduce using rule 84 (expr -> CTE_I .)
    SEMICOL         reduce using rule 84 (expr -> CTE_I .)
    GT              reduce using rule 84 (expr -> CTE_I .)
    LT              reduce using rule 84 (expr -> CTE_I .)
    EQUAL           reduce using rule 84 (expr -> CTE_I .)
    NEQ             reduce using rule 84 (expr -> CTE_I .)
    GEQ             reduce using rule 84 (expr -> CTE_I .)
    LEQ             reduce using rule 84 (expr -> CTE_I .)
    RP              reduce using rule 84 (expr -> CTE_I .)


state 144

    (85) expr -> CTE_F .

    MUL             reduce using rule 85 (expr -> CTE_F .)
    DIV             reduce using rule 85 (expr -> CTE_F .)
    PLUS            reduce using rule 85 (expr -> CTE_F .)
    MINUS           reduce using rule 85 (expr -> CTE_F .)
    SEMICOL         reduce using rule 85 (expr -> CTE_F .)
    GT              reduce using rule 85 (expr -> CTE_F .)
    LT              reduce using rule 85 (expr -> CTE_F .)
    EQUAL           reduce using rule 85 (expr -> CTE_F .)
    NEQ             reduce using rule 85 (expr -> CTE_F .)
    GEQ             reduce using rule 85 (expr -> CTE_F .)
    LEQ             reduce using rule 85 (expr -> CTE_F .)
    RP              reduce using rule 85 (expr -> CTE_F .)


state 145

    (81) expr -> expr DIV expr .
    (80) expr -> expr . MUL expr
    (81) expr -> expr . DIV expr
    (82) expr -> expr . PLUS expr
    (83) expr -> expr . MINUS expr

    SEMICOL         reduce using rule 81 (expr -> expr DIV expr .)
    MUL             reduce using rule 81 (expr -> expr DIV expr .)
    DIV             reduce using rule 81 (expr -> expr DIV expr .)
    PLUS            reduce using rule 81 (expr -> expr DIV expr .)
    MINUS           reduce using rule 81 (expr -> expr DIV expr .)
    GT              reduce using rule 81 (expr -> expr DIV expr .)
    LT              reduce using rule 81 (expr -> expr DIV expr .)
    EQUAL           reduce using rule 81 (expr -> expr DIV expr .)
    NEQ             reduce using rule 81 (expr -> expr DIV expr .)
    GEQ             reduce using rule 81 (expr -> expr DIV expr .)
    LEQ             reduce using rule 81 (expr -> expr DIV expr .)
    RP              reduce using rule 81 (expr -> expr DIV expr .)

  ! MUL             [ shift and go to state 106 ]
  ! DIV             [ shift and go to state 107 ]
  ! PLUS            [ shift and go to state 108 ]
  ! MINUS           [ shift and go to state 109 ]


state 146

    (82) expr -> expr PLUS expr .
    (80) expr -> expr . MUL expr
    (81) expr -> expr . DIV expr
    (82) expr -> expr . PLUS expr
    (83) expr -> expr . MINUS expr

    SEMICOL         reduce using rule 82 (expr -> expr PLUS expr .)
    PLUS            reduce using rule 82 (expr -> expr PLUS expr .)
    MINUS           reduce using rule 82 (expr -> expr PLUS expr .)
    GT              reduce using rule 82 (expr -> expr PLUS expr .)
    LT              reduce using rule 82 (expr -> expr PLUS expr .)
    EQUAL           reduce using rule 82 (expr -> expr PLUS expr .)
    NEQ             reduce using rule 82 (expr -> expr PLUS expr .)
    GEQ             reduce using rule 82 (expr -> expr PLUS expr .)
    LEQ             reduce using rule 82 (expr -> expr PLUS expr .)
    RP              reduce using rule 82 (expr -> expr PLUS expr .)
    MUL             shift and go to state 106
    DIV             shift and go to state 107

  ! MUL             [ reduce using rule 82 (expr -> expr PLUS expr .) ]
  ! DIV             [ reduce using rule 82 (expr -> expr PLUS expr .) ]
  ! PLUS            [ shift and go to state 108 ]
  ! MINUS           [ shift and go to state 109 ]


state 147

    (83) expr -> expr MINUS expr .
    (80) expr -> expr . MUL expr
    (81) expr -> expr . DIV expr
    (82) expr -> expr . PLUS expr
    (83) expr -> expr . MINUS expr

    SEMICOL         reduce using rule 83 (expr -> expr MINUS expr .)
    PLUS            reduce using rule 83 (expr -> expr MINUS expr .)
    MINUS           reduce using rule 83 (expr -> expr MINUS expr .)
    GT              reduce using rule 83 (expr -> expr MINUS expr .)
    LT              reduce using rule 83 (expr -> expr MINUS expr .)
    EQUAL           reduce using rule 83 (expr -> expr MINUS expr .)
    NEQ             reduce using rule 83 (expr -> expr MINUS expr .)
    GEQ             reduce using rule 83 (expr -> expr MINUS expr .)
    LEQ             reduce using rule 83 (expr -> expr MINUS expr .)
    RP              reduce using rule 83 (expr -> expr MINUS expr .)
    MUL             shift and go to state 106
    DIV             shift and go to state 107

  ! MUL             [ reduce using rule 83 (expr -> expr MINUS expr .) ]
  ! DIV             [ reduce using rule 83 (expr -> expr MINUS expr .) ]
  ! PLUS            [ shift and go to state 108 ]
  ! MINUS           [ shift and go to state 109 ]


state 148

    (65) value -> COMILLA ID COMILLA .

    COMMA           reduce using rule 65 (value -> COMILLA ID COMILLA .)
    SEMICOL         reduce using rule 65 (value -> COMILLA ID COMILLA .)
    RP              reduce using rule 65 (value -> COMILLA ID COMILLA .)


state 149

    (66) value -> COMILLAS ID COMILLAS .

    COMMA           reduce using rule 66 (value -> COMILLAS ID COMILLAS .)
    SEMICOL         reduce using rule 66 (value -> COMILLAS ID COMILLAS .)
    RP              reduce using rule 66 (value -> COMILLAS ID COMILLAS .)


state 150

    (40) vars3 -> ID SEMICOL vars .

    VOID            reduce using rule 40 (vars3 -> ID SEMICOL vars .)
    INT             reduce using rule 40 (vars3 -> ID SEMICOL vars .)
    FLOAT           reduce using rule 40 (vars3 -> ID SEMICOL vars .)
    CHAR            reduce using rule 40 (vars3 -> ID SEMICOL vars .)
    $end            reduce using rule 40 (vars3 -> ID SEMICOL vars .)
    ID              reduce using rule 40 (vars3 -> ID SEMICOL vars .)
    IF              reduce using rule 40 (vars3 -> ID SEMICOL vars .)
    VAR             reduce using rule 40 (vars3 -> ID SEMICOL vars .)
    RB              reduce using rule 40 (vars3 -> ID SEMICOL vars .)


state 151

    (56) vars3G -> ID SEMICOL varsG .
    (28) vars -> varsG .

  ! reduce/reduce conflict for VOID resolved using rule 28 (vars -> varsG .)
  ! reduce/reduce conflict for INT resolved using rule 28 (vars -> varsG .)
  ! reduce/reduce conflict for FLOAT resolved using rule 28 (vars -> varsG .)
  ! reduce/reduce conflict for CHAR resolved using rule 28 (vars -> varsG .)
  ! reduce/reduce conflict for $end resolved using rule 28 (vars -> varsG .)
  ! reduce/reduce conflict for ID resolved using rule 28 (vars -> varsG .)
  ! reduce/reduce conflict for IF resolved using rule 28 (vars -> varsG .)
  ! reduce/reduce conflict for VAR resolved using rule 28 (vars -> varsG .)
  ! reduce/reduce conflict for RB resolved using rule 28 (vars -> varsG .)
    VOID            reduce using rule 28 (vars -> varsG .)
    INT             reduce using rule 28 (vars -> varsG .)
    FLOAT           reduce using rule 28 (vars -> varsG .)
    CHAR            reduce using rule 28 (vars -> varsG .)
    $end            reduce using rule 28 (vars -> varsG .)
    ID              reduce using rule 28 (vars -> varsG .)
    IF              reduce using rule 28 (vars -> varsG .)
    VAR             reduce using rule 28 (vars -> varsG .)
    RB              reduce using rule 28 (vars -> varsG .)

  ! VOID            [ reduce using rule 56 (vars3G -> ID SEMICOL varsG .) ]
  ! INT             [ reduce using rule 56 (vars3G -> ID SEMICOL varsG .) ]
  ! FLOAT           [ reduce using rule 56 (vars3G -> ID SEMICOL varsG .) ]
  ! CHAR            [ reduce using rule 56 (vars3G -> ID SEMICOL varsG .) ]
  ! $end            [ reduce using rule 56 (vars3G -> ID SEMICOL varsG .) ]
  ! ID              [ reduce using rule 56 (vars3G -> ID SEMICOL varsG .) ]
  ! IF              [ reduce using rule 56 (vars3G -> ID SEMICOL varsG .) ]
  ! VAR             [ reduce using rule 56 (vars3G -> ID SEMICOL varsG .) ]
  ! RB              [ reduce using rule 56 (vars3G -> ID SEMICOL varsG .) ]


state 152

    (69) funcion -> tipo ID LP param RP LB statement . RB funcion
    (71) funcion -> tipo ID LP param RP LB statement . RB

    RB              shift and go to state 173


state 153

    (13) main -> tipo MAIN LP RP LB statement RB .

    $end            reduce using rule 13 (main -> tipo MAIN LP RP LB statement RB .)
    VOID            reduce using rule 13 (main -> tipo MAIN LP RP LB statement RB .)
    INT             reduce using rule 13 (main -> tipo MAIN LP RP LB statement RB .)
    FLOAT           reduce using rule 13 (main -> tipo MAIN LP RP LB statement RB .)
    CHAR            reduce using rule 13 (main -> tipo MAIN LP RP LB statement RB .)


state 154

    (15) statement -> asignacion SEMICOL . statement
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . ID row SEMICOL
    (19) statement -> . ID matrix SEMICOL
    (20) statement -> . empty
    (21) asignacion -> . ID IS value
    (101) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto
    (102) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto elseif
    (103) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto else
    (22) vars -> . VAR tipo vars1
    (23) vars -> . VAR tipo vars2
    (24) vars -> . VAR tipo vars3
    (25) vars -> . VAR tipo oper_aritmetica
    (26) vars -> . VAR tipo ID row SEMICOL
    (27) vars -> . VAR tipo ID matrix SEMICOL
    (28) vars -> . varsG
    (29) vars -> . var_row
    (30) vars -> . var_row vars
    (31) vars -> . var_matrix
    (32) vars -> . var_matrix vars
    (33) vars -> . empty
    (100) empty -> .
    (42) varsG -> . VAR tipo vars1G
    (43) varsG -> . VAR tipo vars2G
    (44) varsG -> . VAR tipo vars3G
    (45) varsG -> . VAR LB varsG RB
    (46) varsG -> . var_rowG
    (47) varsG -> . var_rowG varsG
    (48) varsG -> . var_matrixG
    (49) varsG -> . var_matrixG varsG
    (86) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (93) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (87) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
    ID              shift and go to state 119
    IF              shift and go to state 121
    VAR             shift and go to state 10
    RB              reduce using rule 100 (empty -> .)

  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! VAR             [ reduce using rule 100 (empty -> .) ]

    asignacion                     shift and go to state 116
    statement                      shift and go to state 174
    if                             shift and go to state 117
    vars                           shift and go to state 118
    empty                          shift and go to state 120
    varsG                          shift and go to state 12
    var_row                        shift and go to state 13
    var_matrix                     shift and go to state 14
    var_rowG                       shift and go to state 16
    var_matrixG                    shift and go to state 17

state 155

    (16) statement -> if statement .

    RB              reduce using rule 16 (statement -> if statement .)


state 156

    (17) statement -> vars statement .

    RB              reduce using rule 17 (statement -> vars statement .)


state 157

    (18) statement -> ID row . SEMICOL
    (99) matrix -> row . row
    (92) row -> . LC CTE_I RC

    SEMICOL         shift and go to state 175
    LC              shift and go to state 64

    row                            shift and go to state 71

state 158

    (19) statement -> ID matrix . SEMICOL

    SEMICOL         shift and go to state 176


state 159

    (21) asignacion -> ID IS . value
    (61) value -> . CTE_F
    (62) value -> . CTE_I
    (63) value -> . ID
    (64) value -> . CTE_C
    (65) value -> . COMILLA ID COMILLA
    (66) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 126
    CTE_I           shift and go to state 127
    ID              shift and go to state 78
    CTE_C           shift and go to state 83
    COMILLA         shift and go to state 84
    COMILLAS        shift and go to state 85

    value                          shift and go to state 177

state 160

    (101) if -> IF LP . expression RP check_bool gotof LB statement RB guarda_salto
    (102) if -> IF LP . expression RP check_bool gotof LB statement RB guarda_salto elseif
    (103) if -> IF LP . expression RP check_bool gotof LB statement RB guarda_salto else
    (110) expression -> . var_gt
    (111) expression -> . var_lt
    (112) expression -> . var_equal
    (113) expression -> . var_neq
    (114) expression -> . var_geq
    (115) expression -> . var_leq
    (116) expression -> . expr
    (117) expression -> . TRUE
    (118) expression -> . FALSE
    (119) expression -> . ID
    (74) var_gt -> . expr GT expr
    (73) var_lt -> . expr LT expr
    (77) var_equal -> . expr EQUAL expr
    (78) var_neq -> . expr NEQ expr
    (76) var_geq -> . expr GEQ expr
    (75) var_leq -> . expr LEQ expr
    (80) expr -> . expr MUL expr
    (81) expr -> . expr DIV expr
    (82) expr -> . expr PLUS expr
    (83) expr -> . expr MINUS expr
    (84) expr -> . CTE_I
    (85) expr -> . CTE_F

    TRUE            shift and go to state 186
    FALSE           shift and go to state 187
    ID              shift and go to state 188
    CTE_I           shift and go to state 143
    CTE_F           shift and go to state 144

    expression                     shift and go to state 178
    var_gt                         shift and go to state 179
    var_lt                         shift and go to state 180
    var_equal                      shift and go to state 181
    var_neq                        shift and go to state 182
    var_geq                        shift and go to state 183
    var_leq                        shift and go to state 184
    expr                           shift and go to state 185

state 161

    (68) funcion -> VOID ID LP param RP LB statement . RB funcion
    (70) funcion -> VOID ID LP param RP LB statement . RB

    RB              shift and go to state 189


state 162

    (14) main -> VOID tipo MAIN LP RP LB statement . RB

    RB              shift and go to state 190


state 163

    (87) var_rowG -> VAR tipo ID row IS LP . lista2 RP SEMICOL
    (90) lista2 -> . elem_lista COMMA lista2
    (91) lista2 -> . elem_lista COMMA elem_lista
    (88) elem_lista -> . value
    (89) elem_lista -> . empty
    (61) value -> . CTE_F
    (62) value -> . CTE_I
    (63) value -> . ID
    (64) value -> . CTE_C
    (65) value -> . COMILLA ID COMILLA
    (66) value -> . COMILLAS ID COMILLAS
    (100) empty -> .

    CTE_F           shift and go to state 126
    CTE_I           shift and go to state 127
    ID              shift and go to state 78
    CTE_C           shift and go to state 83
    COMILLA         shift and go to state 84
    COMILLAS        shift and go to state 85
    COMMA           reduce using rule 100 (empty -> .)

    lista2                         shift and go to state 191
    elem_lista                     shift and go to state 132
    value                          shift and go to state 133
    empty                          shift and go to state 134

state 164

    (94) var_matrixG -> VAR tipo ID matrix IS matrix2 . SEMICOL

    SEMICOL         shift and go to state 192


state 165

    (56) vars3G -> ID SEMICOL . varsG
    (57) vars3G -> ID SEMICOL .
    (42) varsG -> . VAR tipo vars1G
    (43) varsG -> . VAR tipo vars2G
    (44) varsG -> . VAR tipo vars3G
    (45) varsG -> . VAR LB varsG RB
    (46) varsG -> . var_rowG
    (47) varsG -> . var_rowG varsG
    (48) varsG -> . var_matrixG
    (49) varsG -> . var_matrixG varsG
    (87) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for VAR resolved as shift
    VOID            reduce using rule 57 (vars3G -> ID SEMICOL .)
    INT             reduce using rule 57 (vars3G -> ID SEMICOL .)
    FLOAT           reduce using rule 57 (vars3G -> ID SEMICOL .)
    CHAR            reduce using rule 57 (vars3G -> ID SEMICOL .)
    $end            reduce using rule 57 (vars3G -> ID SEMICOL .)
    ID              reduce using rule 57 (vars3G -> ID SEMICOL .)
    IF              reduce using rule 57 (vars3G -> ID SEMICOL .)
    RB              reduce using rule 57 (vars3G -> ID SEMICOL .)
    VAR             shift and go to state 36

  ! VAR             [ reduce using rule 57 (vars3G -> ID SEMICOL .) ]

    varsG                          shift and go to state 193
    var_rowG                       shift and go to state 16
    var_matrixG                    shift and go to state 17

state 166

    (86) var_row -> VAR tipo ID row IS LP lista2 RP . SEMICOL
    (87) var_rowG -> VAR tipo ID row IS LP lista2 RP . SEMICOL

    SEMICOL         shift and go to state 194


state 167

    (90) lista2 -> elem_lista COMMA . lista2
    (91) lista2 -> elem_lista COMMA . elem_lista
    (90) lista2 -> . elem_lista COMMA lista2
    (91) lista2 -> . elem_lista COMMA elem_lista
    (88) elem_lista -> . value
    (89) elem_lista -> . empty
    (61) value -> . CTE_F
    (62) value -> . CTE_I
    (63) value -> . ID
    (64) value -> . CTE_C
    (65) value -> . COMILLA ID COMILLA
    (66) value -> . COMILLAS ID COMILLAS
    (100) empty -> .

    CTE_F           shift and go to state 126
    CTE_I           shift and go to state 127
    ID              shift and go to state 78
    CTE_C           shift and go to state 83
    COMILLA         shift and go to state 84
    COMILLAS        shift and go to state 85
    COMMA           reduce using rule 100 (empty -> .)
    RP              reduce using rule 100 (empty -> .)

    elem_lista                     shift and go to state 195
    lista2                         shift and go to state 196
    value                          shift and go to state 133
    empty                          shift and go to state 134

state 168

    (95) matrix2 -> LP lista2 RP . COMMA matrix2
    (96) matrix2 -> LP lista2 RP . COMMA LP lista2 RP

    COMMA           shift and go to state 197


state 169

    (36) vars2 -> ID IS . value COMMA vars2
    (37) vars2 -> ID IS . value COMMA
    (38) vars2 -> ID IS . value SEMICOL vars
    (61) value -> . CTE_F
    (62) value -> . CTE_I
    (63) value -> . ID
    (64) value -> . CTE_C
    (65) value -> . COMILLA ID COMILLA
    (66) value -> . COMILLAS ID COMILLAS

    CTE_F           shift and go to state 126
    CTE_I           shift and go to state 127
    ID              shift and go to state 78
    CTE_C           shift and go to state 83
    COMILLA         shift and go to state 84
    COMILLAS        shift and go to state 85

    value                          shift and go to state 198

state 170

    (52) vars2G -> ID . IS value check_type COMMA vars2G
    (53) vars2G -> ID . IS value check_type SEMICOL varsG

    IS              shift and go to state 95


state 171

    (52) vars2G -> ID IS value check_type COMMA vars2G .

    VOID            reduce using rule 52 (vars2G -> ID IS value check_type COMMA vars2G .)
    INT             reduce using rule 52 (vars2G -> ID IS value check_type COMMA vars2G .)
    FLOAT           reduce using rule 52 (vars2G -> ID IS value check_type COMMA vars2G .)
    CHAR            reduce using rule 52 (vars2G -> ID IS value check_type COMMA vars2G .)
    $end            reduce using rule 52 (vars2G -> ID IS value check_type COMMA vars2G .)
    ID              reduce using rule 52 (vars2G -> ID IS value check_type COMMA vars2G .)
    IF              reduce using rule 52 (vars2G -> ID IS value check_type COMMA vars2G .)
    VAR             reduce using rule 52 (vars2G -> ID IS value check_type COMMA vars2G .)
    RB              reduce using rule 52 (vars2G -> ID IS value check_type COMMA vars2G .)


state 172

    (53) vars2G -> ID IS value check_type SEMICOL varsG .

    VOID            reduce using rule 53 (vars2G -> ID IS value check_type SEMICOL varsG .)
    INT             reduce using rule 53 (vars2G -> ID IS value check_type SEMICOL varsG .)
    FLOAT           reduce using rule 53 (vars2G -> ID IS value check_type SEMICOL varsG .)
    CHAR            reduce using rule 53 (vars2G -> ID IS value check_type SEMICOL varsG .)
    $end            reduce using rule 53 (vars2G -> ID IS value check_type SEMICOL varsG .)
    ID              reduce using rule 53 (vars2G -> ID IS value check_type SEMICOL varsG .)
    IF              reduce using rule 53 (vars2G -> ID IS value check_type SEMICOL varsG .)
    VAR             reduce using rule 53 (vars2G -> ID IS value check_type SEMICOL varsG .)
    RB              reduce using rule 53 (vars2G -> ID IS value check_type SEMICOL varsG .)


state 173

    (69) funcion -> tipo ID LP param RP LB statement RB . funcion
    (71) funcion -> tipo ID LP param RP LB statement RB .
    (68) funcion -> . VOID ID LP param RP LB statement RB funcion
    (69) funcion -> . tipo ID LP param RP LB statement RB funcion
    (70) funcion -> . VOID ID LP param RP LB statement RB
    (71) funcion -> . tipo ID LP param RP LB statement RB
    (58) tipo -> . INT
    (59) tipo -> . FLOAT
    (60) tipo -> . CHAR

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    $end            reduce using rule 71 (funcion -> tipo ID LP param RP LB statement RB .)
    VOID            shift and go to state 40
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

  ! VOID            [ reduce using rule 71 (funcion -> tipo ID LP param RP LB statement RB .) ]
  ! INT             [ reduce using rule 71 (funcion -> tipo ID LP param RP LB statement RB .) ]
  ! FLOAT           [ reduce using rule 71 (funcion -> tipo ID LP param RP LB statement RB .) ]
  ! CHAR            [ reduce using rule 71 (funcion -> tipo ID LP param RP LB statement RB .) ]

    tipo                           shift and go to state 41
    funcion                        shift and go to state 199

state 174

    (15) statement -> asignacion SEMICOL statement .

    RB              reduce using rule 15 (statement -> asignacion SEMICOL statement .)


state 175

    (18) statement -> ID row SEMICOL .

    RB              reduce using rule 18 (statement -> ID row SEMICOL .)


state 176

    (19) statement -> ID matrix SEMICOL .

    RB              reduce using rule 19 (statement -> ID matrix SEMICOL .)


state 177

    (21) asignacion -> ID IS value .

    SEMICOL         reduce using rule 21 (asignacion -> ID IS value .)


state 178

    (101) if -> IF LP expression . RP check_bool gotof LB statement RB guarda_salto
    (102) if -> IF LP expression . RP check_bool gotof LB statement RB guarda_salto elseif
    (103) if -> IF LP expression . RP check_bool gotof LB statement RB guarda_salto else

    RP              shift and go to state 200


state 179

    (110) expression -> var_gt .

    RP              reduce using rule 110 (expression -> var_gt .)


state 180

    (111) expression -> var_lt .

    RP              reduce using rule 111 (expression -> var_lt .)


state 181

    (112) expression -> var_equal .

    RP              reduce using rule 112 (expression -> var_equal .)


state 182

    (113) expression -> var_neq .

    RP              reduce using rule 113 (expression -> var_neq .)


state 183

    (114) expression -> var_geq .

    RP              reduce using rule 114 (expression -> var_geq .)


state 184

    (115) expression -> var_leq .

    RP              reduce using rule 115 (expression -> var_leq .)


state 185

    (116) expression -> expr .
    (74) var_gt -> expr . GT expr
    (73) var_lt -> expr . LT expr
    (77) var_equal -> expr . EQUAL expr
    (78) var_neq -> expr . NEQ expr
    (76) var_geq -> expr . GEQ expr
    (75) var_leq -> expr . LEQ expr
    (80) expr -> expr . MUL expr
    (81) expr -> expr . DIV expr
    (82) expr -> expr . PLUS expr
    (83) expr -> expr . MINUS expr

    RP              reduce using rule 116 (expression -> expr .)
    GT              shift and go to state 201
    LT              shift and go to state 202
    EQUAL           shift and go to state 203
    NEQ             shift and go to state 204
    GEQ             shift and go to state 205
    LEQ             shift and go to state 206
    MUL             shift and go to state 106
    DIV             shift and go to state 107
    PLUS            shift and go to state 108
    MINUS           shift and go to state 109


state 186

    (117) expression -> TRUE .

    RP              reduce using rule 117 (expression -> TRUE .)


state 187

    (118) expression -> FALSE .

    RP              reduce using rule 118 (expression -> FALSE .)


state 188

    (119) expression -> ID .

    RP              reduce using rule 119 (expression -> ID .)


state 189

    (68) funcion -> VOID ID LP param RP LB statement RB . funcion
    (70) funcion -> VOID ID LP param RP LB statement RB .
    (68) funcion -> . VOID ID LP param RP LB statement RB funcion
    (69) funcion -> . tipo ID LP param RP LB statement RB funcion
    (70) funcion -> . VOID ID LP param RP LB statement RB
    (71) funcion -> . tipo ID LP param RP LB statement RB
    (58) tipo -> . INT
    (59) tipo -> . FLOAT
    (60) tipo -> . CHAR

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    $end            reduce using rule 70 (funcion -> VOID ID LP param RP LB statement RB .)
    VOID            shift and go to state 40
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

  ! VOID            [ reduce using rule 70 (funcion -> VOID ID LP param RP LB statement RB .) ]
  ! INT             [ reduce using rule 70 (funcion -> VOID ID LP param RP LB statement RB .) ]
  ! FLOAT           [ reduce using rule 70 (funcion -> VOID ID LP param RP LB statement RB .) ]
  ! CHAR            [ reduce using rule 70 (funcion -> VOID ID LP param RP LB statement RB .) ]

    funcion                        shift and go to state 207
    tipo                           shift and go to state 41

state 190

    (14) main -> VOID tipo MAIN LP RP LB statement RB .

    $end            reduce using rule 14 (main -> VOID tipo MAIN LP RP LB statement RB .)
    VOID            reduce using rule 14 (main -> VOID tipo MAIN LP RP LB statement RB .)
    INT             reduce using rule 14 (main -> VOID tipo MAIN LP RP LB statement RB .)
    FLOAT           reduce using rule 14 (main -> VOID tipo MAIN LP RP LB statement RB .)
    CHAR            reduce using rule 14 (main -> VOID tipo MAIN LP RP LB statement RB .)


state 191

    (87) var_rowG -> VAR tipo ID row IS LP lista2 . RP SEMICOL

    RP              shift and go to state 208


state 192

    (94) var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .

    VAR             reduce using rule 94 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    VOID            reduce using rule 94 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    INT             reduce using rule 94 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    FLOAT           reduce using rule 94 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    CHAR            reduce using rule 94 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    $end            reduce using rule 94 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    ID              reduce using rule 94 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    IF              reduce using rule 94 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)
    RB              reduce using rule 94 (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL .)


state 193

    (56) vars3G -> ID SEMICOL varsG .

    VOID            reduce using rule 56 (vars3G -> ID SEMICOL varsG .)
    INT             reduce using rule 56 (vars3G -> ID SEMICOL varsG .)
    FLOAT           reduce using rule 56 (vars3G -> ID SEMICOL varsG .)
    CHAR            reduce using rule 56 (vars3G -> ID SEMICOL varsG .)
    $end            reduce using rule 56 (vars3G -> ID SEMICOL varsG .)
    ID              reduce using rule 56 (vars3G -> ID SEMICOL varsG .)
    IF              reduce using rule 56 (vars3G -> ID SEMICOL varsG .)
    VAR             reduce using rule 56 (vars3G -> ID SEMICOL varsG .)
    RB              reduce using rule 56 (vars3G -> ID SEMICOL varsG .)


state 194

    (86) var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .
    (87) var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .

  ! reduce/reduce conflict for VAR resolved using rule 86 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
  ! reduce/reduce conflict for VOID resolved using rule 86 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
  ! reduce/reduce conflict for INT resolved using rule 86 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
  ! reduce/reduce conflict for FLOAT resolved using rule 86 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
  ! reduce/reduce conflict for CHAR resolved using rule 86 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
  ! reduce/reduce conflict for $end resolved using rule 86 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
  ! reduce/reduce conflict for ID resolved using rule 86 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
  ! reduce/reduce conflict for IF resolved using rule 86 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
  ! reduce/reduce conflict for RB resolved using rule 86 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    VAR             reduce using rule 86 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    VOID            reduce using rule 86 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    INT             reduce using rule 86 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    FLOAT           reduce using rule 86 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    CHAR            reduce using rule 86 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    $end            reduce using rule 86 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    ID              reduce using rule 86 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    IF              reduce using rule 86 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    RB              reduce using rule 86 (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL .)

  ! VAR             [ reduce using rule 87 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .) ]
  ! VOID            [ reduce using rule 87 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .) ]
  ! INT             [ reduce using rule 87 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .) ]
  ! FLOAT           [ reduce using rule 87 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .) ]
  ! CHAR            [ reduce using rule 87 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .) ]
  ! $end            [ reduce using rule 87 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .) ]
  ! ID              [ reduce using rule 87 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .) ]
  ! IF              [ reduce using rule 87 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .) ]
  ! RB              [ reduce using rule 87 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .) ]


state 195

    (91) lista2 -> elem_lista COMMA elem_lista .
    (90) lista2 -> elem_lista . COMMA lista2
    (91) lista2 -> elem_lista . COMMA elem_lista

    RP              reduce using rule 91 (lista2 -> elem_lista COMMA elem_lista .)
    COMMA           shift and go to state 167


state 196

    (90) lista2 -> elem_lista COMMA lista2 .

    RP              reduce using rule 90 (lista2 -> elem_lista COMMA lista2 .)


state 197

    (95) matrix2 -> LP lista2 RP COMMA . matrix2
    (96) matrix2 -> LP lista2 RP COMMA . LP lista2 RP
    (95) matrix2 -> . LP lista2 RP COMMA matrix2
    (96) matrix2 -> . LP lista2 RP COMMA LP lista2 RP

    LP              shift and go to state 209

    matrix2                        shift and go to state 210

state 198

    (36) vars2 -> ID IS value . COMMA vars2
    (37) vars2 -> ID IS value . COMMA
    (38) vars2 -> ID IS value . SEMICOL vars

    COMMA           shift and go to state 102
    SEMICOL         shift and go to state 103


state 199

    (69) funcion -> tipo ID LP param RP LB statement RB funcion .

    VOID            reduce using rule 69 (funcion -> tipo ID LP param RP LB statement RB funcion .)
    INT             reduce using rule 69 (funcion -> tipo ID LP param RP LB statement RB funcion .)
    FLOAT           reduce using rule 69 (funcion -> tipo ID LP param RP LB statement RB funcion .)
    CHAR            reduce using rule 69 (funcion -> tipo ID LP param RP LB statement RB funcion .)
    $end            reduce using rule 69 (funcion -> tipo ID LP param RP LB statement RB funcion .)


state 200

    (101) if -> IF LP expression RP . check_bool gotof LB statement RB guarda_salto
    (102) if -> IF LP expression RP . check_bool gotof LB statement RB guarda_salto elseif
    (103) if -> IF LP expression RP . check_bool gotof LB statement RB guarda_salto else
    (120) check_bool -> .

    LB              reduce using rule 120 (check_bool -> .)

    check_bool                     shift and go to state 211

state 201

    (74) var_gt -> expr GT . expr
    (80) expr -> . expr MUL expr
    (81) expr -> . expr DIV expr
    (82) expr -> . expr PLUS expr
    (83) expr -> . expr MINUS expr
    (84) expr -> . CTE_I
    (85) expr -> . CTE_F

    CTE_I           shift and go to state 143
    CTE_F           shift and go to state 144

    expr                           shift and go to state 212

state 202

    (73) var_lt -> expr LT . expr
    (80) expr -> . expr MUL expr
    (81) expr -> . expr DIV expr
    (82) expr -> . expr PLUS expr
    (83) expr -> . expr MINUS expr
    (84) expr -> . CTE_I
    (85) expr -> . CTE_F

    CTE_I           shift and go to state 143
    CTE_F           shift and go to state 144

    expr                           shift and go to state 213

state 203

    (77) var_equal -> expr EQUAL . expr
    (80) expr -> . expr MUL expr
    (81) expr -> . expr DIV expr
    (82) expr -> . expr PLUS expr
    (83) expr -> . expr MINUS expr
    (84) expr -> . CTE_I
    (85) expr -> . CTE_F

    CTE_I           shift and go to state 143
    CTE_F           shift and go to state 144

    expr                           shift and go to state 214

state 204

    (78) var_neq -> expr NEQ . expr
    (80) expr -> . expr MUL expr
    (81) expr -> . expr DIV expr
    (82) expr -> . expr PLUS expr
    (83) expr -> . expr MINUS expr
    (84) expr -> . CTE_I
    (85) expr -> . CTE_F

    CTE_I           shift and go to state 143
    CTE_F           shift and go to state 144

    expr                           shift and go to state 215

state 205

    (76) var_geq -> expr GEQ . expr
    (80) expr -> . expr MUL expr
    (81) expr -> . expr DIV expr
    (82) expr -> . expr PLUS expr
    (83) expr -> . expr MINUS expr
    (84) expr -> . CTE_I
    (85) expr -> . CTE_F

    CTE_I           shift and go to state 143
    CTE_F           shift and go to state 144

    expr                           shift and go to state 216

state 206

    (75) var_leq -> expr LEQ . expr
    (80) expr -> . expr MUL expr
    (81) expr -> . expr DIV expr
    (82) expr -> . expr PLUS expr
    (83) expr -> . expr MINUS expr
    (84) expr -> . CTE_I
    (85) expr -> . CTE_F

    CTE_I           shift and go to state 143
    CTE_F           shift and go to state 144

    expr                           shift and go to state 217

state 207

    (68) funcion -> VOID ID LP param RP LB statement RB funcion .

    VOID            reduce using rule 68 (funcion -> VOID ID LP param RP LB statement RB funcion .)
    INT             reduce using rule 68 (funcion -> VOID ID LP param RP LB statement RB funcion .)
    FLOAT           reduce using rule 68 (funcion -> VOID ID LP param RP LB statement RB funcion .)
    CHAR            reduce using rule 68 (funcion -> VOID ID LP param RP LB statement RB funcion .)
    $end            reduce using rule 68 (funcion -> VOID ID LP param RP LB statement RB funcion .)


state 208

    (87) var_rowG -> VAR tipo ID row IS LP lista2 RP . SEMICOL

    SEMICOL         shift and go to state 218


state 209

    (96) matrix2 -> LP lista2 RP COMMA LP . lista2 RP
    (95) matrix2 -> LP . lista2 RP COMMA matrix2
    (96) matrix2 -> LP . lista2 RP COMMA LP lista2 RP
    (90) lista2 -> . elem_lista COMMA lista2
    (91) lista2 -> . elem_lista COMMA elem_lista
    (88) elem_lista -> . value
    (89) elem_lista -> . empty
    (61) value -> . CTE_F
    (62) value -> . CTE_I
    (63) value -> . ID
    (64) value -> . CTE_C
    (65) value -> . COMILLA ID COMILLA
    (66) value -> . COMILLAS ID COMILLAS
    (100) empty -> .

    CTE_F           shift and go to state 126
    CTE_I           shift and go to state 127
    ID              shift and go to state 78
    CTE_C           shift and go to state 83
    COMILLA         shift and go to state 84
    COMILLAS        shift and go to state 85
    COMMA           reduce using rule 100 (empty -> .)

    lista2                         shift and go to state 219
    elem_lista                     shift and go to state 132
    value                          shift and go to state 133
    empty                          shift and go to state 134

state 210

    (95) matrix2 -> LP lista2 RP COMMA matrix2 .

    SEMICOL         reduce using rule 95 (matrix2 -> LP lista2 RP COMMA matrix2 .)


state 211

    (101) if -> IF LP expression RP check_bool . gotof LB statement RB guarda_salto
    (102) if -> IF LP expression RP check_bool . gotof LB statement RB guarda_salto elseif
    (103) if -> IF LP expression RP check_bool . gotof LB statement RB guarda_salto else
    (109) gotof -> .

    LB              reduce using rule 109 (gotof -> .)

    gotof                          shift and go to state 220

state 212

    (74) var_gt -> expr GT expr .
    (80) expr -> expr . MUL expr
    (81) expr -> expr . DIV expr
    (82) expr -> expr . PLUS expr
    (83) expr -> expr . MINUS expr

    RP              reduce using rule 74 (var_gt -> expr GT expr .)
    MUL             shift and go to state 106
    DIV             shift and go to state 107
    PLUS            shift and go to state 108
    MINUS           shift and go to state 109


state 213

    (73) var_lt -> expr LT expr .
    (80) expr -> expr . MUL expr
    (81) expr -> expr . DIV expr
    (82) expr -> expr . PLUS expr
    (83) expr -> expr . MINUS expr

    RP              reduce using rule 73 (var_lt -> expr LT expr .)
    MUL             shift and go to state 106
    DIV             shift and go to state 107
    PLUS            shift and go to state 108
    MINUS           shift and go to state 109


state 214

    (77) var_equal -> expr EQUAL expr .
    (80) expr -> expr . MUL expr
    (81) expr -> expr . DIV expr
    (82) expr -> expr . PLUS expr
    (83) expr -> expr . MINUS expr

    RP              reduce using rule 77 (var_equal -> expr EQUAL expr .)
    MUL             shift and go to state 106
    DIV             shift and go to state 107
    PLUS            shift and go to state 108
    MINUS           shift and go to state 109


state 215

    (78) var_neq -> expr NEQ expr .
    (80) expr -> expr . MUL expr
    (81) expr -> expr . DIV expr
    (82) expr -> expr . PLUS expr
    (83) expr -> expr . MINUS expr

    RP              reduce using rule 78 (var_neq -> expr NEQ expr .)
    MUL             shift and go to state 106
    DIV             shift and go to state 107
    PLUS            shift and go to state 108
    MINUS           shift and go to state 109


state 216

    (76) var_geq -> expr GEQ expr .
    (80) expr -> expr . MUL expr
    (81) expr -> expr . DIV expr
    (82) expr -> expr . PLUS expr
    (83) expr -> expr . MINUS expr

    RP              reduce using rule 76 (var_geq -> expr GEQ expr .)
    MUL             shift and go to state 106
    DIV             shift and go to state 107
    PLUS            shift and go to state 108
    MINUS           shift and go to state 109


state 217

    (75) var_leq -> expr LEQ expr .
    (80) expr -> expr . MUL expr
    (81) expr -> expr . DIV expr
    (82) expr -> expr . PLUS expr
    (83) expr -> expr . MINUS expr

    RP              reduce using rule 75 (var_leq -> expr LEQ expr .)
    MUL             shift and go to state 106
    DIV             shift and go to state 107
    PLUS            shift and go to state 108
    MINUS           shift and go to state 109


state 218

    (87) var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .

    VAR             reduce using rule 87 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    VOID            reduce using rule 87 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    INT             reduce using rule 87 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    FLOAT           reduce using rule 87 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    CHAR            reduce using rule 87 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    $end            reduce using rule 87 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    ID              reduce using rule 87 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    IF              reduce using rule 87 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)
    RB              reduce using rule 87 (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL .)


state 219

    (96) matrix2 -> LP lista2 RP COMMA LP lista2 . RP
    (95) matrix2 -> LP lista2 . RP COMMA matrix2
    (96) matrix2 -> LP lista2 . RP COMMA LP lista2 RP

    RP              shift and go to state 221


state 220

    (101) if -> IF LP expression RP check_bool gotof . LB statement RB guarda_salto
    (102) if -> IF LP expression RP check_bool gotof . LB statement RB guarda_salto elseif
    (103) if -> IF LP expression RP check_bool gotof . LB statement RB guarda_salto else

    LB              shift and go to state 222


state 221

    (96) matrix2 -> LP lista2 RP COMMA LP lista2 RP .
    (95) matrix2 -> LP lista2 RP . COMMA matrix2
    (96) matrix2 -> LP lista2 RP . COMMA LP lista2 RP

    SEMICOL         reduce using rule 96 (matrix2 -> LP lista2 RP COMMA LP lista2 RP .)
    COMMA           shift and go to state 197


state 222

    (101) if -> IF LP expression RP check_bool gotof LB . statement RB guarda_salto
    (102) if -> IF LP expression RP check_bool gotof LB . statement RB guarda_salto elseif
    (103) if -> IF LP expression RP check_bool gotof LB . statement RB guarda_salto else
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . ID row SEMICOL
    (19) statement -> . ID matrix SEMICOL
    (20) statement -> . empty
    (21) asignacion -> . ID IS value
    (101) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto
    (102) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto elseif
    (103) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto else
    (22) vars -> . VAR tipo vars1
    (23) vars -> . VAR tipo vars2
    (24) vars -> . VAR tipo vars3
    (25) vars -> . VAR tipo oper_aritmetica
    (26) vars -> . VAR tipo ID row SEMICOL
    (27) vars -> . VAR tipo ID matrix SEMICOL
    (28) vars -> . varsG
    (29) vars -> . var_row
    (30) vars -> . var_row vars
    (31) vars -> . var_matrix
    (32) vars -> . var_matrix vars
    (33) vars -> . empty
    (100) empty -> .
    (42) varsG -> . VAR tipo vars1G
    (43) varsG -> . VAR tipo vars2G
    (44) varsG -> . VAR tipo vars3G
    (45) varsG -> . VAR LB varsG RB
    (46) varsG -> . var_rowG
    (47) varsG -> . var_rowG varsG
    (48) varsG -> . var_matrixG
    (49) varsG -> . var_matrixG varsG
    (86) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (93) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (87) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
    ID              shift and go to state 119
    IF              shift and go to state 121
    VAR             shift and go to state 10
    RB              reduce using rule 100 (empty -> .)

  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! VAR             [ reduce using rule 100 (empty -> .) ]

    statement                      shift and go to state 223
    asignacion                     shift and go to state 116
    if                             shift and go to state 117
    vars                           shift and go to state 118
    empty                          shift and go to state 120
    varsG                          shift and go to state 12
    var_row                        shift and go to state 13
    var_matrix                     shift and go to state 14
    var_rowG                       shift and go to state 16
    var_matrixG                    shift and go to state 17

state 223

    (101) if -> IF LP expression RP check_bool gotof LB statement . RB guarda_salto
    (102) if -> IF LP expression RP check_bool gotof LB statement . RB guarda_salto elseif
    (103) if -> IF LP expression RP check_bool gotof LB statement . RB guarda_salto else

    RB              shift and go to state 224


state 224

    (101) if -> IF LP expression RP check_bool gotof LB statement RB . guarda_salto
    (102) if -> IF LP expression RP check_bool gotof LB statement RB . guarda_salto elseif
    (103) if -> IF LP expression RP check_bool gotof LB statement RB . guarda_salto else
    (121) guarda_salto -> .

    ELSEIF          reduce using rule 121 (guarda_salto -> .)
    ELSE            reduce using rule 121 (guarda_salto -> .)
    ID              reduce using rule 121 (guarda_salto -> .)
    IF              reduce using rule 121 (guarda_salto -> .)
    VAR             reduce using rule 121 (guarda_salto -> .)
    RB              reduce using rule 121 (guarda_salto -> .)

    guarda_salto                   shift and go to state 225

state 225

    (101) if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto .
    (102) if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto . elseif
    (103) if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto . else
    (104) elseif -> . ELSEIF goto LP expression RP check_bool gotof LB statement RB guarda_salto
    (105) elseif -> . ELSEIF goto LP expression RP check_bool gotof LB statement RB guarda_salto elseif
    (106) elseif -> . ELSEIF goto LP expression RP check_bool gotof LB statement RB guarda_salto else
    (107) else -> . ELSE goto guarda_salto LB statement RB guarda_salto

    ID              reduce using rule 101 (if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto .)
    IF              reduce using rule 101 (if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto .)
    VAR             reduce using rule 101 (if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto .)
    RB              reduce using rule 101 (if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto .)
    ELSEIF          shift and go to state 228
    ELSE            shift and go to state 229

    elseif                         shift and go to state 226
    else                           shift and go to state 227

state 226

    (102) if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto elseif .

    ID              reduce using rule 102 (if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto elseif .)
    IF              reduce using rule 102 (if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto elseif .)
    VAR             reduce using rule 102 (if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto elseif .)
    RB              reduce using rule 102 (if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto elseif .)


state 227

    (103) if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto else .

    ID              reduce using rule 103 (if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto else .)
    IF              reduce using rule 103 (if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto else .)
    VAR             reduce using rule 103 (if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto else .)
    RB              reduce using rule 103 (if -> IF LP expression RP check_bool gotof LB statement RB guarda_salto else .)


state 228

    (104) elseif -> ELSEIF . goto LP expression RP check_bool gotof LB statement RB guarda_salto
    (105) elseif -> ELSEIF . goto LP expression RP check_bool gotof LB statement RB guarda_salto elseif
    (106) elseif -> ELSEIF . goto LP expression RP check_bool gotof LB statement RB guarda_salto else
    (108) goto -> .

    LP              reduce using rule 108 (goto -> .)

    goto                           shift and go to state 230

state 229

    (107) else -> ELSE . goto guarda_salto LB statement RB guarda_salto
    (108) goto -> .

    LB              reduce using rule 108 (goto -> .)

    goto                           shift and go to state 231

state 230

    (104) elseif -> ELSEIF goto . LP expression RP check_bool gotof LB statement RB guarda_salto
    (105) elseif -> ELSEIF goto . LP expression RP check_bool gotof LB statement RB guarda_salto elseif
    (106) elseif -> ELSEIF goto . LP expression RP check_bool gotof LB statement RB guarda_salto else

    LP              shift and go to state 232


state 231

    (107) else -> ELSE goto . guarda_salto LB statement RB guarda_salto
    (121) guarda_salto -> .

    LB              reduce using rule 121 (guarda_salto -> .)

    guarda_salto                   shift and go to state 233

state 232

    (104) elseif -> ELSEIF goto LP . expression RP check_bool gotof LB statement RB guarda_salto
    (105) elseif -> ELSEIF goto LP . expression RP check_bool gotof LB statement RB guarda_salto elseif
    (106) elseif -> ELSEIF goto LP . expression RP check_bool gotof LB statement RB guarda_salto else
    (110) expression -> . var_gt
    (111) expression -> . var_lt
    (112) expression -> . var_equal
    (113) expression -> . var_neq
    (114) expression -> . var_geq
    (115) expression -> . var_leq
    (116) expression -> . expr
    (117) expression -> . TRUE
    (118) expression -> . FALSE
    (119) expression -> . ID
    (74) var_gt -> . expr GT expr
    (73) var_lt -> . expr LT expr
    (77) var_equal -> . expr EQUAL expr
    (78) var_neq -> . expr NEQ expr
    (76) var_geq -> . expr GEQ expr
    (75) var_leq -> . expr LEQ expr
    (80) expr -> . expr MUL expr
    (81) expr -> . expr DIV expr
    (82) expr -> . expr PLUS expr
    (83) expr -> . expr MINUS expr
    (84) expr -> . CTE_I
    (85) expr -> . CTE_F

    TRUE            shift and go to state 186
    FALSE           shift and go to state 187
    ID              shift and go to state 188
    CTE_I           shift and go to state 143
    CTE_F           shift and go to state 144

    expression                     shift and go to state 234
    var_gt                         shift and go to state 179
    var_lt                         shift and go to state 180
    var_equal                      shift and go to state 181
    var_neq                        shift and go to state 182
    var_geq                        shift and go to state 183
    var_leq                        shift and go to state 184
    expr                           shift and go to state 185

state 233

    (107) else -> ELSE goto guarda_salto . LB statement RB guarda_salto

    LB              shift and go to state 235


state 234

    (104) elseif -> ELSEIF goto LP expression . RP check_bool gotof LB statement RB guarda_salto
    (105) elseif -> ELSEIF goto LP expression . RP check_bool gotof LB statement RB guarda_salto elseif
    (106) elseif -> ELSEIF goto LP expression . RP check_bool gotof LB statement RB guarda_salto else

    RP              shift and go to state 236


state 235

    (107) else -> ELSE goto guarda_salto LB . statement RB guarda_salto
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . ID row SEMICOL
    (19) statement -> . ID matrix SEMICOL
    (20) statement -> . empty
    (21) asignacion -> . ID IS value
    (101) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto
    (102) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto elseif
    (103) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto else
    (22) vars -> . VAR tipo vars1
    (23) vars -> . VAR tipo vars2
    (24) vars -> . VAR tipo vars3
    (25) vars -> . VAR tipo oper_aritmetica
    (26) vars -> . VAR tipo ID row SEMICOL
    (27) vars -> . VAR tipo ID matrix SEMICOL
    (28) vars -> . varsG
    (29) vars -> . var_row
    (30) vars -> . var_row vars
    (31) vars -> . var_matrix
    (32) vars -> . var_matrix vars
    (33) vars -> . empty
    (100) empty -> .
    (42) varsG -> . VAR tipo vars1G
    (43) varsG -> . VAR tipo vars2G
    (44) varsG -> . VAR tipo vars3G
    (45) varsG -> . VAR LB varsG RB
    (46) varsG -> . var_rowG
    (47) varsG -> . var_rowG varsG
    (48) varsG -> . var_matrixG
    (49) varsG -> . var_matrixG varsG
    (86) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (93) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (87) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
    ID              shift and go to state 119
    IF              shift and go to state 121
    VAR             shift and go to state 10
    RB              reduce using rule 100 (empty -> .)

  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! VAR             [ reduce using rule 100 (empty -> .) ]

    statement                      shift and go to state 237
    asignacion                     shift and go to state 116
    if                             shift and go to state 117
    vars                           shift and go to state 118
    empty                          shift and go to state 120
    varsG                          shift and go to state 12
    var_row                        shift and go to state 13
    var_matrix                     shift and go to state 14
    var_rowG                       shift and go to state 16
    var_matrixG                    shift and go to state 17

state 236

    (104) elseif -> ELSEIF goto LP expression RP . check_bool gotof LB statement RB guarda_salto
    (105) elseif -> ELSEIF goto LP expression RP . check_bool gotof LB statement RB guarda_salto elseif
    (106) elseif -> ELSEIF goto LP expression RP . check_bool gotof LB statement RB guarda_salto else
    (120) check_bool -> .

    LB              reduce using rule 120 (check_bool -> .)

    check_bool                     shift and go to state 238

state 237

    (107) else -> ELSE goto guarda_salto LB statement . RB guarda_salto

    RB              shift and go to state 239


state 238

    (104) elseif -> ELSEIF goto LP expression RP check_bool . gotof LB statement RB guarda_salto
    (105) elseif -> ELSEIF goto LP expression RP check_bool . gotof LB statement RB guarda_salto elseif
    (106) elseif -> ELSEIF goto LP expression RP check_bool . gotof LB statement RB guarda_salto else
    (109) gotof -> .

    LB              reduce using rule 109 (gotof -> .)

    gotof                          shift and go to state 240

state 239

    (107) else -> ELSE goto guarda_salto LB statement RB . guarda_salto
    (121) guarda_salto -> .

    ID              reduce using rule 121 (guarda_salto -> .)
    IF              reduce using rule 121 (guarda_salto -> .)
    VAR             reduce using rule 121 (guarda_salto -> .)
    RB              reduce using rule 121 (guarda_salto -> .)

    guarda_salto                   shift and go to state 241

state 240

    (104) elseif -> ELSEIF goto LP expression RP check_bool gotof . LB statement RB guarda_salto
    (105) elseif -> ELSEIF goto LP expression RP check_bool gotof . LB statement RB guarda_salto elseif
    (106) elseif -> ELSEIF goto LP expression RP check_bool gotof . LB statement RB guarda_salto else

    LB              shift and go to state 242


state 241

    (107) else -> ELSE goto guarda_salto LB statement RB guarda_salto .

    ID              reduce using rule 107 (else -> ELSE goto guarda_salto LB statement RB guarda_salto .)
    IF              reduce using rule 107 (else -> ELSE goto guarda_salto LB statement RB guarda_salto .)
    VAR             reduce using rule 107 (else -> ELSE goto guarda_salto LB statement RB guarda_salto .)
    RB              reduce using rule 107 (else -> ELSE goto guarda_salto LB statement RB guarda_salto .)


state 242

    (104) elseif -> ELSEIF goto LP expression RP check_bool gotof LB . statement RB guarda_salto
    (105) elseif -> ELSEIF goto LP expression RP check_bool gotof LB . statement RB guarda_salto elseif
    (106) elseif -> ELSEIF goto LP expression RP check_bool gotof LB . statement RB guarda_salto else
    (15) statement -> . asignacion SEMICOL statement
    (16) statement -> . if statement
    (17) statement -> . vars statement
    (18) statement -> . ID row SEMICOL
    (19) statement -> . ID matrix SEMICOL
    (20) statement -> . empty
    (21) asignacion -> . ID IS value
    (101) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto
    (102) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto elseif
    (103) if -> . IF LP expression RP check_bool gotof LB statement RB guarda_salto else
    (22) vars -> . VAR tipo vars1
    (23) vars -> . VAR tipo vars2
    (24) vars -> . VAR tipo vars3
    (25) vars -> . VAR tipo oper_aritmetica
    (26) vars -> . VAR tipo ID row SEMICOL
    (27) vars -> . VAR tipo ID matrix SEMICOL
    (28) vars -> . varsG
    (29) vars -> . var_row
    (30) vars -> . var_row vars
    (31) vars -> . var_matrix
    (32) vars -> . var_matrix vars
    (33) vars -> . empty
    (100) empty -> .
    (42) varsG -> . VAR tipo vars1G
    (43) varsG -> . VAR tipo vars2G
    (44) varsG -> . VAR tipo vars3G
    (45) varsG -> . VAR LB varsG RB
    (46) varsG -> . var_rowG
    (47) varsG -> . var_rowG varsG
    (48) varsG -> . var_matrixG
    (49) varsG -> . var_matrixG varsG
    (86) var_row -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (93) var_matrix -> . VAR tipo ID matrix IS matrix2 SEMICOL
    (87) var_rowG -> . VAR tipo ID row IS LP lista2 RP SEMICOL
    (94) var_matrixG -> . VAR tipo ID matrix IS matrix2 SEMICOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
    ID              shift and go to state 119
    IF              shift and go to state 121
    VAR             shift and go to state 10
    RB              reduce using rule 100 (empty -> .)

  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! VAR             [ reduce using rule 100 (empty -> .) ]

    statement                      shift and go to state 243
    asignacion                     shift and go to state 116
    if                             shift and go to state 117
    vars                           shift and go to state 118
    empty                          shift and go to state 120
    varsG                          shift and go to state 12
    var_row                        shift and go to state 13
    var_matrix                     shift and go to state 14
    var_rowG                       shift and go to state 16
    var_matrixG                    shift and go to state 17

state 243

    (104) elseif -> ELSEIF goto LP expression RP check_bool gotof LB statement . RB guarda_salto
    (105) elseif -> ELSEIF goto LP expression RP check_bool gotof LB statement . RB guarda_salto elseif
    (106) elseif -> ELSEIF goto LP expression RP check_bool gotof LB statement . RB guarda_salto else

    RB              shift and go to state 244


state 244

    (104) elseif -> ELSEIF goto LP expression RP check_bool gotof LB statement RB . guarda_salto
    (105) elseif -> ELSEIF goto LP expression RP check_bool gotof LB statement RB . guarda_salto elseif
    (106) elseif -> ELSEIF goto LP expression RP check_bool gotof LB statement RB . guarda_salto else
    (121) guarda_salto -> .

    ELSEIF          reduce using rule 121 (guarda_salto -> .)
    ELSE            reduce using rule 121 (guarda_salto -> .)
    ID              reduce using rule 121 (guarda_salto -> .)
    IF              reduce using rule 121 (guarda_salto -> .)
    VAR             reduce using rule 121 (guarda_salto -> .)
    RB              reduce using rule 121 (guarda_salto -> .)

    guarda_salto                   shift and go to state 245

state 245

    (104) elseif -> ELSEIF goto LP expression RP check_bool gotof LB statement RB guarda_salto .
    (105) elseif -> ELSEIF goto LP expression RP check_bool gotof LB statement RB guarda_salto . elseif
    (106) elseif -> ELSEIF goto LP expression RP check_bool gotof LB statement RB guarda_salto . else
    (104) elseif -> . ELSEIF goto LP expression RP check_bool gotof LB statement RB guarda_salto
    (105) elseif -> . ELSEIF goto LP expression RP check_bool gotof LB statement RB guarda_salto elseif
    (106) elseif -> . ELSEIF goto LP expression RP check_bool gotof LB statement RB guarda_salto else
    (107) else -> . ELSE goto guarda_salto LB statement RB guarda_salto

    ID              reduce using rule 104 (elseif -> ELSEIF goto LP expression RP check_bool gotof LB statement RB guarda_salto .)
    IF              reduce using rule 104 (elseif -> ELSEIF goto LP expression RP check_bool gotof LB statement RB guarda_salto .)
    VAR             reduce using rule 104 (elseif -> ELSEIF goto LP expression RP check_bool gotof LB statement RB guarda_salto .)
    RB              reduce using rule 104 (elseif -> ELSEIF goto LP expression RP check_bool gotof LB statement RB guarda_salto .)
    ELSEIF          shift and go to state 228
    ELSE            shift and go to state 229

    elseif                         shift and go to state 246
    else                           shift and go to state 247

state 246

    (105) elseif -> ELSEIF goto LP expression RP check_bool gotof LB statement RB guarda_salto elseif .

    ID              reduce using rule 105 (elseif -> ELSEIF goto LP expression RP check_bool gotof LB statement RB guarda_salto elseif .)
    IF              reduce using rule 105 (elseif -> ELSEIF goto LP expression RP check_bool gotof LB statement RB guarda_salto elseif .)
    VAR             reduce using rule 105 (elseif -> ELSEIF goto LP expression RP check_bool gotof LB statement RB guarda_salto elseif .)
    RB              reduce using rule 105 (elseif -> ELSEIF goto LP expression RP check_bool gotof LB statement RB guarda_salto elseif .)


state 247

    (106) elseif -> ELSEIF goto LP expression RP check_bool gotof LB statement RB guarda_salto else .

    ID              reduce using rule 106 (elseif -> ELSEIF goto LP expression RP check_bool gotof LB statement RB guarda_salto else .)
    IF              reduce using rule 106 (elseif -> ELSEIF goto LP expression RP check_bool gotof LB statement RB guarda_salto else .)
    VAR             reduce using rule 106 (elseif -> ELSEIF goto LP expression RP check_bool gotof LB statement RB guarda_salto else .)
    RB              reduce using rule 106 (elseif -> ELSEIF goto LP expression RP check_bool gotof LB statement RB guarda_salto else .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VOID in state 4 resolved as shift
WARNING: shift/reduce conflict for INT in state 4 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 4 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 4 resolved as shift
WARNING: shift/reduce conflict for VAR in state 13 resolved as shift
WARNING: shift/reduce conflict for VAR in state 13 resolved as shift
WARNING: shift/reduce conflict for VAR in state 14 resolved as shift
WARNING: shift/reduce conflict for VAR in state 14 resolved as shift
WARNING: shift/reduce conflict for VAR in state 16 resolved as shift
WARNING: shift/reduce conflict for VAR in state 17 resolved as shift
WARNING: shift/reduce conflict for ID in state 26 resolved as shift
WARNING: shift/reduce conflict for ID in state 57 resolved as shift
WARNING: shift/reduce conflict for VAR in state 60 resolved as shift
WARNING: shift/reduce conflict for VAR in state 60 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 79 resolved as shift
WARNING: shift/reduce conflict for SEMICOL in state 79 resolved as shift
WARNING: shift/reduce conflict for ID in state 91 resolved as shift
WARNING: shift/reduce conflict for IF in state 91 resolved as shift
WARNING: shift/reduce conflict for VAR in state 91 resolved as shift
WARNING: shift/reduce conflict for VAR in state 96 resolved as shift
WARNING: shift/reduce conflict for ID in state 102 resolved as shift
WARNING: shift/reduce conflict for VAR in state 103 resolved as shift
WARNING: shift/reduce conflict for VAR in state 112 resolved as shift
WARNING: shift/reduce conflict for VAR in state 112 resolved as shift
WARNING: shift/reduce conflict for ID in state 114 resolved as shift
WARNING: shift/reduce conflict for IF in state 114 resolved as shift
WARNING: shift/reduce conflict for VAR in state 114 resolved as shift
WARNING: shift/reduce conflict for ID in state 117 resolved as shift
WARNING: shift/reduce conflict for IF in state 117 resolved as shift
WARNING: shift/reduce conflict for VAR in state 117 resolved as shift
WARNING: shift/reduce conflict for ID in state 118 resolved as shift
WARNING: shift/reduce conflict for IF in state 118 resolved as shift
WARNING: shift/reduce conflict for VAR in state 118 resolved as shift
WARNING: shift/reduce conflict for ID in state 122 resolved as shift
WARNING: shift/reduce conflict for IF in state 122 resolved as shift
WARNING: shift/reduce conflict for VAR in state 122 resolved as shift
WARNING: shift/reduce conflict for ID in state 123 resolved as shift
WARNING: shift/reduce conflict for IF in state 123 resolved as shift
WARNING: shift/reduce conflict for VAR in state 123 resolved as shift
WARNING: shift/reduce conflict for ID in state 140 resolved as shift
WARNING: shift/reduce conflict for ID in state 154 resolved as shift
WARNING: shift/reduce conflict for IF in state 154 resolved as shift
WARNING: shift/reduce conflict for VAR in state 154 resolved as shift
WARNING: shift/reduce conflict for VAR in state 165 resolved as shift
WARNING: shift/reduce conflict for VOID in state 173 resolved as shift
WARNING: shift/reduce conflict for INT in state 173 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 173 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 173 resolved as shift
WARNING: shift/reduce conflict for VOID in state 189 resolved as shift
WARNING: shift/reduce conflict for INT in state 189 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 189 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 189 resolved as shift
WARNING: shift/reduce conflict for ID in state 222 resolved as shift
WARNING: shift/reduce conflict for IF in state 222 resolved as shift
WARNING: shift/reduce conflict for VAR in state 222 resolved as shift
WARNING: shift/reduce conflict for ID in state 235 resolved as shift
WARNING: shift/reduce conflict for IF in state 235 resolved as shift
WARNING: shift/reduce conflict for VAR in state 235 resolved as shift
WARNING: shift/reduce conflict for ID in state 242 resolved as shift
WARNING: shift/reduce conflict for IF in state 242 resolved as shift
WARNING: shift/reduce conflict for VAR in state 242 resolved as shift
WARNING: reduce/reduce conflict in state 9 resolved using rule (programa1 -> empty)
WARNING: rejected rule (vars -> empty) in state 9
WARNING: reduce/reduce conflict in state 13 resolved using rule (vars -> var_row)
WARNING: rejected rule (empty -> <empty>) in state 13
WARNING: reduce/reduce conflict in state 14 resolved using rule (vars -> var_matrix)
WARNING: rejected rule (empty -> <empty>) in state 14
WARNING: reduce/reduce conflict in state 60 resolved using rule (vars1 -> ID SEMICOL)
WARNING: rejected rule (vars3 -> ID SEMICOL) in state 60
WARNING: reduce/reduce conflict in state 60 resolved using rule (vars1 -> ID SEMICOL)
WARNING: rejected rule (vars1G -> ID SEMICOL) in state 60
WARNING: reduce/reduce conflict in state 60 resolved using rule (vars1 -> ID SEMICOL)
WARNING: rejected rule (vars3G -> ID SEMICOL) in state 60
WARNING: reduce/reduce conflict in state 60 resolved using rule (vars1 -> ID SEMICOL)
WARNING: rejected rule (empty -> <empty>) in state 60
WARNING: reduce/reduce conflict in state 74 resolved using rule (vars1 -> ID SEMICOL vars)
WARNING: rejected rule (vars3 -> ID SEMICOL vars) in state 74
WARNING: reduce/reduce conflict in state 75 resolved using rule (vars1G -> ID SEMICOL varsG)
WARNING: rejected rule (vars3G -> ID SEMICOL varsG) in state 75
WARNING: reduce/reduce conflict in state 75 resolved using rule (vars -> varsG)
WARNING: rejected rule (vars1G -> ID SEMICOL varsG) in state 75
WARNING: reduce/reduce conflict in state 81 resolved using rule (value -> CTE_F)
WARNING: rejected rule (expr -> CTE_F) in state 81
WARNING: reduce/reduce conflict in state 82 resolved using rule (value -> CTE_I)
WARNING: rejected rule (expr -> CTE_I) in state 82
WARNING: reduce/reduce conflict in state 96 resolved using rule (vars1G -> ID SEMICOL)
WARNING: rejected rule (vars3G -> ID SEMICOL) in state 96
WARNING: reduce/reduce conflict in state 112 resolved using rule (vars3 -> ID SEMICOL)
WARNING: rejected rule (vars3G -> ID SEMICOL) in state 112
WARNING: reduce/reduce conflict in state 112 resolved using rule (vars3 -> ID SEMICOL)
WARNING: rejected rule (empty -> <empty>) in state 112
WARNING: reduce/reduce conflict in state 120 resolved using rule (statement -> empty)
WARNING: rejected rule (vars -> empty) in state 120
WARNING: reduce/reduce conflict in state 128 resolved using rule (vars1G -> ID SEMICOL varsG)
WARNING: rejected rule (vars3G -> ID SEMICOL varsG) in state 128
WARNING: reduce/reduce conflict in state 135 resolved using rule (var_matrix -> VAR tipo ID matrix IS matrix2 SEMICOL)
WARNING: rejected rule (var_matrixG -> VAR tipo ID matrix IS matrix2 SEMICOL) in state 135
WARNING: reduce/reduce conflict in state 151 resolved using rule (vars -> varsG)
WARNING: rejected rule (vars3G -> ID SEMICOL varsG) in state 151
WARNING: reduce/reduce conflict in state 194 resolved using rule (var_row -> VAR tipo ID row IS LP lista2 RP SEMICOL)
WARNING: rejected rule (var_rowG -> VAR tipo ID row IS LP lista2 RP SEMICOL) in state 194
